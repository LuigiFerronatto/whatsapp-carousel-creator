{"version":3,"file":"static/js/main.4cc56f33.js","mappings":"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ACA,sBACA,mBACA,+BACA,4BACA,oBACA,sBACA,0BACA,0BACA,kCACA,gCACA,8BACA,gCACA,6BACA,6BACA,2BACA,wBACA,yBACA,0BACA,4BACA,iBACA,iCACA,qBACA,gCACA,wBACA,6BACA,sCACA,4BACA,6BACA,6BACA,6BACA,wBACA,oBACA,0BACA,sBACA,gBACA,kBACA,kBACA,yBACA,6BACA,0BACA,8BACA,gBACA,0BACA,uBACA,gCACA,4BACA,kCACA,iBACA,6BACA,8BACA,+BACA,eACA,uBAGWC,GAA2C,CACtD,OACA,aACA,OACA,OACA,OACA,OACA,OACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,UACA,SACA,SACA,SACA,UACA,UACA,gBACA,YACA,eACA,MACA,QACA,MACA,MACA,QACA,MACA,YASWC,GAAiB,CAC5B,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SC3II,SAAUC,GAAcnyG,GAC5B,MAAMoyG,EAAY,IAAI9/B,IAAItyE,GAE1B,IAAI8nG,EAAOsK,EAAUjK,SAMrB,OALAL,EAAOA,GAAQ,IAEfA,EAoJO3nG,mBApJO2nG,GAqJXziG,QAAQ,OAAQ,KAChBA,QAAQ,KAAM,OACdA,QAAQ,MAAO,OACfA,QAAQ,OAAQ,KAvJnB+sG,EAAUjK,SAAWL,EAEdsK,EAAUtkG,UACnB,CA2BM,SAAUukG,GACdC,EACAC,GAQA,MAAMj5D,EAAWg5D,EAAiBrtG,MAAM,KACxC,IAAK,MAAM+N,KAAWsmC,EACpB,GAAItmC,EAAQ5P,OAAOk+E,WAAWixB,GAC5B,OAAOv/F,EAAQ5P,OAAOF,MAAMqvG,EAAW,SAAU,GAGrD,MAAO,EACT,CAQM,SAAUC,GAA6BF,GAC3C,IAAIG,EAAW,GAEXH,EAAiBhxB,WAAW,gCAE9BmxB,EA9CJ,SAAsCH,GAGpC,IAAIG,EAAW,GACf,IAAgE,IAA5DH,EAAiBxxF,OAAO,+BAAuC,CAEjE,MAAM4xF,EAAmBJ,EAAiBrtG,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KAAM,CACJG,KAAM,YACNgjE,UAAW,+BACXwzB,gBAAiB,CACf2tB,gBAAiB,CACfztB,eAAgB,yBAChBgF,QAAS,yBACT77F,KAAM,CACJG,KAAM,WAGV6nF,UAAW,CACT6O,eAAgB,kBAChBgF,QAAS,kBACT77F,KAAM,CACJG,KAAM,WAGVsvD,QAAS,CACPonC,eAAgB,eAChBgF,QAAS,eACT77F,KAAM,CACJG,KAAM,WAGVoe,KAAM,CACJs4E,eAAgB,OAChBgF,QAAS,OACT77F,KAAM,CACJG,KAAM,oBAGV8kH,QAAS,CACPpuB,eAAgB,gBAChBgF,QAAS,gBACT77F,KAAM,CACJG,KAAM,OACNy5F,cAAe,CACb,eACA,eACA,iBACA,eACA,iBAINsrB,YAAa,CACXruB,eAAgB,oBAChBgF,QAAS,oBACT77F,KAAM,CACJG,KAAM,OACNy5F,cAAe,CACb,UACA,cACA,YACA,cACA,sBAINurB,+BAAgC,CAC9BtuB,eAAgB,sBAChBgF,QAAS,sBACT77F,KAAM,CACJG,KAAM,YAGVq0D,UAAW,CACTqiC,eAAgB,kBAChBgF,QAAS,kBACT77F,KAAM,CACJG,KAAM,cAOHilH,GACX,CACEvuB,eAAgB,yCAChB72F,KAAM,CACJG,KAAM,YACNgjE,UAAW,wCACXwzB,gBAAiB,CACfniC,UAAW,CACTqiC,eAAgB,kBAChBgF,QAAS,kBACT77F,KAAM,CACJG,KAAM,cAOLklH,GAAwD,CACnExuB,eAAgB,6BAChB72F,KAAM,CACJG,KAAM,YACNgjE,UAAW,4BACXwzB,gBAAiB,CACfhR,YAAa,CACXkR,eAAgB,eAChBgF,QAAS,eACT77F,KAAM,CACJG,KAAM,WAGV6nF,UAAW,CACT6O,eAAgB,kBAChBgF,QAAS,kBACT77F,KAAM,CACJG,KAAM,WAGVsvD,QAAS,CACPonC,eAAgB,eAChBgF,QAAS,eACT77F,KAAM,CACJG,KAAM,WAGVmkH,gBAAiB,CACfztB,eAAgB,yBAChBgF,QAAS,yBACT77F,KAAM,CACJG,KAAM,WAGVq0D,UAAW,CACTqiC,eAAgB,kBAChBgF,QAAS,kBACT77F,KAAM,CA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AkB,CAChByxB,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,IAEFt9B,OAAO,EACPkD,WAAYi6B,IAERyB,GAAoD,CACxDrwB,KAAM,0BACN/C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHY,cAAeqyB,IAEjBp/D,QAAS,CACP8gC,WAAYs+B,GACZryB,cAAeqyB,KAGnBpuB,gBAAiB,CAACquB,GAA6BA,IAC/CxvB,cAAe,CAACwvB,IAChBzxB,iBAAkB,CAChByxB,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,IAEFt9B,OAAO,EACPkD,WAAYi6B,IAERiD,GAAwD,CAC5D7xB,KAAM,0BACN/C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHY,cAAeqyB,IAEjBp/D,QAAS,CACP8gC,WAAYs+B,GACZryB,cAAeqyB,KAGnBpuB,gBAAiB,CAACquB,GHoH2B,CAC7C/0B,cAAe,OACfrI,OAAQ,CACNlyF,aAAc,WACd4zF,YAAY,EACZtC,eAAgB,OAChB72F,KAAM,CACJG,KAAM,aG1HVklG,cAAe,CAACwvB,IAChBzxB,iBAAkB,CAChByxB,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,IAEFt9B,OAAO,EACPkD,WAAYi6B,IAERmD,GAA0D,CAC9D/xB,KAAM,0BACN/C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHY,cAAeqyB,IAEjBp/D,QAAS,CACP8gC,WAAYs+B,GACZryB,cAAeqyB,KAGnBpuB,gBAAiB,CAACquB,IAClBxvB,cAAe,CAACwvB,IAChBzxB,iBAAkB,CAChByxB,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GH0MwC,CAC1C/0B,cAAe,CAAC,UAAW,YAC3BrI,OAAQ,CACNZ,eAAgB,iBAChBgF,QAAS,iBACT77F,KAAM,CACJG,KAAM,aG9MR00H,IAEF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CAACquB,IAClBxvB,cAAe,CAACwvB,IAChBzxB,iBAAkB,CAChByxB,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GL+7CyC,CAC3C/0B,cAAe,WACfrI,OAAQ,CACNlyF,aAAc,aACd4zF,YAAY,EACZtC,eAAgB,iBAChB72F,KAAM,CACJG,KAAM,aKn8CVo3F,OAAO,EACPkD,WAAYi6B,IAERoF,GAAqD,CACzDh0B,KAAM,0BACN/C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHY,cAAeqyB,IAEjBp/D,QAAS,CACP8gC,WAAYs+B,GACZryB,cAAeqyB,KAGnB3lC,YAAa4lC,GACbruB,gBAAiB,CAACquB,GAA6BA,IAC/CxvB,cAAe,CAACwvB,IAChBzxB,iBAAkB,CAChByxB,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,IAEFt9B,OAAO,EACP5R,YAAa,iCACbqe,UAAW,SACXvJ,WAAYi6B,IAERsF,GAA4D,CAChEl0B,KAAM,0BACN/C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHY,cAAeqyB,IAEjBp/D,QAAS,CACP8gC,WAAYs+B,GACZryB,cAAeqyB,KAGnBpuB,gBAAiB,CAACquB,GAA6BA,IAC/CxvB,cAAe,CAACwvB,IAChBzxB,iBAAkB,CAChByxB,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,IAEFt9B,OAAO,EACPkD,WAAYi6B,IAERwF,GAA8C,CAClDp0B,KAAM,0BACN/C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHY,cAAeqyB,IAEjBp/D,QAAS,CACP8gC,WAAYs+B,GACZryB,cAAeqyB,KAGnBpuB,gBAAiB,CAACquB,GLo5C2B,CAC7C/0B,cAAe,OACfrI,OAAQ,CACNlyF,aAAc,OACd4zF,YAAY,EACZtC,eAAgB,OAChB72F,KAAM,CACJG,KAAM,aK15CVklG,cAAe,CAACwvB,IAChBzxB,iBAAkB,CAChByxB,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,IAEFt9B,OAAO,EACPkD,WAAYi6B,ICtOR,MAAOyF,GAOX1qH,WAAAA,CAAYgkH,GACV7jH,KAAK6jH,OAASA,CAChB,CAWA2G,MAAAA,CACEn1C,EACAx0E,EACAkB,GAEA,OAAO/B,KAAK6jH,OAAOprB,qBACjB,CAAEpjB,gBAAex0E,OAAMkB,WACvB0oH,GAEJ,CAeAC,cAAAA,CACEr1C,EACAo8B,EACA1vG,GAEA,OAAO/B,KAAK6jH,OAAOprB,qBACjB,CAAEpjB,gBAAeo8B,aAAY1vG,WAC7B4oH,GAEJ,CAWAC,UAAAA,CACEpH,EACAnuC,EACAx0E,EACAkB,GAEA,OAAO/B,KAAK6jH,OAAOprB,qBACjB,CAAE+qB,UAASnuC,gBAAex0E,OAAMkB,WAChC8oH,GAEJ,CAYAC,iBAAAA,CACEtH,EACAnuC,EACA0tC,EACAhhH,GAEA,OAAO/B,KAAK6jH,OAAOprB,qBACjB,CAAE+qB,UAASnuC,gBAAe0tC,YAAWhhH,WACrCgpH,GAEJ,CAaAC,eAAAA,CACEvH,EACA1hH,GAEA,OAAO/B,KAAK6jH,OAAOprB,qBACjB,CAAEgrB,SAAQ1hH,WACVkpH,GAEJ,CASAC,YAAAA,CACEC,EACAppH,GAEA,OAAO/B,KAAK6jH,OAAOprB,qBACjB,CAAE0yB,WAAUppH,WACZqpH,GAEJ,EAGF,MAAMtG,GAAgBC,GAA4BC,GAAqB,GAEjEyF,GAAgD,CACpDv0B,KAAM,0BACN/C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHY,cAAeqyB,IAEjBp/D,QAAS,CACP8gC,WAAYs+B,GACZryB,cAAeqyB,KAGnB3lC,YAAa4lC,GACbruB,gBAAiB,CAACquB,IAClBxvB,cAAe,CAACwvB,IAChBzxB,iBAAkB,CAChByxB,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,IAEFt9B,OAAO,EACP5R,YAAa,iCACbqe,UAAW,SACXvJ,WAAYi6B,IAER6F,GAAwD,CAC5Dz0B,KAAM,0BACN/C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHY,cAAeqyB,IAEjBp/D,QAAS,CACP8gC,WAAYs+B,GACZryB,cAAeqyB,KAGnBpuB,gBAAiB,CAACquB,IAClBxvB,cAAe,CAACwvB,IAChBzxB,iBAAkB,CAChByxB,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GNq5CwD,CAC1D/0B,cAAe,CAAC,UAAW,4BAC3BrI,OAAQ,CACNZ,eAAgB,mCAChBgF,QAAS,mCACT77F,KAAM,CACJG,KAAM,cMx5CVo3F,OAAO,EACPkD,WAAYi6B,IAER+F,GAAoD,CACxD30B,KAAM,0BACN/C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHY,cAAeqyB,IAEjBp/D,QAAS,CACP8gC,WAAYs+B,GACZryB,cAAeqyB,KAGnB3lC,YAAa4lC,GACbruB,gBAAiB,CACfquB,GACAA,GACAA,IAEFxvB,cAAe,CAACwvB,IAChBzxB,iBAAkB,CAChByxB,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,IAEFt9B,OAAO,EACP5R,YAAa,iCACbqe,UAAW,SACXvJ,WAAYi6B,IAERiG,GAA2D,CAC/D70B,KAAM,0BACN/C,WAAY,MACZpB,UAAW,CACT,IAAK,CACHY,cAAeqyB,IAEjBp/D,QAAS,CACP8gC,WAAYs+B,GACZr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","sources":["../node_modules/react-dom/cjs/react-dom-client.production.js","hooks/useAlertSafe.js","services/api/apiUploadFiles.js","services/validation/validationCreateTemplate.js","services/api/apiCreateTemplate.js","services/api/apiSendTemplate.js","services/storage/localStorageService.js","utils/errorHandler.js","hooks/useWhatsAppTemplate.js","contexts/WhatsAppTemplateContext.js","../node_modules/react/index.js","webpack://whatsapp-carousel-creator/./src/components/ui/Button/Button.module.css?5c37","components/ui/Button/Button.js","../node_modules/react-icons/fi/index.mjs","../node_modules/events/events.js","../node_modules/react/cjs/react.production.js","services/validation/validationService.js","webpack://whatsapp-carousel-creator/./src/components/ui/AlertMessage/AlertMessage.module.css?5cf6","components/ui/AlertMessage/AlertMessage.js","components/ui/AlertMessage/AlertContext.js","../node_modules/react-dom/client.js","../node_modules/react-icons/lib/iconsManifest.mjs","../node_modules/react-icons/lib/iconContext.mjs","../node_modules/react-icons/lib/iconBase.mjs","../node_modules/react/jsx-runtime.js","../node_modules/react-dom/cjs/react-dom.production.js","../node_modules/react/cjs/react-jsx-runtime.production.js","../node_modules/scheduler/index.js","../node_modules/tslib/tslib.es6.mjs","../node_modules/@azure/abort-controller/src/AbortError.ts","../node_modules/@azure/core-util/src/delay.ts","../node_modules/@azure/core-util/src/createAbortablePromise.ts","../node_modules/@azure/core-util/src/random.ts","../node_modules/@azure/core-util/src/object.ts","../node_modules/@azure/core-util/src/error.ts","../node_modules/@azure/core-util/src/bytesEncoding.common.ts","../node_modules/@azure/core-util/src/uuidUtils.common.ts","../node_modules/@azure/core-util/src/uuidUtils-browser.mts","../node_modules/@azure/core-util/src/checkEnvironment.ts","../node_modules/@azure/core-auth/src/tokenCredential.ts","../node_modules/@azure/core-rest-pipeline/src/pipeline.ts","../node_modules/@azure/logger/src/debug.ts","../node_modules/@azure/logger/src/log.common.ts","../node_modules/@azure/logger/src/index.ts","../node_modules/@azure/core-rest-pipeline/src/log.ts","../node_modules/@azure/core-rest-pipeline/src/util/sanitizer.ts","../node_modules/@azure/core-rest-pipeline/src/policies/redirectPolicy.ts","../node_modules/@azure/core-rest-pipeline/src/constants.ts","../node_modules/@azure/core-rest-pipeline/src/util/userAgent.ts","../node_modules/@azure/core-rest-pipeline/src/util/userAgentPlatform-browser.mts","../node_modules/@azure/core-rest-pipeline/src/policies/userAgentPolicy.ts","../node_modules/@azure/core-rest-pipeline/src/util/file.ts","../node_modules/@azure/core-rest-pipeline/src/util/typeGuards.ts","../node_modules/@azure/core-rest-pipeline/src/util/concat.common.ts","../node_modules/@azure/core-rest-pipeline/src/policies/multipartPolicy.ts","../node_modules/@azure/core-rest-pipeline/src/util/helpers.ts","../node_modules/@azure/core-rest-pipeline/src/retryStrategies/throttlingRetryStrategy.ts","../node_modules/@azure/core-rest-pipeline/src/retryStrategies/exponentialRetryStrategy.ts","../node_modules/@azure/core-rest-pipeline/src/policies/retryPolicy.ts","../node_modules/@azure/core-rest-pipeline/src/httpHeaders.ts","../node_modules/@azure/core-rest-pipeline/src/policies/formDataPolicy.ts","../node_modules/@azure/core-rest-pipeline/src/policies/proxyPolicy.common.ts","../node_modules/@azure/core-tracing/src/tracingContext.ts","../node_modules/@azure/core-tracing/src/state-browser.mts","../node_modules/@azure/core-tracing/src/instrumenter.ts","../node_modules/@azure/core-tracing/src/tracingClient.ts","../node_modules/@azure/core-rest-pipeline/src/util/inspect.common.ts","../node_modules/@azure/core-rest-pipeline/src/restError.ts","../node_modules/@azure/core-rest-pipeline/src/policies/tracingPolicy.ts","../node_modules/@azure/core-rest-pipeline/src/createPipelineFromOptions.ts","../node_modules/@azure/core-rest-pipeline/src/policies/tlsPolicy.ts","../node_modules/@azure/core-rest-pipeline/src/policies/agentPolicy.ts","../node_modules/@azure/core-rest-pipeline/src/policies/decompressResponsePolicy-browser.mts","../node_modules/@azure/core-rest-pipeline/src/policies/setClientRequestIdPolicy.ts","../node_modules/@azure/core-rest-pipeline/src/policies/defaultRetryPolicy.ts","../node_modules/@azure/core-rest-pipeline/src/policies/logPolicy.ts","../node_modules/@azure/core-rest-pipeline/src/fetchHttpClient.ts","../node_modules/@azure/core-rest-pipeline/src/defaultHttpClient-browser.mts","../node_modules/@azure/core-rest-pipeline/src/pipelineRequest.ts","../node_modules/@azure/core-rest-pipeline/src/util/tokenCycler.ts","../node_modules/@azure/core-rest-pipeline/src/policies/bearerTokenAuthenticationPolicy.ts","../node_modules/@azure/core-http-compat/src/policies/disableKeepAlivePolicy.ts","../node_modules/@azure/core-client/src/base64-browser.mts","../node_modules/@azure/core-client/src/interfaces.ts","../node_modules/@azure/core-client/src/utils.ts","../node_modules/@azure/core-client/src/serializer.ts","../node_modules/@azure/core-client/src/state-browser.mts","../node_modules/@azure/core-client/src/operationHelpers.ts","../node_modules/@azure/core-client/src/deserializationPolicy.ts","../node_modules/@azure/core-client/src/interfaceHelpers.ts","../node_modules/@azure/core-client/src/serializationPolicy.ts","../node_modules/@azure/core-client/src/pipeline.ts","../node_modules/@azure/core-client/src/httpClientCache.ts","../node_modules/@azure/core-client/src/urlHelpers.ts","../node_modules/@azure/core-client/src/log.ts","../node_modules/@azure/core-client/src/serviceClient.ts","../node_modules/@azure/core-client/src/authorizeRequestOnTenantChallenge.ts","../node_modules/@azure/core-http-compat/src/util.ts","../node_modules/@azure/core-http-compat/src/response.ts","../node_modules/@azure/core-http-compat/src/extendedClient.ts","../node_modules/@azure/core-http-compat/src/policies/requestPolicyFactoryPolicy.ts","../node_modules/@azure/core-xml/src/xml.common.ts","../node_modules/@azure/core-xml/src/xml-browser.mts","../node_modules/@azure/storage-blob/src/log.ts","../node_modules/@azure/storage-blob/src/policies/RequestPolicy.ts","../node_modules/@azure/storage-blob/src/utils/constants.ts","../node_modules/@azure/storage-blob/src/utils/utils.common.ts","../node_modules/@azure/storage-blob/src/policies/StorageRetryPolicy.ts","../node_modules/@azure/storage-blob/src/StorageRetryPolicyFactory.ts","../node_modules/@azure/storage-blob/src/credentials/StorageSharedKeyCredential.browser.ts","../node_modules/@azure/storage-blob/src/policies/CredentialPolicy.ts","../node_modules/@azure/storage-blob/src/policies/AnonymousCredentialPolicy.ts","../node_modules/@azure/storage-blob/src/credentials/Credential.ts","../node_modules/@azure/storage-blob/src/credentials/AnonymousCredential.ts","../node_modules/@azure/storage-blob/src/utils/cache.ts","../node_modules/@azure/storage-blob/src/policies/StorageRetryPolicyV2.ts","../node_modules/@azure/storage-blob/src/policies/StorageBrowserPolicy.ts","../node_modules/@azure/storage-blob/src/StorageBrowserPolicyFactory.ts","../node_modules/@azure/storage-blob/src/Pipeline.ts","../node_modules/@azure/core-http-compat/src/httpClientAdapter.ts","../node_modules/@azure/storage-blob/src/policies/StorageCorrectContentLengthPolicy.browser.ts","../node_modules/@azure/storage-blob/src/policies/StorageBrowserPolicyV2.ts","../node_modules/@azure/storage-blob/src/policies/StorageSharedKeyCredentialPolicyV2.browser.ts","../node_modules/@azure/storage-blob/src/generated/src/models/mappers.ts","../node_modules/@azure/storage-blob/src/generated/src/models/parameters.ts","../node_modules/@azure/storage-blob/src/generated/src/operations/service.ts","../node_modules/@azure/storage-blob/src/generated/src/operations/container.ts","../node_modules/@azure/storage-blob/src/generated/src/operations/blob.ts","../node_modules/@azure/storage-blob/src/generated/src/operations/pageBlob.ts","../node_modules/@azure/storage-blob/src/generated/src/operations/appendBlob.ts","../node_modules/@azure/storage-blob/src/generated/src/operations/blockBlob.ts","../node_modules/@azure/storage-blob/src/generated/src/storageClient.ts","../node_modules/@azure/storage-blob/src/StorageContextClient.ts","../node_modules/@azure/storage-blob/src/StorageClient.ts","../node_modules/@azure/storage-blob/src/utils/tracing.ts","../node_modules/@azure/storage-blob/src/sas/BlobSASPermissions.ts","../node_modules/@azure/storage-blob/src/sas/ContainerSASPermissions.ts","../node_modules/@azure/storage-blob/src/credentials/UserDelegationKeyCredential.browser.ts","../node_modules/@azure/storage-blob/src/sas/SasIPRange.ts","../node_modules/@azure/storage-blob/src/sas/SASQueryParameters.ts","../node_modules/@azure/storage-blob/src/sas/BlobSASSignatureValues.ts","../node_modules/@azure/storage-blob/src/BlobLeaseClient.ts","../node_modules/@azure/storage-blob/src/BlobQueryResponse.browser.ts","../node_modules/@azure/storage-blob/src/models.ts","../node_modules/@azure/storage-blob/src/PageBlobRangeResponse.ts","../node_modules/@azure/core-lro/src/logger.ts","../node_modules/@azure/core-lro/src/legacy/poller.ts","../node_modules/@azure/storage-blob/src/pollers/BlobStartCopyFromUrlPoller.ts","../node_modules/@azure/storage-blob/src/Range.ts","../node_modules/@azure/storage-blob/src/utils/Batch.ts","../node_modules/@azure/storage-common/src/BufferScheduler.browser.ts","../node_modules/@azure/storage-blob/src/Clients.ts","../node_modules/@azure/storage-blob/src/BlobDownloadResponse.browser.ts","../node_modules/@azure/storage-blob/src/BatchUtils.browser.ts","../node_modules/@azure/storage-blob/src/utils/utils.browser.ts","../node_modules/@azure/storage-blob/src/BatchResponseParser.ts","../node_modules/@azure/storage-blob/src/utils/Mutex.ts","../node_modules/@azure/storage-blob/src/BlobBatch.ts","../node_modules/@azure/storage-blob/src/BlobBatchClient.ts","../node_modules/@azure/storage-blob/src/ContainerClient.ts","../node_modules/@azure/storage-blob/src/sas/AccountSASPermissions.ts","../node_modules/@azure/storage-blob/src/sas/AccountSASResourceTypes.ts","../node_modules/@azure/storage-blob/src/sas/AccountSASServices.ts","../node_modules/@azure/storage-blob/src/sas/AccountSASSignatureValues.ts","../node_modules/@azure/storage-blob/src/BlobServiceClient.ts","services/storage/azureBlobService.js","../node_modules/scheduler/cjs/scheduler.production.js","../node_modules/react-dom/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/css loading","../webpack/runtime/jsonp chunk loading","webpack://whatsapp-carousel-creator/./src/components/common/ErrorBoundary.module.css?6b7f","components/common/ErrorBoundary.js","webpack://whatsapp-carousel-creator/./src/components/ui/Loading/Loading.module.css?40cb","components/ui/Loading/Loading.js","App.js","index.js"],"sourcesContent":["/**\n * @license React\n * react-dom-client.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n\"use strict\";\nvar Scheduler = require(\"scheduler\"),\n  React = require(\"react\"),\n  ReactDOM = require(\"react-dom\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction isValidContainer(node) {\n  return !(\n    !node ||\n    (1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType)\n  );\n}\nvar REACT_LEGACY_ELEMENT_TYPE = Symbol.for(\"react.element\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\nSymbol.for(\"react.scope\");\nSymbol.for(\"react.debug_trace_mode\");\nvar REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\nSymbol.for(\"react.legacy_hidden\");\nSymbol.for(\"react.tracing_marker\");\nvar REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\nfunction getComponentNameFromType(type) {\n  if (null == type) return null;\n  if (\"function\" === typeof type)\n    return type.$$typeof === REACT_CLIENT_REFERENCE\n      ? null\n      : type.displayName || type.name || null;\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return \"Fragment\";\n    case REACT_PORTAL_TYPE:\n      return \"Portal\";\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n    case REACT_STRICT_MODE_TYPE:\n      return \"StrictMode\";\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return (type.displayName || \"Context\") + \".Provider\";\n      case REACT_CONSUMER_TYPE:\n        return (type._context.displayName || \"Context\") + \".Consumer\";\n      case REACT_FORWARD_REF_TYPE:\n        var innerType = type.render;\n        type = type.displayName;\n        type ||\n          ((type = innerType.displayName || innerType.name || \"\"),\n          (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n        return type;\n      case REACT_MEMO_TYPE:\n        return (\n          (innerType = type.displayName || null),\n          null !== innerType\n            ? innerType\n            : getComponentNameFromType(type.type) || \"Memo\"\n        );\n      case REACT_LAZY_TYPE:\n        innerType = type._payload;\n        type = type._init;\n        try {\n          return getComponentNameFromType(type(innerType));\n        } catch (x) {}\n    }\n  return null;\n}\nvar ReactSharedInternals =\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  assign = Object.assign,\n  prefix,\n  suffix;\nfunction describeBuiltInComponentFrame(name) {\n  if (void 0 === prefix)\n    try {\n      throw Error();\n    } catch (x) {\n      var match = x.stack.trim().match(/\\n( *(at )?)/);\n      prefix = (match && match[1]) || \"\";\n      suffix =\n        -1 < x.stack.indexOf(\"\\n    at\")\n          ? \" (<anonymous>)\"\n          : -1 < x.stack.indexOf(\"@\")\n            ? \"@unknown:0:0\"\n            : \"\";\n    }\n  return \"\\n\" + prefix + name + suffix;\n}\nvar reentry = !1;\nfunction describeNativeComponentFrame(fn, construct) {\n  if (!fn || reentry) return \"\";\n  reentry = !0;\n  var previousPrepareStackTrace = Error.prepareStackTrace;\n  Error.prepareStackTrace = void 0;\n  try {\n    var RunInRootFrame = {\n      DetermineComponentFrameRoot: function () {\n        try {\n          if (construct) {\n            var Fake = function () {\n              throw Error();\n            };\n            Object.defineProperty(Fake.prototype, \"props\", {\n              set: function () {\n                throw Error();\n              }\n            });\n            if (\"object\" === typeof Reflect && Reflect.construct) {\n              try {\n                Reflect.construct(Fake, []);\n              } catch (x) {\n                var control = x;\n              }\n              Reflect.construct(fn, [], Fake);\n            } else {\n              try {\n                Fake.call();\n              } catch (x$0) {\n                control = x$0;\n              }\n              fn.call(Fake.prototype);\n            }\n          } else {\n            try {\n              throw Error();\n            } catch (x$1) {\n              control = x$1;\n            }\n            (Fake = fn()) &&\n              \"function\" === typeof Fake.catch &&\n              Fake.catch(function () {});\n          }\n        } catch (sample) {\n          if (sample && control && \"string\" === typeof sample.stack)\n            return [sample.stack, control.stack];\n        }\n        return [null, null];\n      }\n    };\n    RunInRootFrame.DetermineComponentFrameRoot.displayName =\n      \"DetermineComponentFrameRoot\";\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(\n      RunInRootFrame.DetermineComponentFrameRoot,\n      \"name\"\n    );\n    namePropDescriptor &&\n      namePropDescriptor.configurable &&\n      Object.defineProperty(\n        RunInRootFrame.DetermineComponentFrameRoot,\n        \"name\",\n        { value: \"DetermineComponentFrameRoot\" }\n      );\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n      sampleStack = _RunInRootFrame$Deter[0],\n      controlStack = _RunInRootFrame$Deter[1];\n    if (sampleStack && controlStack) {\n      var sampleLines = sampleStack.split(\"\\n\"),\n        controlLines = controlStack.split(\"\\n\");\n      for (\n        namePropDescriptor = RunInRootFrame = 0;\n        RunInRootFrame < sampleLines.length &&\n        !sampleLines[RunInRootFrame].includes(\"DetermineComponentFrameRoot\");\n\n      )\n        RunInRootFrame++;\n      for (\n        ;\n        namePropDescriptor < controlLines.length &&\n        !controlLines[namePropDescriptor].includes(\n          \"DetermineComponentFrameRoot\"\n        );\n\n      )\n        namePropDescriptor++;\n      if (\n        RunInRootFrame === sampleLines.length ||\n        namePropDescriptor === controlLines.length\n      )\n        for (\n          RunInRootFrame = sampleLines.length - 1,\n            namePropDescriptor = controlLines.length - 1;\n          1 <= RunInRootFrame &&\n          0 <= namePropDescriptor &&\n          sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor];\n\n        )\n          namePropDescriptor--;\n      for (\n        ;\n        1 <= RunInRootFrame && 0 <= namePropDescriptor;\n        RunInRootFrame--, namePropDescriptor--\n      )\n        if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {\n          if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {\n            do\n              if (\n                (RunInRootFrame--,\n                namePropDescriptor--,\n                0 > namePropDescriptor ||\n                  sampleLines[RunInRootFrame] !==\n                    controlLines[namePropDescriptor])\n              ) {\n                var frame =\n                  \"\\n\" +\n                  sampleLines[RunInRootFrame].replace(\" at new \", \" at \");\n                fn.displayName &&\n                  frame.includes(\"<anonymous>\") &&\n                  (frame = frame.replace(\"<anonymous>\", fn.displayName));\n                return frame;\n              }\n            while (1 <= RunInRootFrame && 0 <= namePropDescriptor);\n          }\n          break;\n        }\n    }\n  } finally {\n    (reentry = !1), (Error.prepareStackTrace = previousPrepareStackTrace);\n  }\n  return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : \"\")\n    ? describeBuiltInComponentFrame(previousPrepareStackTrace)\n    : \"\";\n}\nfunction describeFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n    case 27:\n    case 5:\n      return describeBuiltInComponentFrame(fiber.type);\n    case 16:\n      return describeBuiltInComponentFrame(\"Lazy\");\n    case 13:\n      return describeBuiltInComponentFrame(\"Suspense\");\n    case 19:\n      return describeBuiltInComponentFrame(\"SuspenseList\");\n    case 0:\n    case 15:\n      return (fiber = describeNativeComponentFrame(fiber.type, !1)), fiber;\n    case 11:\n      return (\n        (fiber = describeNativeComponentFrame(fiber.type.render, !1)), fiber\n      );\n    case 1:\n      return (fiber = describeNativeComponentFrame(fiber.type, !0)), fiber;\n    default:\n      return \"\";\n  }\n}\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    var info = \"\";\n    do\n      (info += describeFiber(workInProgress)),\n        (workInProgress = workInProgress.return);\n    while (workInProgress);\n    return info;\n  } catch (x) {\n    return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n  }\n}\nfunction getNearestMountedFiber(fiber) {\n  var node = fiber,\n    nearestMounted = fiber;\n  if (fiber.alternate) for (; node.return; ) node = node.return;\n  else {\n    fiber = node;\n    do\n      (node = fiber),\n        0 !== (node.flags & 4098) && (nearestMounted = node.return),\n        (fiber = node.return);\n    while (fiber);\n  }\n  return 3 === node.tag ? nearestMounted : null;\n}\nfunction getSuspenseInstanceFromFiber(fiber) {\n  if (13 === fiber.tag) {\n    var suspenseState = fiber.memoizedState;\n    null === suspenseState &&\n      ((fiber = fiber.alternate),\n      null !== fiber && (suspenseState = fiber.memoizedState));\n    if (null !== suspenseState) return suspenseState.dehydrated;\n  }\n  return null;\n}\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber)\n    throw Error(formatProdErrorMessage(188));\n}\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n  if (!alternate) {\n    alternate = getNearestMountedFiber(fiber);\n    if (null === alternate) throw Error(formatProdErrorMessage(188));\n    return alternate !== fiber ? null : fiber;\n  }\n  for (var a = fiber, b = alternate; ; ) {\n    var parentA = a.return;\n    if (null === parentA) break;\n    var parentB = parentA.alternate;\n    if (null === parentB) {\n      b = parentA.return;\n      if (null !== b) {\n        a = b;\n        continue;\n      }\n      break;\n    }\n    if (parentA.child === parentB.child) {\n      for (parentB = parentA.child; parentB; ) {\n        if (parentB === a) return assertIsMounted(parentA), fiber;\n        if (parentB === b) return assertIsMounted(parentA), alternate;\n        parentB = parentB.sibling;\n      }\n      throw Error(formatProdErrorMessage(188));\n    }\n    if (a.return !== b.return) (a = parentA), (b = parentB);\n    else {\n      for (var didFindChild = !1, child$2 = parentA.child; child$2; ) {\n        if (child$2 === a) {\n          didFindChild = !0;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child$2 === b) {\n          didFindChild = !0;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child$2 = child$2.sibling;\n      }\n      if (!didFindChild) {\n        for (child$2 = parentB.child; child$2; ) {\n          if (child$2 === a) {\n            didFindChild = !0;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child$2 === b) {\n            didFindChild = !0;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child$2 = child$2.sibling;\n        }\n        if (!didFindChild) throw Error(formatProdErrorMessage(189));\n      }\n    }\n    if (a.alternate !== b) throw Error(formatProdErrorMessage(190));\n  }\n  if (3 !== a.tag) throw Error(formatProdErrorMessage(188));\n  return a.stateNode.current === a ? fiber : alternate;\n}\nfunction findCurrentHostFiberImpl(node) {\n  var tag = node.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;\n  for (node = node.child; null !== node; ) {\n    tag = findCurrentHostFiberImpl(node);\n    if (null !== tag) return tag;\n    node = node.sibling;\n  }\n  return null;\n}\nvar isArrayImpl = Array.isArray,\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  sharedNotPendingObject = {\n    pending: !1,\n    data: null,\n    method: null,\n    action: null\n  },\n  valueStack = [],\n  index = -1;\nfunction createCursor(defaultValue) {\n  return { current: defaultValue };\n}\nfunction pop(cursor) {\n  0 > index ||\n    ((cursor.current = valueStack[index]), (valueStack[index] = null), index--);\n}\nfunction push(cursor, value) {\n  index++;\n  valueStack[index] = cursor.current;\n  cursor.current = value;\n}\nvar contextStackCursor = createCursor(null),\n  contextFiberStackCursor = createCursor(null),\n  rootInstanceStackCursor = createCursor(null),\n  hostTransitionProviderCursor = createCursor(null);\nfunction pushHostContainer(fiber, nextRootInstance) {\n  push(rootInstanceStackCursor, nextRootInstance);\n  push(contextFiberStackCursor, fiber);\n  push(contextStackCursor, null);\n  fiber = nextRootInstance.nodeType;\n  switch (fiber) {\n    case 9:\n    case 11:\n      nextRootInstance = (nextRootInstance = nextRootInstance.documentElement)\n        ? (nextRootInstance = nextRootInstance.namespaceURI)\n          ? getOwnHostContext(nextRootInstance)\n          : 0\n        : 0;\n      break;\n    default:\n      if (\n        ((fiber = 8 === fiber ? nextRootInstance.parentNode : nextRootInstance),\n        (nextRootInstance = fiber.tagName),\n        (fiber = fiber.namespaceURI))\n      )\n        (fiber = getOwnHostContext(fiber)),\n          (nextRootInstance = getChildHostContextProd(fiber, nextRootInstance));\n      else\n        switch (nextRootInstance) {\n          case \"svg\":\n            nextRootInstance = 1;\n            break;\n          case \"math\":\n            nextRootInstance = 2;\n            break;\n          default:\n            nextRootInstance = 0;\n        }\n  }\n  pop(contextStackCursor);\n  push(contextStackCursor, nextRootInstance);\n}\nfunction popHostContainer() {\n  pop(contextStackCursor);\n  pop(contextFiberStackCursor);\n  pop(rootInstanceStackCursor);\n}\nfunction pushHostContext(fiber) {\n  null !== fiber.memoizedState && push(hostTransitionProviderCursor, fiber);\n  var context = contextStackCursor.current;\n  var JSCompiler_inline_result = getChildHostContextProd(context, fiber.type);\n  context !== JSCompiler_inline_result &&\n    (push(contextFiberStackCursor, fiber),\n    push(contextStackCursor, JSCompiler_inline_result));\n}\nfunction popHostContext(fiber) {\n  contextFiberStackCursor.current === fiber &&\n    (pop(contextStackCursor), pop(contextFiberStackCursor));\n  hostTransitionProviderCursor.current === fiber &&\n    (pop(hostTransitionProviderCursor),\n    (HostTransitionContext._currentValue = sharedNotPendingObject));\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty,\n  scheduleCallback$3 = Scheduler.unstable_scheduleCallback,\n  cancelCallback$1 = Scheduler.unstable_cancelCallback,\n  shouldYield = Scheduler.unstable_shouldYield,\n  requestPaint = Scheduler.unstable_requestPaint,\n  now = Scheduler.unstable_now,\n  getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,\n  ImmediatePriority = Scheduler.unstable_ImmediatePriority,\n  UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,\n  NormalPriority$1 = Scheduler.unstable_NormalPriority,\n  LowPriority = Scheduler.unstable_LowPriority,\n  IdlePriority = Scheduler.unstable_IdlePriority,\n  log$1 = Scheduler.log,\n  unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue,\n  rendererID = null,\n  injectedHook = null;\nfunction onCommitRoot(root) {\n  if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberRoot)\n    try {\n      injectedHook.onCommitFiberRoot(\n        rendererID,\n        root,\n        void 0,\n        128 === (root.current.flags & 128)\n      );\n    } catch (err) {}\n}\nfunction setIsStrictModeForDevtools(newIsStrictMode) {\n  \"function\" === typeof log$1 && unstable_setDisableYieldValue(newIsStrictMode);\n  if (injectedHook && \"function\" === typeof injectedHook.setStrictMode)\n    try {\n      injectedHook.setStrictMode(rendererID, newIsStrictMode);\n    } catch (err) {}\n}\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,\n  log = Math.log,\n  LN2 = Math.LN2;\nfunction clz32Fallback(x) {\n  x >>>= 0;\n  return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;\n}\nvar nextTransitionLane = 128,\n  nextRetryLane = 4194304;\nfunction getHighestPriorityLanes(lanes) {\n  var pendingSyncLanes = lanes & 42;\n  if (0 !== pendingSyncLanes) return pendingSyncLanes;\n  switch (lanes & -lanes) {\n    case 1:\n      return 1;\n    case 2:\n      return 2;\n    case 4:\n      return 4;\n    case 8:\n      return 8;\n    case 16:\n      return 16;\n    case 32:\n      return 32;\n    case 64:\n      return 64;\n    case 128:\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return lanes & 4194176;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return lanes & 62914560;\n    case 67108864:\n      return 67108864;\n    case 134217728:\n      return 134217728;\n    case 268435456:\n      return 268435456;\n    case 536870912:\n      return 536870912;\n    case 1073741824:\n      return 0;\n    default:\n      return lanes;\n  }\n}\nfunction getNextLanes(root, wipLanes) {\n  var pendingLanes = root.pendingLanes;\n  if (0 === pendingLanes) return 0;\n  var nextLanes = 0,\n    suspendedLanes = root.suspendedLanes,\n    pingedLanes = root.pingedLanes,\n    warmLanes = root.warmLanes;\n  root = 0 !== root.finishedLanes;\n  var nonIdlePendingLanes = pendingLanes & 134217727;\n  0 !== nonIdlePendingLanes\n    ? ((pendingLanes = nonIdlePendingLanes & ~suspendedLanes),\n      0 !== pendingLanes\n        ? (nextLanes = getHighestPriorityLanes(pendingLanes))\n        : ((pingedLanes &= nonIdlePendingLanes),\n          0 !== pingedLanes\n            ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n            : root ||\n              ((warmLanes = nonIdlePendingLanes & ~warmLanes),\n              0 !== warmLanes &&\n                (nextLanes = getHighestPriorityLanes(warmLanes)))))\n    : ((nonIdlePendingLanes = pendingLanes & ~suspendedLanes),\n      0 !== nonIdlePendingLanes\n        ? (nextLanes = getHighestPriorityLanes(nonIdlePendingLanes))\n        : 0 !== pingedLanes\n          ? (nextLanes = getHighestPriorityLanes(pingedLanes))\n          : root ||\n            ((warmLanes = pendingLanes & ~warmLanes),\n            0 !== warmLanes &&\n              (nextLanes = getHighestPriorityLanes(warmLanes))));\n  return 0 === nextLanes\n    ? 0\n    : 0 !== wipLanes &&\n        wipLanes !== nextLanes &&\n        0 === (wipLanes & suspendedLanes) &&\n        ((suspendedLanes = nextLanes & -nextLanes),\n        (warmLanes = wipLanes & -wipLanes),\n        suspendedLanes >= warmLanes ||\n          (32 === suspendedLanes && 0 !== (warmLanes & 4194176)))\n      ? wipLanes\n      : nextLanes;\n}\nfunction checkIfRootIsPrerendering(root, renderLanes) {\n  return (\n    0 ===\n    (root.pendingLanes &\n      ~(root.suspendedLanes & ~root.pingedLanes) &\n      renderLanes)\n  );\n}\nfunction computeExpirationTime(lane, currentTime) {\n  switch (lane) {\n    case 1:\n    case 2:\n    case 4:\n    case 8:\n      return currentTime + 250;\n    case 16:\n    case 32:\n    case 64:\n    case 128:\n    case 256:\n    case 512:\n    case 1024:\n    case 2048:\n    case 4096:\n    case 8192:\n    case 16384:\n    case 32768:\n    case 65536:\n    case 131072:\n    case 262144:\n    case 524288:\n    case 1048576:\n    case 2097152:\n      return currentTime + 5e3;\n    case 4194304:\n    case 8388608:\n    case 16777216:\n    case 33554432:\n      return -1;\n    case 67108864:\n    case 134217728:\n    case 268435456:\n    case 536870912:\n    case 1073741824:\n      return -1;\n    default:\n      return -1;\n  }\n}\nfunction claimNextTransitionLane() {\n  var lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n  0 === (nextTransitionLane & 4194176) && (nextTransitionLane = 128);\n  return lane;\n}\nfunction claimNextRetryLane() {\n  var lane = nextRetryLane;\n  nextRetryLane <<= 1;\n  0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);\n  return lane;\n}\nfunction createLaneMap(initial) {\n  for (var laneMap = [], i = 0; 31 > i; i++) laneMap.push(initial);\n  return laneMap;\n}\nfunction markRootUpdated$1(root, updateLane) {\n  root.pendingLanes |= updateLane;\n  268435456 !== updateLane &&\n    ((root.suspendedLanes = 0), (root.pingedLanes = 0), (root.warmLanes = 0));\n}\nfunction markRootFinished(\n  root,\n  finishedLanes,\n  remainingLanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  var previouslyPendingLanes = root.pendingLanes;\n  root.pendingLanes = remainingLanes;\n  root.suspendedLanes = 0;\n  root.pingedLanes = 0;\n  root.warmLanes = 0;\n  root.expiredLanes &= remainingLanes;\n  root.entangledLanes &= remainingLanes;\n  root.errorRecoveryDisabledLanes &= remainingLanes;\n  root.shellSuspendCounter = 0;\n  var entanglements = root.entanglements,\n    expirationTimes = root.expirationTimes,\n    hiddenUpdates = root.hiddenUpdates;\n  for (\n    remainingLanes = previouslyPendingLanes & ~remainingLanes;\n    0 < remainingLanes;\n\n  ) {\n    var index$7 = 31 - clz32(remainingLanes),\n      lane = 1 << index$7;\n    entanglements[index$7] = 0;\n    expirationTimes[index$7] = -1;\n    var hiddenUpdatesForLane = hiddenUpdates[index$7];\n    if (null !== hiddenUpdatesForLane)\n      for (\n        hiddenUpdates[index$7] = null, index$7 = 0;\n        index$7 < hiddenUpdatesForLane.length;\n        index$7++\n      ) {\n        var update = hiddenUpdatesForLane[index$7];\n        null !== update && (update.lane &= -536870913);\n      }\n    remainingLanes &= ~lane;\n  }\n  0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);\n  0 !== suspendedRetryLanes &&\n    0 === updatedLanes &&\n    0 !== root.tag &&\n    (root.suspendedLanes |=\n      suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));\n}\nfunction markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {\n  root.pendingLanes |= spawnedLane;\n  root.suspendedLanes &= ~spawnedLane;\n  var spawnedLaneIndex = 31 - clz32(spawnedLane);\n  root.entangledLanes |= spawnedLane;\n  root.entanglements[spawnedLaneIndex] =\n    root.entanglements[spawnedLaneIndex] |\n    1073741824 |\n    (entangledLanes & 4194218);\n}\nfunction markRootEntangled(root, entangledLanes) {\n  var rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n  for (root = root.entanglements; rootEntangledLanes; ) {\n    var index$8 = 31 - clz32(rootEntangledLanes),\n      lane = 1 << index$8;\n    (lane & entangledLanes) | (root[index$8] & entangledLanes) &&\n      (root[index$8] |= entangledLanes);\n    rootEntangledLanes &= ~lane;\n  }\n}\nfunction lanesToEventPriority(lanes) {\n  lanes &= -lanes;\n  return 2 < lanes\n    ? 8 < lanes\n      ? 0 !== (lanes & 134217727)\n        ? 32\n        : 268435456\n      : 8\n    : 2;\n}\nfunction resolveUpdatePriority() {\n  var updatePriority = ReactDOMSharedInternals.p;\n  if (0 !== updatePriority) return updatePriority;\n  updatePriority = window.event;\n  return void 0 === updatePriority ? 32 : getEventPriority(updatePriority.type);\n}\nfunction runWithPriority(priority, fn) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    return (ReactDOMSharedInternals.p = priority), fn();\n  } finally {\n    ReactDOMSharedInternals.p = previousPriority;\n  }\n}\nvar randomKey = Math.random().toString(36).slice(2),\n  internalInstanceKey = \"__reactFiber$\" + randomKey,\n  internalPropsKey = \"__reactProps$\" + randomKey,\n  internalContainerInstanceKey = \"__reactContainer$\" + randomKey,\n  internalEventHandlersKey = \"__reactEvents$\" + randomKey,\n  internalEventHandlerListenersKey = \"__reactListeners$\" + randomKey,\n  internalEventHandlesSetKey = \"__reactHandles$\" + randomKey,\n  internalRootNodeResourcesKey = \"__reactResources$\" + randomKey,\n  internalHoistableMarker = \"__reactMarker$\" + randomKey;\nfunction detachDeletedInstance(node) {\n  delete node[internalInstanceKey];\n  delete node[internalPropsKey];\n  delete node[internalEventHandlersKey];\n  delete node[internalEventHandlerListenersKey];\n  delete node[internalEventHandlesSetKey];\n}\nfunction getClosestInstanceFromNode(targetNode) {\n  var targetInst = targetNode[internalInstanceKey];\n  if (targetInst) return targetInst;\n  for (var parentNode = targetNode.parentNode; parentNode; ) {\n    if (\n      (targetInst =\n        parentNode[internalContainerInstanceKey] ||\n        parentNode[internalInstanceKey])\n    ) {\n      parentNode = targetInst.alternate;\n      if (\n        null !== targetInst.child ||\n        (null !== parentNode && null !== parentNode.child)\n      )\n        for (\n          targetNode = getParentSuspenseInstance(targetNode);\n          null !== targetNode;\n\n        ) {\n          if ((parentNode = targetNode[internalInstanceKey])) return parentNode;\n          targetNode = getParentSuspenseInstance(targetNode);\n        }\n      return targetInst;\n    }\n    targetNode = parentNode;\n    parentNode = targetNode.parentNode;\n  }\n  return null;\n}\nfunction getInstanceFromNode(node) {\n  if (\n    (node = node[internalInstanceKey] || node[internalContainerInstanceKey])\n  ) {\n    var tag = node.tag;\n    if (\n      5 === tag ||\n      6 === tag ||\n      13 === tag ||\n      26 === tag ||\n      27 === tag ||\n      3 === tag\n    )\n      return node;\n  }\n  return null;\n}\nfunction getNodeFromInstance(inst) {\n  var tag = inst.tag;\n  if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return inst.stateNode;\n  throw Error(formatProdErrorMessage(33));\n}\nfunction getResourcesFromRoot(root) {\n  var resources = root[internalRootNodeResourcesKey];\n  resources ||\n    (resources = root[internalRootNodeResourcesKey] =\n      { hoistableStyles: new Map(), hoistableScripts: new Map() });\n  return resources;\n}\nfunction markNodeAsHoistable(node) {\n  node[internalHoistableMarker] = !0;\n}\nvar allNativeEvents = new Set(),\n  registrationNameDependencies = {};\nfunction registerTwoPhaseEvent(registrationName, dependencies) {\n  registerDirectEvent(registrationName, dependencies);\n  registerDirectEvent(registrationName + \"Capture\", dependencies);\n}\nfunction registerDirectEvent(registrationName, dependencies) {\n  registrationNameDependencies[registrationName] = dependencies;\n  for (\n    registrationName = 0;\n    registrationName < dependencies.length;\n    registrationName++\n  )\n    allNativeEvents.add(dependencies[registrationName]);\n}\nvar canUseDOM = !(\n    \"undefined\" === typeof window ||\n    \"undefined\" === typeof window.document ||\n    \"undefined\" === typeof window.document.createElement\n  ),\n  VALID_ATTRIBUTE_NAME_REGEX = RegExp(\n    \"^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n  ),\n  illegalAttributeNameCache = {},\n  validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName))\n    return !0;\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))\n    return (validatedAttributeNameCache[attributeName] = !0);\n  illegalAttributeNameCache[attributeName] = !0;\n  return !1;\n}\nfunction setValueForAttribute(node, name, value) {\n  if (isAttributeNameSafe(name))\n    if (null === value) node.removeAttribute(name);\n    else {\n      switch (typeof value) {\n        case \"undefined\":\n        case \"function\":\n        case \"symbol\":\n          node.removeAttribute(name);\n          return;\n        case \"boolean\":\n          var prefix$10 = name.toLowerCase().slice(0, 5);\n          if (\"data-\" !== prefix$10 && \"aria-\" !== prefix$10) {\n            node.removeAttribute(name);\n            return;\n          }\n      }\n      node.setAttribute(name, \"\" + value);\n    }\n}\nfunction setValueForKnownAttribute(node, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttribute(name, \"\" + value);\n  }\n}\nfunction setValueForNamespacedAttribute(node, namespace, name, value) {\n  if (null === value) node.removeAttribute(name);\n  else {\n    switch (typeof value) {\n      case \"undefined\":\n      case \"function\":\n      case \"symbol\":\n      case \"boolean\":\n        node.removeAttribute(name);\n        return;\n    }\n    node.setAttributeNS(namespace, name, \"\" + value);\n  }\n}\nfunction getToStringValue(value) {\n  switch (typeof value) {\n    case \"bigint\":\n    case \"boolean\":\n    case \"number\":\n    case \"string\":\n    case \"undefined\":\n      return value;\n    case \"object\":\n      return value;\n    default:\n      return \"\";\n  }\n}\nfunction isCheckable(elem) {\n  var type = elem.type;\n  return (\n    (elem = elem.nodeName) &&\n    \"input\" === elem.toLowerCase() &&\n    (\"checkbox\" === type || \"radio\" === type)\n  );\n}\nfunction trackValueOnNode(node) {\n  var valueField = isCheckable(node) ? \"checked\" : \"value\",\n    descriptor = Object.getOwnPropertyDescriptor(\n      node.constructor.prototype,\n      valueField\n    ),\n    currentValue = \"\" + node[valueField];\n  if (\n    !node.hasOwnProperty(valueField) &&\n    \"undefined\" !== typeof descriptor &&\n    \"function\" === typeof descriptor.get &&\n    \"function\" === typeof descriptor.set\n  ) {\n    var get = descriptor.get,\n      set = descriptor.set;\n    Object.defineProperty(node, valueField, {\n      configurable: !0,\n      get: function () {\n        return get.call(this);\n      },\n      set: function (value) {\n        currentValue = \"\" + value;\n        set.call(this, value);\n      }\n    });\n    Object.defineProperty(node, valueField, {\n      enumerable: descriptor.enumerable\n    });\n    return {\n      getValue: function () {\n        return currentValue;\n      },\n      setValue: function (value) {\n        currentValue = \"\" + value;\n      },\n      stopTracking: function () {\n        node._valueTracker = null;\n        delete node[valueField];\n      }\n    };\n  }\n}\nfunction track(node) {\n  node._valueTracker || (node._valueTracker = trackValueOnNode(node));\n}\nfunction updateValueIfChanged(node) {\n  if (!node) return !1;\n  var tracker = node._valueTracker;\n  if (!tracker) return !0;\n  var lastValue = tracker.getValue();\n  var value = \"\";\n  node &&\n    (value = isCheckable(node)\n      ? node.checked\n        ? \"true\"\n        : \"false\"\n      : node.value);\n  node = value;\n  return node !== lastValue ? (tracker.setValue(node), !0) : !1;\n}\nfunction getActiveElement(doc) {\n  doc = doc || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof doc) return null;\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\nvar escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\\n\"\\\\]/g;\nfunction escapeSelectorAttributeValueInsideDoubleQuotes(value) {\n  return value.replace(\n    escapeSelectorAttributeValueInsideDoubleQuotesRegex,\n    function (ch) {\n      return \"\\\\\" + ch.charCodeAt(0).toString(16) + \" \";\n    }\n  );\n}\nfunction updateInput(\n  element,\n  value,\n  defaultValue,\n  lastDefaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name\n) {\n  element.name = \"\";\n  null != type &&\n  \"function\" !== typeof type &&\n  \"symbol\" !== typeof type &&\n  \"boolean\" !== typeof type\n    ? (element.type = type)\n    : element.removeAttribute(\"type\");\n  if (null != value)\n    if (\"number\" === type) {\n      if ((0 === value && \"\" === element.value) || element.value != value)\n        element.value = \"\" + getToStringValue(value);\n    } else\n      element.value !== \"\" + getToStringValue(value) &&\n        (element.value = \"\" + getToStringValue(value));\n  else\n    (\"submit\" !== type && \"reset\" !== type) || element.removeAttribute(\"value\");\n  null != value\n    ? setDefaultValue(element, type, getToStringValue(value))\n    : null != defaultValue\n      ? setDefaultValue(element, type, getToStringValue(defaultValue))\n      : null != lastDefaultValue && element.removeAttribute(\"value\");\n  null == checked &&\n    null != defaultChecked &&\n    (element.defaultChecked = !!defaultChecked);\n  null != checked &&\n    (element.checked =\n      checked && \"function\" !== typeof checked && \"symbol\" !== typeof checked);\n  null != name &&\n  \"function\" !== typeof name &&\n  \"symbol\" !== typeof name &&\n  \"boolean\" !== typeof name\n    ? (element.name = \"\" + getToStringValue(name))\n    : element.removeAttribute(\"name\");\n}\nfunction initInput(\n  element,\n  value,\n  defaultValue,\n  checked,\n  defaultChecked,\n  type,\n  name,\n  isHydrating\n) {\n  null != type &&\n    \"function\" !== typeof type &&\n    \"symbol\" !== typeof type &&\n    \"boolean\" !== typeof type &&\n    (element.type = type);\n  if (null != value || null != defaultValue) {\n    if (\n      !(\n        (\"submit\" !== type && \"reset\" !== type) ||\n        (void 0 !== value && null !== value)\n      )\n    )\n      return;\n    defaultValue =\n      null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n    value = null != value ? \"\" + getToStringValue(value) : defaultValue;\n    isHydrating || value === element.value || (element.value = value);\n    element.defaultValue = value;\n  }\n  checked = null != checked ? checked : defaultChecked;\n  checked =\n    \"function\" !== typeof checked && \"symbol\" !== typeof checked && !!checked;\n  element.checked = isHydrating ? element.checked : !!checked;\n  element.defaultChecked = !!checked;\n  null != name &&\n    \"function\" !== typeof name &&\n    \"symbol\" !== typeof name &&\n    \"boolean\" !== typeof name &&\n    (element.name = name);\n}\nfunction setDefaultValue(node, type, value) {\n  (\"number\" === type && getActiveElement(node.ownerDocument) === node) ||\n    node.defaultValue === \"\" + value ||\n    (node.defaultValue = \"\" + value);\n}\nfunction updateOptions(node, multiple, propValue, setDefaultSelected) {\n  node = node.options;\n  if (multiple) {\n    multiple = {};\n    for (var i = 0; i < propValue.length; i++)\n      multiple[\"$\" + propValue[i]] = !0;\n    for (propValue = 0; propValue < node.length; propValue++)\n      (i = multiple.hasOwnProperty(\"$\" + node[propValue].value)),\n        node[propValue].selected !== i && (node[propValue].selected = i),\n        i && setDefaultSelected && (node[propValue].defaultSelected = !0);\n  } else {\n    propValue = \"\" + getToStringValue(propValue);\n    multiple = null;\n    for (i = 0; i < node.length; i++) {\n      if (node[i].value === propValue) {\n        node[i].selected = !0;\n        setDefaultSelected && (node[i].defaultSelected = !0);\n        return;\n      }\n      null !== multiple || node[i].disabled || (multiple = node[i]);\n    }\n    null !== multiple && (multiple.selected = !0);\n  }\n}\nfunction updateTextarea(element, value, defaultValue) {\n  if (\n    null != value &&\n    ((value = \"\" + getToStringValue(value)),\n    value !== element.value && (element.value = value),\n    null == defaultValue)\n  ) {\n    element.defaultValue !== value && (element.defaultValue = value);\n    return;\n  }\n  element.defaultValue =\n    null != defaultValue ? \"\" + getToStringValue(defaultValue) : \"\";\n}\nfunction initTextarea(element, value, defaultValue, children) {\n  if (null == value) {\n    if (null != children) {\n      if (null != defaultValue) throw Error(formatProdErrorMessage(92));\n      if (isArrayImpl(children)) {\n        if (1 < children.length) throw Error(formatProdErrorMessage(93));\n        children = children[0];\n      }\n      defaultValue = children;\n    }\n    null == defaultValue && (defaultValue = \"\");\n    value = defaultValue;\n  }\n  defaultValue = getToStringValue(value);\n  element.defaultValue = defaultValue;\n  children = element.textContent;\n  children === defaultValue &&\n    \"\" !== children &&\n    null !== children &&\n    (element.value = children);\n}\nfunction setTextContent(node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n    if (\n      firstChild &&\n      firstChild === node.lastChild &&\n      3 === firstChild.nodeType\n    ) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n}\nvar unitlessNumbers = new Set(\n  \"animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp\".split(\n    \" \"\n  )\n);\nfunction setValueForStyle(style, styleName, value) {\n  var isCustomProperty = 0 === styleName.indexOf(\"--\");\n  null == value || \"boolean\" === typeof value || \"\" === value\n    ? isCustomProperty\n      ? style.setProperty(styleName, \"\")\n      : \"float\" === styleName\n        ? (style.cssFloat = \"\")\n        : (style[styleName] = \"\")\n    : isCustomProperty\n      ? style.setProperty(styleName, value)\n      : \"number\" !== typeof value ||\n          0 === value ||\n          unitlessNumbers.has(styleName)\n        ? \"float\" === styleName\n          ? (style.cssFloat = value)\n          : (style[styleName] = (\"\" + value).trim())\n        : (style[styleName] = value + \"px\");\n}\nfunction setValueForStyles(node, styles, prevStyles) {\n  if (null != styles && \"object\" !== typeof styles)\n    throw Error(formatProdErrorMessage(62));\n  node = node.style;\n  if (null != prevStyles) {\n    for (var styleName in prevStyles)\n      !prevStyles.hasOwnProperty(styleName) ||\n        (null != styles && styles.hasOwnProperty(styleName)) ||\n        (0 === styleName.indexOf(\"--\")\n          ? node.setProperty(styleName, \"\")\n          : \"float\" === styleName\n            ? (node.cssFloat = \"\")\n            : (node[styleName] = \"\"));\n    for (var styleName$16 in styles)\n      (styleName = styles[styleName$16]),\n        styles.hasOwnProperty(styleName$16) &&\n          prevStyles[styleName$16] !== styleName &&\n          setValueForStyle(node, styleName$16, styleName);\n  } else\n    for (var styleName$17 in styles)\n      styles.hasOwnProperty(styleName$17) &&\n        setValueForStyle(node, styleName$17, styles[styleName$17]);\n}\nfunction isCustomElement(tagName) {\n  if (-1 === tagName.indexOf(\"-\")) return !1;\n  switch (tagName) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n    default:\n      return !0;\n  }\n}\nvar aliases = new Map([\n    [\"acceptCharset\", \"accept-charset\"],\n    [\"htmlFor\", \"for\"],\n    [\"httpEquiv\", \"http-equiv\"],\n    [\"crossOrigin\", \"crossorigin\"],\n    [\"accentHeight\", \"accent-height\"],\n    [\"alignmentBaseline\", \"alignment-baseline\"],\n    [\"arabicForm\", \"arabic-form\"],\n    [\"baselineShift\", \"baseline-shift\"],\n    [\"capHeight\", \"cap-height\"],\n    [\"clipPath\", \"clip-path\"],\n    [\"clipRule\", \"clip-rule\"],\n    [\"colorInterpolation\", \"color-interpolation\"],\n    [\"colorInterpolationFilters\", \"color-interpolation-filters\"],\n    [\"colorProfile\", \"color-profile\"],\n    [\"colorRendering\", \"color-rendering\"],\n    [\"dominantBaseline\", \"dominant-baseline\"],\n    [\"enableBackground\", \"enable-background\"],\n    [\"fillOpacity\", \"fill-opacity\"],\n    [\"fillRule\", \"fill-rule\"],\n    [\"floodColor\", \"flood-color\"],\n    [\"floodOpacity\", \"flood-opacity\"],\n    [\"fontFamily\", \"font-family\"],\n    [\"fontSize\", \"font-size\"],\n    [\"fontSizeAdjust\", \"font-size-adjust\"],\n    [\"fontStretch\", \"font-stretch\"],\n    [\"fontStyle\", \"font-style\"],\n    [\"fontVariant\", \"font-variant\"],\n    [\"fontWeight\", \"font-weight\"],\n    [\"glyphName\", \"glyph-name\"],\n    [\"glyphOrientationHorizontal\", \"glyph-orientation-horizontal\"],\n    [\"glyphOrientationVertical\", \"glyph-orientation-vertical\"],\n    [\"horizAdvX\", \"horiz-adv-x\"],\n    [\"horizOriginX\", \"horiz-origin-x\"],\n    [\"imageRendering\", \"image-rendering\"],\n    [\"letterSpacing\", \"letter-spacing\"],\n    [\"lightingColor\", \"lighting-color\"],\n    [\"markerEnd\", \"marker-end\"],\n    [\"markerMid\", \"marker-mid\"],\n    [\"markerStart\", \"marker-start\"],\n    [\"overlinePosition\", \"overline-position\"],\n    [\"overlineThickness\", \"overline-thickness\"],\n    [\"paintOrder\", \"paint-order\"],\n    [\"panose-1\", \"panose-1\"],\n    [\"pointerEvents\", \"pointer-events\"],\n    [\"renderingIntent\", \"rendering-intent\"],\n    [\"shapeRendering\", \"shape-rendering\"],\n    [\"stopColor\", \"stop-color\"],\n    [\"stopOpacity\", \"stop-opacity\"],\n    [\"strikethroughPosition\", \"strikethrough-position\"],\n    [\"strikethroughThickness\", \"strikethrough-thickness\"],\n    [\"strokeDasharray\", \"stroke-dasharray\"],\n    [\"strokeDashoffset\", \"stroke-dashoffset\"],\n    [\"strokeLinecap\", \"stroke-linecap\"],\n    [\"strokeLinejoin\", \"stroke-linejoin\"],\n    [\"strokeMiterlimit\", \"stroke-miterlimit\"],\n    [\"strokeOpacity\", \"stroke-opacity\"],\n    [\"strokeWidth\", \"stroke-width\"],\n    [\"textAnchor\", \"text-anchor\"],\n    [\"textDecoration\", \"text-decoration\"],\n    [\"textRendering\", \"text-rendering\"],\n    [\"transformOrigin\", \"transform-origin\"],\n    [\"underlinePosition\", \"underline-position\"],\n    [\"underlineThickness\", \"underline-thickness\"],\n    [\"unicodeBidi\", \"unicode-bidi\"],\n    [\"unicodeRange\", \"unicode-range\"],\n    [\"unitsPerEm\", \"units-per-em\"],\n    [\"vAlphabetic\", \"v-alphabetic\"],\n    [\"vHanging\", \"v-hanging\"],\n    [\"vIdeographic\", \"v-ideographic\"],\n    [\"vMathematical\", \"v-mathematical\"],\n    [\"vectorEffect\", \"vector-effect\"],\n    [\"vertAdvY\", \"vert-adv-y\"],\n    [\"vertOriginX\", \"vert-origin-x\"],\n    [\"vertOriginY\", \"vert-origin-y\"],\n    [\"wordSpacing\", \"word-spacing\"],\n    [\"writingMode\", \"writing-mode\"],\n    [\"xmlnsXlink\", \"xmlns:xlink\"],\n    [\"xHeight\", \"x-height\"]\n  ]),\n  isJavaScriptProtocol =\n    /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*:/i;\nfunction sanitizeURL(url) {\n  return isJavaScriptProtocol.test(\"\" + url)\n    ? \"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')\"\n    : url;\n}\nvar currentReplayingEvent = null;\nfunction getEventTarget(nativeEvent) {\n  nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;\n  nativeEvent.correspondingUseElement &&\n    (nativeEvent = nativeEvent.correspondingUseElement);\n  return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;\n}\nvar restoreTarget = null,\n  restoreQueue = null;\nfunction restoreStateOfTarget(target) {\n  var internalInstance = getInstanceFromNode(target);\n  if (internalInstance && (target = internalInstance.stateNode)) {\n    var props = target[internalPropsKey] || null;\n    a: switch (((target = internalInstance.stateNode), internalInstance.type)) {\n      case \"input\":\n        updateInput(\n          target,\n          props.value,\n          props.defaultValue,\n          props.defaultValue,\n          props.checked,\n          props.defaultChecked,\n          props.type,\n          props.name\n        );\n        internalInstance = props.name;\n        if (\"radio\" === props.type && null != internalInstance) {\n          for (props = target; props.parentNode; ) props = props.parentNode;\n          props = props.querySelectorAll(\n            'input[name=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                \"\" + internalInstance\n              ) +\n              '\"][type=\"radio\"]'\n          );\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          ) {\n            var otherNode = props[internalInstance];\n            if (otherNode !== target && otherNode.form === target.form) {\n              var otherProps = otherNode[internalPropsKey] || null;\n              if (!otherProps) throw Error(formatProdErrorMessage(90));\n              updateInput(\n                otherNode,\n                otherProps.value,\n                otherProps.defaultValue,\n                otherProps.defaultValue,\n                otherProps.checked,\n                otherProps.defaultChecked,\n                otherProps.type,\n                otherProps.name\n              );\n            }\n          }\n          for (\n            internalInstance = 0;\n            internalInstance < props.length;\n            internalInstance++\n          )\n            (otherNode = props[internalInstance]),\n              otherNode.form === target.form && updateValueIfChanged(otherNode);\n        }\n        break a;\n      case \"textarea\":\n        updateTextarea(target, props.value, props.defaultValue);\n        break a;\n      case \"select\":\n        (internalInstance = props.value),\n          null != internalInstance &&\n            updateOptions(target, !!props.multiple, internalInstance, !1);\n    }\n  }\n}\nvar isInsideEventHandler = !1;\nfunction batchedUpdates$1(fn, a, b) {\n  if (isInsideEventHandler) return fn(a, b);\n  isInsideEventHandler = !0;\n  try {\n    var JSCompiler_inline_result = fn(a);\n    return JSCompiler_inline_result;\n  } finally {\n    if (\n      ((isInsideEventHandler = !1),\n      null !== restoreTarget || null !== restoreQueue)\n    )\n      if (\n        (flushSyncWork$1(),\n        restoreTarget &&\n          ((a = restoreTarget),\n          (fn = restoreQueue),\n          (restoreQueue = restoreTarget = null),\n          restoreStateOfTarget(a),\n          fn))\n      )\n        for (a = 0; a < fn.length; a++) restoreStateOfTarget(fn[a]);\n  }\n}\nfunction getListener(inst, registrationName) {\n  var stateNode = inst.stateNode;\n  if (null === stateNode) return null;\n  var props = stateNode[internalPropsKey] || null;\n  if (null === props) return null;\n  stateNode = props[registrationName];\n  a: switch (registrationName) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n    case \"onMouseEnter\":\n      (props = !props.disabled) ||\n        ((inst = inst.type),\n        (props = !(\n          \"button\" === inst ||\n          \"input\" === inst ||\n          \"select\" === inst ||\n          \"textarea\" === inst\n        )));\n      inst = !props;\n      break a;\n    default:\n      inst = !1;\n  }\n  if (inst) return null;\n  if (stateNode && \"function\" !== typeof stateNode)\n    throw Error(\n      formatProdErrorMessage(231, registrationName, typeof stateNode)\n    );\n  return stateNode;\n}\nvar passiveBrowserEventsSupported = !1;\nif (canUseDOM)\n  try {\n    var options = {};\n    Object.defineProperty(options, \"passive\", {\n      get: function () {\n        passiveBrowserEventsSupported = !0;\n      }\n    });\n    window.addEventListener(\"test\", options, options);\n    window.removeEventListener(\"test\", options, options);\n  } catch (e) {\n    passiveBrowserEventsSupported = !1;\n  }\nvar root = null,\n  startText = null,\n  fallbackText = null;\nfunction getData() {\n  if (fallbackText) return fallbackText;\n  var start,\n    startValue = startText,\n    startLength = startValue.length,\n    end,\n    endValue = \"value\" in root ? root.value : root.textContent,\n    endLength = endValue.length;\n  for (\n    start = 0;\n    start < startLength && startValue[start] === endValue[start];\n    start++\n  );\n  var minEnd = startLength - start;\n  for (\n    end = 1;\n    end <= minEnd &&\n    startValue[startLength - end] === endValue[endLength - end];\n    end++\n  );\n  return (fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0));\n}\nfunction getEventCharCode(nativeEvent) {\n  var keyCode = nativeEvent.keyCode;\n  \"charCode\" in nativeEvent\n    ? ((nativeEvent = nativeEvent.charCode),\n      0 === nativeEvent && 13 === keyCode && (nativeEvent = 13))\n    : (nativeEvent = keyCode);\n  10 === nativeEvent && (nativeEvent = 13);\n  return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;\n}\nfunction functionThatReturnsTrue() {\n  return !0;\n}\nfunction functionThatReturnsFalse() {\n  return !1;\n}\nfunction createSyntheticEvent(Interface) {\n  function SyntheticBaseEvent(\n    reactName,\n    reactEventType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget\n  ) {\n    this._reactName = reactName;\n    this._targetInst = targetInst;\n    this.type = reactEventType;\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEventTarget;\n    this.currentTarget = null;\n    for (var propName in Interface)\n      Interface.hasOwnProperty(propName) &&\n        ((reactName = Interface[propName]),\n        (this[propName] = reactName\n          ? reactName(nativeEvent)\n          : nativeEvent[propName]));\n    this.isDefaultPrevented = (\n      null != nativeEvent.defaultPrevented\n        ? nativeEvent.defaultPrevented\n        : !1 === nativeEvent.returnValue\n    )\n      ? functionThatReturnsTrue\n      : functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    return this;\n  }\n  assign(SyntheticBaseEvent.prototype, {\n    preventDefault: function () {\n      this.defaultPrevented = !0;\n      var event = this.nativeEvent;\n      event &&\n        (event.preventDefault\n          ? event.preventDefault()\n          : \"unknown\" !== typeof event.returnValue && (event.returnValue = !1),\n        (this.isDefaultPrevented = functionThatReturnsTrue));\n    },\n    stopPropagation: function () {\n      var event = this.nativeEvent;\n      event &&\n        (event.stopPropagation\n          ? event.stopPropagation()\n          : \"unknown\" !== typeof event.cancelBubble &&\n            (event.cancelBubble = !0),\n        (this.isPropagationStopped = functionThatReturnsTrue));\n    },\n    persist: function () {},\n    isPersistent: functionThatReturnsTrue\n  });\n  return SyntheticBaseEvent;\n}\nvar EventInterface = {\n    eventPhase: 0,\n    bubbles: 0,\n    cancelable: 0,\n    timeStamp: function (event) {\n      return event.timeStamp || Date.now();\n    },\n    defaultPrevented: 0,\n    isTrusted: 0\n  },\n  SyntheticEvent = createSyntheticEvent(EventInterface),\n  UIEventInterface = assign({}, EventInterface, { view: 0, detail: 0 }),\n  SyntheticUIEvent = createSyntheticEvent(UIEventInterface),\n  lastMovementX,\n  lastMovementY,\n  lastMouseEvent,\n  MouseEventInterface = assign({}, UIEventInterface, {\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    pageX: 0,\n    pageY: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    getModifierState: getEventModifierState,\n    button: 0,\n    buttons: 0,\n    relatedTarget: function (event) {\n      return void 0 === event.relatedTarget\n        ? event.fromElement === event.srcElement\n          ? event.toElement\n          : event.fromElement\n        : event.relatedTarget;\n    },\n    movementX: function (event) {\n      if (\"movementX\" in event) return event.movementX;\n      event !== lastMouseEvent &&\n        (lastMouseEvent && \"mousemove\" === event.type\n          ? ((lastMovementX = event.screenX - lastMouseEvent.screenX),\n            (lastMovementY = event.screenY - lastMouseEvent.screenY))\n          : (lastMovementY = lastMovementX = 0),\n        (lastMouseEvent = event));\n      return lastMovementX;\n    },\n    movementY: function (event) {\n      return \"movementY\" in event ? event.movementY : lastMovementY;\n    }\n  }),\n  SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface),\n  DragEventInterface = assign({}, MouseEventInterface, { dataTransfer: 0 }),\n  SyntheticDragEvent = createSyntheticEvent(DragEventInterface),\n  FocusEventInterface = assign({}, UIEventInterface, { relatedTarget: 0 }),\n  SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface),\n  AnimationEventInterface = assign({}, EventInterface, {\n    animationName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface),\n  ClipboardEventInterface = assign({}, EventInterface, {\n    clipboardData: function (event) {\n      return \"clipboardData\" in event\n        ? event.clipboardData\n        : window.clipboardData;\n    }\n  }),\n  SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface),\n  CompositionEventInterface = assign({}, EventInterface, { data: 0 }),\n  SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface),\n  normalizeKey = {\n    Esc: \"Escape\",\n    Spacebar: \" \",\n    Left: \"ArrowLeft\",\n    Up: \"ArrowUp\",\n    Right: \"ArrowRight\",\n    Down: \"ArrowDown\",\n    Del: \"Delete\",\n    Win: \"OS\",\n    Menu: \"ContextMenu\",\n    Apps: \"ContextMenu\",\n    Scroll: \"ScrollLock\",\n    MozPrintableKey: \"Unidentified\"\n  },\n  translateToKey = {\n    8: \"Backspace\",\n    9: \"Tab\",\n    12: \"Clear\",\n    13: \"Enter\",\n    16: \"Shift\",\n    17: \"Control\",\n    18: \"Alt\",\n    19: \"Pause\",\n    20: \"CapsLock\",\n    27: \"Escape\",\n    32: \" \",\n    33: \"PageUp\",\n    34: \"PageDown\",\n    35: \"End\",\n    36: \"Home\",\n    37: \"ArrowLeft\",\n    38: \"ArrowUp\",\n    39: \"ArrowRight\",\n    40: \"ArrowDown\",\n    45: \"Insert\",\n    46: \"Delete\",\n    112: \"F1\",\n    113: \"F2\",\n    114: \"F3\",\n    115: \"F4\",\n    116: \"F5\",\n    117: \"F6\",\n    118: \"F7\",\n    119: \"F8\",\n    120: \"F9\",\n    121: \"F10\",\n    122: \"F11\",\n    123: \"F12\",\n    144: \"NumLock\",\n    145: \"ScrollLock\",\n    224: \"Meta\"\n  },\n  modifierKeyToProp = {\n    Alt: \"altKey\",\n    Control: \"ctrlKey\",\n    Meta: \"metaKey\",\n    Shift: \"shiftKey\"\n  };\nfunction modifierStateGetter(keyArg) {\n  var nativeEvent = this.nativeEvent;\n  return nativeEvent.getModifierState\n    ? nativeEvent.getModifierState(keyArg)\n    : (keyArg = modifierKeyToProp[keyArg])\n      ? !!nativeEvent[keyArg]\n      : !1;\n}\nfunction getEventModifierState() {\n  return modifierStateGetter;\n}\nvar KeyboardEventInterface = assign({}, UIEventInterface, {\n    key: function (nativeEvent) {\n      if (nativeEvent.key) {\n        var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n        if (\"Unidentified\" !== key) return key;\n      }\n      return \"keypress\" === nativeEvent.type\n        ? ((nativeEvent = getEventCharCode(nativeEvent)),\n          13 === nativeEvent ? \"Enter\" : String.fromCharCode(nativeEvent))\n        : \"keydown\" === nativeEvent.type || \"keyup\" === nativeEvent.type\n          ? translateToKey[nativeEvent.keyCode] || \"Unidentified\"\n          : \"\";\n    },\n    code: 0,\n    location: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    altKey: 0,\n    metaKey: 0,\n    repeat: 0,\n    locale: 0,\n    getModifierState: getEventModifierState,\n    charCode: function (event) {\n      return \"keypress\" === event.type ? getEventCharCode(event) : 0;\n    },\n    keyCode: function (event) {\n      return \"keydown\" === event.type || \"keyup\" === event.type\n        ? event.keyCode\n        : 0;\n    },\n    which: function (event) {\n      return \"keypress\" === event.type\n        ? getEventCharCode(event)\n        : \"keydown\" === event.type || \"keyup\" === event.type\n          ? event.keyCode\n          : 0;\n    }\n  }),\n  SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface),\n  PointerEventInterface = assign({}, MouseEventInterface, {\n    pointerId: 0,\n    width: 0,\n    height: 0,\n    pressure: 0,\n    tangentialPressure: 0,\n    tiltX: 0,\n    tiltY: 0,\n    twist: 0,\n    pointerType: 0,\n    isPrimary: 0\n  }),\n  SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface),\n  TouchEventInterface = assign({}, UIEventInterface, {\n    touches: 0,\n    targetTouches: 0,\n    changedTouches: 0,\n    altKey: 0,\n    metaKey: 0,\n    ctrlKey: 0,\n    shiftKey: 0,\n    getModifierState: getEventModifierState\n  }),\n  SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface),\n  TransitionEventInterface = assign({}, EventInterface, {\n    propertyName: 0,\n    elapsedTime: 0,\n    pseudoElement: 0\n  }),\n  SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface),\n  WheelEventInterface = assign({}, MouseEventInterface, {\n    deltaX: function (event) {\n      return \"deltaX\" in event\n        ? event.deltaX\n        : \"wheelDeltaX\" in event\n          ? -event.wheelDeltaX\n          : 0;\n    },\n    deltaY: function (event) {\n      return \"deltaY\" in event\n        ? event.deltaY\n        : \"wheelDeltaY\" in event\n          ? -event.wheelDeltaY\n          : \"wheelDelta\" in event\n            ? -event.wheelDelta\n            : 0;\n    },\n    deltaZ: 0,\n    deltaMode: 0\n  }),\n  SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface),\n  ToggleEventInterface = assign({}, EventInterface, {\n    newState: 0,\n    oldState: 0\n  }),\n  SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface),\n  END_KEYCODES = [9, 13, 27, 32],\n  canUseCompositionEvent = canUseDOM && \"CompositionEvent\" in window,\n  documentMode = null;\ncanUseDOM &&\n  \"documentMode\" in document &&\n  (documentMode = document.documentMode);\nvar canUseTextInputEvent = canUseDOM && \"TextEvent\" in window && !documentMode,\n  useFallbackCompositionData =\n    canUseDOM &&\n    (!canUseCompositionEvent ||\n      (documentMode && 8 < documentMode && 11 >= documentMode)),\n  SPACEBAR_CHAR = String.fromCharCode(32),\n  hasSpaceKeypress = !1;\nfunction isFallbackCompositionEnd(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"keyup\":\n      return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);\n    case \"keydown\":\n      return 229 !== nativeEvent.keyCode;\n    case \"keypress\":\n    case \"mousedown\":\n    case \"focusout\":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction getDataFromCustomEvent(nativeEvent) {\n  nativeEvent = nativeEvent.detail;\n  return \"object\" === typeof nativeEvent && \"data\" in nativeEvent\n    ? nativeEvent.data\n    : null;\n}\nvar isComposing = !1;\nfunction getNativeBeforeInputChars(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"compositionend\":\n      return getDataFromCustomEvent(nativeEvent);\n    case \"keypress\":\n      if (32 !== nativeEvent.which) return null;\n      hasSpaceKeypress = !0;\n      return SPACEBAR_CHAR;\n    case \"textInput\":\n      return (\n        (domEventName = nativeEvent.data),\n        domEventName === SPACEBAR_CHAR && hasSpaceKeypress ? null : domEventName\n      );\n    default:\n      return null;\n  }\n}\nfunction getFallbackBeforeInputChars(domEventName, nativeEvent) {\n  if (isComposing)\n    return \"compositionend\" === domEventName ||\n      (!canUseCompositionEvent &&\n        isFallbackCompositionEnd(domEventName, nativeEvent))\n      ? ((domEventName = getData()),\n        (fallbackText = startText = root = null),\n        (isComposing = !1),\n        domEventName)\n      : null;\n  switch (domEventName) {\n    case \"paste\":\n      return null;\n    case \"keypress\":\n      if (\n        !(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) ||\n        (nativeEvent.ctrlKey && nativeEvent.altKey)\n      ) {\n        if (nativeEvent.char && 1 < nativeEvent.char.length)\n          return nativeEvent.char;\n        if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case \"compositionend\":\n      return useFallbackCompositionData && \"ko\" !== nativeEvent.locale\n        ? null\n        : nativeEvent.data;\n    default:\n      return null;\n  }\n}\nvar supportedInputTypes = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return \"input\" === nodeName\n    ? !!supportedInputTypes[elem.type]\n    : \"textarea\" === nodeName\n      ? !0\n      : !1;\n}\nfunction createAndAccumulateChangeEvent(\n  dispatchQueue,\n  inst,\n  nativeEvent,\n  target\n) {\n  restoreTarget\n    ? restoreQueue\n      ? restoreQueue.push(target)\n      : (restoreQueue = [target])\n    : (restoreTarget = target);\n  inst = accumulateTwoPhaseListeners(inst, \"onChange\");\n  0 < inst.length &&\n    ((nativeEvent = new SyntheticEvent(\n      \"onChange\",\n      \"change\",\n      null,\n      nativeEvent,\n      target\n    )),\n    dispatchQueue.push({ event: nativeEvent, listeners: inst }));\n}\nvar activeElement$1 = null,\n  activeElementInst$1 = null;\nfunction runEventInBatch(dispatchQueue) {\n  processDispatchQueue(dispatchQueue, 0);\n}\nfunction getInstIfValueChanged(targetInst) {\n  var targetNode = getNodeFromInstance(targetInst);\n  if (updateValueIfChanged(targetNode)) return targetInst;\n}\nfunction getTargetInstForChangeEvent(domEventName, targetInst) {\n  if (\"change\" === domEventName) return targetInst;\n}\nvar isInputEventSupported = !1;\nif (canUseDOM) {\n  var JSCompiler_inline_result$jscomp$283;\n  if (canUseDOM) {\n    var isSupported$jscomp$inline_418 = \"oninput\" in document;\n    if (!isSupported$jscomp$inline_418) {\n      var element$jscomp$inline_419 = document.createElement(\"div\");\n      element$jscomp$inline_419.setAttribute(\"oninput\", \"return;\");\n      isSupported$jscomp$inline_418 =\n        \"function\" === typeof element$jscomp$inline_419.oninput;\n    }\n    JSCompiler_inline_result$jscomp$283 = isSupported$jscomp$inline_418;\n  } else JSCompiler_inline_result$jscomp$283 = !1;\n  isInputEventSupported =\n    JSCompiler_inline_result$jscomp$283 &&\n    (!document.documentMode || 9 < document.documentMode);\n}\nfunction stopWatchingForValueChange() {\n  activeElement$1 &&\n    (activeElement$1.detachEvent(\"onpropertychange\", handlePropertyChange),\n    (activeElementInst$1 = activeElement$1 = null));\n}\nfunction handlePropertyChange(nativeEvent) {\n  if (\n    \"value\" === nativeEvent.propertyName &&\n    getInstIfValueChanged(activeElementInst$1)\n  ) {\n    var dispatchQueue = [];\n    createAndAccumulateChangeEvent(\n      dispatchQueue,\n      activeElementInst$1,\n      nativeEvent,\n      getEventTarget(nativeEvent)\n    );\n    batchedUpdates$1(runEventInBatch, dispatchQueue);\n  }\n}\nfunction handleEventsForInputEventPolyfill(domEventName, target, targetInst) {\n  \"focusin\" === domEventName\n    ? (stopWatchingForValueChange(),\n      (activeElement$1 = target),\n      (activeElementInst$1 = targetInst),\n      activeElement$1.attachEvent(\"onpropertychange\", handlePropertyChange))\n    : \"focusout\" === domEventName && stopWatchingForValueChange();\n}\nfunction getTargetInstForInputEventPolyfill(domEventName) {\n  if (\n    \"selectionchange\" === domEventName ||\n    \"keyup\" === domEventName ||\n    \"keydown\" === domEventName\n  )\n    return getInstIfValueChanged(activeElementInst$1);\n}\nfunction getTargetInstForClickEvent(domEventName, targetInst) {\n  if (\"click\" === domEventName) return getInstIfValueChanged(targetInst);\n}\nfunction getTargetInstForInputOrChangeEvent(domEventName, targetInst) {\n  if (\"input\" === domEventName || \"change\" === domEventName)\n    return getInstIfValueChanged(targetInst);\n}\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is;\nfunction shallowEqual(objA, objB) {\n  if (objectIs(objA, objB)) return !0;\n  if (\n    \"object\" !== typeof objA ||\n    null === objA ||\n    \"object\" !== typeof objB ||\n    null === objB\n  )\n    return !1;\n  var keysA = Object.keys(objA),\n    keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return !1;\n  for (keysB = 0; keysB < keysA.length; keysB++) {\n    var currentKey = keysA[keysB];\n    if (\n      !hasOwnProperty.call(objB, currentKey) ||\n      !objectIs(objA[currentKey], objB[currentKey])\n    )\n      return !1;\n  }\n  return !0;\n}\nfunction getLeafNode(node) {\n  for (; node && node.firstChild; ) node = node.firstChild;\n  return node;\n}\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  root = 0;\n  for (var nodeEnd; node; ) {\n    if (3 === node.nodeType) {\n      nodeEnd = root + node.textContent.length;\n      if (root <= offset && nodeEnd >= offset)\n        return { node: node, offset: offset - root };\n      root = nodeEnd;\n    }\n    a: {\n      for (; node; ) {\n        if (node.nextSibling) {\n          node = node.nextSibling;\n          break a;\n        }\n        node = node.parentNode;\n      }\n      node = void 0;\n    }\n    node = getLeafNode(node);\n  }\n}\nfunction containsNode(outerNode, innerNode) {\n  return outerNode && innerNode\n    ? outerNode === innerNode\n      ? !0\n      : outerNode && 3 === outerNode.nodeType\n        ? !1\n        : innerNode && 3 === innerNode.nodeType\n          ? containsNode(outerNode, innerNode.parentNode)\n          : \"contains\" in outerNode\n            ? outerNode.contains(innerNode)\n            : outerNode.compareDocumentPosition\n              ? !!(outerNode.compareDocumentPosition(innerNode) & 16)\n              : !1\n    : !1;\n}\nfunction getActiveElementDeep(containerInfo) {\n  containerInfo =\n    null != containerInfo &&\n    null != containerInfo.ownerDocument &&\n    null != containerInfo.ownerDocument.defaultView\n      ? containerInfo.ownerDocument.defaultView\n      : window;\n  for (\n    var element = getActiveElement(containerInfo.document);\n    element instanceof containerInfo.HTMLIFrameElement;\n\n  ) {\n    try {\n      var JSCompiler_inline_result =\n        \"string\" === typeof element.contentWindow.location.href;\n    } catch (err) {\n      JSCompiler_inline_result = !1;\n    }\n    if (JSCompiler_inline_result) containerInfo = element.contentWindow;\n    else break;\n    element = getActiveElement(containerInfo.document);\n  }\n  return element;\n}\nfunction hasSelectionCapabilities(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return (\n    nodeName &&\n    ((\"input\" === nodeName &&\n      (\"text\" === elem.type ||\n        \"search\" === elem.type ||\n        \"tel\" === elem.type ||\n        \"url\" === elem.type ||\n        \"password\" === elem.type)) ||\n      \"textarea\" === nodeName ||\n      \"true\" === elem.contentEditable)\n  );\n}\nfunction restoreSelection(priorSelectionInformation, containerInfo) {\n  var curFocusedElem = getActiveElementDeep(containerInfo);\n  containerInfo = priorSelectionInformation.focusedElem;\n  var priorSelectionRange = priorSelectionInformation.selectionRange;\n  if (\n    curFocusedElem !== containerInfo &&\n    containerInfo &&\n    containerInfo.ownerDocument &&\n    containsNode(containerInfo.ownerDocument.documentElement, containerInfo)\n  ) {\n    if (null !== priorSelectionRange && hasSelectionCapabilities(containerInfo))\n      if (\n        ((priorSelectionInformation = priorSelectionRange.start),\n        (curFocusedElem = priorSelectionRange.end),\n        void 0 === curFocusedElem &&\n          (curFocusedElem = priorSelectionInformation),\n        \"selectionStart\" in containerInfo)\n      )\n        (containerInfo.selectionStart = priorSelectionInformation),\n          (containerInfo.selectionEnd = Math.min(\n            curFocusedElem,\n            containerInfo.value.length\n          ));\n      else if (\n        ((curFocusedElem =\n          ((priorSelectionInformation =\n            containerInfo.ownerDocument || document) &&\n            priorSelectionInformation.defaultView) ||\n          window),\n        curFocusedElem.getSelection)\n      ) {\n        curFocusedElem = curFocusedElem.getSelection();\n        var length = containerInfo.textContent.length,\n          start = Math.min(priorSelectionRange.start, length);\n        priorSelectionRange =\n          void 0 === priorSelectionRange.end\n            ? start\n            : Math.min(priorSelectionRange.end, length);\n        !curFocusedElem.extend &&\n          start > priorSelectionRange &&\n          ((length = priorSelectionRange),\n          (priorSelectionRange = start),\n          (start = length));\n        length = getNodeForCharacterOffset(containerInfo, start);\n        var endMarker = getNodeForCharacterOffset(\n          containerInfo,\n          priorSelectionRange\n        );\n        length &&\n          endMarker &&\n          (1 !== curFocusedElem.rangeCount ||\n            curFocusedElem.anchorNode !== length.node ||\n            curFocusedElem.anchorOffset !== length.offset ||\n            curFocusedElem.focusNode !== endMarker.node ||\n            curFocusedElem.focusOffset !== endMarker.offset) &&\n          ((priorSelectionInformation =\n            priorSelectionInformation.createRange()),\n          priorSelectionInformation.setStart(length.node, length.offset),\n          curFocusedElem.removeAllRanges(),\n          start > priorSelectionRange\n            ? (curFocusedElem.addRange(priorSelectionInformation),\n              curFocusedElem.extend(endMarker.node, endMarker.offset))\n            : (priorSelectionInformation.setEnd(\n                endMarker.node,\n                endMarker.offset\n              ),\n              curFocusedElem.addRange(priorSelectionInformation)));\n      }\n    priorSelectionInformation = [];\n    for (\n      curFocusedElem = containerInfo;\n      (curFocusedElem = curFocusedElem.parentNode);\n\n    )\n      1 === curFocusedElem.nodeType &&\n        priorSelectionInformation.push({\n          element: curFocusedElem,\n          left: curFocusedElem.scrollLeft,\n          top: curFocusedElem.scrollTop\n        });\n    \"function\" === typeof containerInfo.focus && containerInfo.focus();\n    for (\n      containerInfo = 0;\n      containerInfo < priorSelectionInformation.length;\n      containerInfo++\n    )\n      (curFocusedElem = priorSelectionInformation[containerInfo]),\n        (curFocusedElem.element.scrollLeft = curFocusedElem.left),\n        (curFocusedElem.element.scrollTop = curFocusedElem.top);\n  }\n}\nvar skipSelectionChangeEvent =\n    canUseDOM && \"documentMode\" in document && 11 >= document.documentMode,\n  activeElement = null,\n  activeElementInst = null,\n  lastSelection = null,\n  mouseDown = !1;\nfunction constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {\n  var doc =\n    nativeEventTarget.window === nativeEventTarget\n      ? nativeEventTarget.document\n      : 9 === nativeEventTarget.nodeType\n        ? nativeEventTarget\n        : nativeEventTarget.ownerDocument;\n  mouseDown ||\n    null == activeElement ||\n    activeElement !== getActiveElement(doc) ||\n    ((doc = activeElement),\n    \"selectionStart\" in doc && hasSelectionCapabilities(doc)\n      ? (doc = { start: doc.selectionStart, end: doc.selectionEnd })\n      : ((doc = (\n          (doc.ownerDocument && doc.ownerDocument.defaultView) ||\n          window\n        ).getSelection()),\n        (doc = {\n          anchorNode: doc.anchorNode,\n          anchorOffset: doc.anchorOffset,\n          focusNode: doc.focusNode,\n          focusOffset: doc.focusOffset\n        })),\n    (lastSelection && shallowEqual(lastSelection, doc)) ||\n      ((lastSelection = doc),\n      (doc = accumulateTwoPhaseListeners(activeElementInst, \"onSelect\")),\n      0 < doc.length &&\n        ((nativeEvent = new SyntheticEvent(\n          \"onSelect\",\n          \"select\",\n          null,\n          nativeEvent,\n          nativeEventTarget\n        )),\n        dispatchQueue.push({ event: nativeEvent, listeners: doc }),\n        (nativeEvent.target = activeElement))));\n}\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes[\"Webkit\" + styleProp] = \"webkit\" + eventName;\n  prefixes[\"Moz\" + styleProp] = \"moz\" + eventName;\n  return prefixes;\n}\nvar vendorPrefixes = {\n    animationend: makePrefixMap(\"Animation\", \"AnimationEnd\"),\n    animationiteration: makePrefixMap(\"Animation\", \"AnimationIteration\"),\n    animationstart: makePrefixMap(\"Animation\", \"AnimationStart\"),\n    transitionrun: makePrefixMap(\"Transition\", \"TransitionRun\"),\n    transitionstart: makePrefixMap(\"Transition\", \"TransitionStart\"),\n    transitioncancel: makePrefixMap(\"Transition\", \"TransitionCancel\"),\n    transitionend: makePrefixMap(\"Transition\", \"TransitionEnd\")\n  },\n  prefixedEventNames = {},\n  style = {};\ncanUseDOM &&\n  ((style = document.createElement(\"div\").style),\n  \"AnimationEvent\" in window ||\n    (delete vendorPrefixes.animationend.animation,\n    delete vendorPrefixes.animationiteration.animation,\n    delete vendorPrefixes.animationstart.animation),\n  \"TransitionEvent\" in window ||\n    delete vendorPrefixes.transitionend.transition);\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];\n  if (!vendorPrefixes[eventName]) return eventName;\n  var prefixMap = vendorPrefixes[eventName],\n    styleProp;\n  for (styleProp in prefixMap)\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style)\n      return (prefixedEventNames[eventName] = prefixMap[styleProp]);\n  return eventName;\n}\nvar ANIMATION_END = getVendorPrefixedEventName(\"animationend\"),\n  ANIMATION_ITERATION = getVendorPrefixedEventName(\"animationiteration\"),\n  ANIMATION_START = getVendorPrefixedEventName(\"animationstart\"),\n  TRANSITION_RUN = getVendorPrefixedEventName(\"transitionrun\"),\n  TRANSITION_START = getVendorPrefixedEventName(\"transitionstart\"),\n  TRANSITION_CANCEL = getVendorPrefixedEventName(\"transitioncancel\"),\n  TRANSITION_END = getVendorPrefixedEventName(\"transitionend\"),\n  topLevelEventsToReactNames = new Map(),\n  simpleEventPluginEvents =\n    \"abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel\".split(\n      \" \"\n    );\nfunction registerSimpleEvent(domEventName, reactName) {\n  topLevelEventsToReactNames.set(domEventName, reactName);\n  registerTwoPhaseEvent(reactName, [domEventName]);\n}\nvar concurrentQueues = [],\n  concurrentQueuesIndex = 0,\n  concurrentlyUpdatedLanes = 0;\nfunction finishQueueingConcurrentUpdates() {\n  for (\n    var endIndex = concurrentQueuesIndex,\n      i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);\n    i < endIndex;\n\n  ) {\n    var fiber = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var queue = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var update = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    var lane = concurrentQueues[i];\n    concurrentQueues[i++] = null;\n    if (null !== queue && null !== update) {\n      var pending = queue.pending;\n      null === pending\n        ? (update.next = update)\n        : ((update.next = pending.next), (pending.next = update));\n      queue.pending = update;\n    }\n    0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);\n  }\n}\nfunction enqueueUpdate$1(fiber, queue, update, lane) {\n  concurrentQueues[concurrentQueuesIndex++] = fiber;\n  concurrentQueues[concurrentQueuesIndex++] = queue;\n  concurrentQueues[concurrentQueuesIndex++] = update;\n  concurrentQueues[concurrentQueuesIndex++] = lane;\n  concurrentlyUpdatedLanes |= lane;\n  fiber.lanes |= lane;\n  fiber = fiber.alternate;\n  null !== fiber && (fiber.lanes |= lane);\n}\nfunction enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n  enqueueUpdate$1(fiber, queue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction enqueueConcurrentRenderForLane(fiber, lane) {\n  enqueueUpdate$1(fiber, null, null, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {\n  sourceFiber.lanes |= lane;\n  var alternate = sourceFiber.alternate;\n  null !== alternate && (alternate.lanes |= lane);\n  for (var isHidden = !1, parent = sourceFiber.return; null !== parent; )\n    (parent.childLanes |= lane),\n      (alternate = parent.alternate),\n      null !== alternate && (alternate.childLanes |= lane),\n      22 === parent.tag &&\n        ((sourceFiber = parent.stateNode),\n        null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = !0)),\n      (sourceFiber = parent),\n      (parent = parent.return);\n  isHidden &&\n    null !== update &&\n    3 === sourceFiber.tag &&\n    ((parent = sourceFiber.stateNode),\n    (isHidden = 31 - clz32(lane)),\n    (parent = parent.hiddenUpdates),\n    (sourceFiber = parent[isHidden]),\n    null === sourceFiber\n      ? (parent[isHidden] = [update])\n      : sourceFiber.push(update),\n    (update.lane = lane | 536870912));\n}\nfunction getRootForUpdatedFiber(sourceFiber) {\n  if (50 < nestedUpdateCount)\n    throw (\n      ((nestedUpdateCount = 0),\n      (rootWithNestedUpdates = null),\n      Error(formatProdErrorMessage(185)))\n    );\n  for (var parent = sourceFiber.return; null !== parent; )\n    (sourceFiber = parent), (parent = sourceFiber.return);\n  return 3 === sourceFiber.tag ? sourceFiber.stateNode : null;\n}\nvar emptyContextObject = {},\n  CapturedStacks = new WeakMap();\nfunction createCapturedValueAtFiber(value, source) {\n  if (\"object\" === typeof value && null !== value) {\n    var existing = CapturedStacks.get(value);\n    if (void 0 !== existing) return existing;\n    source = {\n      value: value,\n      source: source,\n      stack: getStackByFiberInDevAndProd(source)\n    };\n    CapturedStacks.set(value, source);\n    return source;\n  }\n  return {\n    value: value,\n    source: source,\n    stack: getStackByFiberInDevAndProd(source)\n  };\n}\nvar forkStack = [],\n  forkStackIndex = 0,\n  treeForkProvider = null,\n  treeForkCount = 0,\n  idStack = [],\n  idStackIndex = 0,\n  treeContextProvider = null,\n  treeContextId = 1,\n  treeContextOverflow = \"\";\nfunction pushTreeFork(workInProgress, totalChildren) {\n  forkStack[forkStackIndex++] = treeForkCount;\n  forkStack[forkStackIndex++] = treeForkProvider;\n  treeForkProvider = workInProgress;\n  treeForkCount = totalChildren;\n}\nfunction pushTreeId(workInProgress, totalChildren, index) {\n  idStack[idStackIndex++] = treeContextId;\n  idStack[idStackIndex++] = treeContextOverflow;\n  idStack[idStackIndex++] = treeContextProvider;\n  treeContextProvider = workInProgress;\n  var baseIdWithLeadingBit = treeContextId;\n  workInProgress = treeContextOverflow;\n  var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;\n  baseIdWithLeadingBit &= ~(1 << baseLength);\n  index += 1;\n  var length = 32 - clz32(totalChildren) + baseLength;\n  if (30 < length) {\n    var numberOfOverflowBits = baseLength - (baseLength % 5);\n    length = (\n      baseIdWithLeadingBit &\n      ((1 << numberOfOverflowBits) - 1)\n    ).toString(32);\n    baseIdWithLeadingBit >>= numberOfOverflowBits;\n    baseLength -= numberOfOverflowBits;\n    treeContextId =\n      (1 << (32 - clz32(totalChildren) + baseLength)) |\n      (index << baseLength) |\n      baseIdWithLeadingBit;\n    treeContextOverflow = length + workInProgress;\n  } else\n    (treeContextId =\n      (1 << length) | (index << baseLength) | baseIdWithLeadingBit),\n      (treeContextOverflow = workInProgress);\n}\nfunction pushMaterializedTreeId(workInProgress) {\n  null !== workInProgress.return &&\n    (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));\n}\nfunction popTreeContext(workInProgress) {\n  for (; workInProgress === treeForkProvider; )\n    (treeForkProvider = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null),\n      (treeForkCount = forkStack[--forkStackIndex]),\n      (forkStack[forkStackIndex] = null);\n  for (; workInProgress === treeContextProvider; )\n    (treeContextProvider = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextOverflow = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null),\n      (treeContextId = idStack[--idStackIndex]),\n      (idStack[idStackIndex] = null);\n}\nvar hydrationParentFiber = null,\n  nextHydratableInstance = null,\n  isHydrating = !1,\n  hydrationErrors = null,\n  rootOrSingletonContext = !1,\n  HydrationMismatchException = Error(formatProdErrorMessage(519));\nfunction throwOnHydrationMismatch(fiber) {\n  var error = Error(formatProdErrorMessage(418, \"\"));\n  queueHydrationError(createCapturedValueAtFiber(error, fiber));\n  throw HydrationMismatchException;\n}\nfunction prepareToHydrateHostInstance(fiber) {\n  var instance = fiber.stateNode,\n    type = fiber.type,\n    props = fiber.memoizedProps;\n  instance[internalInstanceKey] = fiber;\n  instance[internalPropsKey] = props;\n  switch (type) {\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"cancel\", instance);\n      listenToNonDelegatedEvent(\"close\", instance);\n      break;\n    case \"iframe\":\n    case \"object\":\n    case \"embed\":\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (type = 0; type < mediaEventTypes.length; type++)\n        listenToNonDelegatedEvent(mediaEventTypes[type], instance);\n      break;\n    case \"source\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      break;\n    case \"img\":\n    case \"image\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", instance);\n      listenToNonDelegatedEvent(\"load\", instance);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", instance);\n      break;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      initInput(\n        instance,\n        props.value,\n        props.defaultValue,\n        props.checked,\n        props.defaultChecked,\n        props.type,\n        props.name,\n        !0\n      );\n      track(instance);\n      break;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", instance);\n      break;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", instance),\n        initTextarea(instance, props.value, props.defaultValue, props.children),\n        track(instance);\n  }\n  type = props.children;\n  (\"string\" !== typeof type &&\n    \"number\" !== typeof type &&\n    \"bigint\" !== typeof type) ||\n  instance.textContent === \"\" + type ||\n  !0 === props.suppressHydrationWarning ||\n  checkForUnmatchedText(instance.textContent, type)\n    ? (null != props.popover &&\n        (listenToNonDelegatedEvent(\"beforetoggle\", instance),\n        listenToNonDelegatedEvent(\"toggle\", instance)),\n      null != props.onScroll && listenToNonDelegatedEvent(\"scroll\", instance),\n      null != props.onScrollEnd &&\n        listenToNonDelegatedEvent(\"scrollend\", instance),\n      null != props.onClick && (instance.onclick = noop$1),\n      (instance = !0))\n    : (instance = !1);\n  instance || throwOnHydrationMismatch(fiber);\n}\nfunction popToNextHostParent(fiber) {\n  for (hydrationParentFiber = fiber.return; hydrationParentFiber; )\n    switch (hydrationParentFiber.tag) {\n      case 3:\n      case 27:\n        rootOrSingletonContext = !0;\n        return;\n      case 5:\n      case 13:\n        rootOrSingletonContext = !1;\n        return;\n      default:\n        hydrationParentFiber = hydrationParentFiber.return;\n    }\n}\nfunction popHydrationState(fiber) {\n  if (fiber !== hydrationParentFiber) return !1;\n  if (!isHydrating) return popToNextHostParent(fiber), (isHydrating = !0), !1;\n  var shouldClear = !1,\n    JSCompiler_temp;\n  if ((JSCompiler_temp = 3 !== fiber.tag && 27 !== fiber.tag)) {\n    if ((JSCompiler_temp = 5 === fiber.tag))\n      (JSCompiler_temp = fiber.type),\n        (JSCompiler_temp =\n          !(\"form\" !== JSCompiler_temp && \"button\" !== JSCompiler_temp) ||\n          shouldSetTextContent(fiber.type, fiber.memoizedProps));\n    JSCompiler_temp = !JSCompiler_temp;\n  }\n  JSCompiler_temp && (shouldClear = !0);\n  shouldClear && nextHydratableInstance && throwOnHydrationMismatch(fiber);\n  popToNextHostParent(fiber);\n  if (13 === fiber.tag) {\n    fiber = fiber.memoizedState;\n    fiber = null !== fiber ? fiber.dehydrated : null;\n    if (!fiber) throw Error(formatProdErrorMessage(317));\n    a: {\n      fiber = fiber.nextSibling;\n      for (shouldClear = 0; fiber; ) {\n        if (8 === fiber.nodeType)\n          if (((JSCompiler_temp = fiber.data), \"/$\" === JSCompiler_temp)) {\n            if (0 === shouldClear) {\n              nextHydratableInstance = getNextHydratable(fiber.nextSibling);\n              break a;\n            }\n            shouldClear--;\n          } else\n            (\"$\" !== JSCompiler_temp &&\n              \"$!\" !== JSCompiler_temp &&\n              \"$?\" !== JSCompiler_temp) ||\n              shouldClear++;\n        fiber = fiber.nextSibling;\n      }\n      nextHydratableInstance = null;\n    }\n  } else\n    nextHydratableInstance = hydrationParentFiber\n      ? getNextHydratable(fiber.stateNode.nextSibling)\n      : null;\n  return !0;\n}\nfunction resetHydrationState() {\n  nextHydratableInstance = hydrationParentFiber = null;\n  isHydrating = !1;\n}\nfunction queueHydrationError(error) {\n  null === hydrationErrors\n    ? (hydrationErrors = [error])\n    : hydrationErrors.push(error);\n}\nvar SuspenseException = Error(formatProdErrorMessage(460)),\n  SuspenseyCommitException = Error(formatProdErrorMessage(474)),\n  noopSuspenseyCommitThenable = { then: function () {} };\nfunction isThenableResolved(thenable) {\n  thenable = thenable.status;\n  return \"fulfilled\" === thenable || \"rejected\" === thenable;\n}\nfunction noop$3() {}\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop$3, noop$3), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      thenableState = thenable.reason;\n      if (thenableState === SuspenseException)\n        throw Error(formatProdErrorMessage(483));\n      throw thenableState;\n    default:\n      if (\"string\" === typeof thenable.status) thenable.then(noop$3, noop$3);\n      else {\n        thenableState = workInProgressRoot;\n        if (null !== thenableState && 100 < thenableState.shellSuspendCounter)\n          throw Error(formatProdErrorMessage(482));\n        thenableState = thenable;\n        thenableState.status = \"pending\";\n        thenableState.then(\n          function (fulfilledValue) {\n            if (\"pending\" === thenable.status) {\n              var fulfilledThenable = thenable;\n              fulfilledThenable.status = \"fulfilled\";\n              fulfilledThenable.value = fulfilledValue;\n            }\n          },\n          function (error) {\n            if (\"pending\" === thenable.status) {\n              var rejectedThenable = thenable;\n              rejectedThenable.status = \"rejected\";\n              rejectedThenable.reason = error;\n            }\n          }\n        );\n      }\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          thenableState = thenable.reason;\n          if (thenableState === SuspenseException)\n            throw Error(formatProdErrorMessage(483));\n          throw thenableState;\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable) throw Error(formatProdErrorMessage(459));\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nvar thenableState$1 = null,\n  thenableIndexCounter$1 = 0;\nfunction unwrapThenable(thenable) {\n  var index = thenableIndexCounter$1;\n  thenableIndexCounter$1 += 1;\n  null === thenableState$1 && (thenableState$1 = []);\n  return trackUsedThenable(thenableState$1, thenable, index);\n}\nfunction coerceRef(workInProgress, element) {\n  element = element.props.ref;\n  workInProgress.ref = void 0 !== element ? element : null;\n}\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE)\n    throw Error(formatProdErrorMessage(525));\n  returnFiber = Object.prototype.toString.call(newChild);\n  throw Error(\n    formatProdErrorMessage(\n      31,\n      \"[object Object]\" === returnFiber\n        ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\"\n        : returnFiber\n    )\n  );\n}\nfunction resolveLazy(lazyType) {\n  var init = lazyType._init;\n  return init(lazyType._payload);\n}\nfunction createChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (shouldTrackSideEffects) {\n      var deletions = returnFiber.deletions;\n      null === deletions\n        ? ((returnFiber.deletions = [childToDelete]), (returnFiber.flags |= 16))\n        : deletions.push(childToDelete);\n    }\n  }\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) return null;\n    for (; null !== currentFirstChild; )\n      deleteChild(returnFiber, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return null;\n  }\n  function mapRemainingChildren(currentFirstChild) {\n    for (var existingChildren = new Map(); null !== currentFirstChild; )\n      null !== currentFirstChild.key\n        ? existingChildren.set(currentFirstChild.key, currentFirstChild)\n        : existingChildren.set(currentFirstChild.index, currentFirstChild),\n        (currentFirstChild = currentFirstChild.sibling);\n    return existingChildren;\n  }\n  function useFiber(fiber, pendingProps) {\n    fiber = createWorkInProgress(fiber, pendingProps);\n    fiber.index = 0;\n    fiber.sibling = null;\n    return fiber;\n  }\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects)\n      return (newFiber.flags |= 1048576), lastPlacedIndex;\n    newIndex = newFiber.alternate;\n    if (null !== newIndex)\n      return (\n        (newIndex = newIndex.index),\n        newIndex < lastPlacedIndex\n          ? ((newFiber.flags |= 33554434), lastPlacedIndex)\n          : newIndex\n      );\n    newFiber.flags |= 33554434;\n    return lastPlacedIndex;\n  }\n  function placeSingleChild(newFiber) {\n    shouldTrackSideEffects &&\n      null === newFiber.alternate &&\n      (newFiber.flags |= 33554434);\n    return newFiber;\n  }\n  function updateTextNode(returnFiber, current, textContent, lanes) {\n    if (null === current || 6 !== current.tag)\n      return (\n        (current = createFiberFromText(textContent, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, textContent);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateElement(returnFiber, current, element, lanes) {\n    var elementType = element.type;\n    if (elementType === REACT_FRAGMENT_TYPE)\n      return updateFragment(\n        returnFiber,\n        current,\n        element.props.children,\n        lanes,\n        element.key\n      );\n    if (\n      null !== current &&\n      (current.elementType === elementType ||\n        (\"object\" === typeof elementType &&\n          null !== elementType &&\n          elementType.$$typeof === REACT_LAZY_TYPE &&\n          resolveLazy(elementType) === current.type))\n    )\n      return (\n        (current = useFiber(current, element.props)),\n        coerceRef(current, element),\n        (current.return = returnFiber),\n        current\n      );\n    current = createFiberFromTypeAndProps(\n      element.type,\n      element.key,\n      element.props,\n      null,\n      returnFiber.mode,\n      lanes\n    );\n    coerceRef(current, element);\n    current.return = returnFiber;\n    return current;\n  }\n  function updatePortal(returnFiber, current, portal, lanes) {\n    if (\n      null === current ||\n      4 !== current.tag ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    )\n      return (\n        (current = createFiberFromPortal(portal, returnFiber.mode, lanes)),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, portal.children || []);\n    current.return = returnFiber;\n    return current;\n  }\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\n    if (null === current || 7 !== current.tag)\n      return (\n        (current = createFiberFromFragment(\n          fragment,\n          returnFiber.mode,\n          lanes,\n          key\n        )),\n        (current.return = returnFiber),\n        current\n      );\n    current = useFiber(current, fragment);\n    current.return = returnFiber;\n    return current;\n  }\n  function createChild(returnFiber, newChild, lanes) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (newChild = createFiberFromText(\n          \"\" + newChild,\n          returnFiber.mode,\n          lanes\n        )),\n        (newChild.return = returnFiber),\n        newChild\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (lanes = createFiberFromTypeAndProps(\n              newChild.type,\n              newChild.key,\n              newChild.props,\n              null,\n              returnFiber.mode,\n              lanes\n            )),\n            coerceRef(lanes, newChild),\n            (lanes.return = returnFiber),\n            lanes\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (newChild = createFiberFromPortal(\n              newChild,\n              returnFiber.mode,\n              lanes\n            )),\n            (newChild.return = returnFiber),\n            newChild\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return createChild(returnFiber, newChild, lanes);\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (newChild = createFiberFromFragment(\n            newChild,\n            returnFiber.mode,\n            lanes,\n            null\n          )),\n          (newChild.return = returnFiber),\n          newChild\n        );\n      if (\"function\" === typeof newChild.then)\n        return createChild(returnFiber, unwrapThenable(newChild), lanes);\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return createChild(\n          returnFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n    var key = null !== oldFiber ? oldFiber.key : null;\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return null !== key\n        ? null\n        : updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return newChild.key === key\n            ? updateElement(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_PORTAL_TYPE:\n          return newChild.key === key\n            ? updatePortal(returnFiber, oldFiber, newChild, lanes)\n            : null;\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            updateSlot(returnFiber, oldFiber, newChild, lanes)\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return null !== key\n          ? null\n          : updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      if (\"function\" === typeof newChild.then)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateSlot(\n          returnFiber,\n          oldFiber,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function updateFromMap(\n    existingChildren,\n    returnFiber,\n    newIdx,\n    newChild,\n    lanes\n  ) {\n    if (\n      (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n    )\n      return (\n        (existingChildren = existingChildren.get(newIdx) || null),\n        updateTextNode(returnFiber, existingChildren, \"\" + newChild, lanes)\n      );\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updateElement(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_PORTAL_TYPE:\n          return (\n            (existingChildren =\n              existingChildren.get(\n                null === newChild.key ? newIdx : newChild.key\n              ) || null),\n            updatePortal(returnFiber, existingChildren, newChild, lanes)\n          );\n        case REACT_LAZY_TYPE:\n          var init = newChild._init;\n          newChild = init(newChild._payload);\n          return updateFromMap(\n            existingChildren,\n            returnFiber,\n            newIdx,\n            newChild,\n            lanes\n          );\n      }\n      if (isArrayImpl(newChild) || getIteratorFn(newChild))\n        return (\n          (existingChildren = existingChildren.get(newIdx) || null),\n          updateFragment(returnFiber, existingChildren, newChild, lanes, null)\n        );\n      if (\"function\" === typeof newChild.then)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return updateFromMap(\n          existingChildren,\n          returnFiber,\n          newIdx,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return null;\n  }\n  function reconcileChildrenArray(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null;\n      null !== oldFiber && newIdx < newChildren.length;\n      newIdx++\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes\n      );\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (newIdx === newChildren.length)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; newIdx < newChildren.length; newIdx++)\n        (oldFiber = createChild(returnFiber, newChildren[newIdx], lanes)),\n          null !== oldFiber &&\n            ((currentFirstChild = placeChild(\n              oldFiber,\n              currentFirstChild,\n              newIdx\n            )),\n            null === previousNewFiber\n              ? (resultingFirstChild = oldFiber)\n              : (previousNewFiber.sibling = oldFiber),\n            (previousNewFiber = oldFiber));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      newIdx < newChildren.length;\n      newIdx++\n    )\n      (nextOldFiber = updateFromMap(\n        oldFiber,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes\n      )),\n        null !== nextOldFiber &&\n          (shouldTrackSideEffects &&\n            null !== nextOldFiber.alternate &&\n            oldFiber.delete(\n              null === nextOldFiber.key ? newIdx : nextOldFiber.key\n            ),\n          (currentFirstChild = placeChild(\n            nextOldFiber,\n            currentFirstChild,\n            newIdx\n          )),\n          null === previousNewFiber\n            ? (resultingFirstChild = nextOldFiber)\n            : (previousNewFiber.sibling = nextOldFiber),\n          (previousNewFiber = nextOldFiber));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildrenIterator(\n    returnFiber,\n    currentFirstChild,\n    newChildren,\n    lanes\n  ) {\n    if (null == newChildren) throw Error(formatProdErrorMessage(151));\n    for (\n      var resultingFirstChild = null,\n        previousNewFiber = null,\n        oldFiber = currentFirstChild,\n        newIdx = (currentFirstChild = 0),\n        nextOldFiber = null,\n        step = newChildren.next();\n      null !== oldFiber && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      oldFiber.index > newIdx\n        ? ((nextOldFiber = oldFiber), (oldFiber = null))\n        : (nextOldFiber = oldFiber.sibling);\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n      if (null === newFiber) {\n        null === oldFiber && (oldFiber = nextOldFiber);\n        break;\n      }\n      shouldTrackSideEffects &&\n        oldFiber &&\n        null === newFiber.alternate &&\n        deleteChild(returnFiber, oldFiber);\n      currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);\n      null === previousNewFiber\n        ? (resultingFirstChild = newFiber)\n        : (previousNewFiber.sibling = newFiber);\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n    if (step.done)\n      return (\n        deleteRemainingChildren(returnFiber, oldFiber),\n        isHydrating && pushTreeFork(returnFiber, newIdx),\n        resultingFirstChild\n      );\n    if (null === oldFiber) {\n      for (; !step.done; newIdx++, step = newChildren.next())\n        (step = createChild(returnFiber, step.value, lanes)),\n          null !== step &&\n            ((currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n            null === previousNewFiber\n              ? (resultingFirstChild = step)\n              : (previousNewFiber.sibling = step),\n            (previousNewFiber = step));\n      isHydrating && pushTreeFork(returnFiber, newIdx);\n      return resultingFirstChild;\n    }\n    for (\n      oldFiber = mapRemainingChildren(oldFiber);\n      !step.done;\n      newIdx++, step = newChildren.next()\n    )\n      (step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes)),\n        null !== step &&\n          (shouldTrackSideEffects &&\n            null !== step.alternate &&\n            oldFiber.delete(null === step.key ? newIdx : step.key),\n          (currentFirstChild = placeChild(step, currentFirstChild, newIdx)),\n          null === previousNewFiber\n            ? (resultingFirstChild = step)\n            : (previousNewFiber.sibling = step),\n          (previousNewFiber = step));\n    shouldTrackSideEffects &&\n      oldFiber.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    isHydrating && pushTreeFork(returnFiber, newIdx);\n    return resultingFirstChild;\n  }\n  function reconcileChildFibersImpl(\n    returnFiber,\n    currentFirstChild,\n    newChild,\n    lanes\n  ) {\n    \"object\" === typeof newChild &&\n      null !== newChild &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      null === newChild.key &&\n      (newChild = newChild.props.children);\n    if (\"object\" === typeof newChild && null !== newChild) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          a: {\n            for (var key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key) {\n                key = newChild.type;\n                if (key === REACT_FRAGMENT_TYPE) {\n                  if (7 === currentFirstChild.tag) {\n                    deleteRemainingChildren(\n                      returnFiber,\n                      currentFirstChild.sibling\n                    );\n                    lanes = useFiber(\n                      currentFirstChild,\n                      newChild.props.children\n                    );\n                    lanes.return = returnFiber;\n                    returnFiber = lanes;\n                    break a;\n                  }\n                } else if (\n                  currentFirstChild.elementType === key ||\n                  (\"object\" === typeof key &&\n                    null !== key &&\n                    key.$$typeof === REACT_LAZY_TYPE &&\n                    resolveLazy(key) === currentFirstChild.type)\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.props);\n                  coerceRef(lanes, newChild);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                }\n                deleteRemainingChildren(returnFiber, currentFirstChild);\n                break;\n              } else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            newChild.type === REACT_FRAGMENT_TYPE\n              ? ((lanes = createFiberFromFragment(\n                  newChild.props.children,\n                  returnFiber.mode,\n                  lanes,\n                  newChild.key\n                )),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes))\n              : ((lanes = createFiberFromTypeAndProps(\n                  newChild.type,\n                  newChild.key,\n                  newChild.props,\n                  null,\n                  returnFiber.mode,\n                  lanes\n                )),\n                coerceRef(lanes, newChild),\n                (lanes.return = returnFiber),\n                (returnFiber = lanes));\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_PORTAL_TYPE:\n          a: {\n            for (key = newChild.key; null !== currentFirstChild; ) {\n              if (currentFirstChild.key === key)\n                if (\n                  4 === currentFirstChild.tag &&\n                  currentFirstChild.stateNode.containerInfo ===\n                    newChild.containerInfo &&\n                  currentFirstChild.stateNode.implementation ===\n                    newChild.implementation\n                ) {\n                  deleteRemainingChildren(\n                    returnFiber,\n                    currentFirstChild.sibling\n                  );\n                  lanes = useFiber(currentFirstChild, newChild.children || []);\n                  lanes.return = returnFiber;\n                  returnFiber = lanes;\n                  break a;\n                } else {\n                  deleteRemainingChildren(returnFiber, currentFirstChild);\n                  break;\n                }\n              else deleteChild(returnFiber, currentFirstChild);\n              currentFirstChild = currentFirstChild.sibling;\n            }\n            lanes = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n            lanes.return = returnFiber;\n            returnFiber = lanes;\n          }\n          return placeSingleChild(returnFiber);\n        case REACT_LAZY_TYPE:\n          return (\n            (key = newChild._init),\n            (newChild = key(newChild._payload)),\n            reconcileChildFibersImpl(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes\n            )\n          );\n      }\n      if (isArrayImpl(newChild))\n        return reconcileChildrenArray(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      if (getIteratorFn(newChild)) {\n        key = getIteratorFn(newChild);\n        if (\"function\" !== typeof key) throw Error(formatProdErrorMessage(150));\n        newChild = key.call(newChild);\n        return reconcileChildrenIterator(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes\n        );\n      }\n      if (\"function\" === typeof newChild.then)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          unwrapThenable(newChild),\n          lanes\n        );\n      if (newChild.$$typeof === REACT_CONTEXT_TYPE)\n        return reconcileChildFibersImpl(\n          returnFiber,\n          currentFirstChild,\n          readContextDuringReconciliation(returnFiber, newChild),\n          lanes\n        );\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n    return (\"string\" === typeof newChild && \"\" !== newChild) ||\n      \"number\" === typeof newChild ||\n      \"bigint\" === typeof newChild\n      ? ((newChild = \"\" + newChild),\n        null !== currentFirstChild && 6 === currentFirstChild.tag\n          ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling),\n            (lanes = useFiber(currentFirstChild, newChild)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes))\n          : (deleteRemainingChildren(returnFiber, currentFirstChild),\n            (lanes = createFiberFromText(newChild, returnFiber.mode, lanes)),\n            (lanes.return = returnFiber),\n            (returnFiber = lanes)),\n        placeSingleChild(returnFiber))\n      : deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n  return function (returnFiber, currentFirstChild, newChild, lanes) {\n    try {\n      thenableIndexCounter$1 = 0;\n      var firstChildFiber = reconcileChildFibersImpl(\n        returnFiber,\n        currentFirstChild,\n        newChild,\n        lanes\n      );\n      thenableState$1 = null;\n      return firstChildFiber;\n    } catch (x) {\n      if (x === SuspenseException) throw x;\n      var fiber = createFiberImplClass(29, x, null, returnFiber.mode);\n      fiber.lanes = lanes;\n      fiber.return = returnFiber;\n      return fiber;\n    } finally {\n    }\n  };\n}\nvar reconcileChildFibers = createChildReconciler(!0),\n  mountChildFibers = createChildReconciler(!1),\n  currentTreeHiddenStackCursor = createCursor(null),\n  prevEntangledRenderLanesCursor = createCursor(0);\nfunction pushHiddenContext(fiber, context) {\n  fiber = entangledRenderLanes;\n  push(prevEntangledRenderLanesCursor, fiber);\n  push(currentTreeHiddenStackCursor, context);\n  entangledRenderLanes = fiber | context.baseLanes;\n}\nfunction reuseHiddenContextOnStack() {\n  push(prevEntangledRenderLanesCursor, entangledRenderLanes);\n  push(currentTreeHiddenStackCursor, currentTreeHiddenStackCursor.current);\n}\nfunction popHiddenContext() {\n  entangledRenderLanes = prevEntangledRenderLanesCursor.current;\n  pop(currentTreeHiddenStackCursor);\n  pop(prevEntangledRenderLanesCursor);\n}\nvar suspenseHandlerStackCursor = createCursor(null),\n  shellBoundary = null;\nfunction pushPrimaryTreeSuspenseHandler(handler) {\n  var current = handler.alternate;\n  push(suspenseStackCursor, suspenseStackCursor.current & 1);\n  push(suspenseHandlerStackCursor, handler);\n  null === shellBoundary &&\n    (null === current || null !== currentTreeHiddenStackCursor.current\n      ? (shellBoundary = handler)\n      : null !== current.memoizedState && (shellBoundary = handler));\n}\nfunction pushOffscreenSuspenseHandler(fiber) {\n  if (22 === fiber.tag) {\n    if (\n      (push(suspenseStackCursor, suspenseStackCursor.current),\n      push(suspenseHandlerStackCursor, fiber),\n      null === shellBoundary)\n    ) {\n      var current = fiber.alternate;\n      null !== current &&\n        null !== current.memoizedState &&\n        (shellBoundary = fiber);\n    }\n  } else reuseSuspenseHandlerOnStack(fiber);\n}\nfunction reuseSuspenseHandlerOnStack() {\n  push(suspenseStackCursor, suspenseStackCursor.current);\n  push(suspenseHandlerStackCursor, suspenseHandlerStackCursor.current);\n}\nfunction popSuspenseHandler(fiber) {\n  pop(suspenseHandlerStackCursor);\n  shellBoundary === fiber && (shellBoundary = null);\n  pop(suspenseStackCursor);\n}\nvar suspenseStackCursor = createCursor(0);\nfunction findFirstSuspended(row) {\n  for (var node = row; null !== node; ) {\n    if (13 === node.tag) {\n      var state = node.memoizedState;\n      if (\n        null !== state &&\n        ((state = state.dehydrated),\n        null === state || \"$?\" === state.data || \"$!\" === state.data)\n      )\n        return node;\n    } else if (19 === node.tag && void 0 !== node.memoizedProps.revealOrder) {\n      if (0 !== (node.flags & 128)) return node;\n    } else if (null !== node.child) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) break;\n    for (; null === node.sibling; ) {\n      if (null === node.return || node.return === row) return null;\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\nvar AbortControllerLocal =\n    \"undefined\" !== typeof AbortController\n      ? AbortController\n      : function () {\n          var listeners = [],\n            signal = (this.signal = {\n              aborted: !1,\n              addEventListener: function (type, listener) {\n                listeners.push(listener);\n              }\n            });\n          this.abort = function () {\n            signal.aborted = !0;\n            listeners.forEach(function (listener) {\n              return listener();\n            });\n          };\n        },\n  scheduleCallback$2 = Scheduler.unstable_scheduleCallback,\n  NormalPriority = Scheduler.unstable_NormalPriority,\n  CacheContext = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    Consumer: null,\n    Provider: null,\n    _currentValue: null,\n    _currentValue2: null,\n    _threadCount: 0\n  };\nfunction createCache() {\n  return {\n    controller: new AbortControllerLocal(),\n    data: new Map(),\n    refCount: 0\n  };\n}\nfunction releaseCache(cache) {\n  cache.refCount--;\n  0 === cache.refCount &&\n    scheduleCallback$2(NormalPriority, function () {\n      cache.controller.abort();\n    });\n}\nvar currentEntangledListeners = null,\n  currentEntangledPendingCount = 0,\n  currentEntangledLane = 0,\n  currentEntangledActionThenable = null;\nfunction entangleAsyncAction(transition, thenable) {\n  if (null === currentEntangledListeners) {\n    var entangledListeners = (currentEntangledListeners = []);\n    currentEntangledPendingCount = 0;\n    currentEntangledLane = requestTransitionLane();\n    currentEntangledActionThenable = {\n      status: \"pending\",\n      value: void 0,\n      then: function (resolve) {\n        entangledListeners.push(resolve);\n      }\n    };\n  }\n  currentEntangledPendingCount++;\n  thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);\n  return thenable;\n}\nfunction pingEngtangledActionScope() {\n  if (\n    0 === --currentEntangledPendingCount &&\n    null !== currentEntangledListeners\n  ) {\n    null !== currentEntangledActionThenable &&\n      (currentEntangledActionThenable.status = \"fulfilled\");\n    var listeners = currentEntangledListeners;\n    currentEntangledListeners = null;\n    currentEntangledLane = 0;\n    currentEntangledActionThenable = null;\n    for (var i = 0; i < listeners.length; i++) (0, listeners[i])();\n  }\n}\nfunction chainThenableValue(thenable, result) {\n  var listeners = [],\n    thenableWithOverride = {\n      status: \"pending\",\n      value: null,\n      reason: null,\n      then: function (resolve) {\n        listeners.push(resolve);\n      }\n    };\n  thenable.then(\n    function () {\n      thenableWithOverride.status = \"fulfilled\";\n      thenableWithOverride.value = result;\n      for (var i = 0; i < listeners.length; i++) (0, listeners[i])(result);\n    },\n    function (error) {\n      thenableWithOverride.status = \"rejected\";\n      thenableWithOverride.reason = error;\n      for (error = 0; error < listeners.length; error++)\n        (0, listeners[error])(void 0);\n    }\n  );\n  return thenableWithOverride;\n}\nvar prevOnStartTransitionFinish = ReactSharedInternals.S;\nReactSharedInternals.S = function (transition, returnValue) {\n  \"object\" === typeof returnValue &&\n    null !== returnValue &&\n    \"function\" === typeof returnValue.then &&\n    entangleAsyncAction(transition, returnValue);\n  null !== prevOnStartTransitionFinish &&\n    prevOnStartTransitionFinish(transition, returnValue);\n};\nvar resumedCache = createCursor(null);\nfunction peekCacheFromPool() {\n  var cacheResumedFromPreviousRender = resumedCache.current;\n  return null !== cacheResumedFromPreviousRender\n    ? cacheResumedFromPreviousRender\n    : workInProgressRoot.pooledCache;\n}\nfunction pushTransition(offscreenWorkInProgress, prevCachePool) {\n  null === prevCachePool\n    ? push(resumedCache, resumedCache.current)\n    : push(resumedCache, prevCachePool.pool);\n}\nfunction getSuspendedCache() {\n  var cacheFromPool = peekCacheFromPool();\n  return null === cacheFromPool\n    ? null\n    : { parent: CacheContext._currentValue, pool: cacheFromPool };\n}\nvar renderLanes = 0,\n  currentlyRenderingFiber$1 = null,\n  currentHook = null,\n  workInProgressHook = null,\n  didScheduleRenderPhaseUpdate = !1,\n  didScheduleRenderPhaseUpdateDuringThisPass = !1,\n  shouldDoubleInvokeUserFnsInHooksDEV = !1,\n  localIdCounter = 0,\n  thenableIndexCounter = 0,\n  thenableState = null,\n  globalClientIdCounter = 0;\nfunction throwInvalidHookError() {\n  throw Error(formatProdErrorMessage(321));\n}\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  if (null === prevDeps) return !1;\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++)\n    if (!objectIs(nextDeps[i], prevDeps[i])) return !1;\n  return !0;\n}\nfunction renderWithHooks(\n  current,\n  workInProgress,\n  Component,\n  props,\n  secondArg,\n  nextRenderLanes\n) {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber$1 = workInProgress;\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = 0;\n  ReactSharedInternals.H =\n    null === current || null === current.memoizedState\n      ? HooksDispatcherOnMount\n      : HooksDispatcherOnUpdate;\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  nextRenderLanes = Component(props, secondArg);\n  shouldDoubleInvokeUserFnsInHooksDEV = !1;\n  didScheduleRenderPhaseUpdateDuringThisPass &&\n    (nextRenderLanes = renderWithHooksAgain(\n      workInProgress,\n      Component,\n      props,\n      secondArg\n    ));\n  finishRenderingHooks(current);\n  return nextRenderLanes;\n}\nfunction finishRenderingHooks(current) {\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  var didRenderTooFewHooks = null !== currentHook && null !== currentHook.next;\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber$1 = null;\n  didScheduleRenderPhaseUpdate = !1;\n  thenableIndexCounter = 0;\n  thenableState = null;\n  if (didRenderTooFewHooks) throw Error(formatProdErrorMessage(300));\n  null === current ||\n    didReceiveUpdate ||\n    ((current = current.dependencies),\n    null !== current &&\n      checkIfContextChanged(current) &&\n      (didReceiveUpdate = !0));\n}\nfunction renderWithHooksAgain(workInProgress, Component, props, secondArg) {\n  currentlyRenderingFiber$1 = workInProgress;\n  var numberOfReRenders = 0;\n  do {\n    didScheduleRenderPhaseUpdateDuringThisPass && (thenableState = null);\n    thenableIndexCounter = 0;\n    didScheduleRenderPhaseUpdateDuringThisPass = !1;\n    if (25 <= numberOfReRenders) throw Error(formatProdErrorMessage(301));\n    numberOfReRenders += 1;\n    workInProgressHook = currentHook = null;\n    if (null != workInProgress.updateQueue) {\n      var children = workInProgress.updateQueue;\n      children.lastEffect = null;\n      children.events = null;\n      children.stores = null;\n      null != children.memoCache && (children.memoCache.index = 0);\n    }\n    ReactSharedInternals.H = HooksDispatcherOnRerender;\n    children = Component(props, secondArg);\n  } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  return children;\n}\nfunction TransitionAwareHostComponent() {\n  var dispatcher = ReactSharedInternals.H,\n    maybeThenable = dispatcher.useState()[0];\n  maybeThenable =\n    \"function\" === typeof maybeThenable.then\n      ? useThenable(maybeThenable)\n      : maybeThenable;\n  dispatcher = dispatcher.useState()[0];\n  (null !== currentHook ? currentHook.memoizedState : null) !== dispatcher &&\n    (currentlyRenderingFiber$1.flags |= 1024);\n  return maybeThenable;\n}\nfunction checkDidRenderIdHook() {\n  var didRenderIdHook = 0 !== localIdCounter;\n  localIdCounter = 0;\n  return didRenderIdHook;\n}\nfunction bailoutHooks(current, workInProgress, lanes) {\n  workInProgress.updateQueue = current.updateQueue;\n  workInProgress.flags &= -2053;\n  current.lanes &= ~lanes;\n}\nfunction resetHooksOnUnwind(workInProgress) {\n  if (didScheduleRenderPhaseUpdate) {\n    for (\n      workInProgress = workInProgress.memoizedState;\n      null !== workInProgress;\n\n    ) {\n      var queue = workInProgress.queue;\n      null !== queue && (queue.pending = null);\n      workInProgress = workInProgress.next;\n    }\n    didScheduleRenderPhaseUpdate = !1;\n  }\n  renderLanes = 0;\n  workInProgressHook = currentHook = currentlyRenderingFiber$1 = null;\n  didScheduleRenderPhaseUpdateDuringThisPass = !1;\n  thenableIndexCounter = localIdCounter = 0;\n  thenableState = null;\n}\nfunction mountWorkInProgressHook() {\n  var hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n  null === workInProgressHook\n    ? (currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook)\n    : (workInProgressHook = workInProgressHook.next = hook);\n  return workInProgressHook;\n}\nfunction updateWorkInProgressHook() {\n  if (null === currentHook) {\n    var nextCurrentHook = currentlyRenderingFiber$1.alternate;\n    nextCurrentHook =\n      null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;\n  } else nextCurrentHook = currentHook.next;\n  var nextWorkInProgressHook =\n    null === workInProgressHook\n      ? currentlyRenderingFiber$1.memoizedState\n      : workInProgressHook.next;\n  if (null !== nextWorkInProgressHook)\n    (workInProgressHook = nextWorkInProgressHook),\n      (currentHook = nextCurrentHook);\n  else {\n    if (null === nextCurrentHook) {\n      if (null === currentlyRenderingFiber$1.alternate)\n        throw Error(formatProdErrorMessage(467));\n      throw Error(formatProdErrorMessage(310));\n    }\n    currentHook = nextCurrentHook;\n    nextCurrentHook = {\n      memoizedState: currentHook.memoizedState,\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n      next: null\n    };\n    null === workInProgressHook\n      ? (currentlyRenderingFiber$1.memoizedState = workInProgressHook =\n          nextCurrentHook)\n      : (workInProgressHook = workInProgressHook.next = nextCurrentHook);\n  }\n  return workInProgressHook;\n}\nvar createFunctionComponentUpdateQueue;\ncreateFunctionComponentUpdateQueue = function () {\n  return { lastEffect: null, events: null, stores: null, memoCache: null };\n};\nfunction useThenable(thenable) {\n  var index = thenableIndexCounter;\n  thenableIndexCounter += 1;\n  null === thenableState && (thenableState = []);\n  thenable = trackUsedThenable(thenableState, thenable, index);\n  index = currentlyRenderingFiber$1;\n  null ===\n    (null === workInProgressHook\n      ? index.memoizedState\n      : workInProgressHook.next) &&\n    ((index = index.alternate),\n    (ReactSharedInternals.H =\n      null === index || null === index.memoizedState\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate));\n  return thenable;\n}\nfunction use(usable) {\n  if (null !== usable && \"object\" === typeof usable) {\n    if (\"function\" === typeof usable.then) return useThenable(usable);\n    if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);\n  }\n  throw Error(formatProdErrorMessage(438, String(usable)));\n}\nfunction useMemoCache(size) {\n  var memoCache = null,\n    updateQueue = currentlyRenderingFiber$1.updateQueue;\n  null !== updateQueue && (memoCache = updateQueue.memoCache);\n  if (null == memoCache) {\n    var current = currentlyRenderingFiber$1.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      null !== current &&\n        ((current = current.memoCache),\n        null != current &&\n          (memoCache = {\n            data: current.data.map(function (array) {\n              return array.slice();\n            }),\n            index: 0\n          })));\n  }\n  null == memoCache && (memoCache = { data: [], index: 0 });\n  null === updateQueue &&\n    ((updateQueue = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber$1.updateQueue = updateQueue));\n  updateQueue.memoCache = memoCache;\n  updateQueue = memoCache.data[memoCache.index];\n  if (void 0 === updateQueue)\n    for (\n      updateQueue = memoCache.data[memoCache.index] = Array(size), current = 0;\n      current < size;\n      current++\n    )\n      updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;\n  memoCache.index++;\n  return updateQueue;\n}\nfunction basicStateReducer(state, action) {\n  return \"function\" === typeof action ? action(state) : action;\n}\nfunction updateReducer(reducer) {\n  var hook = updateWorkInProgressHook();\n  return updateReducerImpl(hook, currentHook, reducer);\n}\nfunction updateReducerImpl(hook, current, reducer) {\n  var queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var baseQueue = hook.baseQueue,\n    pendingQueue = queue.pending;\n  if (null !== pendingQueue) {\n    if (null !== baseQueue) {\n      var baseFirst = baseQueue.next;\n      baseQueue.next = pendingQueue.next;\n      pendingQueue.next = baseFirst;\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n  pendingQueue = hook.baseState;\n  if (null === baseQueue) hook.memoizedState = pendingQueue;\n  else {\n    current = baseQueue.next;\n    var newBaseQueueFirst = (baseFirst = null),\n      newBaseQueueLast = null,\n      update = current,\n      didReadFromEntangledAsyncAction$54 = !1;\n    do {\n      var updateLane = update.lane & -536870913;\n      if (\n        updateLane !== update.lane\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        var revertLane = update.revertLane;\n        if (0 === revertLane)\n          null !== newBaseQueueLast &&\n            (newBaseQueueLast = newBaseQueueLast.next =\n              {\n                lane: 0,\n                revertLane: 0,\n                action: update.action,\n                hasEagerState: update.hasEagerState,\n                eagerState: update.eagerState,\n                next: null\n              }),\n            updateLane === currentEntangledLane &&\n              (didReadFromEntangledAsyncAction$54 = !0);\n        else if ((renderLanes & revertLane) === revertLane) {\n          update = update.next;\n          revertLane === currentEntangledLane &&\n            (didReadFromEntangledAsyncAction$54 = !0);\n          continue;\n        } else\n          (updateLane = {\n            lane: 0,\n            revertLane: update.revertLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: null\n          }),\n            null === newBaseQueueLast\n              ? ((newBaseQueueFirst = newBaseQueueLast = updateLane),\n                (baseFirst = pendingQueue))\n              : (newBaseQueueLast = newBaseQueueLast.next = updateLane),\n            (currentlyRenderingFiber$1.lanes |= revertLane),\n            (workInProgressRootSkippedLanes |= revertLane);\n        updateLane = update.action;\n        shouldDoubleInvokeUserFnsInHooksDEV &&\n          reducer(pendingQueue, updateLane);\n        pendingQueue = update.hasEagerState\n          ? update.eagerState\n          : reducer(pendingQueue, updateLane);\n      } else\n        (revertLane = {\n          lane: updateLane,\n          revertLane: update.revertLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: null\n        }),\n          null === newBaseQueueLast\n            ? ((newBaseQueueFirst = newBaseQueueLast = revertLane),\n              (baseFirst = pendingQueue))\n            : (newBaseQueueLast = newBaseQueueLast.next = revertLane),\n          (currentlyRenderingFiber$1.lanes |= updateLane),\n          (workInProgressRootSkippedLanes |= updateLane);\n      update = update.next;\n    } while (null !== update && update !== current);\n    null === newBaseQueueLast\n      ? (baseFirst = pendingQueue)\n      : (newBaseQueueLast.next = newBaseQueueFirst);\n    if (\n      !objectIs(pendingQueue, hook.memoizedState) &&\n      ((didReceiveUpdate = !0),\n      didReadFromEntangledAsyncAction$54 &&\n        ((reducer = currentEntangledActionThenable), null !== reducer))\n    )\n      throw reducer;\n    hook.memoizedState = pendingQueue;\n    hook.baseState = baseFirst;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = pendingQueue;\n  }\n  null === baseQueue && (queue.lanes = 0);\n  return [hook.memoizedState, queue.dispatch];\n}\nfunction rerenderReducer(reducer) {\n  var hook = updateWorkInProgressHook(),\n    queue = hook.queue;\n  if (null === queue) throw Error(formatProdErrorMessage(311));\n  queue.lastRenderedReducer = reducer;\n  var dispatch = queue.dispatch,\n    lastRenderPhaseUpdate = queue.pending,\n    newState = hook.memoizedState;\n  if (null !== lastRenderPhaseUpdate) {\n    queue.pending = null;\n    var update = (lastRenderPhaseUpdate = lastRenderPhaseUpdate.next);\n    do (newState = reducer(newState, update.action)), (update = update.next);\n    while (update !== lastRenderPhaseUpdate);\n    objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);\n    hook.memoizedState = newState;\n    null === hook.baseQueue && (hook.baseState = newState);\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber$1,\n    hook = updateWorkInProgressHook(),\n    isHydrating$jscomp$0 = isHydrating;\n  if (isHydrating$jscomp$0) {\n    if (void 0 === getServerSnapshot) throw Error(formatProdErrorMessage(407));\n    getServerSnapshot = getServerSnapshot();\n  } else getServerSnapshot = getSnapshot();\n  var snapshotChanged = !objectIs(\n    (currentHook || hook).memoizedState,\n    getServerSnapshot\n  );\n  snapshotChanged &&\n    ((hook.memoizedState = getServerSnapshot), (didReceiveUpdate = !0));\n  hook = hook.queue;\n  updateEffect(subscribeToStore.bind(null, fiber, hook, subscribe), [\n    subscribe\n  ]);\n  if (\n    hook.getSnapshot !== getSnapshot ||\n    snapshotChanged ||\n    (null !== workInProgressHook && workInProgressHook.memoizedState.tag & 1)\n  ) {\n    fiber.flags |= 2048;\n    pushEffect(\n      9,\n      updateStoreInstance.bind(\n        null,\n        fiber,\n        hook,\n        getServerSnapshot,\n        getSnapshot\n      ),\n      { destroy: void 0 },\n      null\n    );\n    if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));\n    isHydrating$jscomp$0 ||\n      0 !== (renderLanes & 60) ||\n      pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n  }\n  return getServerSnapshot;\n}\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n  fiber.flags |= 16384;\n  fiber = { getSnapshot: getSnapshot, value: renderedSnapshot };\n  getSnapshot = currentlyRenderingFiber$1.updateQueue;\n  null === getSnapshot\n    ? ((getSnapshot = createFunctionComponentUpdateQueue()),\n      (currentlyRenderingFiber$1.updateQueue = getSnapshot),\n      (getSnapshot.stores = [fiber]))\n    : ((renderedSnapshot = getSnapshot.stores),\n      null === renderedSnapshot\n        ? (getSnapshot.stores = [fiber])\n        : renderedSnapshot.push(fiber));\n}\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot;\n  checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n}\nfunction subscribeToStore(fiber, inst, subscribe) {\n  return subscribe(function () {\n    checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);\n  });\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction forceStoreRerender(fiber) {\n  var root = enqueueConcurrentRenderForLane(fiber, 2);\n  null !== root && scheduleUpdateOnFiber(root, fiber, 2);\n}\nfunction mountStateImpl(initialState) {\n  var hook = mountWorkInProgressHook();\n  if (\"function\" === typeof initialState) {\n    var initialStateInitializer = initialState;\n    initialState = initialStateInitializer();\n    if (shouldDoubleInvokeUserFnsInHooksDEV) {\n      setIsStrictModeForDevtools(!0);\n      try {\n        initialStateInitializer();\n      } finally {\n        setIsStrictModeForDevtools(!1);\n      }\n    }\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  hook.queue = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  return hook;\n}\nfunction updateOptimisticImpl(hook, current, passthrough, reducer) {\n  hook.baseState = passthrough;\n  return updateReducerImpl(\n    hook,\n    currentHook,\n    \"function\" === typeof reducer ? reducer : basicStateReducer\n  );\n}\nfunction dispatchActionState(\n  fiber,\n  actionQueue,\n  setPendingState,\n  setState,\n  payload\n) {\n  if (isRenderPhaseUpdate(fiber)) throw Error(formatProdErrorMessage(485));\n  fiber = actionQueue.action;\n  if (null !== fiber) {\n    var actionNode = {\n      payload: payload,\n      action: fiber,\n      next: null,\n      isTransition: !0,\n      status: \"pending\",\n      value: null,\n      reason: null,\n      listeners: [],\n      then: function (listener) {\n        actionNode.listeners.push(listener);\n      }\n    };\n    null !== ReactSharedInternals.T\n      ? setPendingState(!0)\n      : (actionNode.isTransition = !1);\n    setState(actionNode);\n    setPendingState = actionQueue.pending;\n    null === setPendingState\n      ? ((actionNode.next = actionQueue.pending = actionNode),\n        runActionStateAction(actionQueue, actionNode))\n      : ((actionNode.next = setPendingState.next),\n        (actionQueue.pending = setPendingState.next = actionNode));\n  }\n}\nfunction runActionStateAction(actionQueue, node) {\n  var action = node.action,\n    payload = node.payload,\n    prevState = actionQueue.state;\n  if (node.isTransition) {\n    var prevTransition = ReactSharedInternals.T,\n      currentTransition = {};\n    ReactSharedInternals.T = currentTransition;\n    try {\n      var returnValue = action(prevState, payload),\n        onStartTransitionFinish = ReactSharedInternals.S;\n      null !== onStartTransitionFinish &&\n        onStartTransitionFinish(currentTransition, returnValue);\n      handleActionReturnValue(actionQueue, node, returnValue);\n    } catch (error) {\n      onActionError(actionQueue, node, error);\n    } finally {\n      ReactSharedInternals.T = prevTransition;\n    }\n  } else\n    try {\n      (prevTransition = action(prevState, payload)),\n        handleActionReturnValue(actionQueue, node, prevTransition);\n    } catch (error$60) {\n      onActionError(actionQueue, node, error$60);\n    }\n}\nfunction handleActionReturnValue(actionQueue, node, returnValue) {\n  null !== returnValue &&\n  \"object\" === typeof returnValue &&\n  \"function\" === typeof returnValue.then\n    ? returnValue.then(\n        function (nextState) {\n          onActionSuccess(actionQueue, node, nextState);\n        },\n        function (error) {\n          return onActionError(actionQueue, node, error);\n        }\n      )\n    : onActionSuccess(actionQueue, node, returnValue);\n}\nfunction onActionSuccess(actionQueue, actionNode, nextState) {\n  actionNode.status = \"fulfilled\";\n  actionNode.value = nextState;\n  notifyActionListeners(actionNode);\n  actionQueue.state = nextState;\n  actionNode = actionQueue.pending;\n  null !== actionNode &&\n    ((nextState = actionNode.next),\n    nextState === actionNode\n      ? (actionQueue.pending = null)\n      : ((nextState = nextState.next),\n        (actionNode.next = nextState),\n        runActionStateAction(actionQueue, nextState)));\n}\nfunction onActionError(actionQueue, actionNode, error) {\n  var last = actionQueue.pending;\n  actionQueue.pending = null;\n  if (null !== last) {\n    last = last.next;\n    do\n      (actionNode.status = \"rejected\"),\n        (actionNode.reason = error),\n        notifyActionListeners(actionNode),\n        (actionNode = actionNode.next);\n    while (actionNode !== last);\n  }\n  actionQueue.action = null;\n}\nfunction notifyActionListeners(actionNode) {\n  actionNode = actionNode.listeners;\n  for (var i = 0; i < actionNode.length; i++) (0, actionNode[i])();\n}\nfunction actionStateReducer(oldState, newState) {\n  return newState;\n}\nfunction mountActionState(action, initialStateProp) {\n  if (isHydrating) {\n    var ssrFormState = workInProgressRoot.formState;\n    if (null !== ssrFormState) {\n      a: {\n        var JSCompiler_inline_result = currentlyRenderingFiber$1;\n        if (isHydrating) {\n          if (nextHydratableInstance) {\n            b: {\n              var JSCompiler_inline_result$jscomp$0 = nextHydratableInstance;\n              for (\n                var inRootOrSingleton = rootOrSingletonContext;\n                8 !== JSCompiler_inline_result$jscomp$0.nodeType;\n\n              ) {\n                if (!inRootOrSingleton) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n                JSCompiler_inline_result$jscomp$0 = getNextHydratable(\n                  JSCompiler_inline_result$jscomp$0.nextSibling\n                );\n                if (null === JSCompiler_inline_result$jscomp$0) {\n                  JSCompiler_inline_result$jscomp$0 = null;\n                  break b;\n                }\n              }\n              inRootOrSingleton = JSCompiler_inline_result$jscomp$0.data;\n              JSCompiler_inline_result$jscomp$0 =\n                \"F!\" === inRootOrSingleton || \"F\" === inRootOrSingleton\n                  ? JSCompiler_inline_result$jscomp$0\n                  : null;\n            }\n            if (JSCompiler_inline_result$jscomp$0) {\n              nextHydratableInstance = getNextHydratable(\n                JSCompiler_inline_result$jscomp$0.nextSibling\n              );\n              JSCompiler_inline_result =\n                \"F!\" === JSCompiler_inline_result$jscomp$0.data;\n              break a;\n            }\n          }\n          throwOnHydrationMismatch(JSCompiler_inline_result);\n        }\n        JSCompiler_inline_result = !1;\n      }\n      JSCompiler_inline_result && (initialStateProp = ssrFormState[0]);\n    }\n  }\n  ssrFormState = mountWorkInProgressHook();\n  ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;\n  JSCompiler_inline_result = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: actionStateReducer,\n    lastRenderedState: initialStateProp\n  };\n  ssrFormState.queue = JSCompiler_inline_result;\n  ssrFormState = dispatchSetState.bind(\n    null,\n    currentlyRenderingFiber$1,\n    JSCompiler_inline_result\n  );\n  JSCompiler_inline_result.dispatch = ssrFormState;\n  JSCompiler_inline_result = mountStateImpl(!1);\n  inRootOrSingleton = dispatchOptimisticSetState.bind(\n    null,\n    currentlyRenderingFiber$1,\n    !1,\n    JSCompiler_inline_result.queue\n  );\n  JSCompiler_inline_result = mountWorkInProgressHook();\n  JSCompiler_inline_result$jscomp$0 = {\n    state: initialStateProp,\n    dispatch: null,\n    action: action,\n    pending: null\n  };\n  JSCompiler_inline_result.queue = JSCompiler_inline_result$jscomp$0;\n  ssrFormState = dispatchActionState.bind(\n    null,\n    currentlyRenderingFiber$1,\n    JSCompiler_inline_result$jscomp$0,\n    inRootOrSingleton,\n    ssrFormState\n  );\n  JSCompiler_inline_result$jscomp$0.dispatch = ssrFormState;\n  JSCompiler_inline_result.memoizedState = action;\n  return [initialStateProp, ssrFormState, !1];\n}\nfunction updateActionState(action) {\n  var stateHook = updateWorkInProgressHook();\n  return updateActionStateImpl(stateHook, currentHook, action);\n}\nfunction updateActionStateImpl(stateHook, currentStateHook, action) {\n  currentStateHook = updateReducerImpl(\n    stateHook,\n    currentStateHook,\n    actionStateReducer\n  )[0];\n  stateHook = updateReducer(basicStateReducer)[0];\n  currentStateHook =\n    \"object\" === typeof currentStateHook &&\n    null !== currentStateHook &&\n    \"function\" === typeof currentStateHook.then\n      ? useThenable(currentStateHook)\n      : currentStateHook;\n  var actionQueueHook = updateWorkInProgressHook(),\n    actionQueue = actionQueueHook.queue,\n    dispatch = actionQueue.dispatch;\n  action !== actionQueueHook.memoizedState &&\n    ((currentlyRenderingFiber$1.flags |= 2048),\n    pushEffect(\n      9,\n      actionStateActionEffect.bind(null, actionQueue, action),\n      { destroy: void 0 },\n      null\n    ));\n  return [currentStateHook, dispatch, stateHook];\n}\nfunction actionStateActionEffect(actionQueue, action) {\n  actionQueue.action = action;\n}\nfunction rerenderActionState(action) {\n  var stateHook = updateWorkInProgressHook(),\n    currentStateHook = currentHook;\n  if (null !== currentStateHook)\n    return updateActionStateImpl(stateHook, currentStateHook, action);\n  updateWorkInProgressHook();\n  stateHook = stateHook.memoizedState;\n  currentStateHook = updateWorkInProgressHook();\n  var dispatch = currentStateHook.queue.dispatch;\n  currentStateHook.memoizedState = action;\n  return [stateHook, dispatch, !1];\n}\nfunction pushEffect(tag, create, inst, deps) {\n  tag = { tag: tag, create: create, inst: inst, deps: deps, next: null };\n  create = currentlyRenderingFiber$1.updateQueue;\n  null === create &&\n    ((create = createFunctionComponentUpdateQueue()),\n    (currentlyRenderingFiber$1.updateQueue = create));\n  inst = create.lastEffect;\n  null === inst\n    ? (create.lastEffect = tag.next = tag)\n    : ((deps = inst.next),\n      (inst.next = tag),\n      (tag.next = deps),\n      (create.lastEffect = tag));\n  return tag;\n}\nfunction updateRef() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = mountWorkInProgressHook();\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    1 | hookFlags,\n    create,\n    { destroy: void 0 },\n    void 0 === deps ? null : deps\n  );\n}\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var inst = hook.memoizedState.inst;\n  null !== currentHook &&\n  null !== deps &&\n  areHookInputsEqual(deps, currentHook.memoizedState.deps)\n    ? (hook.memoizedState = pushEffect(hookFlags, create, inst, deps))\n    : ((currentlyRenderingFiber$1.flags |= fiberFlags),\n      (hook.memoizedState = pushEffect(1 | hookFlags, create, inst, deps)));\n}\nfunction mountEffect(create, deps) {\n  mountEffectImpl(8390656, 8, create, deps);\n}\nfunction updateEffect(create, deps) {\n  updateEffectImpl(2048, 8, create, deps);\n}\nfunction updateInsertionEffect(create, deps) {\n  return updateEffectImpl(4, 2, create, deps);\n}\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(4, 4, create, deps);\n}\nfunction imperativeHandleEffect(create, ref) {\n  if (\"function\" === typeof ref) {\n    create = create();\n    var refCleanup = ref(create);\n    return function () {\n      \"function\" === typeof refCleanup ? refCleanup() : ref(null);\n    };\n  }\n  if (null !== ref && void 0 !== ref)\n    return (\n      (create = create()),\n      (ref.current = create),\n      function () {\n        ref.current = null;\n      }\n    );\n}\nfunction updateImperativeHandle(ref, create, deps) {\n  deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n  updateEffectImpl(4, 4, imperativeHandleEffect.bind(null, create, ref), deps);\n}\nfunction mountDebugValue() {}\nfunction updateCallback(callback, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  hook.memoizedState = [callback, deps];\n  return callback;\n}\nfunction updateMemo(nextCreate, deps) {\n  var hook = updateWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  var prevState = hook.memoizedState;\n  if (null !== deps && areHookInputsEqual(deps, prevState[1]))\n    return prevState[0];\n  prevState = nextCreate();\n  if (shouldDoubleInvokeUserFnsInHooksDEV) {\n    setIsStrictModeForDevtools(!0);\n    try {\n      nextCreate();\n    } finally {\n      setIsStrictModeForDevtools(!1);\n    }\n  }\n  hook.memoizedState = [prevState, deps];\n  return prevState;\n}\nfunction mountDeferredValueImpl(hook, value, initialValue) {\n  if (void 0 === initialValue || 0 !== (renderLanes & 1073741824))\n    return (hook.memoizedState = value);\n  hook.memoizedState = initialValue;\n  hook = requestDeferredLane();\n  currentlyRenderingFiber$1.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return initialValue;\n}\nfunction updateDeferredValueImpl(hook, prevValue, value, initialValue) {\n  if (objectIs(value, prevValue)) return value;\n  if (null !== currentTreeHiddenStackCursor.current)\n    return (\n      (hook = mountDeferredValueImpl(hook, value, initialValue)),\n      objectIs(hook, prevValue) || (didReceiveUpdate = !0),\n      hook\n    );\n  if (0 === (renderLanes & 42))\n    return (didReceiveUpdate = !0), (hook.memoizedState = value);\n  hook = requestDeferredLane();\n  currentlyRenderingFiber$1.lanes |= hook;\n  workInProgressRootSkippedLanes |= hook;\n  return prevValue;\n}\nfunction startTransition(fiber, queue, pendingState, finishedState, callback) {\n  var previousPriority = ReactDOMSharedInternals.p;\n  ReactDOMSharedInternals.p =\n    0 !== previousPriority && 8 > previousPriority ? previousPriority : 8;\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  dispatchOptimisticSetState(fiber, !1, queue, pendingState);\n  try {\n    var returnValue = callback(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    if (\n      null !== returnValue &&\n      \"object\" === typeof returnValue &&\n      \"function\" === typeof returnValue.then\n    ) {\n      var thenableForFinishedState = chainThenableValue(\n        returnValue,\n        finishedState\n      );\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        thenableForFinishedState,\n        requestUpdateLane(fiber)\n      );\n    } else\n      dispatchSetStateInternal(\n        fiber,\n        queue,\n        finishedState,\n        requestUpdateLane(fiber)\n      );\n  } catch (error) {\n    dispatchSetStateInternal(\n      fiber,\n      queue,\n      { then: function () {}, status: \"rejected\", reason: error },\n      requestUpdateLane()\n    );\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction noop$2() {}\nfunction startHostTransition(formFiber, pendingState, action, formData) {\n  if (5 !== formFiber.tag) throw Error(formatProdErrorMessage(476));\n  var queue = ensureFormComponentIsStateful(formFiber).queue;\n  startTransition(\n    formFiber,\n    queue,\n    pendingState,\n    sharedNotPendingObject,\n    null === action\n      ? noop$2\n      : function () {\n          requestFormReset$1(formFiber);\n          return action(formData);\n        }\n  );\n}\nfunction ensureFormComponentIsStateful(formFiber) {\n  var existingStateHook = formFiber.memoizedState;\n  if (null !== existingStateHook) return existingStateHook;\n  existingStateHook = {\n    memoizedState: sharedNotPendingObject,\n    baseState: sharedNotPendingObject,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: sharedNotPendingObject\n    },\n    next: null\n  };\n  var initialResetState = {};\n  existingStateHook.next = {\n    memoizedState: initialResetState,\n    baseState: initialResetState,\n    baseQueue: null,\n    queue: {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: initialResetState\n    },\n    next: null\n  };\n  formFiber.memoizedState = existingStateHook;\n  formFiber = formFiber.alternate;\n  null !== formFiber && (formFiber.memoizedState = existingStateHook);\n  return existingStateHook;\n}\nfunction requestFormReset$1(formFiber) {\n  var resetStateQueue = ensureFormComponentIsStateful(formFiber).next.queue;\n  dispatchSetStateInternal(formFiber, resetStateQueue, {}, requestUpdateLane());\n}\nfunction useHostTransitionStatus() {\n  return readContext(HostTransitionContext);\n}\nfunction updateId() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction updateRefresh() {\n  return updateWorkInProgressHook().memoizedState;\n}\nfunction refreshCache(fiber) {\n  for (var provider = fiber.return; null !== provider; ) {\n    switch (provider.tag) {\n      case 24:\n      case 3:\n        var lane = requestUpdateLane();\n        fiber = createUpdate(lane);\n        var root$63 = enqueueUpdate(provider, fiber, lane);\n        null !== root$63 &&\n          (scheduleUpdateOnFiber(root$63, provider, lane),\n          entangleTransitions(root$63, provider, lane));\n        provider = { cache: createCache() };\n        fiber.payload = provider;\n        return;\n    }\n    provider = provider.return;\n  }\n}\nfunction dispatchReducerAction(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  action = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  isRenderPhaseUpdate(fiber)\n    ? enqueueRenderPhaseUpdate(queue, action)\n    : ((action = enqueueConcurrentHookUpdate(fiber, queue, action, lane)),\n      null !== action &&\n        (scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane)));\n}\nfunction dispatchSetState(fiber, queue, action) {\n  var lane = requestUpdateLane();\n  dispatchSetStateInternal(fiber, queue, action, lane);\n}\nfunction dispatchSetStateInternal(fiber, queue, action, lane) {\n  var update = {\n    lane: lane,\n    revertLane: 0,\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);\n  else {\n    var alternate = fiber.alternate;\n    if (\n      0 === fiber.lanes &&\n      (null === alternate || 0 === alternate.lanes) &&\n      ((alternate = queue.lastRenderedReducer), null !== alternate)\n    )\n      try {\n        var currentState = queue.lastRenderedState,\n          eagerState = alternate(currentState, action);\n        update.hasEagerState = !0;\n        update.eagerState = eagerState;\n        if (objectIs(eagerState, currentState))\n          return (\n            enqueueUpdate$1(fiber, queue, update, 0),\n            null === workInProgressRoot && finishQueueingConcurrentUpdates(),\n            !1\n          );\n      } catch (error) {\n      } finally {\n      }\n    action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n    if (null !== action)\n      return (\n        scheduleUpdateOnFiber(action, fiber, lane),\n        entangleTransitionUpdate(action, queue, lane),\n        !0\n      );\n  }\n  return !1;\n}\nfunction dispatchOptimisticSetState(fiber, throwIfDuringRender, queue, action) {\n  action = {\n    lane: 2,\n    revertLane: requestTransitionLane(),\n    action: action,\n    hasEagerState: !1,\n    eagerState: null,\n    next: null\n  };\n  if (isRenderPhaseUpdate(fiber)) {\n    if (throwIfDuringRender) throw Error(formatProdErrorMessage(479));\n  } else\n    (throwIfDuringRender = enqueueConcurrentHookUpdate(\n      fiber,\n      queue,\n      action,\n      2\n    )),\n      null !== throwIfDuringRender &&\n        scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);\n}\nfunction isRenderPhaseUpdate(fiber) {\n  var alternate = fiber.alternate;\n  return (\n    fiber === currentlyRenderingFiber$1 ||\n    (null !== alternate && alternate === currentlyRenderingFiber$1)\n  );\n}\nfunction enqueueRenderPhaseUpdate(queue, update) {\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate =\n    !0;\n  var pending = queue.pending;\n  null === pending\n    ? (update.next = update)\n    : ((update.next = pending.next), (pending.next = update));\n  queue.pending = update;\n}\nfunction entangleTransitionUpdate(root, queue, lane) {\n  if (0 !== (lane & 4194176)) {\n    var queueLanes = queue.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    queue.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nvar ContextOnlyDispatcher = {\n  readContext: readContext,\n  use: use,\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useInsertionEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useSyncExternalStore: throwInvalidHookError,\n  useId: throwInvalidHookError\n};\nContextOnlyDispatcher.useCacheRefresh = throwInvalidHookError;\nContextOnlyDispatcher.useMemoCache = throwInvalidHookError;\nContextOnlyDispatcher.useHostTransitionStatus = throwInvalidHookError;\nContextOnlyDispatcher.useFormState = throwInvalidHookError;\nContextOnlyDispatcher.useActionState = throwInvalidHookError;\nContextOnlyDispatcher.useOptimistic = throwInvalidHookError;\nvar HooksDispatcherOnMount = {\n  readContext: readContext,\n  use: use,\n  useCallback: function (callback, deps) {\n    mountWorkInProgressHook().memoizedState = [\n      callback,\n      void 0 === deps ? null : deps\n    ];\n    return callback;\n  },\n  useContext: readContext,\n  useEffect: mountEffect,\n  useImperativeHandle: function (ref, create, deps) {\n    deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;\n    mountEffectImpl(\n      4194308,\n      4,\n      imperativeHandleEffect.bind(null, create, ref),\n      deps\n    );\n  },\n  useLayoutEffect: function (create, deps) {\n    return mountEffectImpl(4194308, 4, create, deps);\n  },\n  useInsertionEffect: function (create, deps) {\n    mountEffectImpl(4, 2, create, deps);\n  },\n  useMemo: function (nextCreate, deps) {\n    var hook = mountWorkInProgressHook();\n    deps = void 0 === deps ? null : deps;\n    var nextValue = nextCreate();\n    if (shouldDoubleInvokeUserFnsInHooksDEV) {\n      setIsStrictModeForDevtools(!0);\n      try {\n        nextCreate();\n      } finally {\n        setIsStrictModeForDevtools(!1);\n      }\n    }\n    hook.memoizedState = [nextValue, deps];\n    return nextValue;\n  },\n  useReducer: function (reducer, initialArg, init) {\n    var hook = mountWorkInProgressHook();\n    if (void 0 !== init) {\n      var initialState = init(initialArg);\n      if (shouldDoubleInvokeUserFnsInHooksDEV) {\n        setIsStrictModeForDevtools(!0);\n        try {\n          init(initialArg);\n        } finally {\n          setIsStrictModeForDevtools(!1);\n        }\n      }\n    } else initialState = initialArg;\n    hook.memoizedState = hook.baseState = initialState;\n    reducer = {\n      pending: null,\n      lanes: 0,\n      dispatch: null,\n      lastRenderedReducer: reducer,\n      lastRenderedState: initialState\n    };\n    hook.queue = reducer;\n    reducer = reducer.dispatch = dispatchReducerAction.bind(\n      null,\n      currentlyRenderingFiber$1,\n      reducer\n    );\n    return [hook.memoizedState, reducer];\n  },\n  useRef: function (initialValue) {\n    var hook = mountWorkInProgressHook();\n    initialValue = { current: initialValue };\n    return (hook.memoizedState = initialValue);\n  },\n  useState: function (initialState) {\n    initialState = mountStateImpl(initialState);\n    var queue = initialState.queue,\n      dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);\n    queue.dispatch = dispatch;\n    return [initialState.memoizedState, dispatch];\n  },\n  useDebugValue: mountDebugValue,\n  useDeferredValue: function (value, initialValue) {\n    var hook = mountWorkInProgressHook();\n    return mountDeferredValueImpl(hook, value, initialValue);\n  },\n  useTransition: function () {\n    var stateHook = mountStateImpl(!1);\n    stateHook = startTransition.bind(\n      null,\n      currentlyRenderingFiber$1,\n      stateHook.queue,\n      !0,\n      !1\n    );\n    mountWorkInProgressHook().memoizedState = stateHook;\n    return [!1, stateHook];\n  },\n  useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n    var fiber = currentlyRenderingFiber$1,\n      hook = mountWorkInProgressHook();\n    if (isHydrating) {\n      if (void 0 === getServerSnapshot)\n        throw Error(formatProdErrorMessage(407));\n      getServerSnapshot = getServerSnapshot();\n    } else {\n      getServerSnapshot = getSnapshot();\n      if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));\n      0 !== (workInProgressRootRenderLanes & 60) ||\n        pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);\n    }\n    hook.memoizedState = getServerSnapshot;\n    var inst = { value: getServerSnapshot, getSnapshot: getSnapshot };\n    hook.queue = inst;\n    mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [\n      subscribe\n    ]);\n    fiber.flags |= 2048;\n    pushEffect(\n      9,\n      updateStoreInstance.bind(\n        null,\n        fiber,\n        inst,\n        getServerSnapshot,\n        getSnapshot\n      ),\n      { destroy: void 0 },\n      null\n    );\n    return getServerSnapshot;\n  },\n  useId: function () {\n    var hook = mountWorkInProgressHook(),\n      identifierPrefix = workInProgressRoot.identifierPrefix;\n    if (isHydrating) {\n      var JSCompiler_inline_result = treeContextOverflow;\n      var idWithLeadingBit = treeContextId;\n      JSCompiler_inline_result =\n        (\n          idWithLeadingBit & ~(1 << (32 - clz32(idWithLeadingBit) - 1))\n        ).toString(32) + JSCompiler_inline_result;\n      identifierPrefix =\n        \":\" + identifierPrefix + \"R\" + JSCompiler_inline_result;\n      JSCompiler_inline_result = localIdCounter++;\n      0 < JSCompiler_inline_result &&\n        (identifierPrefix += \"H\" + JSCompiler_inline_result.toString(32));\n      identifierPrefix += \":\";\n    } else\n      (JSCompiler_inline_result = globalClientIdCounter++),\n        (identifierPrefix =\n          \":\" +\n          identifierPrefix +\n          \"r\" +\n          JSCompiler_inline_result.toString(32) +\n          \":\");\n    return (hook.memoizedState = identifierPrefix);\n  },\n  useCacheRefresh: function () {\n    return (mountWorkInProgressHook().memoizedState = refreshCache.bind(\n      null,\n      currentlyRenderingFiber$1\n    ));\n  }\n};\nHooksDispatcherOnMount.useMemoCache = useMemoCache;\nHooksDispatcherOnMount.useHostTransitionStatus = useHostTransitionStatus;\nHooksDispatcherOnMount.useFormState = mountActionState;\nHooksDispatcherOnMount.useActionState = mountActionState;\nHooksDispatcherOnMount.useOptimistic = function (passthrough) {\n  var hook = mountWorkInProgressHook();\n  hook.memoizedState = hook.baseState = passthrough;\n  var queue = {\n    pending: null,\n    lanes: 0,\n    dispatch: null,\n    lastRenderedReducer: null,\n    lastRenderedState: null\n  };\n  hook.queue = queue;\n  hook = dispatchOptimisticSetState.bind(\n    null,\n    currentlyRenderingFiber$1,\n    !0,\n    queue\n  );\n  queue.dispatch = hook;\n  return [passthrough, hook];\n};\nvar HooksDispatcherOnUpdate = {\n  readContext: readContext,\n  use: use,\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useInsertionEffect: updateInsertionEffect,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: updateReducer,\n  useRef: updateRef,\n  useState: function () {\n    return updateReducer(basicStateReducer);\n  },\n  useDebugValue: mountDebugValue,\n  useDeferredValue: function (value, initialValue) {\n    var hook = updateWorkInProgressHook();\n    return updateDeferredValueImpl(\n      hook,\n      currentHook.memoizedState,\n      value,\n      initialValue\n    );\n  },\n  useTransition: function () {\n    var booleanOrThenable = updateReducer(basicStateReducer)[0],\n      start = updateWorkInProgressHook().memoizedState;\n    return [\n      \"boolean\" === typeof booleanOrThenable\n        ? booleanOrThenable\n        : useThenable(booleanOrThenable),\n      start\n    ];\n  },\n  useSyncExternalStore: updateSyncExternalStore,\n  useId: updateId\n};\nHooksDispatcherOnUpdate.useCacheRefresh = updateRefresh;\nHooksDispatcherOnUpdate.useMemoCache = useMemoCache;\nHooksDispatcherOnUpdate.useHostTransitionStatus = useHostTransitionStatus;\nHooksDispatcherOnUpdate.useFormState = updateActionState;\nHooksDispatcherOnUpdate.useActionState = updateActionState;\nHooksDispatcherOnUpdate.useOptimistic = function (passthrough, reducer) {\n  var hook = updateWorkInProgressHook();\n  return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n};\nvar HooksDispatcherOnRerender = {\n  readContext: readContext,\n  use: use,\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useInsertionEffect: updateInsertionEffect,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: rerenderReducer,\n  useRef: updateRef,\n  useState: function () {\n    return rerenderReducer(basicStateReducer);\n  },\n  useDebugValue: mountDebugValue,\n  useDeferredValue: function (value, initialValue) {\n    var hook = updateWorkInProgressHook();\n    return null === currentHook\n      ? mountDeferredValueImpl(hook, value, initialValue)\n      : updateDeferredValueImpl(\n          hook,\n          currentHook.memoizedState,\n          value,\n          initialValue\n        );\n  },\n  useTransition: function () {\n    var booleanOrThenable = rerenderReducer(basicStateReducer)[0],\n      start = updateWorkInProgressHook().memoizedState;\n    return [\n      \"boolean\" === typeof booleanOrThenable\n        ? booleanOrThenable\n        : useThenable(booleanOrThenable),\n      start\n    ];\n  },\n  useSyncExternalStore: updateSyncExternalStore,\n  useId: updateId\n};\nHooksDispatcherOnRerender.useCacheRefresh = updateRefresh;\nHooksDispatcherOnRerender.useMemoCache = useMemoCache;\nHooksDispatcherOnRerender.useHostTransitionStatus = useHostTransitionStatus;\nHooksDispatcherOnRerender.useFormState = rerenderActionState;\nHooksDispatcherOnRerender.useActionState = rerenderActionState;\nHooksDispatcherOnRerender.useOptimistic = function (passthrough, reducer) {\n  var hook = updateWorkInProgressHook();\n  if (null !== currentHook)\n    return updateOptimisticImpl(hook, currentHook, passthrough, reducer);\n  hook.baseState = passthrough;\n  return [passthrough, hook.queue.dispatch];\n};\nfunction applyDerivedStateFromProps(\n  workInProgress,\n  ctor,\n  getDerivedStateFromProps,\n  nextProps\n) {\n  ctor = workInProgress.memoizedState;\n  getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);\n  getDerivedStateFromProps =\n    null === getDerivedStateFromProps || void 0 === getDerivedStateFromProps\n      ? ctor\n      : assign({}, ctor, getDerivedStateFromProps);\n  workInProgress.memoizedState = getDerivedStateFromProps;\n  0 === workInProgress.lanes &&\n    (workInProgress.updateQueue.baseState = getDerivedStateFromProps);\n}\nvar classComponentUpdater = {\n  isMounted: function (component) {\n    return (component = component._reactInternals)\n      ? getNearestMountedFiber(component) === component\n      : !1;\n  },\n  enqueueSetState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueReplaceState: function (inst, payload, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 1;\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    payload = enqueueUpdate(inst, update, lane);\n    null !== payload &&\n      (scheduleUpdateOnFiber(payload, inst, lane),\n      entangleTransitions(payload, inst, lane));\n  },\n  enqueueForceUpdate: function (inst, callback) {\n    inst = inst._reactInternals;\n    var lane = requestUpdateLane(),\n      update = createUpdate(lane);\n    update.tag = 2;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    callback = enqueueUpdate(inst, update, lane);\n    null !== callback &&\n      (scheduleUpdateOnFiber(callback, inst, lane),\n      entangleTransitions(callback, inst, lane));\n  }\n};\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext\n) {\n  workInProgress = workInProgress.stateNode;\n  return \"function\" === typeof workInProgress.shouldComponentUpdate\n    ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext)\n    : ctor.prototype && ctor.prototype.isPureReactComponent\n      ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n      : !0;\n}\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext\n) {\n  workInProgress = instance.state;\n  \"function\" === typeof instance.componentWillReceiveProps &&\n    instance.componentWillReceiveProps(newProps, nextContext);\n  \"function\" === typeof instance.UNSAFE_componentWillReceiveProps &&\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  instance.state !== workInProgress &&\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n}\nfunction resolveClassComponentProps(Component, baseProps) {\n  var newProps = baseProps;\n  if (\"ref\" in baseProps) {\n    newProps = {};\n    for (var propName in baseProps)\n      \"ref\" !== propName && (newProps[propName] = baseProps[propName]);\n  }\n  if ((Component = Component.defaultProps)) {\n    newProps === baseProps && (newProps = assign({}, newProps));\n    for (var propName$67 in Component)\n      void 0 === newProps[propName$67] &&\n        (newProps[propName$67] = Component[propName$67]);\n  }\n  return newProps;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction defaultOnUncaughtError(error) {\n  reportGlobalError(error);\n}\nfunction defaultOnCaughtError(error) {\n  console.error(error);\n}\nfunction defaultOnRecoverableError(error) {\n  reportGlobalError(error);\n}\nfunction logUncaughtError(root, errorInfo) {\n  try {\n    var onUncaughtError = root.onUncaughtError;\n    onUncaughtError(errorInfo.value, { componentStack: errorInfo.stack });\n  } catch (e$68) {\n    setTimeout(function () {\n      throw e$68;\n    });\n  }\n}\nfunction logCaughtError(root, boundary, errorInfo) {\n  try {\n    var onCaughtError = root.onCaughtError;\n    onCaughtError(errorInfo.value, {\n      componentStack: errorInfo.stack,\n      errorBoundary: 1 === boundary.tag ? boundary.stateNode : null\n    });\n  } catch (e$69) {\n    setTimeout(function () {\n      throw e$69;\n    });\n  }\n}\nfunction createRootErrorUpdate(root, errorInfo, lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  lane.payload = { element: null };\n  lane.callback = function () {\n    logUncaughtError(root, errorInfo);\n  };\n  return lane;\n}\nfunction createClassErrorUpdate(lane) {\n  lane = createUpdate(lane);\n  lane.tag = 3;\n  return lane;\n}\nfunction initializeClassErrorUpdate(update, root, fiber, errorInfo) {\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (\"function\" === typeof getDerivedStateFromError) {\n    var error = errorInfo.value;\n    update.payload = function () {\n      return getDerivedStateFromError(error);\n    };\n    update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n    };\n  }\n  var inst = fiber.stateNode;\n  null !== inst &&\n    \"function\" === typeof inst.componentDidCatch &&\n    (update.callback = function () {\n      logCaughtError(root, fiber, errorInfo);\n      \"function\" !== typeof getDerivedStateFromError &&\n        (null === legacyErrorBoundariesThatAlreadyFailed\n          ? (legacyErrorBoundariesThatAlreadyFailed = new Set([this]))\n          : legacyErrorBoundariesThatAlreadyFailed.add(this));\n      var stack = errorInfo.stack;\n      this.componentDidCatch(errorInfo.value, {\n        componentStack: null !== stack ? stack : \"\"\n      });\n    });\n}\nfunction throwException(\n  root,\n  returnFiber,\n  sourceFiber,\n  value,\n  rootRenderLanes\n) {\n  sourceFiber.flags |= 32768;\n  if (\n    null !== value &&\n    \"object\" === typeof value &&\n    \"function\" === typeof value.then\n  ) {\n    returnFiber = sourceFiber.alternate;\n    null !== returnFiber &&\n      propagateParentContextChanges(\n        returnFiber,\n        sourceFiber,\n        rootRenderLanes,\n        !0\n      );\n    sourceFiber = suspenseHandlerStackCursor.current;\n    if (null !== sourceFiber) {\n      switch (sourceFiber.tag) {\n        case 13:\n          return (\n            null === shellBoundary\n              ? renderDidSuspendDelayIfPossible()\n              : null === sourceFiber.alternate &&\n                0 === workInProgressRootExitStatus &&\n                (workInProgressRootExitStatus = 3),\n            (sourceFiber.flags &= -257),\n            (sourceFiber.flags |= 65536),\n            (sourceFiber.lanes = rootRenderLanes),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? (sourceFiber.updateQueue = new Set([value]))\n                  : returnFiber.add(value),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n        case 22:\n          return (\n            (sourceFiber.flags |= 65536),\n            value === noopSuspenseyCommitThenable\n              ? (sourceFiber.flags |= 16384)\n              : ((returnFiber = sourceFiber.updateQueue),\n                null === returnFiber\n                  ? ((returnFiber = {\n                      transitions: null,\n                      markerInstances: null,\n                      retryQueue: new Set([value])\n                    }),\n                    (sourceFiber.updateQueue = returnFiber))\n                  : ((sourceFiber = returnFiber.retryQueue),\n                    null === sourceFiber\n                      ? (returnFiber.retryQueue = new Set([value]))\n                      : sourceFiber.add(value)),\n                attachPingListener(root, value, rootRenderLanes)),\n            !1\n          );\n      }\n      throw Error(formatProdErrorMessage(435, sourceFiber.tag));\n    }\n    attachPingListener(root, value, rootRenderLanes);\n    renderDidSuspendDelayIfPossible();\n    return !1;\n  }\n  if (isHydrating)\n    return (\n      (returnFiber = suspenseHandlerStackCursor.current),\n      null !== returnFiber\n        ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256),\n          (returnFiber.flags |= 65536),\n          (returnFiber.lanes = rootRenderLanes),\n          value !== HydrationMismatchException &&\n            ((root = Error(formatProdErrorMessage(422), { cause: value })),\n            queueHydrationError(createCapturedValueAtFiber(root, sourceFiber))))\n        : (value !== HydrationMismatchException &&\n            ((returnFiber = Error(formatProdErrorMessage(423), {\n              cause: value\n            })),\n            queueHydrationError(\n              createCapturedValueAtFiber(returnFiber, sourceFiber)\n            )),\n          (root = root.current.alternate),\n          (root.flags |= 65536),\n          (rootRenderLanes &= -rootRenderLanes),\n          (root.lanes |= rootRenderLanes),\n          (value = createCapturedValueAtFiber(value, sourceFiber)),\n          (rootRenderLanes = createRootErrorUpdate(\n            root.stateNode,\n            value,\n            rootRenderLanes\n          )),\n          enqueueCapturedUpdate(root, rootRenderLanes),\n          4 !== workInProgressRootExitStatus &&\n            (workInProgressRootExitStatus = 2)),\n      !1\n    );\n  var wrapperError = Error(formatProdErrorMessage(520), { cause: value });\n  wrapperError = createCapturedValueAtFiber(wrapperError, sourceFiber);\n  null === workInProgressRootConcurrentErrors\n    ? (workInProgressRootConcurrentErrors = [wrapperError])\n    : workInProgressRootConcurrentErrors.push(wrapperError);\n  4 !== workInProgressRootExitStatus && (workInProgressRootExitStatus = 2);\n  if (null === returnFiber) return !0;\n  value = createCapturedValueAtFiber(value, sourceFiber);\n  sourceFiber = returnFiber;\n  do {\n    switch (sourceFiber.tag) {\n      case 3:\n        return (\n          (sourceFiber.flags |= 65536),\n          (root = rootRenderLanes & -rootRenderLanes),\n          (sourceFiber.lanes |= root),\n          (root = createRootErrorUpdate(sourceFiber.stateNode, value, root)),\n          enqueueCapturedUpdate(sourceFiber, root),\n          !1\n        );\n      case 1:\n        if (\n          ((returnFiber = sourceFiber.type),\n          (wrapperError = sourceFiber.stateNode),\n          0 === (sourceFiber.flags & 128) &&\n            (\"function\" === typeof returnFiber.getDerivedStateFromError ||\n              (null !== wrapperError &&\n                \"function\" === typeof wrapperError.componentDidCatch &&\n                (null === legacyErrorBoundariesThatAlreadyFailed ||\n                  !legacyErrorBoundariesThatAlreadyFailed.has(wrapperError)))))\n        )\n          return (\n            (sourceFiber.flags |= 65536),\n            (rootRenderLanes &= -rootRenderLanes),\n            (sourceFiber.lanes |= rootRenderLanes),\n            (rootRenderLanes = createClassErrorUpdate(rootRenderLanes)),\n            initializeClassErrorUpdate(\n              rootRenderLanes,\n              root,\n              sourceFiber,\n              value\n            ),\n            enqueueCapturedUpdate(sourceFiber, rootRenderLanes),\n            !1\n          );\n    }\n    sourceFiber = sourceFiber.return;\n  } while (null !== sourceFiber);\n  return !1;\n}\nvar SelectiveHydrationException = Error(formatProdErrorMessage(461)),\n  didReceiveUpdate = !1;\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  workInProgress.child =\n    null === current\n      ? mountChildFibers(workInProgress, null, nextChildren, renderLanes)\n      : reconcileChildFibers(\n          workInProgress,\n          current.child,\n          nextChildren,\n          renderLanes\n        );\n}\nfunction updateForwardRef(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  Component = Component.render;\n  var ref = workInProgress.ref;\n  if (\"ref\" in nextProps) {\n    var propsWithoutRef = {};\n    for (var key in nextProps)\n      \"ref\" !== key && (propsWithoutRef[key] = nextProps[key]);\n  } else propsWithoutRef = nextProps;\n  prepareToReadContext(workInProgress);\n  nextProps = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    propsWithoutRef,\n    ref,\n    renderLanes\n  );\n  key = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && key && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null === current) {\n    var type = Component.type;\n    if (\n      \"function\" === typeof type &&\n      !shouldConstruct(type) &&\n      void 0 === type.defaultProps &&\n      null === Component.compare\n    )\n      return (\n        (workInProgress.tag = 15),\n        (workInProgress.type = type),\n        updateSimpleMemoComponent(\n          current,\n          workInProgress,\n          type,\n          nextProps,\n          renderLanes\n        )\n      );\n    current = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes\n    );\n    current.ref = workInProgress.ref;\n    current.return = workInProgress;\n    return (workInProgress.child = current);\n  }\n  type = current.child;\n  if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n    var prevProps = type.memoizedProps;\n    Component = Component.compare;\n    Component = null !== Component ? Component : shallowEqual;\n    if (Component(prevProps, nextProps) && current.ref === workInProgress.ref)\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n  workInProgress.flags |= 1;\n  current = createWorkInProgress(type, nextProps);\n  current.ref = workInProgress.ref;\n  current.return = workInProgress;\n  return (workInProgress.child = current);\n}\nfunction updateSimpleMemoComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  if (null !== current) {\n    var prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref\n    )\n      if (\n        ((didReceiveUpdate = !1),\n        (workInProgress.pendingProps = nextProps = prevProps),\n        checkScheduledUpdateOrContext(current, renderLanes))\n      )\n        0 !== (current.flags & 131072) && (didReceiveUpdate = !0);\n      else\n        return (\n          (workInProgress.lanes = current.lanes),\n          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n        );\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes\n  );\n}\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    nextChildren = nextProps.children,\n    nextIsDetached = 0 !== (workInProgress.stateNode._pendingVisibility & 2),\n    prevState = null !== current ? current.memoizedState : null;\n  markRef(current, workInProgress);\n  if (\"hidden\" === nextProps.mode || nextIsDetached) {\n    if (0 !== (workInProgress.flags & 128)) {\n      nextProps =\n        null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;\n      if (null !== current) {\n        nextChildren = workInProgress.child = current.child;\n        for (nextIsDetached = 0; null !== nextChildren; )\n          (nextIsDetached =\n            nextIsDetached | nextChildren.lanes | nextChildren.childLanes),\n            (nextChildren = nextChildren.sibling);\n        workInProgress.childLanes = nextIsDetached & ~nextProps;\n      } else (workInProgress.childLanes = 0), (workInProgress.child = null);\n      return deferHiddenOffscreenComponent(\n        current,\n        workInProgress,\n        nextProps,\n        renderLanes\n      );\n    }\n    if (0 !== (renderLanes & 536870912))\n      (workInProgress.memoizedState = { baseLanes: 0, cachePool: null }),\n        null !== current &&\n          pushTransition(\n            workInProgress,\n            null !== prevState ? prevState.cachePool : null\n          ),\n        null !== prevState\n          ? pushHiddenContext(workInProgress, prevState)\n          : reuseHiddenContextOnStack(),\n        pushOffscreenSuspenseHandler(workInProgress);\n    else\n      return (\n        (workInProgress.lanes = workInProgress.childLanes = 536870912),\n        deferHiddenOffscreenComponent(\n          current,\n          workInProgress,\n          null !== prevState ? prevState.baseLanes | renderLanes : renderLanes,\n          renderLanes\n        )\n      );\n  } else\n    null !== prevState\n      ? (pushTransition(workInProgress, prevState.cachePool),\n        pushHiddenContext(workInProgress, prevState),\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (workInProgress.memoizedState = null))\n      : (null !== current && pushTransition(workInProgress, null),\n        reuseHiddenContextOnStack(),\n        reuseSuspenseHandlerOnStack(workInProgress));\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nfunction deferHiddenOffscreenComponent(\n  current,\n  workInProgress,\n  nextBaseLanes,\n  renderLanes\n) {\n  var JSCompiler_inline_result = peekCacheFromPool();\n  JSCompiler_inline_result =\n    null === JSCompiler_inline_result\n      ? null\n      : { parent: CacheContext._currentValue, pool: JSCompiler_inline_result };\n  workInProgress.memoizedState = {\n    baseLanes: nextBaseLanes,\n    cachePool: JSCompiler_inline_result\n  };\n  null !== current && pushTransition(workInProgress, null);\n  reuseHiddenContextOnStack();\n  pushOffscreenSuspenseHandler(workInProgress);\n  null !== current &&\n    propagateParentContextChanges(current, workInProgress, renderLanes, !0);\n  return null;\n}\nfunction markRef(current, workInProgress) {\n  var ref = workInProgress.ref;\n  if (null === ref)\n    null !== current &&\n      null !== current.ref &&\n      (workInProgress.flags |= 2097664);\n  else {\n    if (\"function\" !== typeof ref && \"object\" !== typeof ref)\n      throw Error(formatProdErrorMessage(284));\n    if (null === current || current.ref !== ref)\n      workInProgress.flags |= 2097664;\n  }\n}\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  Component = renderWithHooks(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    void 0,\n    renderLanes\n  );\n  nextProps = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && nextProps && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, Component, renderLanes);\n  return workInProgress.child;\n}\nfunction replayFunctionComponent(\n  current,\n  workInProgress,\n  nextProps,\n  Component,\n  secondArg,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  workInProgress.updateQueue = null;\n  nextProps = renderWithHooksAgain(\n    workInProgress,\n    Component,\n    nextProps,\n    secondArg\n  );\n  finishRenderingHooks(current);\n  Component = checkDidRenderIdHook();\n  if (null !== current && !didReceiveUpdate)\n    return (\n      bailoutHooks(current, workInProgress, renderLanes),\n      bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)\n    );\n  isHydrating && Component && pushMaterializedTreeId(workInProgress);\n  workInProgress.flags |= 1;\n  reconcileChildren(current, workInProgress, nextProps, renderLanes);\n  return workInProgress.child;\n}\nfunction updateClassComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes\n) {\n  prepareToReadContext(workInProgress);\n  if (null === workInProgress.stateNode) {\n    var context = emptyContextObject,\n      contextType = Component.contextType;\n    \"object\" === typeof contextType &&\n      null !== contextType &&\n      (context = readContext(contextType));\n    context = new Component(nextProps, context);\n    workInProgress.memoizedState =\n      null !== context.state && void 0 !== context.state ? context.state : null;\n    context.updater = classComponentUpdater;\n    workInProgress.stateNode = context;\n    context._reactInternals = workInProgress;\n    context = workInProgress.stateNode;\n    context.props = nextProps;\n    context.state = workInProgress.memoizedState;\n    context.refs = {};\n    initializeUpdateQueue(workInProgress);\n    contextType = Component.contextType;\n    context.context =\n      \"object\" === typeof contextType && null !== contextType\n        ? readContext(contextType)\n        : emptyContextObject;\n    context.state = workInProgress.memoizedState;\n    contextType = Component.getDerivedStateFromProps;\n    \"function\" === typeof contextType &&\n      (applyDerivedStateFromProps(\n        workInProgress,\n        Component,\n        contextType,\n        nextProps\n      ),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof Component.getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate ||\n      (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n        \"function\" !== typeof context.componentWillMount) ||\n      ((contextType = context.state),\n      \"function\" === typeof context.componentWillMount &&\n        context.componentWillMount(),\n      \"function\" === typeof context.UNSAFE_componentWillMount &&\n        context.UNSAFE_componentWillMount(),\n      contextType !== context.state &&\n        classComponentUpdater.enqueueReplaceState(context, context.state, null),\n      processUpdateQueue(workInProgress, nextProps, context, renderLanes),\n      suspendIfUpdateReadFromEntangledAsyncAction(),\n      (context.state = workInProgress.memoizedState));\n    \"function\" === typeof context.componentDidMount &&\n      (workInProgress.flags |= 4194308);\n    nextProps = !0;\n  } else if (null === current) {\n    context = workInProgress.stateNode;\n    var unresolvedOldProps = workInProgress.memoizedProps,\n      oldProps = resolveClassComponentProps(Component, unresolvedOldProps);\n    context.props = oldProps;\n    var oldContext = context.context,\n      contextType$jscomp$0 = Component.contextType;\n    contextType = emptyContextObject;\n    \"object\" === typeof contextType$jscomp$0 &&\n      null !== contextType$jscomp$0 &&\n      (contextType = readContext(contextType$jscomp$0));\n    var getDerivedStateFromProps = Component.getDerivedStateFromProps;\n    contextType$jscomp$0 =\n      \"function\" === typeof getDerivedStateFromProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate;\n    unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;\n    contextType$jscomp$0 ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((unresolvedOldProps || oldContext !== contextType) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          contextType\n        ));\n    hasForceUpdate = !1;\n    var oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    oldContext = workInProgress.memoizedState;\n    unresolvedOldProps || oldState !== oldContext || hasForceUpdate\n      ? (\"function\" === typeof getDerivedStateFromProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            getDerivedStateFromProps,\n            nextProps\n          ),\n          (oldContext = workInProgress.memoizedState)),\n        (oldProps =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            oldProps,\n            nextProps,\n            oldState,\n            oldContext,\n            contextType\n          ))\n          ? (contextType$jscomp$0 ||\n              (\"function\" !== typeof context.UNSAFE_componentWillMount &&\n                \"function\" !== typeof context.componentWillMount) ||\n              (\"function\" === typeof context.componentWillMount &&\n                context.componentWillMount(),\n              \"function\" === typeof context.UNSAFE_componentWillMount &&\n                context.UNSAFE_componentWillMount()),\n            \"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308))\n          : (\"function\" === typeof context.componentDidMount &&\n              (workInProgress.flags |= 4194308),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = oldContext)),\n        (context.props = nextProps),\n        (context.state = oldContext),\n        (context.context = contextType),\n        (nextProps = oldProps))\n      : (\"function\" === typeof context.componentDidMount &&\n          (workInProgress.flags |= 4194308),\n        (nextProps = !1));\n  } else {\n    context = workInProgress.stateNode;\n    cloneUpdateQueue(current, workInProgress);\n    contextType = workInProgress.memoizedProps;\n    contextType$jscomp$0 = resolveClassComponentProps(Component, contextType);\n    context.props = contextType$jscomp$0;\n    getDerivedStateFromProps = workInProgress.pendingProps;\n    oldState = context.context;\n    oldContext = Component.contextType;\n    oldProps = emptyContextObject;\n    \"object\" === typeof oldContext &&\n      null !== oldContext &&\n      (oldProps = readContext(oldContext));\n    unresolvedOldProps = Component.getDerivedStateFromProps;\n    (oldContext =\n      \"function\" === typeof unresolvedOldProps ||\n      \"function\" === typeof context.getSnapshotBeforeUpdate) ||\n      (\"function\" !== typeof context.UNSAFE_componentWillReceiveProps &&\n        \"function\" !== typeof context.componentWillReceiveProps) ||\n      ((contextType !== getDerivedStateFromProps || oldState !== oldProps) &&\n        callComponentWillReceiveProps(\n          workInProgress,\n          context,\n          nextProps,\n          oldProps\n        ));\n    hasForceUpdate = !1;\n    oldState = workInProgress.memoizedState;\n    context.state = oldState;\n    processUpdateQueue(workInProgress, nextProps, context, renderLanes);\n    suspendIfUpdateReadFromEntangledAsyncAction();\n    var newState = workInProgress.memoizedState;\n    contextType !== getDerivedStateFromProps ||\n    oldState !== newState ||\n    hasForceUpdate ||\n    (null !== current &&\n      null !== current.dependencies &&\n      checkIfContextChanged(current.dependencies))\n      ? (\"function\" === typeof unresolvedOldProps &&\n          (applyDerivedStateFromProps(\n            workInProgress,\n            Component,\n            unresolvedOldProps,\n            nextProps\n          ),\n          (newState = workInProgress.memoizedState)),\n        (contextType$jscomp$0 =\n          hasForceUpdate ||\n          checkShouldComponentUpdate(\n            workInProgress,\n            Component,\n            contextType$jscomp$0,\n            nextProps,\n            oldState,\n            newState,\n            oldProps\n          ) ||\n          (null !== current &&\n            null !== current.dependencies &&\n            checkIfContextChanged(current.dependencies)))\n          ? (oldContext ||\n              (\"function\" !== typeof context.UNSAFE_componentWillUpdate &&\n                \"function\" !== typeof context.componentWillUpdate) ||\n              (\"function\" === typeof context.componentWillUpdate &&\n                context.componentWillUpdate(nextProps, newState, oldProps),\n              \"function\" === typeof context.UNSAFE_componentWillUpdate &&\n                context.UNSAFE_componentWillUpdate(\n                  nextProps,\n                  newState,\n                  oldProps\n                )),\n            \"function\" === typeof context.componentDidUpdate &&\n              (workInProgress.flags |= 4),\n            \"function\" === typeof context.getSnapshotBeforeUpdate &&\n              (workInProgress.flags |= 1024))\n          : (\"function\" !== typeof context.componentDidUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 4),\n            \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n              (contextType === current.memoizedProps &&\n                oldState === current.memoizedState) ||\n              (workInProgress.flags |= 1024),\n            (workInProgress.memoizedProps = nextProps),\n            (workInProgress.memoizedState = newState)),\n        (context.props = nextProps),\n        (context.state = newState),\n        (context.context = oldProps),\n        (nextProps = contextType$jscomp$0))\n      : (\"function\" !== typeof context.componentDidUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 4),\n        \"function\" !== typeof context.getSnapshotBeforeUpdate ||\n          (contextType === current.memoizedProps &&\n            oldState === current.memoizedState) ||\n          (workInProgress.flags |= 1024),\n        (nextProps = !1));\n  }\n  context = nextProps;\n  markRef(current, workInProgress);\n  nextProps = 0 !== (workInProgress.flags & 128);\n  context || nextProps\n    ? ((context = workInProgress.stateNode),\n      (Component =\n        nextProps && \"function\" !== typeof Component.getDerivedStateFromError\n          ? null\n          : context.render()),\n      (workInProgress.flags |= 1),\n      null !== current && nextProps\n        ? ((workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            current.child,\n            null,\n            renderLanes\n          )),\n          (workInProgress.child = reconcileChildFibers(\n            workInProgress,\n            null,\n            Component,\n            renderLanes\n          )))\n        : reconcileChildren(current, workInProgress, Component, renderLanes),\n      (workInProgress.memoizedState = context.state),\n      (current = workInProgress.child))\n    : (current = bailoutOnAlreadyFinishedWork(\n        current,\n        workInProgress,\n        renderLanes\n      ));\n  return current;\n}\nfunction mountHostRootWithoutHydrating(\n  current,\n  workInProgress,\n  nextChildren,\n  renderLanes\n) {\n  resetHydrationState();\n  workInProgress.flags |= 256;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\nvar SUSPENDED_MARKER = { dehydrated: null, treeContext: null, retryLane: 0 };\nfunction mountSuspenseOffscreenState(renderLanes) {\n  return { baseLanes: renderLanes, cachePool: getSuspendedCache() };\n}\nfunction getRemainingWorkInPrimaryTree(\n  current,\n  primaryTreeDidDefer,\n  renderLanes\n) {\n  current = null !== current ? current.childLanes & ~renderLanes : 0;\n  primaryTreeDidDefer && (current |= workInProgressDeferredLane);\n  return current;\n}\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    showFallback = !1,\n    didSuspend = 0 !== (workInProgress.flags & 128),\n    JSCompiler_temp;\n  (JSCompiler_temp = didSuspend) ||\n    (JSCompiler_temp =\n      null !== current && null === current.memoizedState\n        ? !1\n        : 0 !== (suspenseStackCursor.current & 2));\n  JSCompiler_temp && ((showFallback = !0), (workInProgress.flags &= -129));\n  JSCompiler_temp = 0 !== (workInProgress.flags & 32);\n  workInProgress.flags &= -33;\n  if (null === current) {\n    if (isHydrating) {\n      showFallback\n        ? pushPrimaryTreeSuspenseHandler(workInProgress)\n        : reuseSuspenseHandlerOnStack(workInProgress);\n      if (isHydrating) {\n        var nextInstance = nextHydratableInstance,\n          JSCompiler_temp$jscomp$0;\n        if ((JSCompiler_temp$jscomp$0 = nextInstance)) {\n          c: {\n            JSCompiler_temp$jscomp$0 = nextInstance;\n            for (\n              nextInstance = rootOrSingletonContext;\n              8 !== JSCompiler_temp$jscomp$0.nodeType;\n\n            ) {\n              if (!nextInstance) {\n                nextInstance = null;\n                break c;\n              }\n              JSCompiler_temp$jscomp$0 = getNextHydratable(\n                JSCompiler_temp$jscomp$0.nextSibling\n              );\n              if (null === JSCompiler_temp$jscomp$0) {\n                nextInstance = null;\n                break c;\n              }\n            }\n            nextInstance = JSCompiler_temp$jscomp$0;\n          }\n          null !== nextInstance\n            ? ((workInProgress.memoizedState = {\n                dehydrated: nextInstance,\n                treeContext:\n                  null !== treeContextProvider\n                    ? { id: treeContextId, overflow: treeContextOverflow }\n                    : null,\n                retryLane: 536870912\n              }),\n              (JSCompiler_temp$jscomp$0 = createFiberImplClass(\n                18,\n                null,\n                null,\n                0\n              )),\n              (JSCompiler_temp$jscomp$0.stateNode = nextInstance),\n              (JSCompiler_temp$jscomp$0.return = workInProgress),\n              (workInProgress.child = JSCompiler_temp$jscomp$0),\n              (hydrationParentFiber = workInProgress),\n              (nextHydratableInstance = null),\n              (JSCompiler_temp$jscomp$0 = !0))\n            : (JSCompiler_temp$jscomp$0 = !1);\n        }\n        JSCompiler_temp$jscomp$0 || throwOnHydrationMismatch(workInProgress);\n      }\n      nextInstance = workInProgress.memoizedState;\n      if (\n        null !== nextInstance &&\n        ((nextInstance = nextInstance.dehydrated), null !== nextInstance)\n      )\n        return (\n          \"$!\" === nextInstance.data\n            ? (workInProgress.lanes = 16)\n            : (workInProgress.lanes = 536870912),\n          null\n        );\n      popSuspenseHandler(workInProgress);\n    }\n    nextInstance = nextProps.children;\n    nextProps = nextProps.fallback;\n    if (showFallback)\n      return (\n        reuseSuspenseHandlerOnStack(workInProgress),\n        (showFallback = workInProgress.mode),\n        (nextInstance = mountWorkInProgressOffscreenFiber(\n          { mode: \"hidden\", children: nextInstance },\n          showFallback\n        )),\n        (nextProps = createFiberFromFragment(\n          nextProps,\n          showFallback,\n          renderLanes,\n          null\n        )),\n        (nextInstance.return = workInProgress),\n        (nextProps.return = workInProgress),\n        (nextInstance.sibling = nextProps),\n        (workInProgress.child = nextInstance),\n        (showFallback = workInProgress.child),\n        (showFallback.memoizedState = mountSuspenseOffscreenState(renderLanes)),\n        (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          JSCompiler_temp,\n          renderLanes\n        )),\n        (workInProgress.memoizedState = SUSPENDED_MARKER),\n        nextProps\n      );\n    pushPrimaryTreeSuspenseHandler(workInProgress);\n    return mountSuspensePrimaryChildren(workInProgress, nextInstance);\n  }\n  JSCompiler_temp$jscomp$0 = current.memoizedState;\n  if (\n    null !== JSCompiler_temp$jscomp$0 &&\n    ((nextInstance = JSCompiler_temp$jscomp$0.dehydrated),\n    null !== nextInstance)\n  ) {\n    if (didSuspend)\n      workInProgress.flags & 256\n        ? (pushPrimaryTreeSuspenseHandler(workInProgress),\n          (workInProgress.flags &= -257),\n          (workInProgress = retrySuspenseComponentWithoutHydrating(\n            current,\n            workInProgress,\n            renderLanes\n          )))\n        : null !== workInProgress.memoizedState\n          ? (reuseSuspenseHandlerOnStack(workInProgress),\n            (workInProgress.child = current.child),\n            (workInProgress.flags |= 128),\n            (workInProgress = null))\n          : (reuseSuspenseHandlerOnStack(workInProgress),\n            (showFallback = nextProps.fallback),\n            (nextInstance = workInProgress.mode),\n            (nextProps = mountWorkInProgressOffscreenFiber(\n              { mode: \"visible\", children: nextProps.children },\n              nextInstance\n            )),\n            (showFallback = createFiberFromFragment(\n              showFallback,\n              nextInstance,\n              renderLanes,\n              null\n            )),\n            (showFallback.flags |= 2),\n            (nextProps.return = workInProgress),\n            (showFallback.return = workInProgress),\n            (nextProps.sibling = showFallback),\n            (workInProgress.child = nextProps),\n            reconcileChildFibers(\n              workInProgress,\n              current.child,\n              null,\n              renderLanes\n            ),\n            (nextProps = workInProgress.child),\n            (nextProps.memoizedState =\n              mountSuspenseOffscreenState(renderLanes)),\n            (nextProps.childLanes = getRemainingWorkInPrimaryTree(\n              current,\n              JSCompiler_temp,\n              renderLanes\n            )),\n            (workInProgress.memoizedState = SUSPENDED_MARKER),\n            (workInProgress = showFallback));\n    else if (\n      (pushPrimaryTreeSuspenseHandler(workInProgress),\n      \"$!\" === nextInstance.data)\n    ) {\n      JSCompiler_temp =\n        nextInstance.nextSibling && nextInstance.nextSibling.dataset;\n      if (JSCompiler_temp) var digest = JSCompiler_temp.dgst;\n      JSCompiler_temp = digest;\n      nextProps = Error(formatProdErrorMessage(419));\n      nextProps.stack = \"\";\n      nextProps.digest = JSCompiler_temp;\n      queueHydrationError({ value: nextProps, source: null, stack: null });\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else if (\n      (didReceiveUpdate ||\n        propagateParentContextChanges(current, workInProgress, renderLanes, !1),\n      (JSCompiler_temp = 0 !== (renderLanes & current.childLanes)),\n      didReceiveUpdate || JSCompiler_temp)\n    ) {\n      JSCompiler_temp = workInProgressRoot;\n      if (null !== JSCompiler_temp) {\n        nextProps = renderLanes & -renderLanes;\n        if (0 !== (nextProps & 42)) nextProps = 1;\n        else\n          switch (nextProps) {\n            case 2:\n              nextProps = 1;\n              break;\n            case 8:\n              nextProps = 4;\n              break;\n            case 32:\n              nextProps = 16;\n              break;\n            case 128:\n            case 256:\n            case 512:\n            case 1024:\n            case 2048:\n            case 4096:\n            case 8192:\n            case 16384:\n            case 32768:\n            case 65536:\n            case 131072:\n            case 262144:\n            case 524288:\n            case 1048576:\n            case 2097152:\n            case 4194304:\n            case 8388608:\n            case 16777216:\n            case 33554432:\n              nextProps = 64;\n              break;\n            case 268435456:\n              nextProps = 134217728;\n              break;\n            default:\n              nextProps = 0;\n          }\n        nextProps =\n          0 !== (nextProps & (JSCompiler_temp.suspendedLanes | renderLanes))\n            ? 0\n            : nextProps;\n        if (0 !== nextProps && nextProps !== JSCompiler_temp$jscomp$0.retryLane)\n          throw (\n            ((JSCompiler_temp$jscomp$0.retryLane = nextProps),\n            enqueueConcurrentRenderForLane(current, nextProps),\n            scheduleUpdateOnFiber(JSCompiler_temp, current, nextProps),\n            SelectiveHydrationException)\n          );\n      }\n      \"$?\" === nextInstance.data || renderDidSuspendDelayIfPossible();\n      workInProgress = retrySuspenseComponentWithoutHydrating(\n        current,\n        workInProgress,\n        renderLanes\n      );\n    } else\n      \"$?\" === nextInstance.data\n        ? ((workInProgress.flags |= 128),\n          (workInProgress.child = current.child),\n          (workInProgress = retryDehydratedSuspenseBoundary.bind(\n            null,\n            current\n          )),\n          (nextInstance._reactRetry = workInProgress),\n          (workInProgress = null))\n        : ((current = JSCompiler_temp$jscomp$0.treeContext),\n          (nextHydratableInstance = getNextHydratable(\n            nextInstance.nextSibling\n          )),\n          (hydrationParentFiber = workInProgress),\n          (isHydrating = !0),\n          (hydrationErrors = null),\n          (rootOrSingletonContext = !1),\n          null !== current &&\n            ((idStack[idStackIndex++] = treeContextId),\n            (idStack[idStackIndex++] = treeContextOverflow),\n            (idStack[idStackIndex++] = treeContextProvider),\n            (treeContextId = current.id),\n            (treeContextOverflow = current.overflow),\n            (treeContextProvider = workInProgress)),\n          (workInProgress = mountSuspensePrimaryChildren(\n            workInProgress,\n            nextProps.children\n          )),\n          (workInProgress.flags |= 4096));\n    return workInProgress;\n  }\n  if (showFallback)\n    return (\n      reuseSuspenseHandlerOnStack(workInProgress),\n      (showFallback = nextProps.fallback),\n      (nextInstance = workInProgress.mode),\n      (JSCompiler_temp$jscomp$0 = current.child),\n      (digest = JSCompiler_temp$jscomp$0.sibling),\n      (nextProps = createWorkInProgress(JSCompiler_temp$jscomp$0, {\n        mode: \"hidden\",\n        children: nextProps.children\n      })),\n      (nextProps.subtreeFlags =\n        JSCompiler_temp$jscomp$0.subtreeFlags & 31457280),\n      null !== digest\n        ? (showFallback = createWorkInProgress(digest, showFallback))\n        : ((showFallback = createFiberFromFragment(\n            showFallback,\n            nextInstance,\n            renderLanes,\n            null\n          )),\n          (showFallback.flags |= 2)),\n      (showFallback.return = workInProgress),\n      (nextProps.return = workInProgress),\n      (nextProps.sibling = showFallback),\n      (workInProgress.child = nextProps),\n      (nextProps = showFallback),\n      (showFallback = workInProgress.child),\n      (nextInstance = current.child.memoizedState),\n      null === nextInstance\n        ? (nextInstance = mountSuspenseOffscreenState(renderLanes))\n        : ((JSCompiler_temp$jscomp$0 = nextInstance.cachePool),\n          null !== JSCompiler_temp$jscomp$0\n            ? ((digest = CacheContext._currentValue),\n              (JSCompiler_temp$jscomp$0 =\n                JSCompiler_temp$jscomp$0.parent !== digest\n                  ? { parent: digest, pool: digest }\n                  : JSCompiler_temp$jscomp$0))\n            : (JSCompiler_temp$jscomp$0 = getSuspendedCache()),\n          (nextInstance = {\n            baseLanes: nextInstance.baseLanes | renderLanes,\n            cachePool: JSCompiler_temp$jscomp$0\n          })),\n      (showFallback.memoizedState = nextInstance),\n      (showFallback.childLanes = getRemainingWorkInPrimaryTree(\n        current,\n        JSCompiler_temp,\n        renderLanes\n      )),\n      (workInProgress.memoizedState = SUSPENDED_MARKER),\n      nextProps\n    );\n  pushPrimaryTreeSuspenseHandler(workInProgress);\n  renderLanes = current.child;\n  current = renderLanes.sibling;\n  renderLanes = createWorkInProgress(renderLanes, {\n    mode: \"visible\",\n    children: nextProps.children\n  });\n  renderLanes.return = workInProgress;\n  renderLanes.sibling = null;\n  null !== current &&\n    ((JSCompiler_temp = workInProgress.deletions),\n    null === JSCompiler_temp\n      ? ((workInProgress.deletions = [current]), (workInProgress.flags |= 16))\n      : JSCompiler_temp.push(current));\n  workInProgress.child = renderLanes;\n  workInProgress.memoizedState = null;\n  return renderLanes;\n}\nfunction mountSuspensePrimaryChildren(workInProgress, primaryChildren) {\n  primaryChildren = mountWorkInProgressOffscreenFiber(\n    { mode: \"visible\", children: primaryChildren },\n    workInProgress.mode\n  );\n  primaryChildren.return = workInProgress;\n  return (workInProgress.child = primaryChildren);\n}\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode) {\n  return createFiberFromOffscreen(offscreenProps, mode, 0, null);\n}\nfunction retrySuspenseComponentWithoutHydrating(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  current = mountSuspensePrimaryChildren(\n    workInProgress,\n    workInProgress.pendingProps.children\n  );\n  current.flags |= 2;\n  workInProgress.memoizedState = null;\n  return current;\n}\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n  fiber.lanes |= renderLanes;\n  var alternate = fiber.alternate;\n  null !== alternate && (alternate.lanes |= renderLanes);\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\nfunction initSuspenseListRenderState(\n  workInProgress,\n  isBackwards,\n  tail,\n  lastContentRow,\n  tailMode\n) {\n  var renderState = workInProgress.memoizedState;\n  null === renderState\n    ? (workInProgress.memoizedState = {\n        isBackwards: isBackwards,\n        rendering: null,\n        renderingStartTime: 0,\n        last: lastContentRow,\n        tail: tail,\n        tailMode: tailMode\n      })\n    : ((renderState.isBackwards = isBackwards),\n      (renderState.rendering = null),\n      (renderState.renderingStartTime = 0),\n      (renderState.last = lastContentRow),\n      (renderState.tail = tail),\n      (renderState.tailMode = tailMode));\n}\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps,\n    revealOrder = nextProps.revealOrder,\n    tailMode = nextProps.tail;\n  reconcileChildren(current, workInProgress, nextProps.children, renderLanes);\n  nextProps = suspenseStackCursor.current;\n  if (0 !== (nextProps & 2))\n    (nextProps = (nextProps & 1) | 2), (workInProgress.flags |= 128);\n  else {\n    if (null !== current && 0 !== (current.flags & 128))\n      a: for (current = workInProgress.child; null !== current; ) {\n        if (13 === current.tag)\n          null !== current.memoizedState &&\n            scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (19 === current.tag)\n          scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);\n        else if (null !== current.child) {\n          current.child.return = current;\n          current = current.child;\n          continue;\n        }\n        if (current === workInProgress) break a;\n        for (; null === current.sibling; ) {\n          if (null === current.return || current.return === workInProgress)\n            break a;\n          current = current.return;\n        }\n        current.sibling.return = current.return;\n        current = current.sibling;\n      }\n    nextProps &= 1;\n  }\n  push(suspenseStackCursor, nextProps);\n  switch (revealOrder) {\n    case \"forwards\":\n      renderLanes = workInProgress.child;\n      for (revealOrder = null; null !== renderLanes; )\n        (current = renderLanes.alternate),\n          null !== current &&\n            null === findFirstSuspended(current) &&\n            (revealOrder = renderLanes),\n          (renderLanes = renderLanes.sibling);\n      renderLanes = revealOrder;\n      null === renderLanes\n        ? ((revealOrder = workInProgress.child), (workInProgress.child = null))\n        : ((revealOrder = renderLanes.sibling), (renderLanes.sibling = null));\n      initSuspenseListRenderState(\n        workInProgress,\n        !1,\n        revealOrder,\n        renderLanes,\n        tailMode\n      );\n      break;\n    case \"backwards\":\n      renderLanes = null;\n      revealOrder = workInProgress.child;\n      for (workInProgress.child = null; null !== revealOrder; ) {\n        current = revealOrder.alternate;\n        if (null !== current && null === findFirstSuspended(current)) {\n          workInProgress.child = revealOrder;\n          break;\n        }\n        current = revealOrder.sibling;\n        revealOrder.sibling = renderLanes;\n        renderLanes = revealOrder;\n        revealOrder = current;\n      }\n      initSuspenseListRenderState(\n        workInProgress,\n        !0,\n        renderLanes,\n        null,\n        tailMode\n      );\n      break;\n    case \"together\":\n      initSuspenseListRenderState(workInProgress, !1, null, null, void 0);\n      break;\n    default:\n      workInProgress.memoizedState = null;\n  }\n  return workInProgress.child;\n}\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n  null !== current && (workInProgress.dependencies = current.dependencies);\n  workInProgressRootSkippedLanes |= workInProgress.lanes;\n  if (0 === (renderLanes & workInProgress.childLanes))\n    if (null !== current) {\n      if (\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        0 === (renderLanes & workInProgress.childLanes))\n      )\n        return null;\n    } else return null;\n  if (null !== current && workInProgress.child !== current.child)\n    throw Error(formatProdErrorMessage(153));\n  if (null !== workInProgress.child) {\n    current = workInProgress.child;\n    renderLanes = createWorkInProgress(current, current.pendingProps);\n    workInProgress.child = renderLanes;\n    for (renderLanes.return = workInProgress; null !== current.sibling; )\n      (current = current.sibling),\n        (renderLanes = renderLanes.sibling =\n          createWorkInProgress(current, current.pendingProps)),\n        (renderLanes.return = workInProgress);\n    renderLanes.sibling = null;\n  }\n  return workInProgress.child;\n}\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\n  if (0 !== (current.lanes & renderLanes)) return !0;\n  current = current.dependencies;\n  return null !== current && checkIfContextChanged(current) ? !0 : !1;\n}\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\n  current,\n  workInProgress,\n  renderLanes\n) {\n  switch (workInProgress.tag) {\n    case 3:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n      resetHydrationState();\n      break;\n    case 27:\n    case 5:\n      pushHostContext(workInProgress);\n      break;\n    case 4:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n    case 10:\n      pushProvider(\n        workInProgress,\n        workInProgress.type,\n        workInProgress.memoizedProps.value\n      );\n      break;\n    case 13:\n      var state = workInProgress.memoizedState;\n      if (null !== state) {\n        if (null !== state.dehydrated)\n          return (\n            pushPrimaryTreeSuspenseHandler(workInProgress),\n            (workInProgress.flags |= 128),\n            null\n          );\n        if (0 !== (renderLanes & workInProgress.child.childLanes))\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        pushPrimaryTreeSuspenseHandler(workInProgress);\n        current = bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes\n        );\n        return null !== current ? current.sibling : null;\n      }\n      pushPrimaryTreeSuspenseHandler(workInProgress);\n      break;\n    case 19:\n      var didSuspendBefore = 0 !== (current.flags & 128);\n      state = 0 !== (renderLanes & workInProgress.childLanes);\n      state ||\n        (propagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n          !1\n        ),\n        (state = 0 !== (renderLanes & workInProgress.childLanes)));\n      if (didSuspendBefore) {\n        if (state)\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes\n          );\n        workInProgress.flags |= 128;\n      }\n      didSuspendBefore = workInProgress.memoizedState;\n      null !== didSuspendBefore &&\n        ((didSuspendBefore.rendering = null),\n        (didSuspendBefore.tail = null),\n        (didSuspendBefore.lastEffect = null));\n      push(suspenseStackCursor, suspenseStackCursor.current);\n      if (state) break;\n      else return null;\n    case 22:\n    case 23:\n      return (\n        (workInProgress.lanes = 0),\n        updateOffscreenComponent(current, workInProgress, renderLanes)\n      );\n    case 24:\n      pushProvider(workInProgress, CacheContext, current.memoizedState.cache);\n  }\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\nfunction beginWork(current, workInProgress, renderLanes) {\n  if (null !== current)\n    if (current.memoizedProps !== workInProgress.pendingProps)\n      didReceiveUpdate = !0;\n    else {\n      if (\n        !checkScheduledUpdateOrContext(current, renderLanes) &&\n        0 === (workInProgress.flags & 128)\n      )\n        return (\n          (didReceiveUpdate = !1),\n          attemptEarlyBailoutIfNoScheduledUpdate(\n            current,\n            workInProgress,\n            renderLanes\n          )\n        );\n      didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;\n    }\n  else\n    (didReceiveUpdate = !1),\n      isHydrating &&\n        0 !== (workInProgress.flags & 1048576) &&\n        pushTreeId(workInProgress, treeForkCount, workInProgress.index);\n  workInProgress.lanes = 0;\n  switch (workInProgress.tag) {\n    case 16:\n      a: {\n        current = workInProgress.pendingProps;\n        var lazyComponent = workInProgress.elementType,\n          init = lazyComponent._init;\n        lazyComponent = init(lazyComponent._payload);\n        workInProgress.type = lazyComponent;\n        if (\"function\" === typeof lazyComponent)\n          shouldConstruct(lazyComponent)\n            ? ((current = resolveClassComponentProps(lazyComponent, current)),\n              (workInProgress.tag = 1),\n              (workInProgress = updateClassComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )))\n            : ((workInProgress.tag = 0),\n              (workInProgress = updateFunctionComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              )));\n        else {\n          if (void 0 !== lazyComponent && null !== lazyComponent)\n            if (\n              ((init = lazyComponent.$$typeof), init === REACT_FORWARD_REF_TYPE)\n            ) {\n              workInProgress.tag = 11;\n              workInProgress = updateForwardRef(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            } else if (init === REACT_MEMO_TYPE) {\n              workInProgress.tag = 14;\n              workInProgress = updateMemoComponent(\n                null,\n                workInProgress,\n                lazyComponent,\n                current,\n                renderLanes\n              );\n              break a;\n            }\n          workInProgress =\n            getComponentNameFromType(lazyComponent) || lazyComponent;\n          throw Error(formatProdErrorMessage(306, workInProgress, \"\"));\n        }\n      }\n      return workInProgress;\n    case 0:\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 1:\n      return (\n        (lazyComponent = workInProgress.type),\n        (init = resolveClassComponentProps(\n          lazyComponent,\n          workInProgress.pendingProps\n        )),\n        updateClassComponent(\n          current,\n          workInProgress,\n          lazyComponent,\n          init,\n          renderLanes\n        )\n      );\n    case 3:\n      a: {\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        );\n        if (null === current) throw Error(formatProdErrorMessage(387));\n        var nextProps = workInProgress.pendingProps;\n        init = workInProgress.memoizedState;\n        lazyComponent = init.element;\n        cloneUpdateQueue(current, workInProgress);\n        processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n        var nextState = workInProgress.memoizedState;\n        nextProps = nextState.cache;\n        pushProvider(workInProgress, CacheContext, nextProps);\n        nextProps !== init.cache &&\n          propagateContextChanges(\n            workInProgress,\n            [CacheContext],\n            renderLanes,\n            !0\n          );\n        suspendIfUpdateReadFromEntangledAsyncAction();\n        nextProps = nextState.element;\n        if (init.isDehydrated)\n          if (\n            ((init = {\n              element: nextProps,\n              isDehydrated: !1,\n              cache: nextState.cache\n            }),\n            (workInProgress.updateQueue.baseState = init),\n            (workInProgress.memoizedState = init),\n            workInProgress.flags & 256)\n          ) {\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              nextProps,\n              renderLanes\n            );\n            break a;\n          } else if (nextProps !== lazyComponent) {\n            lazyComponent = createCapturedValueAtFiber(\n              Error(formatProdErrorMessage(424)),\n              workInProgress\n            );\n            queueHydrationError(lazyComponent);\n            workInProgress = mountHostRootWithoutHydrating(\n              current,\n              workInProgress,\n              nextProps,\n              renderLanes\n            );\n            break a;\n          } else\n            for (\n              nextHydratableInstance = getNextHydratable(\n                workInProgress.stateNode.containerInfo.firstChild\n              ),\n                hydrationParentFiber = workInProgress,\n                isHydrating = !0,\n                hydrationErrors = null,\n                rootOrSingletonContext = !0,\n                renderLanes = mountChildFibers(\n                  workInProgress,\n                  null,\n                  nextProps,\n                  renderLanes\n                ),\n                workInProgress.child = renderLanes;\n              renderLanes;\n\n            )\n              (renderLanes.flags = (renderLanes.flags & -3) | 4096),\n                (renderLanes = renderLanes.sibling);\n        else {\n          resetHydrationState();\n          if (nextProps === lazyComponent) {\n            workInProgress = bailoutOnAlreadyFinishedWork(\n              current,\n              workInProgress,\n              renderLanes\n            );\n            break a;\n          }\n          reconcileChildren(current, workInProgress, nextProps, renderLanes);\n        }\n        workInProgress = workInProgress.child;\n      }\n      return workInProgress;\n    case 26:\n      return (\n        markRef(current, workInProgress),\n        null === current\n          ? (renderLanes = getResource(\n              workInProgress.type,\n              null,\n              workInProgress.pendingProps,\n              null\n            ))\n            ? (workInProgress.memoizedState = renderLanes)\n            : isHydrating ||\n              ((renderLanes = workInProgress.type),\n              (current = workInProgress.pendingProps),\n              (lazyComponent = getOwnerDocumentFromRootContainer(\n                rootInstanceStackCursor.current\n              ).createElement(renderLanes)),\n              (lazyComponent[internalInstanceKey] = workInProgress),\n              (lazyComponent[internalPropsKey] = current),\n              setInitialProperties(lazyComponent, renderLanes, current),\n              markNodeAsHoistable(lazyComponent),\n              (workInProgress.stateNode = lazyComponent))\n          : (workInProgress.memoizedState = getResource(\n              workInProgress.type,\n              current.memoizedProps,\n              workInProgress.pendingProps,\n              current.memoizedState\n            )),\n        null\n      );\n    case 27:\n      return (\n        pushHostContext(workInProgress),\n        null === current &&\n          isHydrating &&\n          ((lazyComponent = workInProgress.stateNode =\n            resolveSingletonInstance(\n              workInProgress.type,\n              workInProgress.pendingProps,\n              rootInstanceStackCursor.current\n            )),\n          (hydrationParentFiber = workInProgress),\n          (rootOrSingletonContext = !0),\n          (nextHydratableInstance = getNextHydratable(\n            lazyComponent.firstChild\n          ))),\n        (lazyComponent = workInProgress.pendingProps.children),\n        null !== current || isHydrating\n          ? reconcileChildren(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            )\n          : (workInProgress.child = reconcileChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            )),\n        markRef(current, workInProgress),\n        workInProgress.child\n      );\n    case 5:\n      if (null === current && isHydrating) {\n        if ((init = lazyComponent = nextHydratableInstance))\n          (lazyComponent = canHydrateInstance(\n            lazyComponent,\n            workInProgress.type,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== lazyComponent\n              ? ((workInProgress.stateNode = lazyComponent),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = getNextHydratable(\n                  lazyComponent.firstChild\n                )),\n                (rootOrSingletonContext = !1),\n                (init = !0))\n              : (init = !1);\n        init || throwOnHydrationMismatch(workInProgress);\n      }\n      pushHostContext(workInProgress);\n      init = workInProgress.type;\n      nextProps = workInProgress.pendingProps;\n      nextState = null !== current ? current.memoizedProps : null;\n      lazyComponent = nextProps.children;\n      shouldSetTextContent(init, nextProps)\n        ? (lazyComponent = null)\n        : null !== nextState &&\n          shouldSetTextContent(init, nextState) &&\n          (workInProgress.flags |= 32);\n      null !== workInProgress.memoizedState &&\n        ((init = renderWithHooks(\n          current,\n          workInProgress,\n          TransitionAwareHostComponent,\n          null,\n          null,\n          renderLanes\n        )),\n        (HostTransitionContext._currentValue = init));\n      markRef(current, workInProgress);\n      reconcileChildren(current, workInProgress, lazyComponent, renderLanes);\n      return workInProgress.child;\n    case 6:\n      if (null === current && isHydrating) {\n        if ((current = renderLanes = nextHydratableInstance))\n          (renderLanes = canHydrateTextInstance(\n            renderLanes,\n            workInProgress.pendingProps,\n            rootOrSingletonContext\n          )),\n            null !== renderLanes\n              ? ((workInProgress.stateNode = renderLanes),\n                (hydrationParentFiber = workInProgress),\n                (nextHydratableInstance = null),\n                (current = !0))\n              : (current = !1);\n        current || throwOnHydrationMismatch(workInProgress);\n      }\n      return null;\n    case 13:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n    case 4:\n      return (\n        pushHostContainer(\n          workInProgress,\n          workInProgress.stateNode.containerInfo\n        ),\n        (lazyComponent = workInProgress.pendingProps),\n        null === current\n          ? (workInProgress.child = reconcileChildFibers(\n              workInProgress,\n              null,\n              lazyComponent,\n              renderLanes\n            ))\n          : reconcileChildren(\n              current,\n              workInProgress,\n              lazyComponent,\n              renderLanes\n            ),\n        workInProgress.child\n      );\n    case 11:\n      return updateForwardRef(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 7:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 8:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 12:\n      return (\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 10:\n      return (\n        (lazyComponent = workInProgress.pendingProps),\n        pushProvider(workInProgress, workInProgress.type, lazyComponent.value),\n        reconcileChildren(\n          current,\n          workInProgress,\n          lazyComponent.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 9:\n      return (\n        (init = workInProgress.type._context),\n        (lazyComponent = workInProgress.pendingProps.children),\n        prepareToReadContext(workInProgress),\n        (init = readContext(init)),\n        (lazyComponent = lazyComponent(init)),\n        (workInProgress.flags |= 1),\n        reconcileChildren(current, workInProgress, lazyComponent, renderLanes),\n        workInProgress.child\n      );\n    case 14:\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 15:\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes\n      );\n    case 19:\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    case 22:\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    case 24:\n      return (\n        prepareToReadContext(workInProgress),\n        (lazyComponent = readContext(CacheContext)),\n        null === current\n          ? ((init = peekCacheFromPool()),\n            null === init &&\n              ((init = workInProgressRoot),\n              (nextProps = createCache()),\n              (init.pooledCache = nextProps),\n              nextProps.refCount++,\n              null !== nextProps && (init.pooledCacheLanes |= renderLanes),\n              (init = nextProps)),\n            (workInProgress.memoizedState = {\n              parent: lazyComponent,\n              cache: init\n            }),\n            initializeUpdateQueue(workInProgress),\n            pushProvider(workInProgress, CacheContext, init))\n          : (0 !== (current.lanes & renderLanes) &&\n              (cloneUpdateQueue(current, workInProgress),\n              processUpdateQueue(workInProgress, null, null, renderLanes),\n              suspendIfUpdateReadFromEntangledAsyncAction()),\n            (init = current.memoizedState),\n            (nextProps = workInProgress.memoizedState),\n            init.parent !== lazyComponent\n              ? ((init = { parent: lazyComponent, cache: lazyComponent }),\n                (workInProgress.memoizedState = init),\n                0 === workInProgress.lanes &&\n                  (workInProgress.memoizedState =\n                    workInProgress.updateQueue.baseState =\n                      init),\n                pushProvider(workInProgress, CacheContext, lazyComponent))\n              : ((lazyComponent = nextProps.cache),\n                pushProvider(workInProgress, CacheContext, lazyComponent),\n                lazyComponent !== init.cache &&\n                  propagateContextChanges(\n                    workInProgress,\n                    [CacheContext],\n                    renderLanes,\n                    !0\n                  ))),\n        reconcileChildren(\n          current,\n          workInProgress,\n          workInProgress.pendingProps.children,\n          renderLanes\n        ),\n        workInProgress.child\n      );\n    case 29:\n      throw workInProgress.pendingProps;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nvar valueCursor = createCursor(null),\n  currentlyRenderingFiber = null,\n  lastContextDependency = null;\nfunction pushProvider(providerFiber, context, nextValue) {\n  push(valueCursor, context._currentValue);\n  context._currentValue = nextValue;\n}\nfunction popProvider(context) {\n  context._currentValue = valueCursor.current;\n  pop(valueCursor);\n}\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n  for (; null !== parent; ) {\n    var alternate = parent.alternate;\n    (parent.childLanes & renderLanes) !== renderLanes\n      ? ((parent.childLanes |= renderLanes),\n        null !== alternate && (alternate.childLanes |= renderLanes))\n      : null !== alternate &&\n        (alternate.childLanes & renderLanes) !== renderLanes &&\n        (alternate.childLanes |= renderLanes);\n    if (parent === propagationRoot) break;\n    parent = parent.return;\n  }\n}\nfunction propagateContextChanges(\n  workInProgress,\n  contexts,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  var fiber = workInProgress.child;\n  null !== fiber && (fiber.return = workInProgress);\n  for (; null !== fiber; ) {\n    var list = fiber.dependencies;\n    if (null !== list) {\n      var nextFiber = fiber.child;\n      list = list.firstContext;\n      a: for (; null !== list; ) {\n        var dependency = list;\n        list = fiber;\n        for (var i = 0; i < contexts.length; i++)\n          if (dependency.context === contexts[i]) {\n            list.lanes |= renderLanes;\n            dependency = list.alternate;\n            null !== dependency && (dependency.lanes |= renderLanes);\n            scheduleContextWorkOnParentPath(\n              list.return,\n              renderLanes,\n              workInProgress\n            );\n            forcePropagateEntireTree || (nextFiber = null);\n            break a;\n          }\n        list = dependency.next;\n      }\n    } else if (18 === fiber.tag) {\n      nextFiber = fiber.return;\n      if (null === nextFiber) throw Error(formatProdErrorMessage(341));\n      nextFiber.lanes |= renderLanes;\n      list = nextFiber.alternate;\n      null !== list && (list.lanes |= renderLanes);\n      scheduleContextWorkOnParentPath(nextFiber, renderLanes, workInProgress);\n      nextFiber = null;\n    } else nextFiber = fiber.child;\n    if (null !== nextFiber) nextFiber.return = fiber;\n    else\n      for (nextFiber = fiber; null !== nextFiber; ) {\n        if (nextFiber === workInProgress) {\n          nextFiber = null;\n          break;\n        }\n        fiber = nextFiber.sibling;\n        if (null !== fiber) {\n          fiber.return = nextFiber.return;\n          nextFiber = fiber;\n          break;\n        }\n        nextFiber = nextFiber.return;\n      }\n    fiber = nextFiber;\n  }\n}\nfunction propagateParentContextChanges(\n  current,\n  workInProgress,\n  renderLanes,\n  forcePropagateEntireTree\n) {\n  current = null;\n  for (\n    var parent = workInProgress, isInsidePropagationBailout = !1;\n    null !== parent;\n\n  ) {\n    if (!isInsidePropagationBailout)\n      if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;\n      else if (0 !== (parent.flags & 262144)) break;\n    if (10 === parent.tag) {\n      var currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent = currentParent.memoizedProps;\n      if (null !== currentParent) {\n        var context = parent.type;\n        objectIs(parent.pendingProps.value, currentParent.value) ||\n          (null !== current ? current.push(context) : (current = [context]));\n      }\n    } else if (parent === hostTransitionProviderCursor.current) {\n      currentParent = parent.alternate;\n      if (null === currentParent) throw Error(formatProdErrorMessage(387));\n      currentParent.memoizedState.memoizedState !==\n        parent.memoizedState.memoizedState &&\n        (null !== current\n          ? current.push(HostTransitionContext)\n          : (current = [HostTransitionContext]));\n    }\n    parent = parent.return;\n  }\n  null !== current &&\n    propagateContextChanges(\n      workInProgress,\n      current,\n      renderLanes,\n      forcePropagateEntireTree\n    );\n  workInProgress.flags |= 262144;\n}\nfunction checkIfContextChanged(currentDependencies) {\n  for (\n    currentDependencies = currentDependencies.firstContext;\n    null !== currentDependencies;\n\n  ) {\n    if (\n      !objectIs(\n        currentDependencies.context._currentValue,\n        currentDependencies.memoizedValue\n      )\n    )\n      return !0;\n    currentDependencies = currentDependencies.next;\n  }\n  return !1;\n}\nfunction prepareToReadContext(workInProgress) {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  workInProgress = workInProgress.dependencies;\n  null !== workInProgress && (workInProgress.firstContext = null);\n}\nfunction readContext(context) {\n  return readContextForConsumer(currentlyRenderingFiber, context);\n}\nfunction readContextDuringReconciliation(consumer, context) {\n  null === currentlyRenderingFiber && prepareToReadContext(consumer);\n  return readContextForConsumer(consumer, context);\n}\nfunction readContextForConsumer(consumer, context) {\n  var value = context._currentValue;\n  context = { context: context, memoizedValue: value, next: null };\n  if (null === lastContextDependency) {\n    if (null === consumer) throw Error(formatProdErrorMessage(308));\n    lastContextDependency = context;\n    consumer.dependencies = { lanes: 0, firstContext: context };\n    consumer.flags |= 524288;\n  } else lastContextDependency = lastContextDependency.next = context;\n  return value;\n}\nvar hasForceUpdate = !1;\nfunction initializeUpdateQueue(fiber) {\n  fiber.updateQueue = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: { pending: null, lanes: 0, hiddenCallbacks: null },\n    callbacks: null\n  };\n}\nfunction cloneUpdateQueue(current, workInProgress) {\n  current = current.updateQueue;\n  workInProgress.updateQueue === current &&\n    (workInProgress.updateQueue = {\n      baseState: current.baseState,\n      firstBaseUpdate: current.firstBaseUpdate,\n      lastBaseUpdate: current.lastBaseUpdate,\n      shared: current.shared,\n      callbacks: null\n    });\n}\nfunction createUpdate(lane) {\n  return { lane: lane, tag: 0, payload: null, callback: null, next: null };\n}\nfunction enqueueUpdate(fiber, update, lane) {\n  var updateQueue = fiber.updateQueue;\n  if (null === updateQueue) return null;\n  updateQueue = updateQueue.shared;\n  if (0 !== (executionContext & 2)) {\n    var pending = updateQueue.pending;\n    null === pending\n      ? (update.next = update)\n      : ((update.next = pending.next), (pending.next = update));\n    updateQueue.pending = update;\n    update = getRootForUpdatedFiber(fiber);\n    markUpdateLaneFromFiberToRoot(fiber, null, lane);\n    return update;\n  }\n  enqueueUpdate$1(fiber, updateQueue, update, lane);\n  return getRootForUpdatedFiber(fiber);\n}\nfunction entangleTransitions(root, fiber, lane) {\n  fiber = fiber.updateQueue;\n  if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194176))) {\n    var queueLanes = fiber.lanes;\n    queueLanes &= root.pendingLanes;\n    lane |= queueLanes;\n    fiber.lanes = lane;\n    markRootEntangled(root, lane);\n  }\n}\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n  var queue = workInProgress.updateQueue,\n    current = workInProgress.alternate;\n  if (\n    null !== current &&\n    ((current = current.updateQueue), queue === current)\n  ) {\n    var newFirst = null,\n      newLast = null;\n    queue = queue.firstBaseUpdate;\n    if (null !== queue) {\n      do {\n        var clone = {\n          lane: queue.lane,\n          tag: queue.tag,\n          payload: queue.payload,\n          callback: null,\n          next: null\n        };\n        null === newLast\n          ? (newFirst = newLast = clone)\n          : (newLast = newLast.next = clone);\n        queue = queue.next;\n      } while (null !== queue);\n      null === newLast\n        ? (newFirst = newLast = capturedUpdate)\n        : (newLast = newLast.next = capturedUpdate);\n    } else newFirst = newLast = capturedUpdate;\n    queue = {\n      baseState: current.baseState,\n      firstBaseUpdate: newFirst,\n      lastBaseUpdate: newLast,\n      shared: current.shared,\n      callbacks: current.callbacks\n    };\n    workInProgress.updateQueue = queue;\n    return;\n  }\n  workInProgress = queue.lastBaseUpdate;\n  null === workInProgress\n    ? (queue.firstBaseUpdate = capturedUpdate)\n    : (workInProgress.next = capturedUpdate);\n  queue.lastBaseUpdate = capturedUpdate;\n}\nvar didReadFromEntangledAsyncAction = !1;\nfunction suspendIfUpdateReadFromEntangledAsyncAction() {\n  if (didReadFromEntangledAsyncAction) {\n    var entangledActionThenable = currentEntangledActionThenable;\n    if (null !== entangledActionThenable) throw entangledActionThenable;\n  }\n}\nfunction processUpdateQueue(\n  workInProgress$jscomp$0,\n  props,\n  instance$jscomp$0,\n  renderLanes\n) {\n  didReadFromEntangledAsyncAction = !1;\n  var queue = workInProgress$jscomp$0.updateQueue;\n  hasForceUpdate = !1;\n  var firstBaseUpdate = queue.firstBaseUpdate,\n    lastBaseUpdate = queue.lastBaseUpdate,\n    pendingQueue = queue.shared.pending;\n  if (null !== pendingQueue) {\n    queue.shared.pending = null;\n    var lastPendingUpdate = pendingQueue,\n      firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null;\n    null === lastBaseUpdate\n      ? (firstBaseUpdate = firstPendingUpdate)\n      : (lastBaseUpdate.next = firstPendingUpdate);\n    lastBaseUpdate = lastPendingUpdate;\n    var current = workInProgress$jscomp$0.alternate;\n    null !== current &&\n      ((current = current.updateQueue),\n      (pendingQueue = current.lastBaseUpdate),\n      pendingQueue !== lastBaseUpdate &&\n        (null === pendingQueue\n          ? (current.firstBaseUpdate = firstPendingUpdate)\n          : (pendingQueue.next = firstPendingUpdate),\n        (current.lastBaseUpdate = lastPendingUpdate)));\n  }\n  if (null !== firstBaseUpdate) {\n    var newState = queue.baseState;\n    lastBaseUpdate = 0;\n    current = firstPendingUpdate = lastPendingUpdate = null;\n    pendingQueue = firstBaseUpdate;\n    do {\n      var updateLane = pendingQueue.lane & -536870913,\n        isHiddenUpdate = updateLane !== pendingQueue.lane;\n      if (\n        isHiddenUpdate\n          ? (workInProgressRootRenderLanes & updateLane) === updateLane\n          : (renderLanes & updateLane) === updateLane\n      ) {\n        0 !== updateLane &&\n          updateLane === currentEntangledLane &&\n          (didReadFromEntangledAsyncAction = !0);\n        null !== current &&\n          (current = current.next =\n            {\n              lane: 0,\n              tag: pendingQueue.tag,\n              payload: pendingQueue.payload,\n              callback: null,\n              next: null\n            });\n        a: {\n          var workInProgress = workInProgress$jscomp$0,\n            update = pendingQueue;\n          updateLane = props;\n          var instance = instance$jscomp$0;\n          switch (update.tag) {\n            case 1:\n              workInProgress = update.payload;\n              if (\"function\" === typeof workInProgress) {\n                newState = workInProgress.call(instance, newState, updateLane);\n                break a;\n              }\n              newState = workInProgress;\n              break a;\n            case 3:\n              workInProgress.flags = (workInProgress.flags & -65537) | 128;\n            case 0:\n              workInProgress = update.payload;\n              updateLane =\n                \"function\" === typeof workInProgress\n                  ? workInProgress.call(instance, newState, updateLane)\n                  : workInProgress;\n              if (null === updateLane || void 0 === updateLane) break a;\n              newState = assign({}, newState, updateLane);\n              break a;\n            case 2:\n              hasForceUpdate = !0;\n          }\n        }\n        updateLane = pendingQueue.callback;\n        null !== updateLane &&\n          ((workInProgress$jscomp$0.flags |= 64),\n          isHiddenUpdate && (workInProgress$jscomp$0.flags |= 8192),\n          (isHiddenUpdate = queue.callbacks),\n          null === isHiddenUpdate\n            ? (queue.callbacks = [updateLane])\n            : isHiddenUpdate.push(updateLane));\n      } else\n        (isHiddenUpdate = {\n          lane: updateLane,\n          tag: pendingQueue.tag,\n          payload: pendingQueue.payload,\n          callback: pendingQueue.callback,\n          next: null\n        }),\n          null === current\n            ? ((firstPendingUpdate = current = isHiddenUpdate),\n              (lastPendingUpdate = newState))\n            : (current = current.next = isHiddenUpdate),\n          (lastBaseUpdate |= updateLane);\n      pendingQueue = pendingQueue.next;\n      if (null === pendingQueue)\n        if (((pendingQueue = queue.shared.pending), null === pendingQueue))\n          break;\n        else\n          (isHiddenUpdate = pendingQueue),\n            (pendingQueue = isHiddenUpdate.next),\n            (isHiddenUpdate.next = null),\n            (queue.lastBaseUpdate = isHiddenUpdate),\n            (queue.shared.pending = null);\n    } while (1);\n    null === current && (lastPendingUpdate = newState);\n    queue.baseState = lastPendingUpdate;\n    queue.firstBaseUpdate = firstPendingUpdate;\n    queue.lastBaseUpdate = current;\n    null === firstBaseUpdate && (queue.shared.lanes = 0);\n    workInProgressRootSkippedLanes |= lastBaseUpdate;\n    workInProgress$jscomp$0.lanes = lastBaseUpdate;\n    workInProgress$jscomp$0.memoizedState = newState;\n  }\n}\nfunction callCallback(callback, context) {\n  if (\"function\" !== typeof callback)\n    throw Error(formatProdErrorMessage(191, callback));\n  callback.call(context);\n}\nfunction commitCallbacks(updateQueue, context) {\n  var callbacks = updateQueue.callbacks;\n  if (null !== callbacks)\n    for (\n      updateQueue.callbacks = null, updateQueue = 0;\n      updateQueue < callbacks.length;\n      updateQueue++\n    )\n      callCallback(callbacks[updateQueue], context);\n}\nfunction commitHookEffectListMount(flags, finishedWork) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          lastEffect = void 0;\n          var create = updateQueue.create,\n            inst = updateQueue.inst;\n          lastEffect = create();\n          inst.destroy = lastEffect;\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHookEffectListUnmount(\n  flags,\n  finishedWork,\n  nearestMountedAncestor$jscomp$0\n) {\n  try {\n    var updateQueue = finishedWork.updateQueue,\n      lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;\n    if (null !== lastEffect) {\n      var firstEffect = lastEffect.next;\n      updateQueue = firstEffect;\n      do {\n        if ((updateQueue.tag & flags) === flags) {\n          var inst = updateQueue.inst,\n            destroy = inst.destroy;\n          if (void 0 !== destroy) {\n            inst.destroy = void 0;\n            lastEffect = finishedWork;\n            var nearestMountedAncestor = nearestMountedAncestor$jscomp$0;\n            try {\n              destroy();\n            } catch (error) {\n              captureCommitPhaseError(\n                lastEffect,\n                nearestMountedAncestor,\n                error\n              );\n            }\n          }\n        }\n        updateQueue = updateQueue.next;\n      } while (updateQueue !== firstEffect);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitClassCallbacks(finishedWork) {\n  var updateQueue = finishedWork.updateQueue;\n  if (null !== updateQueue) {\n    var instance = finishedWork.stateNode;\n    try {\n      commitCallbacks(updateQueue, instance);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n  }\n}\nfunction safelyCallComponentWillUnmount(\n  current,\n  nearestMountedAncestor,\n  instance\n) {\n  instance.props = resolveClassComponentProps(\n    current.type,\n    current.memoizedProps\n  );\n  instance.state = current.memoizedState;\n  try {\n    instance.componentWillUnmount();\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyAttachRef(current, nearestMountedAncestor) {\n  try {\n    var ref = current.ref;\n    if (null !== ref) {\n      var instance = current.stateNode;\n      switch (current.tag) {\n        case 26:\n        case 27:\n        case 5:\n          var instanceToUse = instance;\n          break;\n        default:\n          instanceToUse = instance;\n      }\n      \"function\" === typeof ref\n        ? (current.refCleanup = ref(instanceToUse))\n        : (ref.current = instanceToUse);\n    }\n  } catch (error) {\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\nfunction safelyDetachRef(current, nearestMountedAncestor) {\n  var ref = current.ref,\n    refCleanup = current.refCleanup;\n  if (null !== ref)\n    if (\"function\" === typeof refCleanup)\n      try {\n        refCleanup();\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      } finally {\n        (current.refCleanup = null),\n          (current = current.alternate),\n          null != current && (current.refCleanup = null);\n      }\n    else if (\"function\" === typeof ref)\n      try {\n        ref(null);\n      } catch (error$112) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error$112);\n      }\n    else ref.current = null;\n}\nfunction commitHostMount(finishedWork) {\n  var type = finishedWork.type,\n    props = finishedWork.memoizedProps,\n    instance = finishedWork.stateNode;\n  try {\n    a: switch (type) {\n      case \"button\":\n      case \"input\":\n      case \"select\":\n      case \"textarea\":\n        props.autoFocus && instance.focus();\n        break a;\n      case \"img\":\n        props.src\n          ? (instance.src = props.src)\n          : props.srcSet && (instance.srcset = props.srcSet);\n    }\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction commitHostUpdate(finishedWork, newProps, oldProps) {\n  try {\n    var domElement = finishedWork.stateNode;\n    updateProperties(domElement, finishedWork.type, oldProps, newProps);\n    domElement[internalPropsKey] = newProps;\n  } catch (error) {\n    captureCommitPhaseError(finishedWork, finishedWork.return, error);\n  }\n}\nfunction isHostParent(fiber) {\n  return (\n    5 === fiber.tag ||\n    3 === fiber.tag ||\n    26 === fiber.tag ||\n    27 === fiber.tag ||\n    4 === fiber.tag\n  );\n}\nfunction getHostSibling(fiber) {\n  a: for (;;) {\n    for (; null === fiber.sibling; ) {\n      if (null === fiber.return || isHostParent(fiber.return)) return null;\n      fiber = fiber.return;\n    }\n    fiber.sibling.return = fiber.return;\n    for (\n      fiber = fiber.sibling;\n      5 !== fiber.tag &&\n      6 !== fiber.tag &&\n      27 !== fiber.tag &&\n      18 !== fiber.tag;\n\n    ) {\n      if (fiber.flags & 2) continue a;\n      if (null === fiber.child || 4 === fiber.tag) continue a;\n      else (fiber.child.return = fiber), (fiber = fiber.child);\n    }\n    if (!(fiber.flags & 2)) return fiber.stateNode;\n  }\n}\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before\n        ? 8 === parent.nodeType\n          ? parent.parentNode.insertBefore(node, before)\n          : parent.insertBefore(node, before)\n        : (8 === parent.nodeType\n            ? ((before = parent.parentNode), before.insertBefore(node, parent))\n            : ((before = parent), before.appendChild(node)),\n          (parent = parent._reactRootContainer),\n          (null !== parent && void 0 !== parent) ||\n            null !== before.onclick ||\n            (before.onclick = noop$1));\n  else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))\n    for (\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNodeIntoContainer(node, before, parent),\n        (node = node.sibling);\n}\nfunction insertOrAppendPlacementNode(node, before, parent) {\n  var tag = node.tag;\n  if (5 === tag || 6 === tag)\n    (node = node.stateNode),\n      before ? parent.insertBefore(node, before) : parent.appendChild(node);\n  else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))\n    for (\n      insertOrAppendPlacementNode(node, before, parent), node = node.sibling;\n      null !== node;\n\n    )\n      insertOrAppendPlacementNode(node, before, parent), (node = node.sibling);\n}\nvar offscreenSubtreeIsHidden = !1,\n  offscreenSubtreeWasHidden = !1,\n  needsFormReset = !1,\n  PossiblyWeakSet = \"function\" === typeof WeakSet ? WeakSet : Set,\n  nextEffect = null,\n  shouldFireAfterActiveInstanceBlur = !1;\nfunction commitBeforeMutationEffects(root, firstChild) {\n  root = root.containerInfo;\n  eventsEnabled = _enabled;\n  root = getActiveElementDeep(root);\n  if (hasSelectionCapabilities(root)) {\n    if (\"selectionStart\" in root)\n      var JSCompiler_temp = {\n        start: root.selectionStart,\n        end: root.selectionEnd\n      };\n    else\n      a: {\n        JSCompiler_temp =\n          ((JSCompiler_temp = root.ownerDocument) &&\n            JSCompiler_temp.defaultView) ||\n          window;\n        var selection =\n          JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();\n        if (selection && 0 !== selection.rangeCount) {\n          JSCompiler_temp = selection.anchorNode;\n          var anchorOffset = selection.anchorOffset,\n            focusNode = selection.focusNode;\n          selection = selection.focusOffset;\n          try {\n            JSCompiler_temp.nodeType, focusNode.nodeType;\n          } catch (e$20) {\n            JSCompiler_temp = null;\n            break a;\n          }\n          var length = 0,\n            start = -1,\n            end = -1,\n            indexWithinAnchor = 0,\n            indexWithinFocus = 0,\n            node = root,\n            parentNode = null;\n          b: for (;;) {\n            for (var next; ; ) {\n              node !== JSCompiler_temp ||\n                (0 !== anchorOffset && 3 !== node.nodeType) ||\n                (start = length + anchorOffset);\n              node !== focusNode ||\n                (0 !== selection && 3 !== node.nodeType) ||\n                (end = length + selection);\n              3 === node.nodeType && (length += node.nodeValue.length);\n              if (null === (next = node.firstChild)) break;\n              parentNode = node;\n              node = next;\n            }\n            for (;;) {\n              if (node === root) break b;\n              parentNode === JSCompiler_temp &&\n                ++indexWithinAnchor === anchorOffset &&\n                (start = length);\n              parentNode === focusNode &&\n                ++indexWithinFocus === selection &&\n                (end = length);\n              if (null !== (next = node.nextSibling)) break;\n              node = parentNode;\n              parentNode = node.parentNode;\n            }\n            node = next;\n          }\n          JSCompiler_temp =\n            -1 === start || -1 === end ? null : { start: start, end: end };\n        } else JSCompiler_temp = null;\n      }\n    JSCompiler_temp = JSCompiler_temp || { start: 0, end: 0 };\n  } else JSCompiler_temp = null;\n  selectionInformation = { focusedElem: root, selectionRange: JSCompiler_temp };\n  _enabled = !1;\n  for (nextEffect = firstChild; null !== nextEffect; )\n    if (\n      ((firstChild = nextEffect),\n      (root = firstChild.child),\n      0 !== (firstChild.subtreeFlags & 1028) && null !== root)\n    )\n      (root.return = firstChild), (nextEffect = root);\n    else\n      for (; null !== nextEffect; ) {\n        firstChild = nextEffect;\n        focusNode = firstChild.alternate;\n        root = firstChild.flags;\n        switch (firstChild.tag) {\n          case 0:\n            break;\n          case 11:\n          case 15:\n            break;\n          case 1:\n            if (0 !== (root & 1024) && null !== focusNode) {\n              root = void 0;\n              JSCompiler_temp = firstChild;\n              anchorOffset = focusNode.memoizedProps;\n              focusNode = focusNode.memoizedState;\n              selection = JSCompiler_temp.stateNode;\n              try {\n                var resolvedPrevProps = resolveClassComponentProps(\n                  JSCompiler_temp.type,\n                  anchorOffset,\n                  JSCompiler_temp.elementType === JSCompiler_temp.type\n                );\n                root = selection.getSnapshotBeforeUpdate(\n                  resolvedPrevProps,\n                  focusNode\n                );\n                selection.__reactInternalSnapshotBeforeUpdate = root;\n              } catch (error) {\n                captureCommitPhaseError(\n                  JSCompiler_temp,\n                  JSCompiler_temp.return,\n                  error\n                );\n              }\n            }\n            break;\n          case 3:\n            if (0 !== (root & 1024))\n              if (\n                ((root = firstChild.stateNode.containerInfo),\n                (JSCompiler_temp = root.nodeType),\n                9 === JSCompiler_temp)\n              )\n                clearContainerSparingly(root);\n              else if (1 === JSCompiler_temp)\n                switch (root.nodeName) {\n                  case \"HEAD\":\n                  case \"HTML\":\n                  case \"BODY\":\n                    clearContainerSparingly(root);\n                    break;\n                  default:\n                    root.textContent = \"\";\n                }\n            break;\n          case 5:\n          case 26:\n          case 27:\n          case 6:\n          case 4:\n          case 17:\n            break;\n          default:\n            if (0 !== (root & 1024)) throw Error(formatProdErrorMessage(163));\n        }\n        root = firstChild.sibling;\n        if (null !== root) {\n          root.return = firstChild.return;\n          nextEffect = root;\n          break;\n        }\n        nextEffect = firstChild.return;\n      }\n  resolvedPrevProps = shouldFireAfterActiveInstanceBlur;\n  shouldFireAfterActiveInstanceBlur = !1;\n  return resolvedPrevProps;\n}\nfunction commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitHookEffectListMount(5, finishedWork);\n      break;\n    case 1:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (flags & 4)\n        if (((finishedRoot = finishedWork.stateNode), null === current))\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\n          }\n        else {\n          var prevProps = resolveClassComponentProps(\n            finishedWork.type,\n            current.memoizedProps\n          );\n          current = current.memoizedState;\n          try {\n            finishedRoot.componentDidUpdate(\n              prevProps,\n              current,\n              finishedRoot.__reactInternalSnapshotBeforeUpdate\n            );\n          } catch (error$111) {\n            captureCommitPhaseError(\n              finishedWork,\n              finishedWork.return,\n              error$111\n            );\n          }\n        }\n      flags & 64 && commitClassCallbacks(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      if (flags & 64 && ((flags = finishedWork.updateQueue), null !== flags)) {\n        finishedRoot = null;\n        if (null !== finishedWork.child)\n          switch (finishedWork.child.tag) {\n            case 27:\n            case 5:\n              finishedRoot = finishedWork.child.stateNode;\n              break;\n            case 1:\n              finishedRoot = finishedWork.child.stateNode;\n          }\n        try {\n          commitCallbacks(flags, finishedRoot);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 26:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 27:\n    case 5:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      null === current && flags & 4 && commitHostMount(finishedWork);\n      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);\n      break;\n    case 12:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n      flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n      break;\n    case 22:\n      prevProps =\n        null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;\n      if (!prevProps) {\n        current =\n          (null !== current && null !== current.memoizedState) ||\n          offscreenSubtreeWasHidden;\n        var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,\n          prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n        offscreenSubtreeIsHidden = prevProps;\n        (offscreenSubtreeWasHidden = current) && !prevOffscreenSubtreeWasHidden\n          ? recursivelyTraverseReappearLayoutEffects(\n              finishedRoot,\n              finishedWork,\n              0 !== (finishedWork.subtreeFlags & 8772)\n            )\n          : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n        offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n      }\n      flags & 512 &&\n        (\"manual\" === finishedWork.memoizedProps.mode\n          ? safelyAttachRef(finishedWork, finishedWork.return)\n          : safelyDetachRef(finishedWork, finishedWork.return));\n      break;\n    default:\n      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);\n  }\n}\nfunction detachFiberAfterEffects(fiber) {\n  var alternate = fiber.alternate;\n  null !== alternate &&\n    ((fiber.alternate = null), detachFiberAfterEffects(alternate));\n  fiber.child = null;\n  fiber.deletions = null;\n  fiber.sibling = null;\n  5 === fiber.tag &&\n    ((alternate = fiber.stateNode),\n    null !== alternate && detachDeletedInstance(alternate));\n  fiber.stateNode = null;\n  fiber.return = null;\n  fiber.dependencies = null;\n  fiber.memoizedProps = null;\n  fiber.memoizedState = null;\n  fiber.pendingProps = null;\n  fiber.stateNode = null;\n  fiber.updateQueue = null;\n}\nvar hostParent = null,\n  hostParentIsContainer = !1;\nfunction recursivelyTraverseDeletionEffects(\n  finishedRoot,\n  nearestMountedAncestor,\n  parent\n) {\n  for (parent = parent.child; null !== parent; )\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent),\n      (parent = parent.sibling);\n}\nfunction commitDeletionEffectsOnFiber(\n  finishedRoot,\n  nearestMountedAncestor,\n  deletedFiber\n) {\n  if (injectedHook && \"function\" === typeof injectedHook.onCommitFiberUnmount)\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);\n    } catch (err) {}\n  switch (deletedFiber.tag) {\n    case 26:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      deletedFiber.memoizedState\n        ? deletedFiber.memoizedState.count--\n        : deletedFiber.stateNode &&\n          ((deletedFiber = deletedFiber.stateNode),\n          deletedFiber.parentNode.removeChild(deletedFiber));\n      break;\n    case 27:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      var prevHostParent = hostParent,\n        prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = deletedFiber.stateNode;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      deletedFiber = deletedFiber.stateNode;\n      for (\n        nearestMountedAncestor = deletedFiber.attributes;\n        nearestMountedAncestor.length;\n\n      )\n        deletedFiber.removeAttributeNode(nearestMountedAncestor[0]);\n      detachDeletedInstance(deletedFiber);\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 5:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n    case 6:\n      prevHostParentIsContainer = hostParent;\n      var prevHostParentIsContainer$119 = hostParentIsContainer;\n      hostParent = null;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParentIsContainer;\n      hostParentIsContainer = prevHostParentIsContainer$119;\n      if (null !== hostParent)\n        if (hostParentIsContainer)\n          try {\n            (finishedRoot = hostParent),\n              (prevHostParent = deletedFiber.stateNode),\n              8 === finishedRoot.nodeType\n                ? finishedRoot.parentNode.removeChild(prevHostParent)\n                : finishedRoot.removeChild(prevHostParent);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n        else\n          try {\n            hostParent.removeChild(deletedFiber.stateNode);\n          } catch (error) {\n            captureCommitPhaseError(\n              deletedFiber,\n              nearestMountedAncestor,\n              error\n            );\n          }\n      break;\n    case 18:\n      null !== hostParent &&\n        (hostParentIsContainer\n          ? ((nearestMountedAncestor = hostParent),\n            (deletedFiber = deletedFiber.stateNode),\n            8 === nearestMountedAncestor.nodeType\n              ? clearSuspenseBoundary(\n                  nearestMountedAncestor.parentNode,\n                  deletedFiber\n                )\n              : 1 === nearestMountedAncestor.nodeType &&\n                clearSuspenseBoundary(nearestMountedAncestor, deletedFiber),\n            retryIfBlockedOn(nearestMountedAncestor))\n          : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));\n      break;\n    case 4:\n      prevHostParent = hostParent;\n      prevHostParentIsContainer = hostParentIsContainer;\n      hostParent = deletedFiber.stateNode.containerInfo;\n      hostParentIsContainer = !0;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      hostParent = prevHostParent;\n      hostParentIsContainer = prevHostParentIsContainer;\n      break;\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(2, deletedFiber, nearestMountedAncestor);\n      offscreenSubtreeWasHidden ||\n        commitHookEffectListUnmount(4, deletedFiber, nearestMountedAncestor);\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 1:\n      offscreenSubtreeWasHidden ||\n        (safelyDetachRef(deletedFiber, nearestMountedAncestor),\n        (prevHostParent = deletedFiber.stateNode),\n        \"function\" === typeof prevHostParent.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            deletedFiber,\n            nearestMountedAncestor,\n            prevHostParent\n          ));\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 21:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      break;\n    case 22:\n      offscreenSubtreeWasHidden ||\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\n      offscreenSubtreeWasHidden =\n        (prevHostParent = offscreenSubtreeWasHidden) ||\n        null !== deletedFiber.memoizedState;\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n      offscreenSubtreeWasHidden = prevHostParent;\n      break;\n    default:\n      recursivelyTraverseDeletionEffects(\n        finishedRoot,\n        nearestMountedAncestor,\n        deletedFiber\n      );\n  }\n}\nfunction commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {\n  if (\n    null === finishedWork.memoizedState &&\n    ((finishedRoot = finishedWork.alternate),\n    null !== finishedRoot &&\n      ((finishedRoot = finishedRoot.memoizedState),\n      null !== finishedRoot &&\n        ((finishedRoot = finishedRoot.dehydrated), null !== finishedRoot)))\n  )\n    try {\n      retryIfBlockedOn(finishedRoot);\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n}\nfunction getRetryCache(finishedWork) {\n  switch (finishedWork.tag) {\n    case 13:\n    case 19:\n      var retryCache = finishedWork.stateNode;\n      null === retryCache &&\n        (retryCache = finishedWork.stateNode = new PossiblyWeakSet());\n      return retryCache;\n    case 22:\n      return (\n        (finishedWork = finishedWork.stateNode),\n        (retryCache = finishedWork._retryCache),\n        null === retryCache &&\n          (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),\n        retryCache\n      );\n    default:\n      throw Error(formatProdErrorMessage(435, finishedWork.tag));\n  }\n}\nfunction attachSuspenseRetryListeners(finishedWork, wakeables) {\n  var retryCache = getRetryCache(finishedWork);\n  wakeables.forEach(function (wakeable) {\n    var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n    retryCache.has(wakeable) ||\n      (retryCache.add(wakeable), wakeable.then(retry, retry));\n  });\n}\nfunction recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (null !== deletions)\n    for (var i = 0; i < deletions.length; i++) {\n      var childToDelete = deletions[i],\n        root = root$jscomp$0,\n        returnFiber = parentFiber,\n        parent = returnFiber;\n      a: for (; null !== parent; ) {\n        switch (parent.tag) {\n          case 27:\n          case 5:\n            hostParent = parent.stateNode;\n            hostParentIsContainer = !1;\n            break a;\n          case 3:\n            hostParent = parent.stateNode.containerInfo;\n            hostParentIsContainer = !0;\n            break a;\n          case 4:\n            hostParent = parent.stateNode.containerInfo;\n            hostParentIsContainer = !0;\n            break a;\n        }\n        parent = parent.return;\n      }\n      if (null === hostParent) throw Error(formatProdErrorMessage(160));\n      commitDeletionEffectsOnFiber(root, returnFiber, childToDelete);\n      hostParent = null;\n      hostParentIsContainer = !1;\n      root = childToDelete.alternate;\n      null !== root && (root.return = null);\n      childToDelete.return = null;\n    }\n  if (parentFiber.subtreeFlags & 13878)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitMutationEffectsOnFiber(parentFiber, root$jscomp$0),\n        (parentFiber = parentFiber.sibling);\n}\nvar currentHoistableRoot = null;\nfunction commitMutationEffectsOnFiber(finishedWork, root) {\n  var current = finishedWork.alternate,\n    flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        (commitHookEffectListUnmount(3, finishedWork, finishedWork.return),\n        commitHookEffectListMount(3, finishedWork),\n        commitHookEffectListUnmount(5, finishedWork, finishedWork.return));\n      break;\n    case 1:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      flags & 64 &&\n        offscreenSubtreeIsHidden &&\n        ((finishedWork = finishedWork.updateQueue),\n        null !== finishedWork &&\n          ((flags = finishedWork.callbacks),\n          null !== flags &&\n            ((current = finishedWork.shared.hiddenCallbacks),\n            (finishedWork.shared.hiddenCallbacks =\n              null === current ? flags : current.concat(flags)))));\n      break;\n    case 26:\n      var hoistableRoot = currentHoistableRoot;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (flags & 4) {\n        var currentResource = null !== current ? current.memoizedState : null;\n        flags = finishedWork.memoizedState;\n        if (null === current)\n          if (null === flags)\n            if (null === finishedWork.stateNode) {\n              a: {\n                flags = finishedWork.type;\n                current = finishedWork.memoizedProps;\n                hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n                b: switch (flags) {\n                  case \"title\":\n                    currentResource =\n                      hoistableRoot.getElementsByTagName(\"title\")[0];\n                    if (\n                      !currentResource ||\n                      currentResource[internalHoistableMarker] ||\n                      currentResource[internalInstanceKey] ||\n                      \"http://www.w3.org/2000/svg\" ===\n                        currentResource.namespaceURI ||\n                      currentResource.hasAttribute(\"itemprop\")\n                    )\n                      (currentResource = hoistableRoot.createElement(flags)),\n                        hoistableRoot.head.insertBefore(\n                          currentResource,\n                          hoistableRoot.querySelector(\"head > title\")\n                        );\n                    setInitialProperties(currentResource, flags, current);\n                    currentResource[internalInstanceKey] = finishedWork;\n                    markNodeAsHoistable(currentResource);\n                    flags = currentResource;\n                    break a;\n                  case \"link\":\n                    var maybeNodes = getHydratableHoistableCache(\n                      \"link\",\n                      \"href\",\n                      hoistableRoot\n                    ).get(flags + (current.href || \"\"));\n                    if (maybeNodes)\n                      for (var i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"href\") ===\n                            (null == current.href ? null : current.href) &&\n                            currentResource.getAttribute(\"rel\") ===\n                              (null == current.rel ? null : current.rel) &&\n                            currentResource.getAttribute(\"title\") ===\n                              (null == current.title ? null : current.title) &&\n                            currentResource.getAttribute(\"crossorigin\") ===\n                              (null == current.crossOrigin\n                                ? null\n                                : current.crossOrigin))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  case \"meta\":\n                    if (\n                      (maybeNodes = getHydratableHoistableCache(\n                        \"meta\",\n                        \"content\",\n                        hoistableRoot\n                      ).get(flags + (current.content || \"\")))\n                    )\n                      for (i = 0; i < maybeNodes.length; i++)\n                        if (\n                          ((currentResource = maybeNodes[i]),\n                          currentResource.getAttribute(\"content\") ===\n                            (null == current.content\n                              ? null\n                              : \"\" + current.content) &&\n                            currentResource.getAttribute(\"name\") ===\n                              (null == current.name ? null : current.name) &&\n                            currentResource.getAttribute(\"property\") ===\n                              (null == current.property\n                                ? null\n                                : current.property) &&\n                            currentResource.getAttribute(\"http-equiv\") ===\n                              (null == current.httpEquiv\n                                ? null\n                                : current.httpEquiv) &&\n                            currentResource.getAttribute(\"charset\") ===\n                              (null == current.charSet\n                                ? null\n                                : current.charSet))\n                        ) {\n                          maybeNodes.splice(i, 1);\n                          break b;\n                        }\n                    currentResource = hoistableRoot.createElement(flags);\n                    setInitialProperties(currentResource, flags, current);\n                    hoistableRoot.head.appendChild(currentResource);\n                    break;\n                  default:\n                    throw Error(formatProdErrorMessage(468, flags));\n                }\n                currentResource[internalInstanceKey] = finishedWork;\n                markNodeAsHoistable(currentResource);\n                flags = currentResource;\n              }\n              finishedWork.stateNode = flags;\n            } else\n              mountHoistable(\n                hoistableRoot,\n                finishedWork.type,\n                finishedWork.stateNode\n              );\n          else\n            finishedWork.stateNode = acquireResource(\n              hoistableRoot,\n              flags,\n              finishedWork.memoizedProps\n            );\n        else\n          currentResource !== flags\n            ? (null === currentResource\n                ? null !== current.stateNode &&\n                  ((current = current.stateNode),\n                  current.parentNode.removeChild(current))\n                : currentResource.count--,\n              null === flags\n                ? mountHoistable(\n                    hoistableRoot,\n                    finishedWork.type,\n                    finishedWork.stateNode\n                  )\n                : acquireResource(\n                    hoistableRoot,\n                    flags,\n                    finishedWork.memoizedProps\n                  ))\n            : null === flags &&\n              null !== finishedWork.stateNode &&\n              commitHostUpdate(\n                finishedWork,\n                finishedWork.memoizedProps,\n                current.memoizedProps\n              );\n      }\n      break;\n    case 27:\n      if (flags & 4 && null === finishedWork.alternate) {\n        hoistableRoot = finishedWork.stateNode;\n        currentResource = finishedWork.memoizedProps;\n        try {\n          for (var node = hoistableRoot.firstChild; node; ) {\n            var nextNode = node.nextSibling,\n              nodeName = node.nodeName;\n            node[internalHoistableMarker] ||\n              \"HEAD\" === nodeName ||\n              \"BODY\" === nodeName ||\n              \"SCRIPT\" === nodeName ||\n              \"STYLE\" === nodeName ||\n              (\"LINK\" === nodeName &&\n                \"stylesheet\" === node.rel.toLowerCase()) ||\n              hoistableRoot.removeChild(node);\n            node = nextNode;\n          }\n          for (\n            var type = finishedWork.type, attributes = hoistableRoot.attributes;\n            attributes.length;\n\n          )\n            hoistableRoot.removeAttributeNode(attributes[0]);\n          setInitialProperties(hoistableRoot, type, currentResource);\n          hoistableRoot[internalInstanceKey] = finishedWork;\n          hoistableRoot[internalPropsKey] = currentResource;\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n    case 5:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      if (finishedWork.flags & 32) {\n        hoistableRoot = finishedWork.stateNode;\n        try {\n          setTextContent(hoistableRoot, \"\");\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      flags & 4 &&\n        null != finishedWork.stateNode &&\n        ((hoistableRoot = finishedWork.memoizedProps),\n        commitHostUpdate(\n          finishedWork,\n          hoistableRoot,\n          null !== current ? current.memoizedProps : hoistableRoot\n        ));\n      flags & 1024 && (needsFormReset = !0);\n      break;\n    case 6:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4) {\n        if (null === finishedWork.stateNode)\n          throw Error(formatProdErrorMessage(162));\n        flags = finishedWork.memoizedProps;\n        current = finishedWork.stateNode;\n        try {\n          current.nodeValue = flags;\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      }\n      break;\n    case 3:\n      tagCaches = null;\n      hoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(root.containerInfo);\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      currentHoistableRoot = hoistableRoot;\n      commitReconciliationEffects(finishedWork);\n      if (flags & 4 && null !== current && current.memoizedState.isDehydrated)\n        try {\n          retryIfBlockedOn(root.containerInfo);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      needsFormReset &&\n        ((needsFormReset = !1), recursivelyResetForms(finishedWork));\n      break;\n    case 4:\n      flags = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(\n        finishedWork.stateNode.containerInfo\n      );\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      currentHoistableRoot = flags;\n      break;\n    case 12:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      break;\n    case 13:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      finishedWork.child.flags & 8192 &&\n        (null !== finishedWork.memoizedState) !==\n          (null !== current && null !== current.memoizedState) &&\n        (globalMostRecentFallbackTime = now());\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 22:\n      flags & 512 &&\n        (offscreenSubtreeWasHidden ||\n          null === current ||\n          safelyDetachRef(current, current.return));\n      node = null !== finishedWork.memoizedState;\n      nextNode = null !== current && null !== current.memoizedState;\n      nodeName = offscreenSubtreeIsHidden;\n      type = offscreenSubtreeWasHidden;\n      offscreenSubtreeIsHidden = nodeName || node;\n      offscreenSubtreeWasHidden = type || nextNode;\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      offscreenSubtreeWasHidden = type;\n      offscreenSubtreeIsHidden = nodeName;\n      commitReconciliationEffects(finishedWork);\n      root = finishedWork.stateNode;\n      root._current = finishedWork;\n      root._visibility &= -3;\n      root._visibility |= root._pendingVisibility & 2;\n      if (\n        flags & 8192 &&\n        ((root._visibility = node\n          ? root._visibility & -2\n          : root._visibility | 1),\n        node &&\n          ((root = offscreenSubtreeIsHidden || offscreenSubtreeWasHidden),\n          null === current ||\n            nextNode ||\n            root ||\n            recursivelyTraverseDisappearLayoutEffects(finishedWork)),\n        null === finishedWork.memoizedProps ||\n          \"manual\" !== finishedWork.memoizedProps.mode)\n      )\n        a: for (current = null, root = finishedWork; ; ) {\n          if (5 === root.tag || 26 === root.tag || 27 === root.tag) {\n            if (null === current) {\n              nextNode = current = root;\n              try {\n                if (((hoistableRoot = nextNode.stateNode), node))\n                  (currentResource = hoistableRoot.style),\n                    \"function\" === typeof currentResource.setProperty\n                      ? currentResource.setProperty(\n                          \"display\",\n                          \"none\",\n                          \"important\"\n                        )\n                      : (currentResource.display = \"none\");\n                else {\n                  maybeNodes = nextNode.stateNode;\n                  i = nextNode.memoizedProps.style;\n                  var display =\n                    void 0 !== i && null !== i && i.hasOwnProperty(\"display\")\n                      ? i.display\n                      : null;\n                  maybeNodes.style.display =\n                    null == display || \"boolean\" === typeof display\n                      ? \"\"\n                      : (\"\" + display).trim();\n                }\n              } catch (error) {\n                captureCommitPhaseError(nextNode, nextNode.return, error);\n              }\n            }\n          } else if (6 === root.tag) {\n            if (null === current) {\n              nextNode = root;\n              try {\n                nextNode.stateNode.nodeValue = node\n                  ? \"\"\n                  : nextNode.memoizedProps;\n              } catch (error) {\n                captureCommitPhaseError(nextNode, nextNode.return, error);\n              }\n            }\n          } else if (\n            ((22 !== root.tag && 23 !== root.tag) ||\n              null === root.memoizedState ||\n              root === finishedWork) &&\n            null !== root.child\n          ) {\n            root.child.return = root;\n            root = root.child;\n            continue;\n          }\n          if (root === finishedWork) break a;\n          for (; null === root.sibling; ) {\n            if (null === root.return || root.return === finishedWork) break a;\n            current === root && (current = null);\n            root = root.return;\n          }\n          current === root && (current = null);\n          root.sibling.return = root.return;\n          root = root.sibling;\n        }\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((current = flags.retryQueue),\n          null !== current &&\n            ((flags.retryQueue = null),\n            attachSuspenseRetryListeners(finishedWork, current))));\n      break;\n    case 19:\n      recursivelyTraverseMutationEffects(root, finishedWork);\n      commitReconciliationEffects(finishedWork);\n      flags & 4 &&\n        ((flags = finishedWork.updateQueue),\n        null !== flags &&\n          ((finishedWork.updateQueue = null),\n          attachSuspenseRetryListeners(finishedWork, flags)));\n      break;\n    case 21:\n      break;\n    default:\n      recursivelyTraverseMutationEffects(root, finishedWork),\n        commitReconciliationEffects(finishedWork);\n  }\n}\nfunction commitReconciliationEffects(finishedWork) {\n  var flags = finishedWork.flags;\n  if (flags & 2) {\n    try {\n      if (27 !== finishedWork.tag) {\n        a: {\n          for (var parent = finishedWork.return; null !== parent; ) {\n            if (isHostParent(parent)) {\n              var JSCompiler_inline_result = parent;\n              break a;\n            }\n            parent = parent.return;\n          }\n          throw Error(formatProdErrorMessage(160));\n        }\n        switch (JSCompiler_inline_result.tag) {\n          case 27:\n            var parent$jscomp$0 = JSCompiler_inline_result.stateNode,\n              before = getHostSibling(finishedWork);\n            insertOrAppendPlacementNode(finishedWork, before, parent$jscomp$0);\n            break;\n          case 5:\n            var parent$113 = JSCompiler_inline_result.stateNode;\n            JSCompiler_inline_result.flags & 32 &&\n              (setTextContent(parent$113, \"\"),\n              (JSCompiler_inline_result.flags &= -33));\n            var before$114 = getHostSibling(finishedWork);\n            insertOrAppendPlacementNode(finishedWork, before$114, parent$113);\n            break;\n          case 3:\n          case 4:\n            var parent$115 = JSCompiler_inline_result.stateNode.containerInfo,\n              before$116 = getHostSibling(finishedWork);\n            insertOrAppendPlacementNodeIntoContainer(\n              finishedWork,\n              before$116,\n              parent$115\n            );\n            break;\n          default:\n            throw Error(formatProdErrorMessage(161));\n        }\n      }\n    } catch (error) {\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n    }\n    finishedWork.flags &= -3;\n  }\n  flags & 4096 && (finishedWork.flags &= -4097);\n}\nfunction recursivelyResetForms(parentFiber) {\n  if (parentFiber.subtreeFlags & 1024)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var fiber = parentFiber;\n      recursivelyResetForms(fiber);\n      5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();\n      parentFiber = parentFiber.sibling;\n    }\n}\nfunction recursivelyTraverseLayoutEffects(root, parentFiber) {\n  if (parentFiber.subtreeFlags & 8772)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction recursivelyTraverseDisappearLayoutEffects(parentFiber) {\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedWork = parentFiber;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 14:\n      case 15:\n        commitHookEffectListUnmount(4, finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 1:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        var instance = finishedWork.stateNode;\n        \"function\" === typeof instance.componentWillUnmount &&\n          safelyCallComponentWillUnmount(\n            finishedWork,\n            finishedWork.return,\n            instance\n          );\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 26:\n      case 27:\n      case 5:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      case 22:\n        safelyDetachRef(finishedWork, finishedWork.return);\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseDisappearLayoutEffects(finishedWork);\n        break;\n      default:\n        recursivelyTraverseDisappearLayoutEffects(finishedWork);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseReappearLayoutEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var current = parentFiber.alternate,\n      finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(4, finishedWork);\n        break;\n      case 1:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        current = finishedWork;\n        finishedRoot = current.stateNode;\n        if (\"function\" === typeof finishedRoot.componentDidMount)\n          try {\n            finishedRoot.componentDidMount();\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        current = finishedWork;\n        finishedRoot = current.updateQueue;\n        if (null !== finishedRoot) {\n          var instance = current.stateNode;\n          try {\n            var hiddenCallbacks = finishedRoot.shared.hiddenCallbacks;\n            if (null !== hiddenCallbacks)\n              for (\n                finishedRoot.shared.hiddenCallbacks = null, finishedRoot = 0;\n                finishedRoot < hiddenCallbacks.length;\n                finishedRoot++\n              )\n                callCallback(hiddenCallbacks[finishedRoot], instance);\n          } catch (error) {\n            captureCommitPhaseError(current, current.return, error);\n          }\n        }\n        includeWorkInProgressEffects &&\n          flags & 64 &&\n          commitClassCallbacks(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 26:\n      case 27:\n      case 5:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          null === current &&\n          flags & 4 &&\n          commitHostMount(finishedWork);\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      case 12:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        break;\n      case 13:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 4 &&\n          commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n        break;\n      case 22:\n        null === finishedWork.memoizedState &&\n          recursivelyTraverseReappearLayoutEffects(\n            finishedRoot,\n            finishedWork,\n            includeWorkInProgressEffects\n          );\n        safelyAttachRef(finishedWork, finishedWork.return);\n        break;\n      default:\n        recursivelyTraverseReappearLayoutEffects(\n          finishedRoot,\n          finishedWork,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitOffscreenPassiveMountEffects(current, finishedWork) {\n  var previousCache = null;\n  null !== current &&\n    null !== current.memoizedState &&\n    null !== current.memoizedState.cachePool &&\n    (previousCache = current.memoizedState.cachePool.pool);\n  current = null;\n  null !== finishedWork.memoizedState &&\n    null !== finishedWork.memoizedState.cachePool &&\n    (current = finishedWork.memoizedState.cachePool.pool);\n  current !== previousCache &&\n    (null != current && current.refCount++,\n    null != previousCache && releaseCache(previousCache));\n}\nfunction commitCachePassiveMountEffect(current, finishedWork) {\n  current = null;\n  null !== finishedWork.alternate &&\n    (current = finishedWork.alternate.memoizedState.cache);\n  finishedWork = finishedWork.memoizedState.cache;\n  finishedWork !== current &&\n    (finishedWork.refCount++, null != current && releaseCache(current));\n}\nfunction recursivelyTraversePassiveMountEffects(\n  root,\n  parentFiber,\n  committedLanes,\n  committedTransitions\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveMountOnFiber(\n        root,\n        parentFiber,\n        committedLanes,\n        committedTransitions\n      ),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveMountOnFiber(\n  finishedRoot,\n  finishedWork,\n  committedLanes,\n  committedTransitions\n) {\n  var flags = finishedWork.flags;\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 && commitHookEffectListMount(9, finishedWork);\n      break;\n    case 3:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        ((finishedRoot = null),\n        null !== finishedWork.alternate &&\n          (finishedRoot = finishedWork.alternate.memoizedState.cache),\n        (finishedWork = finishedWork.memoizedState.cache),\n        finishedWork !== finishedRoot &&\n          (finishedWork.refCount++,\n          null != finishedRoot && releaseCache(finishedRoot)));\n      break;\n    case 12:\n      if (flags & 2048) {\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n        finishedRoot = finishedWork.stateNode;\n        try {\n          var _finishedWork$memoize2 = finishedWork.memoizedProps,\n            id = _finishedWork$memoize2.id,\n            onPostCommit = _finishedWork$memoize2.onPostCommit;\n          \"function\" === typeof onPostCommit &&\n            onPostCommit(\n              id,\n              null === finishedWork.alternate ? \"mount\" : \"update\",\n              finishedRoot.passiveEffectDuration,\n              -0\n            );\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n      } else\n        recursivelyTraversePassiveMountEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions\n        );\n      break;\n    case 23:\n      break;\n    case 22:\n      _finishedWork$memoize2 = finishedWork.stateNode;\n      null !== finishedWork.memoizedState\n        ? _finishedWork$memoize2._visibility & 4\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork)\n        : _finishedWork$memoize2._visibility & 4\n          ? recursivelyTraversePassiveMountEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions\n            )\n          : ((_finishedWork$memoize2._visibility |= 4),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              0 !== (finishedWork.subtreeFlags & 10256)\n            ));\n      flags & 2048 &&\n        commitOffscreenPassiveMountEffects(\n          finishedWork.alternate,\n          finishedWork\n        );\n      break;\n    case 24:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n      flags & 2048 &&\n        commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveMountEffects(\n        finishedRoot,\n        finishedWork,\n        committedLanes,\n        committedTransitions\n      );\n  }\n}\nfunction recursivelyTraverseReconnectPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber,\n  committedLanes$jscomp$0,\n  committedTransitions$jscomp$0,\n  includeWorkInProgressEffects\n) {\n  includeWorkInProgressEffects =\n    includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 10256);\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    var finishedRoot = finishedRoot$jscomp$0,\n      finishedWork = parentFiber,\n      committedLanes = committedLanes$jscomp$0,\n      committedTransitions = committedTransitions$jscomp$0,\n      flags = finishedWork.flags;\n    switch (finishedWork.tag) {\n      case 0:\n      case 11:\n      case 15:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        commitHookEffectListMount(8, finishedWork);\n        break;\n      case 23:\n        break;\n      case 22:\n        var instance = finishedWork.stateNode;\n        null !== finishedWork.memoizedState\n          ? instance._visibility & 4\n            ? recursivelyTraverseReconnectPassiveEffects(\n                finishedRoot,\n                finishedWork,\n                committedLanes,\n                committedTransitions,\n                includeWorkInProgressEffects\n              )\n            : recursivelyTraverseAtomicPassiveEffects(\n                finishedRoot,\n                finishedWork\n              )\n          : ((instance._visibility |= 4),\n            recursivelyTraverseReconnectPassiveEffects(\n              finishedRoot,\n              finishedWork,\n              committedLanes,\n              committedTransitions,\n              includeWorkInProgressEffects\n            ));\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitOffscreenPassiveMountEffects(\n            finishedWork.alternate,\n            finishedWork\n          );\n        break;\n      case 24:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n        includeWorkInProgressEffects &&\n          flags & 2048 &&\n          commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n        break;\n      default:\n        recursivelyTraverseReconnectPassiveEffects(\n          finishedRoot,\n          finishedWork,\n          committedLanes,\n          committedTransitions,\n          includeWorkInProgressEffects\n        );\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction recursivelyTraverseAtomicPassiveEffects(\n  finishedRoot$jscomp$0,\n  parentFiber\n) {\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n      var finishedRoot = finishedRoot$jscomp$0,\n        finishedWork = parentFiber,\n        flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case 22:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitOffscreenPassiveMountEffects(\n              finishedWork.alternate,\n              finishedWork\n            );\n          break;\n        case 24:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n          flags & 2048 &&\n            commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);\n          break;\n        default:\n          recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);\n      }\n      parentFiber = parentFiber.sibling;\n    }\n}\nvar suspenseyCommitFlag = 8192;\nfunction recursivelyAccumulateSuspenseyCommit(parentFiber) {\n  if (parentFiber.subtreeFlags & suspenseyCommitFlag)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      accumulateSuspenseyCommitOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction accumulateSuspenseyCommitOnFiber(fiber) {\n  switch (fiber.tag) {\n    case 26:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      fiber.flags & suspenseyCommitFlag &&\n        null !== fiber.memoizedState &&\n        suspendResource(\n          currentHoistableRoot,\n          fiber.memoizedState,\n          fiber.memoizedProps\n        );\n      break;\n    case 5:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      break;\n    case 3:\n    case 4:\n      var previousHoistableRoot = currentHoistableRoot;\n      currentHoistableRoot = getHoistableRoot(fiber.stateNode.containerInfo);\n      recursivelyAccumulateSuspenseyCommit(fiber);\n      currentHoistableRoot = previousHoistableRoot;\n      break;\n    case 22:\n      null === fiber.memoizedState &&\n        ((previousHoistableRoot = fiber.alternate),\n        null !== previousHoistableRoot &&\n        null !== previousHoistableRoot.memoizedState\n          ? ((previousHoistableRoot = suspenseyCommitFlag),\n            (suspenseyCommitFlag = 16777216),\n            recursivelyAccumulateSuspenseyCommit(fiber),\n            (suspenseyCommitFlag = previousHoistableRoot))\n          : recursivelyAccumulateSuspenseyCommit(fiber));\n      break;\n    default:\n      recursivelyAccumulateSuspenseyCommit(fiber);\n  }\n}\nfunction detachAlternateSiblings(parentFiber) {\n  var previousFiber = parentFiber.alternate;\n  if (\n    null !== previousFiber &&\n    ((parentFiber = previousFiber.child), null !== parentFiber)\n  ) {\n    previousFiber.child = null;\n    do\n      (previousFiber = parentFiber.sibling),\n        (parentFiber.sibling = null),\n        (parentFiber = previousFiber);\n    while (null !== parentFiber);\n  }\n}\nfunction recursivelyTraversePassiveUnmountEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  if (parentFiber.subtreeFlags & 10256)\n    for (parentFiber = parentFiber.child; null !== parentFiber; )\n      commitPassiveUnmountOnFiber(parentFiber),\n        (parentFiber = parentFiber.sibling);\n}\nfunction commitPassiveUnmountOnFiber(finishedWork) {\n  switch (finishedWork.tag) {\n    case 0:\n    case 11:\n    case 15:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      finishedWork.flags & 2048 &&\n        commitHookEffectListUnmount(9, finishedWork, finishedWork.return);\n      break;\n    case 3:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 12:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    case 22:\n      var instance = finishedWork.stateNode;\n      null !== finishedWork.memoizedState &&\n      instance._visibility & 4 &&\n      (null === finishedWork.return || 13 !== finishedWork.return.tag)\n        ? ((instance._visibility &= -5),\n          recursivelyTraverseDisconnectPassiveEffects(finishedWork))\n        : recursivelyTraversePassiveUnmountEffects(finishedWork);\n      break;\n    default:\n      recursivelyTraversePassiveUnmountEffects(finishedWork);\n  }\n}\nfunction recursivelyTraverseDisconnectPassiveEffects(parentFiber) {\n  var deletions = parentFiber.deletions;\n  if (0 !== (parentFiber.flags & 16)) {\n    if (null !== deletions)\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n        nextEffect = childToDelete;\n        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n          childToDelete,\n          parentFiber\n        );\n      }\n    detachAlternateSiblings(parentFiber);\n  }\n  for (parentFiber = parentFiber.child; null !== parentFiber; ) {\n    deletions = parentFiber;\n    switch (deletions.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, deletions, deletions.return);\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n        break;\n      case 22:\n        i = deletions.stateNode;\n        i._visibility & 4 &&\n          ((i._visibility &= -5),\n          recursivelyTraverseDisconnectPassiveEffects(deletions));\n        break;\n      default:\n        recursivelyTraverseDisconnectPassiveEffects(deletions);\n    }\n    parentFiber = parentFiber.sibling;\n  }\n}\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n  deletedSubtreeRoot,\n  nearestMountedAncestor\n) {\n  for (; null !== nextEffect; ) {\n    var fiber = nextEffect;\n    switch (fiber.tag) {\n      case 0:\n      case 11:\n      case 15:\n        commitHookEffectListUnmount(8, fiber, nearestMountedAncestor);\n        break;\n      case 23:\n      case 22:\n        if (\n          null !== fiber.memoizedState &&\n          null !== fiber.memoizedState.cachePool\n        ) {\n          var cache = fiber.memoizedState.cachePool.pool;\n          null != cache && cache.refCount++;\n        }\n        break;\n      case 24:\n        releaseCache(fiber.memoizedState.cache);\n    }\n    cache = fiber.child;\n    if (null !== cache) (cache.return = fiber), (nextEffect = cache);\n    else\n      a: for (fiber = deletedSubtreeRoot; null !== nextEffect; ) {\n        cache = nextEffect;\n        var sibling = cache.sibling,\n          returnFiber = cache.return;\n        detachFiberAfterEffects(cache);\n        if (cache === fiber) {\n          nextEffect = null;\n          break a;\n        }\n        if (null !== sibling) {\n          sibling.return = returnFiber;\n          nextEffect = sibling;\n          break a;\n        }\n        nextEffect = returnFiber;\n      }\n  }\n}\nfunction FiberNode(tag, pendingProps, key, mode) {\n  this.tag = tag;\n  this.key = key;\n  this.sibling =\n    this.child =\n    this.return =\n    this.stateNode =\n    this.type =\n    this.elementType =\n      null;\n  this.index = 0;\n  this.refCleanup = this.ref = null;\n  this.pendingProps = pendingProps;\n  this.dependencies =\n    this.memoizedState =\n    this.updateQueue =\n    this.memoizedProps =\n      null;\n  this.mode = mode;\n  this.subtreeFlags = this.flags = 0;\n  this.deletions = null;\n  this.childLanes = this.lanes = 0;\n  this.alternate = null;\n}\nfunction createFiberImplClass(tag, pendingProps, key, mode) {\n  return new FiberNode(tag, pendingProps, key, mode);\n}\nfunction shouldConstruct(Component) {\n  Component = Component.prototype;\n  return !(!Component || !Component.isReactComponent);\n}\nfunction createWorkInProgress(current, pendingProps) {\n  var workInProgress = current.alternate;\n  null === workInProgress\n    ? ((workInProgress = createFiberImplClass(\n        current.tag,\n        pendingProps,\n        current.key,\n        current.mode\n      )),\n      (workInProgress.elementType = current.elementType),\n      (workInProgress.type = current.type),\n      (workInProgress.stateNode = current.stateNode),\n      (workInProgress.alternate = current),\n      (current.alternate = workInProgress))\n    : ((workInProgress.pendingProps = pendingProps),\n      (workInProgress.type = current.type),\n      (workInProgress.flags = 0),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null));\n  workInProgress.flags = current.flags & 31457280;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n  pendingProps = current.dependencies;\n  workInProgress.dependencies =\n    null === pendingProps\n      ? null\n      : { lanes: pendingProps.lanes, firstContext: pendingProps.firstContext };\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n  workInProgress.refCleanup = current.refCleanup;\n  return workInProgress;\n}\nfunction resetWorkInProgress(workInProgress, renderLanes) {\n  workInProgress.flags &= 31457282;\n  var current = workInProgress.alternate;\n  null === current\n    ? ((workInProgress.childLanes = 0),\n      (workInProgress.lanes = renderLanes),\n      (workInProgress.child = null),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.memoizedProps = null),\n      (workInProgress.memoizedState = null),\n      (workInProgress.updateQueue = null),\n      (workInProgress.dependencies = null),\n      (workInProgress.stateNode = null))\n    : ((workInProgress.childLanes = current.childLanes),\n      (workInProgress.lanes = current.lanes),\n      (workInProgress.child = current.child),\n      (workInProgress.subtreeFlags = 0),\n      (workInProgress.deletions = null),\n      (workInProgress.memoizedProps = current.memoizedProps),\n      (workInProgress.memoizedState = current.memoizedState),\n      (workInProgress.updateQueue = current.updateQueue),\n      (workInProgress.type = current.type),\n      (renderLanes = current.dependencies),\n      (workInProgress.dependencies =\n        null === renderLanes\n          ? null\n          : {\n              lanes: renderLanes.lanes,\n              firstContext: renderLanes.firstContext\n            }));\n  return workInProgress;\n}\nfunction createFiberFromTypeAndProps(\n  type,\n  key,\n  pendingProps,\n  owner,\n  mode,\n  lanes\n) {\n  var fiberTag = 0;\n  owner = type;\n  if (\"function\" === typeof type) shouldConstruct(type) && (fiberTag = 1);\n  else if (\"string\" === typeof type)\n    fiberTag = isHostHoistableType(\n      type,\n      pendingProps,\n      contextStackCursor.current\n    )\n      ? 26\n      : \"html\" === type || \"head\" === type || \"body\" === type\n        ? 27\n        : 5;\n  else\n    a: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = 8;\n        mode |= 24;\n        break;\n      case REACT_PROFILER_TYPE:\n        return (\n          (type = createFiberImplClass(12, pendingProps, key, mode | 2)),\n          (type.elementType = REACT_PROFILER_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_TYPE:\n        return (\n          (type = createFiberImplClass(13, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_SUSPENSE_LIST_TYPE:\n        return (\n          (type = createFiberImplClass(19, pendingProps, key, mode)),\n          (type.elementType = REACT_SUSPENSE_LIST_TYPE),\n          (type.lanes = lanes),\n          type\n        );\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n      default:\n        if (\"object\" === typeof type && null !== type)\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n            case REACT_CONTEXT_TYPE:\n              fiberTag = 10;\n              break a;\n            case REACT_CONSUMER_TYPE:\n              fiberTag = 9;\n              break a;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = 11;\n              break a;\n            case REACT_MEMO_TYPE:\n              fiberTag = 14;\n              break a;\n            case REACT_LAZY_TYPE:\n              fiberTag = 16;\n              owner = null;\n              break a;\n          }\n        fiberTag = 29;\n        pendingProps = Error(\n          formatProdErrorMessage(130, null === type ? \"null\" : typeof type, \"\")\n        );\n        owner = null;\n    }\n  key = createFiberImplClass(fiberTag, pendingProps, key, mode);\n  key.elementType = type;\n  key.type = owner;\n  key.lanes = lanes;\n  return key;\n}\nfunction createFiberFromFragment(elements, mode, lanes, key) {\n  elements = createFiberImplClass(7, elements, key, mode);\n  elements.lanes = lanes;\n  return elements;\n}\nfunction createFiberFromOffscreen(pendingProps, mode, lanes, key) {\n  pendingProps = createFiberImplClass(22, pendingProps, key, mode);\n  pendingProps.elementType = REACT_OFFSCREEN_TYPE;\n  pendingProps.lanes = lanes;\n  var primaryChildInstance = {\n    _visibility: 1,\n    _pendingVisibility: 1,\n    _pendingMarkers: null,\n    _retryCache: null,\n    _transitions: null,\n    _current: null,\n    detach: function () {\n      var fiber = primaryChildInstance._current;\n      if (null === fiber) throw Error(formatProdErrorMessage(456));\n      if (0 === (primaryChildInstance._pendingVisibility & 2)) {\n        var root = enqueueConcurrentRenderForLane(fiber, 2);\n        null !== root &&\n          ((primaryChildInstance._pendingVisibility |= 2),\n          scheduleUpdateOnFiber(root, fiber, 2));\n      }\n    },\n    attach: function () {\n      var fiber = primaryChildInstance._current;\n      if (null === fiber) throw Error(formatProdErrorMessage(456));\n      if (0 !== (primaryChildInstance._pendingVisibility & 2)) {\n        var root = enqueueConcurrentRenderForLane(fiber, 2);\n        null !== root &&\n          ((primaryChildInstance._pendingVisibility &= -3),\n          scheduleUpdateOnFiber(root, fiber, 2));\n      }\n    }\n  };\n  pendingProps.stateNode = primaryChildInstance;\n  return pendingProps;\n}\nfunction createFiberFromText(content, mode, lanes) {\n  content = createFiberImplClass(6, content, null, mode);\n  content.lanes = lanes;\n  return content;\n}\nfunction createFiberFromPortal(portal, mode, lanes) {\n  mode = createFiberImplClass(\n    4,\n    null !== portal.children ? portal.children : [],\n    portal.key,\n    mode\n  );\n  mode.lanes = lanes;\n  mode.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null,\n    implementation: portal.implementation\n  };\n  return mode;\n}\nfunction markUpdate(workInProgress) {\n  workInProgress.flags |= 4;\n}\nfunction preloadResourceAndSuspendIfNeeded(workInProgress, resource) {\n  if (\"stylesheet\" !== resource.type || 0 !== (resource.state.loading & 4))\n    workInProgress.flags &= -16777217;\n  else if (((workInProgress.flags |= 16777216), !preloadResource(resource))) {\n    resource = suspenseHandlerStackCursor.current;\n    if (\n      null !== resource &&\n      ((workInProgressRootRenderLanes & 4194176) ===\n      workInProgressRootRenderLanes\n        ? null !== shellBoundary\n        : ((workInProgressRootRenderLanes & 62914560) !==\n            workInProgressRootRenderLanes &&\n            0 === (workInProgressRootRenderLanes & 536870912)) ||\n          resource !== shellBoundary)\n    )\n      throw (\n        ((suspendedThenable = noopSuspenseyCommitThenable),\n        SuspenseyCommitException)\n      );\n    workInProgress.flags |= 8192;\n  }\n}\nfunction scheduleRetryEffect(workInProgress, retryQueue) {\n  null !== retryQueue && (workInProgress.flags |= 4);\n  workInProgress.flags & 16384 &&\n    ((retryQueue =\n      22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),\n    (workInProgress.lanes |= retryQueue),\n    (workInProgressSuspendedRetryLanes |= retryQueue));\n}\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n  if (!isHydrating)\n    switch (renderState.tailMode) {\n      case \"hidden\":\n        hasRenderedATailFallback = renderState.tail;\n        for (var lastTailNode = null; null !== hasRenderedATailFallback; )\n          null !== hasRenderedATailFallback.alternate &&\n            (lastTailNode = hasRenderedATailFallback),\n            (hasRenderedATailFallback = hasRenderedATailFallback.sibling);\n        null === lastTailNode\n          ? (renderState.tail = null)\n          : (lastTailNode.sibling = null);\n        break;\n      case \"collapsed\":\n        lastTailNode = renderState.tail;\n        for (var lastTailNode$131 = null; null !== lastTailNode; )\n          null !== lastTailNode.alternate && (lastTailNode$131 = lastTailNode),\n            (lastTailNode = lastTailNode.sibling);\n        null === lastTailNode$131\n          ? hasRenderedATailFallback || null === renderState.tail\n            ? (renderState.tail = null)\n            : (renderState.tail.sibling = null)\n          : (lastTailNode$131.sibling = null);\n    }\n}\nfunction bubbleProperties(completedWork) {\n  var didBailout =\n      null !== completedWork.alternate &&\n      completedWork.alternate.child === completedWork.child,\n    newChildLanes = 0,\n    subtreeFlags = 0;\n  if (didBailout)\n    for (var child$132 = completedWork.child; null !== child$132; )\n      (newChildLanes |= child$132.lanes | child$132.childLanes),\n        (subtreeFlags |= child$132.subtreeFlags & 31457280),\n        (subtreeFlags |= child$132.flags & 31457280),\n        (child$132.return = completedWork),\n        (child$132 = child$132.sibling);\n  else\n    for (child$132 = completedWork.child; null !== child$132; )\n      (newChildLanes |= child$132.lanes | child$132.childLanes),\n        (subtreeFlags |= child$132.subtreeFlags),\n        (subtreeFlags |= child$132.flags),\n        (child$132.return = completedWork),\n        (child$132 = child$132.sibling);\n  completedWork.subtreeFlags |= subtreeFlags;\n  completedWork.childLanes = newChildLanes;\n  return didBailout;\n}\nfunction completeWork(current, workInProgress, renderLanes) {\n  var newProps = workInProgress.pendingProps;\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 16:\n    case 15:\n    case 0:\n    case 11:\n    case 7:\n    case 8:\n    case 12:\n    case 9:\n    case 14:\n      return bubbleProperties(workInProgress), null;\n    case 1:\n      return bubbleProperties(workInProgress), null;\n    case 3:\n      renderLanes = workInProgress.stateNode;\n      newProps = null;\n      null !== current && (newProps = current.memoizedState.cache);\n      workInProgress.memoizedState.cache !== newProps &&\n        (workInProgress.flags |= 2048);\n      popProvider(CacheContext);\n      popHostContainer();\n      renderLanes.pendingContext &&\n        ((renderLanes.context = renderLanes.pendingContext),\n        (renderLanes.pendingContext = null));\n      if (null === current || null === current.child)\n        popHydrationState(workInProgress)\n          ? markUpdate(workInProgress)\n          : null === current ||\n            (current.memoizedState.isDehydrated &&\n              0 === (workInProgress.flags & 256)) ||\n            ((workInProgress.flags |= 1024),\n            null !== hydrationErrors &&\n              (queueRecoverableErrors(hydrationErrors),\n              (hydrationErrors = null)));\n      bubbleProperties(workInProgress);\n      return null;\n    case 26:\n      return (\n        (renderLanes = workInProgress.memoizedState),\n        null === current\n          ? (markUpdate(workInProgress),\n            null !== renderLanes\n              ? (bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217)))\n          : renderLanes\n            ? renderLanes !== current.memoizedState\n              ? (markUpdate(workInProgress),\n                bubbleProperties(workInProgress),\n                preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes))\n              : (bubbleProperties(workInProgress),\n                (workInProgress.flags &= -16777217))\n            : (current.memoizedProps !== newProps && markUpdate(workInProgress),\n              bubbleProperties(workInProgress),\n              (workInProgress.flags &= -16777217)),\n        null\n      );\n    case 27:\n      popHostContext(workInProgress);\n      renderLanes = rootInstanceStackCursor.current;\n      var type = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        popHydrationState(workInProgress)\n          ? prepareToHydrateHostInstance(workInProgress, current)\n          : ((current = resolveSingletonInstance(type, newProps, renderLanes)),\n            (workInProgress.stateNode = current),\n            markUpdate(workInProgress));\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 5:\n      popHostContext(workInProgress);\n      renderLanes = workInProgress.type;\n      if (null !== current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (!newProps) {\n          if (null === workInProgress.stateNode)\n            throw Error(formatProdErrorMessage(166));\n          bubbleProperties(workInProgress);\n          return null;\n        }\n        current = contextStackCursor.current;\n        if (popHydrationState(workInProgress))\n          prepareToHydrateHostInstance(workInProgress, current);\n        else {\n          type = getOwnerDocumentFromRootContainer(\n            rootInstanceStackCursor.current\n          );\n          switch (current) {\n            case 1:\n              current = type.createElementNS(\n                \"http://www.w3.org/2000/svg\",\n                renderLanes\n              );\n              break;\n            case 2:\n              current = type.createElementNS(\n                \"http://www.w3.org/1998/Math/MathML\",\n                renderLanes\n              );\n              break;\n            default:\n              switch (renderLanes) {\n                case \"svg\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/2000/svg\",\n                    renderLanes\n                  );\n                  break;\n                case \"math\":\n                  current = type.createElementNS(\n                    \"http://www.w3.org/1998/Math/MathML\",\n                    renderLanes\n                  );\n                  break;\n                case \"script\":\n                  current = type.createElement(\"div\");\n                  current.innerHTML = \"<script>\\x3c/script>\";\n                  current = current.removeChild(current.firstChild);\n                  break;\n                case \"select\":\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(\"select\", { is: newProps.is })\n                      : type.createElement(\"select\");\n                  newProps.multiple\n                    ? (current.multiple = !0)\n                    : newProps.size && (current.size = newProps.size);\n                  break;\n                default:\n                  current =\n                    \"string\" === typeof newProps.is\n                      ? type.createElement(renderLanes, { is: newProps.is })\n                      : type.createElement(renderLanes);\n              }\n          }\n          current[internalInstanceKey] = workInProgress;\n          current[internalPropsKey] = newProps;\n          a: for (type = workInProgress.child; null !== type; ) {\n            if (5 === type.tag || 6 === type.tag)\n              current.appendChild(type.stateNode);\n            else if (4 !== type.tag && 27 !== type.tag && null !== type.child) {\n              type.child.return = type;\n              type = type.child;\n              continue;\n            }\n            if (type === workInProgress) break a;\n            for (; null === type.sibling; ) {\n              if (null === type.return || type.return === workInProgress)\n                break a;\n              type = type.return;\n            }\n            type.sibling.return = type.return;\n            type = type.sibling;\n          }\n          workInProgress.stateNode = current;\n          a: switch (\n            (setInitialProperties(current, renderLanes, newProps), renderLanes)\n          ) {\n            case \"button\":\n            case \"input\":\n            case \"select\":\n            case \"textarea\":\n              current = !!newProps.autoFocus;\n              break a;\n            case \"img\":\n              current = !0;\n              break a;\n            default:\n              current = !1;\n          }\n          current && markUpdate(workInProgress);\n        }\n      }\n      bubbleProperties(workInProgress);\n      workInProgress.flags &= -16777217;\n      return null;\n    case 6:\n      if (current && null != workInProgress.stateNode)\n        current.memoizedProps !== newProps && markUpdate(workInProgress);\n      else {\n        if (\"string\" !== typeof newProps && null === workInProgress.stateNode)\n          throw Error(formatProdErrorMessage(166));\n        current = rootInstanceStackCursor.current;\n        if (popHydrationState(workInProgress)) {\n          current = workInProgress.stateNode;\n          renderLanes = workInProgress.memoizedProps;\n          newProps = null;\n          type = hydrationParentFiber;\n          if (null !== type)\n            switch (type.tag) {\n              case 27:\n              case 5:\n                newProps = type.memoizedProps;\n            }\n          current[internalInstanceKey] = workInProgress;\n          current =\n            current.nodeValue === renderLanes ||\n            (null !== newProps && !0 === newProps.suppressHydrationWarning) ||\n            checkForUnmatchedText(current.nodeValue, renderLanes)\n              ? !0\n              : !1;\n          current || throwOnHydrationMismatch(workInProgress);\n        } else\n          (current =\n            getOwnerDocumentFromRootContainer(current).createTextNode(\n              newProps\n            )),\n            (current[internalInstanceKey] = workInProgress),\n            (workInProgress.stateNode = current);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case 13:\n      newProps = workInProgress.memoizedState;\n      if (\n        null === current ||\n        (null !== current.memoizedState &&\n          null !== current.memoizedState.dehydrated)\n      ) {\n        type = popHydrationState(workInProgress);\n        if (null !== newProps && null !== newProps.dehydrated) {\n          if (null === current) {\n            if (!type) throw Error(formatProdErrorMessage(318));\n            type = workInProgress.memoizedState;\n            type = null !== type ? type.dehydrated : null;\n            if (!type) throw Error(formatProdErrorMessage(317));\n            type[internalInstanceKey] = workInProgress;\n          } else\n            resetHydrationState(),\n              0 === (workInProgress.flags & 128) &&\n                (workInProgress.memoizedState = null),\n              (workInProgress.flags |= 4);\n          bubbleProperties(workInProgress);\n          type = !1;\n        } else\n          null !== hydrationErrors &&\n            (queueRecoverableErrors(hydrationErrors), (hydrationErrors = null)),\n            (type = !0);\n        if (!type) {\n          if (workInProgress.flags & 256)\n            return popSuspenseHandler(workInProgress), workInProgress;\n          popSuspenseHandler(workInProgress);\n          return null;\n        }\n      }\n      popSuspenseHandler(workInProgress);\n      if (0 !== (workInProgress.flags & 128))\n        return (workInProgress.lanes = renderLanes), workInProgress;\n      renderLanes = null !== newProps;\n      current = null !== current && null !== current.memoizedState;\n      if (renderLanes) {\n        newProps = workInProgress.child;\n        type = null;\n        null !== newProps.alternate &&\n          null !== newProps.alternate.memoizedState &&\n          null !== newProps.alternate.memoizedState.cachePool &&\n          (type = newProps.alternate.memoizedState.cachePool.pool);\n        var cache$144 = null;\n        null !== newProps.memoizedState &&\n          null !== newProps.memoizedState.cachePool &&\n          (cache$144 = newProps.memoizedState.cachePool.pool);\n        cache$144 !== type && (newProps.flags |= 2048);\n      }\n      renderLanes !== current &&\n        renderLanes &&\n        (workInProgress.child.flags |= 8192);\n      scheduleRetryEffect(workInProgress, workInProgress.updateQueue);\n      bubbleProperties(workInProgress);\n      return null;\n    case 4:\n      return (\n        popHostContainer(),\n        null === current &&\n          listenToAllSupportedEvents(workInProgress.stateNode.containerInfo),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 10:\n      return (\n        popProvider(workInProgress.type), bubbleProperties(workInProgress), null\n      );\n    case 19:\n      pop(suspenseStackCursor);\n      type = workInProgress.memoizedState;\n      if (null === type) return bubbleProperties(workInProgress), null;\n      newProps = 0 !== (workInProgress.flags & 128);\n      cache$144 = type.rendering;\n      if (null === cache$144)\n        if (newProps) cutOffTailIfNeeded(type, !1);\n        else {\n          if (\n            0 !== workInProgressRootExitStatus ||\n            (null !== current && 0 !== (current.flags & 128))\n          )\n            for (current = workInProgress.child; null !== current; ) {\n              cache$144 = findFirstSuspended(current);\n              if (null !== cache$144) {\n                workInProgress.flags |= 128;\n                cutOffTailIfNeeded(type, !1);\n                current = cache$144.updateQueue;\n                workInProgress.updateQueue = current;\n                scheduleRetryEffect(workInProgress, current);\n                workInProgress.subtreeFlags = 0;\n                current = renderLanes;\n                for (renderLanes = workInProgress.child; null !== renderLanes; )\n                  resetWorkInProgress(renderLanes, current),\n                    (renderLanes = renderLanes.sibling);\n                push(\n                  suspenseStackCursor,\n                  (suspenseStackCursor.current & 1) | 2\n                );\n                return workInProgress.child;\n              }\n              current = current.sibling;\n            }\n          null !== type.tail &&\n            now() > workInProgressRootRenderTargetTime &&\n            ((workInProgress.flags |= 128),\n            (newProps = !0),\n            cutOffTailIfNeeded(type, !1),\n            (workInProgress.lanes = 4194304));\n        }\n      else {\n        if (!newProps)\n          if (((current = findFirstSuspended(cache$144)), null !== current)) {\n            if (\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              (current = current.updateQueue),\n              (workInProgress.updateQueue = current),\n              scheduleRetryEffect(workInProgress, current),\n              cutOffTailIfNeeded(type, !0),\n              null === type.tail &&\n                \"hidden\" === type.tailMode &&\n                !cache$144.alternate &&\n                !isHydrating)\n            )\n              return bubbleProperties(workInProgress), null;\n          } else\n            2 * now() - type.renderingStartTime >\n              workInProgressRootRenderTargetTime &&\n              536870912 !== renderLanes &&\n              ((workInProgress.flags |= 128),\n              (newProps = !0),\n              cutOffTailIfNeeded(type, !1),\n              (workInProgress.lanes = 4194304));\n        type.isBackwards\n          ? ((cache$144.sibling = workInProgress.child),\n            (workInProgress.child = cache$144))\n          : ((current = type.last),\n            null !== current\n              ? (current.sibling = cache$144)\n              : (workInProgress.child = cache$144),\n            (type.last = cache$144));\n      }\n      if (null !== type.tail)\n        return (\n          (workInProgress = type.tail),\n          (type.rendering = workInProgress),\n          (type.tail = workInProgress.sibling),\n          (type.renderingStartTime = now()),\n          (workInProgress.sibling = null),\n          (current = suspenseStackCursor.current),\n          push(suspenseStackCursor, newProps ? (current & 1) | 2 : current & 1),\n          workInProgress\n        );\n      bubbleProperties(workInProgress);\n      return null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        (newProps = null !== workInProgress.memoizedState),\n        null !== current\n          ? (null !== current.memoizedState) !== newProps &&\n            (workInProgress.flags |= 8192)\n          : newProps && (workInProgress.flags |= 8192),\n        newProps\n          ? 0 !== (renderLanes & 536870912) &&\n            0 === (workInProgress.flags & 128) &&\n            (bubbleProperties(workInProgress),\n            workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192))\n          : bubbleProperties(workInProgress),\n        (renderLanes = workInProgress.updateQueue),\n        null !== renderLanes &&\n          scheduleRetryEffect(workInProgress, renderLanes.retryQueue),\n        (renderLanes = null),\n        null !== current &&\n          null !== current.memoizedState &&\n          null !== current.memoizedState.cachePool &&\n          (renderLanes = current.memoizedState.cachePool.pool),\n        (newProps = null),\n        null !== workInProgress.memoizedState &&\n          null !== workInProgress.memoizedState.cachePool &&\n          (newProps = workInProgress.memoizedState.cachePool.pool),\n        newProps !== renderLanes && (workInProgress.flags |= 2048),\n        null !== current && pop(resumedCache),\n        null\n      );\n    case 24:\n      return (\n        (renderLanes = null),\n        null !== current && (renderLanes = current.memoizedState.cache),\n        workInProgress.memoizedState.cache !== renderLanes &&\n          (workInProgress.flags |= 2048),\n        popProvider(CacheContext),\n        bubbleProperties(workInProgress),\n        null\n      );\n    case 25:\n      return null;\n  }\n  throw Error(formatProdErrorMessage(156, workInProgress.tag));\n}\nfunction unwindWork(current, workInProgress) {\n  popTreeContext(workInProgress);\n  switch (workInProgress.tag) {\n    case 1:\n      return (\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 3:\n      return (\n        popProvider(CacheContext),\n        popHostContainer(),\n        (current = workInProgress.flags),\n        0 !== (current & 65536) && 0 === (current & 128)\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 26:\n    case 27:\n    case 5:\n      return popHostContext(workInProgress), null;\n    case 13:\n      popSuspenseHandler(workInProgress);\n      current = workInProgress.memoizedState;\n      if (null !== current && null !== current.dehydrated) {\n        if (null === workInProgress.alternate)\n          throw Error(formatProdErrorMessage(340));\n        resetHydrationState();\n      }\n      current = workInProgress.flags;\n      return current & 65536\n        ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n        : null;\n    case 19:\n      return pop(suspenseStackCursor), null;\n    case 4:\n      return popHostContainer(), null;\n    case 10:\n      return popProvider(workInProgress.type), null;\n    case 22:\n    case 23:\n      return (\n        popSuspenseHandler(workInProgress),\n        popHiddenContext(),\n        null !== current && pop(resumedCache),\n        (current = workInProgress.flags),\n        current & 65536\n          ? ((workInProgress.flags = (current & -65537) | 128), workInProgress)\n          : null\n      );\n    case 24:\n      return popProvider(CacheContext), null;\n    case 25:\n      return null;\n    default:\n      return null;\n  }\n}\nfunction unwindInterruptedWork(current, interruptedWork) {\n  popTreeContext(interruptedWork);\n  switch (interruptedWork.tag) {\n    case 3:\n      popProvider(CacheContext);\n      popHostContainer();\n      break;\n    case 26:\n    case 27:\n    case 5:\n      popHostContext(interruptedWork);\n      break;\n    case 4:\n      popHostContainer();\n      break;\n    case 13:\n      popSuspenseHandler(interruptedWork);\n      break;\n    case 19:\n      pop(suspenseStackCursor);\n      break;\n    case 10:\n      popProvider(interruptedWork.type);\n      break;\n    case 22:\n    case 23:\n      popSuspenseHandler(interruptedWork);\n      popHiddenContext();\n      null !== current && pop(resumedCache);\n      break;\n    case 24:\n      popProvider(CacheContext);\n  }\n}\nvar DefaultAsyncDispatcher = {\n    getCacheForType: function (resourceType) {\n      var cache = readContext(CacheContext),\n        cacheForType = cache.data.get(resourceType);\n      void 0 === cacheForType &&\n        ((cacheForType = resourceType()),\n        cache.data.set(resourceType, cacheForType));\n      return cacheForType;\n    }\n  },\n  PossiblyWeakMap = \"function\" === typeof WeakMap ? WeakMap : Map,\n  executionContext = 0,\n  workInProgressRoot = null,\n  workInProgress = null,\n  workInProgressRootRenderLanes = 0,\n  workInProgressSuspendedReason = 0,\n  workInProgressThrownValue = null,\n  workInProgressRootDidSkipSuspendedSiblings = !1,\n  workInProgressRootIsPrerendering = !1,\n  workInProgressRootDidAttachPingListener = !1,\n  entangledRenderLanes = 0,\n  workInProgressRootExitStatus = 0,\n  workInProgressRootSkippedLanes = 0,\n  workInProgressRootInterleavedUpdatedLanes = 0,\n  workInProgressRootPingedLanes = 0,\n  workInProgressDeferredLane = 0,\n  workInProgressSuspendedRetryLanes = 0,\n  workInProgressRootConcurrentErrors = null,\n  workInProgressRootRecoverableErrors = null,\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1,\n  globalMostRecentFallbackTime = 0,\n  workInProgressRootRenderTargetTime = Infinity,\n  workInProgressTransitions = null,\n  legacyErrorBoundariesThatAlreadyFailed = null,\n  rootDoesHavePassiveEffects = !1,\n  rootWithPendingPassiveEffects = null,\n  pendingPassiveEffectsLanes = 0,\n  pendingPassiveEffectsRemainingLanes = 0,\n  pendingPassiveTransitions = null,\n  nestedUpdateCount = 0,\n  rootWithNestedUpdates = null;\nfunction requestUpdateLane() {\n  if (0 !== (executionContext & 2) && 0 !== workInProgressRootRenderLanes)\n    return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;\n  if (null !== ReactSharedInternals.T) {\n    var actionScopeLane = currentEntangledLane;\n    return 0 !== actionScopeLane ? actionScopeLane : requestTransitionLane();\n  }\n  return resolveUpdatePriority();\n}\nfunction requestDeferredLane() {\n  0 === workInProgressDeferredLane &&\n    (workInProgressDeferredLane =\n      0 === (workInProgressRootRenderLanes & 536870912) || isHydrating\n        ? claimNextTransitionLane()\n        : 536870912);\n  var suspenseHandler = suspenseHandlerStackCursor.current;\n  null !== suspenseHandler && (suspenseHandler.flags |= 32);\n  return workInProgressDeferredLane;\n}\nfunction scheduleUpdateOnFiber(root, fiber, lane) {\n  if (\n    (root === workInProgressRoot && 2 === workInProgressSuspendedReason) ||\n    null !== root.cancelPendingCommit\n  )\n    prepareFreshStack(root, 0),\n      markRootSuspended(\n        root,\n        workInProgressRootRenderLanes,\n        workInProgressDeferredLane,\n        !1\n      );\n  markRootUpdated$1(root, lane);\n  if (0 === (executionContext & 2) || root !== workInProgressRoot)\n    root === workInProgressRoot &&\n      (0 === (executionContext & 2) &&\n        (workInProgressRootInterleavedUpdatedLanes |= lane),\n      4 === workInProgressRootExitStatus &&\n        markRootSuspended(\n          root,\n          workInProgressRootRenderLanes,\n          workInProgressDeferredLane,\n          !1\n        )),\n      ensureRootIsScheduled(root);\n}\nfunction performWorkOnRoot(root$jscomp$0, lanes, forceSync) {\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  var shouldTimeSlice =\n      (!forceSync &&\n        0 === (lanes & 60) &&\n        0 === (lanes & root$jscomp$0.expiredLanes)) ||\n      checkIfRootIsPrerendering(root$jscomp$0, lanes),\n    exitStatus = shouldTimeSlice\n      ? renderRootConcurrent(root$jscomp$0, lanes)\n      : renderRootSync(root$jscomp$0, lanes, !0),\n    renderWasConcurrent = shouldTimeSlice;\n  do {\n    if (0 === exitStatus) {\n      workInProgressRootIsPrerendering &&\n        !shouldTimeSlice &&\n        markRootSuspended(root$jscomp$0, lanes, 0, !1);\n      break;\n    } else if (6 === exitStatus)\n      markRootSuspended(\n        root$jscomp$0,\n        lanes,\n        0,\n        !workInProgressRootDidSkipSuspendedSiblings\n      );\n    else {\n      forceSync = root$jscomp$0.current.alternate;\n      if (\n        renderWasConcurrent &&\n        !isRenderConsistentWithExternalStores(forceSync)\n      ) {\n        exitStatus = renderRootSync(root$jscomp$0, lanes, !1);\n        renderWasConcurrent = !1;\n        continue;\n      }\n      if (2 === exitStatus) {\n        renderWasConcurrent = lanes;\n        if (root$jscomp$0.errorRecoveryDisabledLanes & renderWasConcurrent)\n          var JSCompiler_inline_result = 0;\n        else\n          (JSCompiler_inline_result = root$jscomp$0.pendingLanes & -536870913),\n            (JSCompiler_inline_result =\n              0 !== JSCompiler_inline_result\n                ? JSCompiler_inline_result\n                : JSCompiler_inline_result & 536870912\n                  ? 536870912\n                  : 0);\n        if (0 !== JSCompiler_inline_result) {\n          lanes = JSCompiler_inline_result;\n          a: {\n            var root = root$jscomp$0;\n            exitStatus = workInProgressRootConcurrentErrors;\n            var wasRootDehydrated = root.current.memoizedState.isDehydrated;\n            wasRootDehydrated &&\n              (prepareFreshStack(root, JSCompiler_inline_result).flags |= 256);\n            JSCompiler_inline_result = renderRootSync(\n              root,\n              JSCompiler_inline_result,\n              !1\n            );\n            if (2 !== JSCompiler_inline_result) {\n              if (\n                workInProgressRootDidAttachPingListener &&\n                !wasRootDehydrated\n              ) {\n                root.errorRecoveryDisabledLanes |= renderWasConcurrent;\n                workInProgressRootInterleavedUpdatedLanes |=\n                  renderWasConcurrent;\n                exitStatus = 4;\n                break a;\n              }\n              renderWasConcurrent = workInProgressRootRecoverableErrors;\n              workInProgressRootRecoverableErrors = exitStatus;\n              null !== renderWasConcurrent &&\n                queueRecoverableErrors(renderWasConcurrent);\n            }\n            exitStatus = JSCompiler_inline_result;\n          }\n          renderWasConcurrent = !1;\n          if (2 !== exitStatus) continue;\n        }\n      }\n      if (1 === exitStatus) {\n        prepareFreshStack(root$jscomp$0, 0);\n        markRootSuspended(root$jscomp$0, lanes, 0, !0);\n        break;\n      }\n      a: {\n        shouldTimeSlice = root$jscomp$0;\n        switch (exitStatus) {\n          case 0:\n          case 1:\n            throw Error(formatProdErrorMessage(345));\n          case 4:\n            if ((lanes & 4194176) === lanes) {\n              markRootSuspended(\n                shouldTimeSlice,\n                lanes,\n                workInProgressDeferredLane,\n                !workInProgressRootDidSkipSuspendedSiblings\n              );\n              break a;\n            }\n            break;\n          case 2:\n            workInProgressRootRecoverableErrors = null;\n            break;\n          case 3:\n          case 5:\n            break;\n          default:\n            throw Error(formatProdErrorMessage(329));\n        }\n        shouldTimeSlice.finishedWork = forceSync;\n        shouldTimeSlice.finishedLanes = lanes;\n        if (\n          (lanes & 62914560) === lanes &&\n          ((renderWasConcurrent = globalMostRecentFallbackTime + 300 - now()),\n          10 < renderWasConcurrent)\n        ) {\n          markRootSuspended(\n            shouldTimeSlice,\n            lanes,\n            workInProgressDeferredLane,\n            !workInProgressRootDidSkipSuspendedSiblings\n          );\n          if (0 !== getNextLanes(shouldTimeSlice, 0)) break a;\n          shouldTimeSlice.timeoutHandle = scheduleTimeout(\n            commitRootWhenReady.bind(\n              null,\n              shouldTimeSlice,\n              forceSync,\n              workInProgressRootRecoverableErrors,\n              workInProgressTransitions,\n              workInProgressRootDidIncludeRecursiveRenderUpdate,\n              lanes,\n              workInProgressDeferredLane,\n              workInProgressRootInterleavedUpdatedLanes,\n              workInProgressSuspendedRetryLanes,\n              workInProgressRootDidSkipSuspendedSiblings,\n              2,\n              -0,\n              0\n            ),\n            renderWasConcurrent\n          );\n          break a;\n        }\n        commitRootWhenReady(\n          shouldTimeSlice,\n          forceSync,\n          workInProgressRootRecoverableErrors,\n          workInProgressTransitions,\n          workInProgressRootDidIncludeRecursiveRenderUpdate,\n          lanes,\n          workInProgressDeferredLane,\n          workInProgressRootInterleavedUpdatedLanes,\n          workInProgressSuspendedRetryLanes,\n          workInProgressRootDidSkipSuspendedSiblings,\n          0,\n          -0,\n          0\n        );\n      }\n    }\n    break;\n  } while (1);\n  ensureRootIsScheduled(root$jscomp$0);\n}\nfunction queueRecoverableErrors(errors) {\n  null === workInProgressRootRecoverableErrors\n    ? (workInProgressRootRecoverableErrors = errors)\n    : workInProgressRootRecoverableErrors.push.apply(\n        workInProgressRootRecoverableErrors,\n        errors\n      );\n}\nfunction commitRootWhenReady(\n  root,\n  finishedWork,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  lanes,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes,\n  didSkipSuspendedSiblings,\n  suspendedCommitReason,\n  completedRenderStartTime,\n  completedRenderEndTime\n) {\n  var subtreeFlags = finishedWork.subtreeFlags;\n  if (subtreeFlags & 8192 || 16785408 === (subtreeFlags & 16785408))\n    if (\n      ((suspendedState = { stylesheets: null, count: 0, unsuspend: noop }),\n      accumulateSuspenseyCommitOnFiber(finishedWork),\n      (finishedWork = waitForCommitToBeReady()),\n      null !== finishedWork)\n    ) {\n      root.cancelPendingCommit = finishedWork(\n        commitRoot.bind(\n          null,\n          root,\n          recoverableErrors,\n          transitions,\n          didIncludeRenderPhaseUpdate,\n          spawnedLane,\n          updatedLanes,\n          suspendedRetryLanes,\n          1,\n          completedRenderStartTime,\n          completedRenderEndTime\n        )\n      );\n      markRootSuspended(root, lanes, spawnedLane, !didSkipSuspendedSiblings);\n      return;\n    }\n  commitRoot(\n    root,\n    recoverableErrors,\n    transitions,\n    didIncludeRenderPhaseUpdate,\n    spawnedLane,\n    updatedLanes,\n    suspendedRetryLanes,\n    suspendedCommitReason,\n    completedRenderStartTime,\n    completedRenderEndTime\n  );\n}\nfunction isRenderConsistentWithExternalStores(finishedWork) {\n  for (var node = finishedWork; ; ) {\n    var tag = node.tag;\n    if (\n      (0 === tag || 11 === tag || 15 === tag) &&\n      node.flags & 16384 &&\n      ((tag = node.updateQueue),\n      null !== tag && ((tag = tag.stores), null !== tag))\n    )\n      for (var i = 0; i < tag.length; i++) {\n        var check = tag[i],\n          getSnapshot = check.getSnapshot;\n        check = check.value;\n        try {\n          if (!objectIs(getSnapshot(), check)) return !1;\n        } catch (error) {\n          return !1;\n        }\n      }\n    tag = node.child;\n    if (node.subtreeFlags & 16384 && null !== tag)\n      (tag.return = node), (node = tag);\n    else {\n      if (node === finishedWork) break;\n      for (; null === node.sibling; ) {\n        if (null === node.return || node.return === finishedWork) return !0;\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n  return !0;\n}\nfunction markRootSuspended(\n  root,\n  suspendedLanes,\n  spawnedLane,\n  didAttemptEntireTree\n) {\n  suspendedLanes &= ~workInProgressRootPingedLanes;\n  suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes;\n  didAttemptEntireTree && (root.warmLanes |= suspendedLanes);\n  didAttemptEntireTree = root.expirationTimes;\n  for (var lanes = suspendedLanes; 0 < lanes; ) {\n    var index$6 = 31 - clz32(lanes),\n      lane = 1 << index$6;\n    didAttemptEntireTree[index$6] = -1;\n    lanes &= ~lane;\n  }\n  0 !== spawnedLane &&\n    markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);\n}\nfunction flushSyncWork$1() {\n  return 0 === (executionContext & 6)\n    ? (flushSyncWorkAcrossRoots_impl(0, !1), !1)\n    : !0;\n}\nfunction resetWorkInProgressStack() {\n  if (null !== workInProgress) {\n    if (0 === workInProgressSuspendedReason)\n      var interruptedWork = workInProgress.return;\n    else\n      (interruptedWork = workInProgress),\n        (lastContextDependency = currentlyRenderingFiber = null),\n        resetHooksOnUnwind(interruptedWork),\n        (thenableState$1 = null),\n        (thenableIndexCounter$1 = 0),\n        (interruptedWork = workInProgress);\n    for (; null !== interruptedWork; )\n      unwindInterruptedWork(interruptedWork.alternate, interruptedWork),\n        (interruptedWork = interruptedWork.return);\n    workInProgress = null;\n  }\n}\nfunction prepareFreshStack(root, lanes) {\n  root.finishedWork = null;\n  root.finishedLanes = 0;\n  var timeoutHandle = root.timeoutHandle;\n  -1 !== timeoutHandle &&\n    ((root.timeoutHandle = -1), cancelTimeout(timeoutHandle));\n  timeoutHandle = root.cancelPendingCommit;\n  null !== timeoutHandle &&\n    ((root.cancelPendingCommit = null), timeoutHandle());\n  resetWorkInProgressStack();\n  workInProgressRoot = root;\n  workInProgress = timeoutHandle = createWorkInProgress(root.current, null);\n  workInProgressRootRenderLanes = lanes;\n  workInProgressSuspendedReason = 0;\n  workInProgressThrownValue = null;\n  workInProgressRootDidSkipSuspendedSiblings = !1;\n  workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);\n  workInProgressRootDidAttachPingListener = !1;\n  workInProgressSuspendedRetryLanes =\n    workInProgressDeferredLane =\n    workInProgressRootPingedLanes =\n    workInProgressRootInterleavedUpdatedLanes =\n    workInProgressRootSkippedLanes =\n    workInProgressRootExitStatus =\n      0;\n  workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =\n    null;\n  workInProgressRootDidIncludeRecursiveRenderUpdate = !1;\n  0 !== (lanes & 8) && (lanes |= lanes & 32);\n  var allEntangledLanes = root.entangledLanes;\n  if (0 !== allEntangledLanes)\n    for (\n      root = root.entanglements, allEntangledLanes &= lanes;\n      0 < allEntangledLanes;\n\n    ) {\n      var index$4 = 31 - clz32(allEntangledLanes),\n        lane = 1 << index$4;\n      lanes |= root[index$4];\n      allEntangledLanes &= ~lane;\n    }\n  entangledRenderLanes = lanes;\n  finishQueueingConcurrentUpdates();\n  return timeoutHandle;\n}\nfunction handleThrow(root, thrownValue) {\n  currentlyRenderingFiber$1 = null;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  thrownValue === SuspenseException\n    ? ((thrownValue = getSuspendedThenable()),\n      (workInProgressSuspendedReason = 3))\n    : thrownValue === SuspenseyCommitException\n      ? ((thrownValue = getSuspendedThenable()),\n        (workInProgressSuspendedReason = 4))\n      : (workInProgressSuspendedReason =\n          thrownValue === SelectiveHydrationException\n            ? 8\n            : null !== thrownValue &&\n                \"object\" === typeof thrownValue &&\n                \"function\" === typeof thrownValue.then\n              ? 6\n              : 1);\n  workInProgressThrownValue = thrownValue;\n  null === workInProgress &&\n    ((workInProgressRootExitStatus = 1),\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    ));\n}\nfunction pushDispatcher() {\n  var prevDispatcher = ReactSharedInternals.H;\n  ReactSharedInternals.H = ContextOnlyDispatcher;\n  return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;\n}\nfunction pushAsyncDispatcher() {\n  var prevAsyncDispatcher = ReactSharedInternals.A;\n  ReactSharedInternals.A = DefaultAsyncDispatcher;\n  return prevAsyncDispatcher;\n}\nfunction renderDidSuspendDelayIfPossible() {\n  workInProgressRootExitStatus = 4;\n  workInProgressRootDidSkipSuspendedSiblings ||\n    ((workInProgressRootRenderLanes & 4194176) !==\n      workInProgressRootRenderLanes &&\n      null !== suspenseHandlerStackCursor.current) ||\n    (workInProgressRootIsPrerendering = !0);\n  (0 === (workInProgressRootSkippedLanes & 134217727) &&\n    0 === (workInProgressRootInterleavedUpdatedLanes & 134217727)) ||\n    null === workInProgressRoot ||\n    markRootSuspended(\n      workInProgressRoot,\n      workInProgressRootRenderLanes,\n      workInProgressDeferredLane,\n      !1\n    );\n}\nfunction renderRootSync(root, lanes, shouldYieldForPrerendering) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes)\n    (workInProgressTransitions = null), prepareFreshStack(root, lanes);\n  lanes = !1;\n  var exitStatus = workInProgressRootExitStatus;\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        var unitOfWork = workInProgress,\n          thrownValue = workInProgressThrownValue;\n        switch (workInProgressSuspendedReason) {\n          case 8:\n            resetWorkInProgressStack();\n            exitStatus = 6;\n            break a;\n          case 3:\n          case 2:\n          case 6:\n            null === suspenseHandlerStackCursor.current && (lanes = !0);\n            var reason = workInProgressSuspendedReason;\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n            if (\n              shouldYieldForPrerendering &&\n              workInProgressRootIsPrerendering\n            ) {\n              exitStatus = 0;\n              break a;\n            }\n            break;\n          default:\n            (reason = workInProgressSuspendedReason),\n              (workInProgressSuspendedReason = 0),\n              (workInProgressThrownValue = null),\n              throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);\n        }\n      }\n      workLoopSync();\n      exitStatus = workInProgressRootExitStatus;\n      break;\n    } catch (thrownValue$164) {\n      handleThrow(root, thrownValue$164);\n    }\n  while (1);\n  lanes && root.shellSuspendCounter++;\n  lastContextDependency = currentlyRenderingFiber = null;\n  executionContext = prevExecutionContext;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  null === workInProgress &&\n    ((workInProgressRoot = null),\n    (workInProgressRootRenderLanes = 0),\n    finishQueueingConcurrentUpdates());\n  return exitStatus;\n}\nfunction workLoopSync() {\n  for (; null !== workInProgress; ) performUnitOfWork(workInProgress);\n}\nfunction renderRootConcurrent(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= 2;\n  var prevDispatcher = pushDispatcher(),\n    prevAsyncDispatcher = pushAsyncDispatcher();\n  workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes\n    ? ((workInProgressTransitions = null),\n      (workInProgressRootRenderTargetTime = now() + 500),\n      prepareFreshStack(root, lanes))\n    : (workInProgressRootIsPrerendering = checkIfRootIsPrerendering(\n        root,\n        lanes\n      ));\n  a: do\n    try {\n      if (0 !== workInProgressSuspendedReason && null !== workInProgress) {\n        lanes = workInProgress;\n        var thrownValue = workInProgressThrownValue;\n        b: switch (workInProgressSuspendedReason) {\n          case 1:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 1);\n            break;\n          case 2:\n            if (isThenableResolved(thrownValue)) {\n              workInProgressSuspendedReason = 0;\n              workInProgressThrownValue = null;\n              replaySuspendedUnitOfWork(lanes);\n              break;\n            }\n            lanes = function () {\n              2 === workInProgressSuspendedReason &&\n                workInProgressRoot === root &&\n                (workInProgressSuspendedReason = 7);\n              ensureRootIsScheduled(root);\n            };\n            thrownValue.then(lanes, lanes);\n            break a;\n          case 3:\n            workInProgressSuspendedReason = 7;\n            break a;\n          case 4:\n            workInProgressSuspendedReason = 5;\n            break a;\n          case 7:\n            isThenableResolved(thrownValue)\n              ? ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                replaySuspendedUnitOfWork(lanes))\n              : ((workInProgressSuspendedReason = 0),\n                (workInProgressThrownValue = null),\n                throwAndUnwindWorkLoop(root, lanes, thrownValue, 7));\n            break;\n          case 5:\n            var resource = null;\n            switch (workInProgress.tag) {\n              case 26:\n                resource = workInProgress.memoizedState;\n              case 5:\n              case 27:\n                var hostFiber = workInProgress;\n                if (resource ? preloadResource(resource) : 1) {\n                  workInProgressSuspendedReason = 0;\n                  workInProgressThrownValue = null;\n                  var sibling = hostFiber.sibling;\n                  if (null !== sibling) workInProgress = sibling;\n                  else {\n                    var returnFiber = hostFiber.return;\n                    null !== returnFiber\n                      ? ((workInProgress = returnFiber),\n                        completeUnitOfWork(returnFiber))\n                      : (workInProgress = null);\n                  }\n                  break b;\n                }\n            }\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 5);\n            break;\n          case 6:\n            workInProgressSuspendedReason = 0;\n            workInProgressThrownValue = null;\n            throwAndUnwindWorkLoop(root, lanes, thrownValue, 6);\n            break;\n          case 8:\n            resetWorkInProgressStack();\n            workInProgressRootExitStatus = 6;\n            break a;\n          default:\n            throw Error(formatProdErrorMessage(462));\n        }\n      }\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue$166) {\n      handleThrow(root, thrownValue$166);\n    }\n  while (1);\n  lastContextDependency = currentlyRenderingFiber = null;\n  ReactSharedInternals.H = prevDispatcher;\n  ReactSharedInternals.A = prevAsyncDispatcher;\n  executionContext = prevExecutionContext;\n  if (null !== workInProgress) return 0;\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = 0;\n  finishQueueingConcurrentUpdates();\n  return workInProgressRootExitStatus;\n}\nfunction workLoopConcurrent() {\n  for (; null !== workInProgress && !shouldYield(); )\n    performUnitOfWork(workInProgress);\n}\nfunction performUnitOfWork(unitOfWork) {\n  var next = beginWork(unitOfWork.alternate, unitOfWork, entangledRenderLanes);\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction replaySuspendedUnitOfWork(unitOfWork) {\n  var next = unitOfWork;\n  var current = next.alternate;\n  switch (next.tag) {\n    case 15:\n    case 0:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type,\n        void 0,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 11:\n      next = replayFunctionComponent(\n        current,\n        next,\n        next.pendingProps,\n        next.type.render,\n        next.ref,\n        workInProgressRootRenderLanes\n      );\n      break;\n    case 5:\n      resetHooksOnUnwind(next);\n    default:\n      unwindInterruptedWork(current, next),\n        (next = workInProgress =\n          resetWorkInProgress(next, entangledRenderLanes)),\n        (next = beginWork(current, next, entangledRenderLanes));\n  }\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);\n}\nfunction throwAndUnwindWorkLoop(\n  root,\n  unitOfWork,\n  thrownValue,\n  suspendedReason\n) {\n  lastContextDependency = currentlyRenderingFiber = null;\n  resetHooksOnUnwind(unitOfWork);\n  thenableState$1 = null;\n  thenableIndexCounter$1 = 0;\n  var returnFiber = unitOfWork.return;\n  try {\n    if (\n      throwException(\n        root,\n        returnFiber,\n        unitOfWork,\n        thrownValue,\n        workInProgressRootRenderLanes\n      )\n    ) {\n      workInProgressRootExitStatus = 1;\n      logUncaughtError(\n        root,\n        createCapturedValueAtFiber(thrownValue, root.current)\n      );\n      workInProgress = null;\n      return;\n    }\n  } catch (error) {\n    if (null !== returnFiber) throw ((workInProgress = returnFiber), error);\n    workInProgressRootExitStatus = 1;\n    logUncaughtError(\n      root,\n      createCapturedValueAtFiber(thrownValue, root.current)\n    );\n    workInProgress = null;\n    return;\n  }\n  if (unitOfWork.flags & 32768) {\n    if (isHydrating || 1 === suspendedReason) root = !0;\n    else if (\n      workInProgressRootIsPrerendering ||\n      0 !== (workInProgressRootRenderLanes & 536870912)\n    )\n      root = !1;\n    else if (\n      ((workInProgressRootDidSkipSuspendedSiblings = root = !0),\n      2 === suspendedReason || 3 === suspendedReason || 6 === suspendedReason)\n    )\n      (suspendedReason = suspenseHandlerStackCursor.current),\n        null !== suspendedReason &&\n          13 === suspendedReason.tag &&\n          (suspendedReason.flags |= 16384);\n    unwindUnitOfWork(unitOfWork, root);\n  } else completeUnitOfWork(unitOfWork);\n}\nfunction completeUnitOfWork(unitOfWork) {\n  var completedWork = unitOfWork;\n  do {\n    if (0 !== (completedWork.flags & 32768)) {\n      unwindUnitOfWork(\n        completedWork,\n        workInProgressRootDidSkipSuspendedSiblings\n      );\n      return;\n    }\n    unitOfWork = completedWork.return;\n    var next = completeWork(\n      completedWork.alternate,\n      completedWork,\n      entangledRenderLanes\n    );\n    if (null !== next) {\n      workInProgress = next;\n      return;\n    }\n    completedWork = completedWork.sibling;\n    if (null !== completedWork) {\n      workInProgress = completedWork;\n      return;\n    }\n    workInProgress = completedWork = unitOfWork;\n  } while (null !== completedWork);\n  0 === workInProgressRootExitStatus && (workInProgressRootExitStatus = 5);\n}\nfunction unwindUnitOfWork(unitOfWork, skipSiblings) {\n  do {\n    var next = unwindWork(unitOfWork.alternate, unitOfWork);\n    if (null !== next) {\n      next.flags &= 32767;\n      workInProgress = next;\n      return;\n    }\n    next = unitOfWork.return;\n    null !== next &&\n      ((next.flags |= 32768), (next.subtreeFlags = 0), (next.deletions = null));\n    if (\n      !skipSiblings &&\n      ((unitOfWork = unitOfWork.sibling), null !== unitOfWork)\n    ) {\n      workInProgress = unitOfWork;\n      return;\n    }\n    workInProgress = unitOfWork = next;\n  } while (null !== unitOfWork);\n  workInProgressRootExitStatus = 6;\n  workInProgress = null;\n}\nfunction commitRoot(\n  root,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes,\n  suspendedCommitReason,\n  completedRenderStartTime,\n  completedRenderEndTime\n) {\n  var prevTransition = ReactSharedInternals.T,\n    previousUpdateLanePriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 2),\n      (ReactSharedInternals.T = null),\n      commitRootImpl(\n        root,\n        recoverableErrors,\n        transitions,\n        didIncludeRenderPhaseUpdate,\n        previousUpdateLanePriority,\n        spawnedLane,\n        updatedLanes,\n        suspendedRetryLanes,\n        suspendedCommitReason,\n        completedRenderStartTime,\n        completedRenderEndTime\n      );\n  } finally {\n    (ReactSharedInternals.T = prevTransition),\n      (ReactDOMSharedInternals.p = previousUpdateLanePriority);\n  }\n}\nfunction commitRootImpl(\n  root,\n  recoverableErrors,\n  transitions,\n  didIncludeRenderPhaseUpdate,\n  renderPriorityLevel,\n  spawnedLane,\n  updatedLanes,\n  suspendedRetryLanes\n) {\n  do flushPassiveEffects();\n  while (null !== rootWithPendingPassiveEffects);\n  if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));\n  var finishedWork = root.finishedWork;\n  didIncludeRenderPhaseUpdate = root.finishedLanes;\n  if (null === finishedWork) return null;\n  root.finishedWork = null;\n  root.finishedLanes = 0;\n  if (finishedWork === root.current) throw Error(formatProdErrorMessage(177));\n  root.callbackNode = null;\n  root.callbackPriority = 0;\n  root.cancelPendingCommit = null;\n  var remainingLanes = finishedWork.lanes | finishedWork.childLanes;\n  remainingLanes |= concurrentlyUpdatedLanes;\n  markRootFinished(\n    root,\n    didIncludeRenderPhaseUpdate,\n    remainingLanes,\n    spawnedLane,\n    updatedLanes,\n    suspendedRetryLanes\n  );\n  root === workInProgressRoot &&\n    ((workInProgress = workInProgressRoot = null),\n    (workInProgressRootRenderLanes = 0));\n  (0 === (finishedWork.subtreeFlags & 10256) &&\n    0 === (finishedWork.flags & 10256)) ||\n    rootDoesHavePassiveEffects ||\n    ((rootDoesHavePassiveEffects = !0),\n    (pendingPassiveEffectsRemainingLanes = remainingLanes),\n    (pendingPassiveTransitions = transitions),\n    scheduleCallback$1(NormalPriority$1, function () {\n      flushPassiveEffects(!0);\n      return null;\n    }));\n  transitions = 0 !== (finishedWork.flags & 15990);\n  0 !== (finishedWork.subtreeFlags & 15990) || transitions\n    ? ((transitions = ReactSharedInternals.T),\n      (ReactSharedInternals.T = null),\n      (spawnedLane = ReactDOMSharedInternals.p),\n      (ReactDOMSharedInternals.p = 2),\n      (updatedLanes = executionContext),\n      (executionContext |= 4),\n      commitBeforeMutationEffects(root, finishedWork),\n      commitMutationEffectsOnFiber(finishedWork, root),\n      restoreSelection(selectionInformation, root.containerInfo),\n      (_enabled = !!eventsEnabled),\n      (selectionInformation = eventsEnabled = null),\n      (root.current = finishedWork),\n      commitLayoutEffectOnFiber(root, finishedWork.alternate, finishedWork),\n      requestPaint(),\n      (executionContext = updatedLanes),\n      (ReactDOMSharedInternals.p = spawnedLane),\n      (ReactSharedInternals.T = transitions))\n    : (root.current = finishedWork);\n  rootDoesHavePassiveEffects\n    ? ((rootDoesHavePassiveEffects = !1),\n      (rootWithPendingPassiveEffects = root),\n      (pendingPassiveEffectsLanes = didIncludeRenderPhaseUpdate))\n    : releaseRootPooledCache(root, remainingLanes);\n  remainingLanes = root.pendingLanes;\n  0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);\n  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\n  ensureRootIsScheduled(root);\n  if (null !== recoverableErrors)\n    for (\n      renderPriorityLevel = root.onRecoverableError, finishedWork = 0;\n      finishedWork < recoverableErrors.length;\n      finishedWork++\n    )\n      (remainingLanes = recoverableErrors[finishedWork]),\n        renderPriorityLevel(remainingLanes.value, {\n          componentStack: remainingLanes.stack\n        });\n  0 !== (pendingPassiveEffectsLanes & 3) && flushPassiveEffects();\n  remainingLanes = root.pendingLanes;\n  0 !== (didIncludeRenderPhaseUpdate & 4194218) && 0 !== (remainingLanes & 42)\n    ? root === rootWithNestedUpdates\n      ? nestedUpdateCount++\n      : ((nestedUpdateCount = 0), (rootWithNestedUpdates = root))\n    : (nestedUpdateCount = 0);\n  flushSyncWorkAcrossRoots_impl(0, !1);\n  return null;\n}\nfunction releaseRootPooledCache(root, remainingLanes) {\n  0 === (root.pooledCacheLanes &= remainingLanes) &&\n    ((remainingLanes = root.pooledCache),\n    null != remainingLanes &&\n      ((root.pooledCache = null), releaseCache(remainingLanes)));\n}\nfunction flushPassiveEffects() {\n  if (null !== rootWithPendingPassiveEffects) {\n    var root$170 = rootWithPendingPassiveEffects,\n      remainingLanes = pendingPassiveEffectsRemainingLanes;\n    pendingPassiveEffectsRemainingLanes = 0;\n    var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes),\n      prevTransition = ReactSharedInternals.T,\n      previousPriority = ReactDOMSharedInternals.p;\n    try {\n      ReactDOMSharedInternals.p = 32 > renderPriority ? 32 : renderPriority;\n      ReactSharedInternals.T = null;\n      if (null === rootWithPendingPassiveEffects)\n        var JSCompiler_inline_result = !1;\n      else {\n        renderPriority = pendingPassiveTransitions;\n        pendingPassiveTransitions = null;\n        var root = rootWithPendingPassiveEffects,\n          lanes = pendingPassiveEffectsLanes;\n        rootWithPendingPassiveEffects = null;\n        pendingPassiveEffectsLanes = 0;\n        if (0 !== (executionContext & 6))\n          throw Error(formatProdErrorMessage(331));\n        var prevExecutionContext = executionContext;\n        executionContext |= 4;\n        commitPassiveUnmountOnFiber(root.current);\n        commitPassiveMountOnFiber(root, root.current, lanes, renderPriority);\n        executionContext = prevExecutionContext;\n        flushSyncWorkAcrossRoots_impl(0, !1);\n        if (\n          injectedHook &&\n          \"function\" === typeof injectedHook.onPostCommitFiberRoot\n        )\n          try {\n            injectedHook.onPostCommitFiberRoot(rendererID, root);\n          } catch (err) {}\n        JSCompiler_inline_result = !0;\n      }\n      return JSCompiler_inline_result;\n    } finally {\n      (ReactDOMSharedInternals.p = previousPriority),\n        (ReactSharedInternals.T = prevTransition),\n        releaseRootPooledCache(root$170, remainingLanes);\n    }\n  }\n  return !1;\n}\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n  sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n  sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);\n  rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);\n  null !== rootFiber &&\n    (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));\n}\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {\n  if (3 === sourceFiber.tag)\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n  else\n    for (; null !== nearestMountedAncestor; ) {\n      if (3 === nearestMountedAncestor.tag) {\n        captureCommitPhaseErrorOnRoot(\n          nearestMountedAncestor,\n          sourceFiber,\n          error\n        );\n        break;\n      } else if (1 === nearestMountedAncestor.tag) {\n        var instance = nearestMountedAncestor.stateNode;\n        if (\n          \"function\" ===\n            typeof nearestMountedAncestor.type.getDerivedStateFromError ||\n          (\"function\" === typeof instance.componentDidCatch &&\n            (null === legacyErrorBoundariesThatAlreadyFailed ||\n              !legacyErrorBoundariesThatAlreadyFailed.has(instance)))\n        ) {\n          sourceFiber = createCapturedValueAtFiber(error, sourceFiber);\n          error = createClassErrorUpdate(2);\n          instance = enqueueUpdate(nearestMountedAncestor, error, 2);\n          null !== instance &&\n            (initializeClassErrorUpdate(\n              error,\n              instance,\n              nearestMountedAncestor,\n              sourceFiber\n            ),\n            markRootUpdated$1(instance, 2),\n            ensureRootIsScheduled(instance));\n          break;\n        }\n      }\n      nearestMountedAncestor = nearestMountedAncestor.return;\n    }\n}\nfunction attachPingListener(root, wakeable, lanes) {\n  var pingCache = root.pingCache;\n  if (null === pingCache) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    var threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else\n    (threadIDs = pingCache.get(wakeable)),\n      void 0 === threadIDs &&\n        ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));\n  threadIDs.has(lanes) ||\n    ((workInProgressRootDidAttachPingListener = !0),\n    threadIDs.add(lanes),\n    (root = pingSuspendedRoot.bind(null, root, wakeable, lanes)),\n    wakeable.then(root, root));\n}\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\n  var pingCache = root.pingCache;\n  null !== pingCache && pingCache.delete(wakeable);\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n  root.warmLanes &= ~pingedLanes;\n  workInProgressRoot === root &&\n    (workInProgressRootRenderLanes & pingedLanes) === pingedLanes &&\n    (4 === workInProgressRootExitStatus ||\n    (3 === workInProgressRootExitStatus &&\n      (workInProgressRootRenderLanes & 62914560) ===\n        workInProgressRootRenderLanes &&\n      300 > now() - globalMostRecentFallbackTime)\n      ? 0 === (executionContext & 2) && prepareFreshStack(root, 0)\n      : (workInProgressRootPingedLanes |= pingedLanes),\n    workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes &&\n      (workInProgressSuspendedRetryLanes = 0));\n  ensureRootIsScheduled(root);\n}\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\n  0 === retryLane && (retryLane = claimNextRetryLane());\n  boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n  null !== boundaryFiber &&\n    (markRootUpdated$1(boundaryFiber, retryLane),\n    ensureRootIsScheduled(boundaryFiber));\n}\nfunction retryDehydratedSuspenseBoundary(boundaryFiber) {\n  var suspenseState = boundaryFiber.memoizedState,\n    retryLane = 0;\n  null !== suspenseState && (retryLane = suspenseState.retryLane);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\n  var retryLane = 0;\n  switch (boundaryFiber.tag) {\n    case 13:\n      var retryCache = boundaryFiber.stateNode;\n      var suspenseState = boundaryFiber.memoizedState;\n      null !== suspenseState && (retryLane = suspenseState.retryLane);\n      break;\n    case 19:\n      retryCache = boundaryFiber.stateNode;\n      break;\n    case 22:\n      retryCache = boundaryFiber.stateNode._retryCache;\n      break;\n    default:\n      throw Error(formatProdErrorMessage(314));\n  }\n  null !== retryCache && retryCache.delete(wakeable);\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\nfunction scheduleCallback$1(priorityLevel, callback) {\n  return scheduleCallback$3(priorityLevel, callback);\n}\nvar firstScheduledRoot = null,\n  lastScheduledRoot = null,\n  didScheduleMicrotask = !1,\n  mightHavePendingSyncWork = !1,\n  isFlushingWork = !1,\n  currentEventTransitionLane = 0;\nfunction ensureRootIsScheduled(root) {\n  root !== lastScheduledRoot &&\n    null === root.next &&\n    (null === lastScheduledRoot\n      ? (firstScheduledRoot = lastScheduledRoot = root)\n      : (lastScheduledRoot = lastScheduledRoot.next = root));\n  mightHavePendingSyncWork = !0;\n  didScheduleMicrotask ||\n    ((didScheduleMicrotask = !0),\n    scheduleImmediateTask(processRootScheduleInMicrotask));\n}\nfunction flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {\n  if (!isFlushingWork && mightHavePendingSyncWork) {\n    isFlushingWork = !0;\n    do {\n      var didPerformSomeWork = !1;\n      for (var root$172 = firstScheduledRoot; null !== root$172; ) {\n        if (!onlyLegacy)\n          if (0 !== syncTransitionLanes) {\n            var pendingLanes = root$172.pendingLanes;\n            if (0 === pendingLanes) var JSCompiler_inline_result = 0;\n            else {\n              var suspendedLanes = root$172.suspendedLanes,\n                pingedLanes = root$172.pingedLanes;\n              JSCompiler_inline_result =\n                (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;\n              JSCompiler_inline_result &=\n                pendingLanes & ~(suspendedLanes & ~pingedLanes);\n              JSCompiler_inline_result =\n                JSCompiler_inline_result & 201326677\n                  ? (JSCompiler_inline_result & 201326677) | 1\n                  : JSCompiler_inline_result\n                    ? JSCompiler_inline_result | 2\n                    : 0;\n            }\n            0 !== JSCompiler_inline_result &&\n              ((didPerformSomeWork = !0),\n              performSyncWorkOnRoot(root$172, JSCompiler_inline_result));\n          } else\n            (JSCompiler_inline_result = workInProgressRootRenderLanes),\n              (JSCompiler_inline_result = getNextLanes(\n                root$172,\n                root$172 === workInProgressRoot ? JSCompiler_inline_result : 0\n              )),\n              0 === (JSCompiler_inline_result & 3) ||\n                checkIfRootIsPrerendering(root$172, JSCompiler_inline_result) ||\n                ((didPerformSomeWork = !0),\n                performSyncWorkOnRoot(root$172, JSCompiler_inline_result));\n        root$172 = root$172.next;\n      }\n    } while (didPerformSomeWork);\n    isFlushingWork = !1;\n  }\n}\nfunction processRootScheduleInMicrotask() {\n  mightHavePendingSyncWork = didScheduleMicrotask = !1;\n  var syncTransitionLanes = 0;\n  0 !== currentEventTransitionLane &&\n    (shouldAttemptEagerTransition() &&\n      (syncTransitionLanes = currentEventTransitionLane),\n    (currentEventTransitionLane = 0));\n  for (\n    var currentTime = now(), prev = null, root = firstScheduledRoot;\n    null !== root;\n\n  ) {\n    var next = root.next,\n      nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);\n    if (0 === nextLanes)\n      (root.next = null),\n        null === prev ? (firstScheduledRoot = next) : (prev.next = next),\n        null === next && (lastScheduledRoot = prev);\n    else if (\n      ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))\n    )\n      mightHavePendingSyncWork = !0;\n    root = next;\n  }\n  flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);\n}\nfunction scheduleTaskForRootDuringMicrotask(root, currentTime) {\n  for (\n    var suspendedLanes = root.suspendedLanes,\n      pingedLanes = root.pingedLanes,\n      expirationTimes = root.expirationTimes,\n      lanes = root.pendingLanes & -62914561;\n    0 < lanes;\n\n  ) {\n    var index$5 = 31 - clz32(lanes),\n      lane = 1 << index$5,\n      expirationTime = expirationTimes[index$5];\n    if (-1 === expirationTime) {\n      if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes))\n        expirationTimes[index$5] = computeExpirationTime(lane, currentTime);\n    } else expirationTime <= currentTime && (root.expiredLanes |= lane);\n    lanes &= ~lane;\n  }\n  currentTime = workInProgressRoot;\n  suspendedLanes = workInProgressRootRenderLanes;\n  suspendedLanes = getNextLanes(\n    root,\n    root === currentTime ? suspendedLanes : 0\n  );\n  pingedLanes = root.callbackNode;\n  if (\n    0 === suspendedLanes ||\n    (root === currentTime && 2 === workInProgressSuspendedReason) ||\n    null !== root.cancelPendingCommit\n  )\n    return (\n      null !== pingedLanes &&\n        null !== pingedLanes &&\n        cancelCallback$1(pingedLanes),\n      (root.callbackNode = null),\n      (root.callbackPriority = 0)\n    );\n  if (\n    0 === (suspendedLanes & 3) ||\n    checkIfRootIsPrerendering(root, suspendedLanes)\n  ) {\n    currentTime = suspendedLanes & -suspendedLanes;\n    if (currentTime === root.callbackPriority) return currentTime;\n    null !== pingedLanes && cancelCallback$1(pingedLanes);\n    switch (lanesToEventPriority(suspendedLanes)) {\n      case 2:\n      case 8:\n        suspendedLanes = UserBlockingPriority;\n        break;\n      case 32:\n        suspendedLanes = NormalPriority$1;\n        break;\n      case 268435456:\n        suspendedLanes = IdlePriority;\n        break;\n      default:\n        suspendedLanes = NormalPriority$1;\n    }\n    pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);\n    suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes);\n    root.callbackPriority = currentTime;\n    root.callbackNode = suspendedLanes;\n    return currentTime;\n  }\n  null !== pingedLanes && null !== pingedLanes && cancelCallback$1(pingedLanes);\n  root.callbackPriority = 2;\n  root.callbackNode = null;\n  return 2;\n}\nfunction performWorkOnRootViaSchedulerTask(root, didTimeout) {\n  var originalCallbackNode = root.callbackNode;\n  if (flushPassiveEffects() && root.callbackNode !== originalCallbackNode)\n    return null;\n  var workInProgressRootRenderLanes$jscomp$0 = workInProgressRootRenderLanes;\n  workInProgressRootRenderLanes$jscomp$0 = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes$jscomp$0 : 0\n  );\n  if (0 === workInProgressRootRenderLanes$jscomp$0) return null;\n  performWorkOnRoot(root, workInProgressRootRenderLanes$jscomp$0, didTimeout);\n  scheduleTaskForRootDuringMicrotask(root, now());\n  return null != root.callbackNode && root.callbackNode === originalCallbackNode\n    ? performWorkOnRootViaSchedulerTask.bind(null, root)\n    : null;\n}\nfunction performSyncWorkOnRoot(root, lanes) {\n  if (flushPassiveEffects()) return null;\n  performWorkOnRoot(root, lanes, !0);\n}\nfunction scheduleImmediateTask(cb) {\n  scheduleMicrotask(function () {\n    0 !== (executionContext & 6)\n      ? scheduleCallback$3(ImmediatePriority, cb)\n      : cb();\n  });\n}\nfunction requestTransitionLane() {\n  0 === currentEventTransitionLane &&\n    (currentEventTransitionLane = claimNextTransitionLane());\n  return currentEventTransitionLane;\n}\nfunction coerceFormActionProp(actionProp) {\n  return null == actionProp ||\n    \"symbol\" === typeof actionProp ||\n    \"boolean\" === typeof actionProp\n    ? null\n    : \"function\" === typeof actionProp\n      ? actionProp\n      : sanitizeURL(\"\" + actionProp);\n}\nfunction createFormDataWithSubmitter(form, submitter) {\n  var temp = submitter.ownerDocument.createElement(\"input\");\n  temp.name = submitter.name;\n  temp.value = submitter.value;\n  form.id && temp.setAttribute(\"form\", form.id);\n  submitter.parentNode.insertBefore(temp, submitter);\n  form = new FormData(form);\n  temp.parentNode.removeChild(temp);\n  return form;\n}\nfunction extractEvents$1(\n  dispatchQueue,\n  domEventName,\n  maybeTargetInst,\n  nativeEvent,\n  nativeEventTarget\n) {\n  if (\n    \"submit\" === domEventName &&\n    maybeTargetInst &&\n    maybeTargetInst.stateNode === nativeEventTarget\n  ) {\n    var action = coerceFormActionProp(\n        (nativeEventTarget[internalPropsKey] || null).action\n      ),\n      submitter = nativeEvent.submitter;\n    submitter &&\n      ((domEventName = (domEventName = submitter[internalPropsKey] || null)\n        ? coerceFormActionProp(domEventName.formAction)\n        : submitter.getAttribute(\"formAction\")),\n      null !== domEventName && ((action = domEventName), (submitter = null)));\n    var event = new SyntheticEvent(\n      \"action\",\n      \"action\",\n      null,\n      nativeEvent,\n      nativeEventTarget\n    );\n    dispatchQueue.push({\n      event: event,\n      listeners: [\n        {\n          instance: null,\n          listener: function () {\n            if (nativeEvent.defaultPrevented) {\n              if (0 !== currentEventTransitionLane) {\n                var formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget);\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  null,\n                  formData\n                );\n              }\n            } else\n              \"function\" === typeof action &&\n                (event.preventDefault(),\n                (formData = submitter\n                  ? createFormDataWithSubmitter(nativeEventTarget, submitter)\n                  : new FormData(nativeEventTarget)),\n                startHostTransition(\n                  maybeTargetInst,\n                  {\n                    pending: !0,\n                    data: formData,\n                    method: nativeEventTarget.method,\n                    action: action\n                  },\n                  action,\n                  formData\n                ));\n          },\n          currentTarget: nativeEventTarget\n        }\n      ]\n    });\n  }\n}\nfor (\n  var i$jscomp$inline_1439 = 0;\n  i$jscomp$inline_1439 < simpleEventPluginEvents.length;\n  i$jscomp$inline_1439++\n) {\n  var eventName$jscomp$inline_1440 =\n      simpleEventPluginEvents[i$jscomp$inline_1439],\n    domEventName$jscomp$inline_1441 =\n      eventName$jscomp$inline_1440.toLowerCase(),\n    capitalizedEvent$jscomp$inline_1442 =\n      eventName$jscomp$inline_1440[0].toUpperCase() +\n      eventName$jscomp$inline_1440.slice(1);\n  registerSimpleEvent(\n    domEventName$jscomp$inline_1441,\n    \"on\" + capitalizedEvent$jscomp$inline_1442\n  );\n}\nregisterSimpleEvent(ANIMATION_END, \"onAnimationEnd\");\nregisterSimpleEvent(ANIMATION_ITERATION, \"onAnimationIteration\");\nregisterSimpleEvent(ANIMATION_START, \"onAnimationStart\");\nregisterSimpleEvent(\"dblclick\", \"onDoubleClick\");\nregisterSimpleEvent(\"focusin\", \"onFocus\");\nregisterSimpleEvent(\"focusout\", \"onBlur\");\nregisterSimpleEvent(TRANSITION_RUN, \"onTransitionRun\");\nregisterSimpleEvent(TRANSITION_START, \"onTransitionStart\");\nregisterSimpleEvent(TRANSITION_CANCEL, \"onTransitionCancel\");\nregisterSimpleEvent(TRANSITION_END, \"onTransitionEnd\");\nregisterDirectEvent(\"onMouseEnter\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onMouseLeave\", [\"mouseout\", \"mouseover\"]);\nregisterDirectEvent(\"onPointerEnter\", [\"pointerout\", \"pointerover\"]);\nregisterDirectEvent(\"onPointerLeave\", [\"pointerout\", \"pointerover\"]);\nregisterTwoPhaseEvent(\n  \"onChange\",\n  \"change click focusin focusout input keydown keyup selectionchange\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onSelect\",\n  \"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\n    \" \"\n  )\n);\nregisterTwoPhaseEvent(\"onBeforeInput\", [\n  \"compositionend\",\n  \"keypress\",\n  \"textInput\",\n  \"paste\"\n]);\nregisterTwoPhaseEvent(\n  \"onCompositionEnd\",\n  \"compositionend focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionStart\",\n  \"compositionstart focusout keydown keypress keyup mousedown\".split(\" \")\n);\nregisterTwoPhaseEvent(\n  \"onCompositionUpdate\",\n  \"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \")\n);\nvar mediaEventTypes =\n    \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\n      \" \"\n    ),\n  nonDelegatedEvents = new Set(\n    \"beforetoggle cancel close invalid load scroll scrollend toggle\"\n      .split(\" \")\n      .concat(mediaEventTypes)\n  );\nfunction processDispatchQueue(dispatchQueue, eventSystemFlags) {\n  eventSystemFlags = 0 !== (eventSystemFlags & 4);\n  for (var i = 0; i < dispatchQueue.length; i++) {\n    var _dispatchQueue$i = dispatchQueue[i],\n      event = _dispatchQueue$i.event;\n    _dispatchQueue$i = _dispatchQueue$i.listeners;\n    a: {\n      var previousInstance = void 0;\n      if (eventSystemFlags)\n        for (\n          var i$jscomp$0 = _dispatchQueue$i.length - 1;\n          0 <= i$jscomp$0;\n          i$jscomp$0--\n        ) {\n          var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0],\n            instance = _dispatchListeners$i.instance,\n            currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n      else\n        for (\n          i$jscomp$0 = 0;\n          i$jscomp$0 < _dispatchQueue$i.length;\n          i$jscomp$0++\n        ) {\n          _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];\n          instance = _dispatchListeners$i.instance;\n          currentTarget = _dispatchListeners$i.currentTarget;\n          _dispatchListeners$i = _dispatchListeners$i.listener;\n          if (instance !== previousInstance && event.isPropagationStopped())\n            break a;\n          previousInstance = _dispatchListeners$i;\n          event.currentTarget = currentTarget;\n          try {\n            previousInstance(event);\n          } catch (error) {\n            reportGlobalError(error);\n          }\n          event.currentTarget = null;\n          previousInstance = instance;\n        }\n    }\n  }\n}\nfunction listenToNonDelegatedEvent(domEventName, targetElement) {\n  var JSCompiler_inline_result = targetElement[internalEventHandlersKey];\n  void 0 === JSCompiler_inline_result &&\n    (JSCompiler_inline_result = targetElement[internalEventHandlersKey] =\n      new Set());\n  var listenerSetKey = domEventName + \"__bubble\";\n  JSCompiler_inline_result.has(listenerSetKey) ||\n    (addTrappedEventListener(targetElement, domEventName, 2, !1),\n    JSCompiler_inline_result.add(listenerSetKey));\n}\nfunction listenToNativeEvent(domEventName, isCapturePhaseListener, target) {\n  var eventSystemFlags = 0;\n  isCapturePhaseListener && (eventSystemFlags |= 4);\n  addTrappedEventListener(\n    target,\n    domEventName,\n    eventSystemFlags,\n    isCapturePhaseListener\n  );\n}\nvar listeningMarker = \"_reactListening\" + Math.random().toString(36).slice(2);\nfunction listenToAllSupportedEvents(rootContainerElement) {\n  if (!rootContainerElement[listeningMarker]) {\n    rootContainerElement[listeningMarker] = !0;\n    allNativeEvents.forEach(function (domEventName) {\n      \"selectionchange\" !== domEventName &&\n        (nonDelegatedEvents.has(domEventName) ||\n          listenToNativeEvent(domEventName, !1, rootContainerElement),\n        listenToNativeEvent(domEventName, !0, rootContainerElement));\n    });\n    var ownerDocument =\n      9 === rootContainerElement.nodeType\n        ? rootContainerElement\n        : rootContainerElement.ownerDocument;\n    null === ownerDocument ||\n      ownerDocument[listeningMarker] ||\n      ((ownerDocument[listeningMarker] = !0),\n      listenToNativeEvent(\"selectionchange\", !1, ownerDocument));\n  }\n}\nfunction addTrappedEventListener(\n  targetContainer,\n  domEventName,\n  eventSystemFlags,\n  isCapturePhaseListener\n) {\n  switch (getEventPriority(domEventName)) {\n    case 2:\n      var listenerWrapper = dispatchDiscreteEvent;\n      break;\n    case 8:\n      listenerWrapper = dispatchContinuousEvent;\n      break;\n    default:\n      listenerWrapper = dispatchEvent;\n  }\n  eventSystemFlags = listenerWrapper.bind(\n    null,\n    domEventName,\n    eventSystemFlags,\n    targetContainer\n  );\n  listenerWrapper = void 0;\n  !passiveBrowserEventsSupported ||\n    (\"touchstart\" !== domEventName &&\n      \"touchmove\" !== domEventName &&\n      \"wheel\" !== domEventName) ||\n    (listenerWrapper = !0);\n  isCapturePhaseListener\n    ? void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          capture: !0,\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !0)\n    : void 0 !== listenerWrapper\n      ? targetContainer.addEventListener(domEventName, eventSystemFlags, {\n          passive: listenerWrapper\n        })\n      : targetContainer.addEventListener(domEventName, eventSystemFlags, !1);\n}\nfunction dispatchEventForPluginEventSystem(\n  domEventName,\n  eventSystemFlags,\n  nativeEvent,\n  targetInst$jscomp$0,\n  targetContainer\n) {\n  var ancestorInst = targetInst$jscomp$0;\n  if (\n    0 === (eventSystemFlags & 1) &&\n    0 === (eventSystemFlags & 2) &&\n    null !== targetInst$jscomp$0\n  )\n    a: for (;;) {\n      if (null === targetInst$jscomp$0) return;\n      var nodeTag = targetInst$jscomp$0.tag;\n      if (3 === nodeTag || 4 === nodeTag) {\n        var container = targetInst$jscomp$0.stateNode.containerInfo;\n        if (\n          container === targetContainer ||\n          (8 === container.nodeType && container.parentNode === targetContainer)\n        )\n          break;\n        if (4 === nodeTag)\n          for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {\n            var grandTag = nodeTag.tag;\n            if (3 === grandTag || 4 === grandTag)\n              if (\n                ((grandTag = nodeTag.stateNode.containerInfo),\n                grandTag === targetContainer ||\n                  (8 === grandTag.nodeType &&\n                    grandTag.parentNode === targetContainer))\n              )\n                return;\n            nodeTag = nodeTag.return;\n          }\n        for (; null !== container; ) {\n          nodeTag = getClosestInstanceFromNode(container);\n          if (null === nodeTag) return;\n          grandTag = nodeTag.tag;\n          if (\n            5 === grandTag ||\n            6 === grandTag ||\n            26 === grandTag ||\n            27 === grandTag\n          ) {\n            targetInst$jscomp$0 = ancestorInst = nodeTag;\n            continue a;\n          }\n          container = container.parentNode;\n        }\n      }\n      targetInst$jscomp$0 = targetInst$jscomp$0.return;\n    }\n  batchedUpdates$1(function () {\n    var targetInst = ancestorInst,\n      nativeEventTarget = getEventTarget(nativeEvent),\n      dispatchQueue = [];\n    a: {\n      var reactName = topLevelEventsToReactNames.get(domEventName);\n      if (void 0 !== reactName) {\n        var SyntheticEventCtor = SyntheticEvent,\n          reactEventType = domEventName;\n        switch (domEventName) {\n          case \"keypress\":\n            if (0 === getEventCharCode(nativeEvent)) break a;\n          case \"keydown\":\n          case \"keyup\":\n            SyntheticEventCtor = SyntheticKeyboardEvent;\n            break;\n          case \"focusin\":\n            reactEventType = \"focus\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"focusout\":\n            reactEventType = \"blur\";\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"beforeblur\":\n          case \"afterblur\":\n            SyntheticEventCtor = SyntheticFocusEvent;\n            break;\n          case \"click\":\n            if (2 === nativeEvent.button) break a;\n          case \"auxclick\":\n          case \"dblclick\":\n          case \"mousedown\":\n          case \"mousemove\":\n          case \"mouseup\":\n          case \"mouseout\":\n          case \"mouseover\":\n          case \"contextmenu\":\n            SyntheticEventCtor = SyntheticMouseEvent;\n            break;\n          case \"drag\":\n          case \"dragend\":\n          case \"dragenter\":\n          case \"dragexit\":\n          case \"dragleave\":\n          case \"dragover\":\n          case \"dragstart\":\n          case \"drop\":\n            SyntheticEventCtor = SyntheticDragEvent;\n            break;\n          case \"touchcancel\":\n          case \"touchend\":\n          case \"touchmove\":\n          case \"touchstart\":\n            SyntheticEventCtor = SyntheticTouchEvent;\n            break;\n          case ANIMATION_END:\n          case ANIMATION_ITERATION:\n          case ANIMATION_START:\n            SyntheticEventCtor = SyntheticAnimationEvent;\n            break;\n          case TRANSITION_END:\n            SyntheticEventCtor = SyntheticTransitionEvent;\n            break;\n          case \"scroll\":\n          case \"scrollend\":\n            SyntheticEventCtor = SyntheticUIEvent;\n            break;\n          case \"wheel\":\n            SyntheticEventCtor = SyntheticWheelEvent;\n            break;\n          case \"copy\":\n          case \"cut\":\n          case \"paste\":\n            SyntheticEventCtor = SyntheticClipboardEvent;\n            break;\n          case \"gotpointercapture\":\n          case \"lostpointercapture\":\n          case \"pointercancel\":\n          case \"pointerdown\":\n          case \"pointermove\":\n          case \"pointerout\":\n          case \"pointerover\":\n          case \"pointerup\":\n            SyntheticEventCtor = SyntheticPointerEvent;\n            break;\n          case \"toggle\":\n          case \"beforetoggle\":\n            SyntheticEventCtor = SyntheticToggleEvent;\n        }\n        var inCapturePhase = 0 !== (eventSystemFlags & 4),\n          accumulateTargetOnly =\n            !inCapturePhase &&\n            (\"scroll\" === domEventName || \"scrollend\" === domEventName),\n          reactEventName = inCapturePhase\n            ? null !== reactName\n              ? reactName + \"Capture\"\n              : null\n            : reactName;\n        inCapturePhase = [];\n        for (\n          var instance = targetInst, lastHostComponent;\n          null !== instance;\n\n        ) {\n          var _instance = instance;\n          lastHostComponent = _instance.stateNode;\n          _instance = _instance.tag;\n          (5 !== _instance && 26 !== _instance && 27 !== _instance) ||\n            null === lastHostComponent ||\n            null === reactEventName ||\n            ((_instance = getListener(instance, reactEventName)),\n            null != _instance &&\n              inCapturePhase.push(\n                createDispatchListener(instance, _instance, lastHostComponent)\n              ));\n          if (accumulateTargetOnly) break;\n          instance = instance.return;\n        }\n        0 < inCapturePhase.length &&\n          ((reactName = new SyntheticEventCtor(\n            reactName,\n            reactEventType,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: reactName, listeners: inCapturePhase }));\n      }\n    }\n    if (0 === (eventSystemFlags & 7)) {\n      a: {\n        reactName =\n          \"mouseover\" === domEventName || \"pointerover\" === domEventName;\n        SyntheticEventCtor =\n          \"mouseout\" === domEventName || \"pointerout\" === domEventName;\n        if (\n          reactName &&\n          nativeEvent !== currentReplayingEvent &&\n          (reactEventType =\n            nativeEvent.relatedTarget || nativeEvent.fromElement) &&\n          (getClosestInstanceFromNode(reactEventType) ||\n            reactEventType[internalContainerInstanceKey])\n        )\n          break a;\n        if (SyntheticEventCtor || reactName) {\n          reactName =\n            nativeEventTarget.window === nativeEventTarget\n              ? nativeEventTarget\n              : (reactName = nativeEventTarget.ownerDocument)\n                ? reactName.defaultView || reactName.parentWindow\n                : window;\n          if (SyntheticEventCtor) {\n            if (\n              ((reactEventType =\n                nativeEvent.relatedTarget || nativeEvent.toElement),\n              (SyntheticEventCtor = targetInst),\n              (reactEventType = reactEventType\n                ? getClosestInstanceFromNode(reactEventType)\n                : null),\n              null !== reactEventType &&\n                ((accumulateTargetOnly =\n                  getNearestMountedFiber(reactEventType)),\n                (inCapturePhase = reactEventType.tag),\n                reactEventType !== accumulateTargetOnly ||\n                  (5 !== inCapturePhase &&\n                    27 !== inCapturePhase &&\n                    6 !== inCapturePhase)))\n            )\n              reactEventType = null;\n          } else (SyntheticEventCtor = null), (reactEventType = targetInst);\n          if (SyntheticEventCtor !== reactEventType) {\n            inCapturePhase = SyntheticMouseEvent;\n            _instance = \"onMouseLeave\";\n            reactEventName = \"onMouseEnter\";\n            instance = \"mouse\";\n            if (\"pointerout\" === domEventName || \"pointerover\" === domEventName)\n              (inCapturePhase = SyntheticPointerEvent),\n                (_instance = \"onPointerLeave\"),\n                (reactEventName = \"onPointerEnter\"),\n                (instance = \"pointer\");\n            accumulateTargetOnly =\n              null == SyntheticEventCtor\n                ? reactName\n                : getNodeFromInstance(SyntheticEventCtor);\n            lastHostComponent =\n              null == reactEventType\n                ? reactName\n                : getNodeFromInstance(reactEventType);\n            reactName = new inCapturePhase(\n              _instance,\n              instance + \"leave\",\n              SyntheticEventCtor,\n              nativeEvent,\n              nativeEventTarget\n            );\n            reactName.target = accumulateTargetOnly;\n            reactName.relatedTarget = lastHostComponent;\n            _instance = null;\n            getClosestInstanceFromNode(nativeEventTarget) === targetInst &&\n              ((inCapturePhase = new inCapturePhase(\n                reactEventName,\n                instance + \"enter\",\n                reactEventType,\n                nativeEvent,\n                nativeEventTarget\n              )),\n              (inCapturePhase.target = lastHostComponent),\n              (inCapturePhase.relatedTarget = accumulateTargetOnly),\n              (_instance = inCapturePhase));\n            accumulateTargetOnly = _instance;\n            if (SyntheticEventCtor && reactEventType)\n              b: {\n                inCapturePhase = SyntheticEventCtor;\n                reactEventName = reactEventType;\n                instance = 0;\n                for (\n                  lastHostComponent = inCapturePhase;\n                  lastHostComponent;\n                  lastHostComponent = getParent(lastHostComponent)\n                )\n                  instance++;\n                lastHostComponent = 0;\n                for (\n                  _instance = reactEventName;\n                  _instance;\n                  _instance = getParent(_instance)\n                )\n                  lastHostComponent++;\n                for (; 0 < instance - lastHostComponent; )\n                  (inCapturePhase = getParent(inCapturePhase)), instance--;\n                for (; 0 < lastHostComponent - instance; )\n                  (reactEventName = getParent(reactEventName)),\n                    lastHostComponent--;\n                for (; instance--; ) {\n                  if (\n                    inCapturePhase === reactEventName ||\n                    (null !== reactEventName &&\n                      inCapturePhase === reactEventName.alternate)\n                  )\n                    break b;\n                  inCapturePhase = getParent(inCapturePhase);\n                  reactEventName = getParent(reactEventName);\n                }\n                inCapturePhase = null;\n              }\n            else inCapturePhase = null;\n            null !== SyntheticEventCtor &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                reactName,\n                SyntheticEventCtor,\n                inCapturePhase,\n                !1\n              );\n            null !== reactEventType &&\n              null !== accumulateTargetOnly &&\n              accumulateEnterLeaveListenersForEvent(\n                dispatchQueue,\n                accumulateTargetOnly,\n                reactEventType,\n                inCapturePhase,\n                !0\n              );\n          }\n        }\n      }\n      a: {\n        reactName = targetInst ? getNodeFromInstance(targetInst) : window;\n        SyntheticEventCtor =\n          reactName.nodeName && reactName.nodeName.toLowerCase();\n        if (\n          \"select\" === SyntheticEventCtor ||\n          (\"input\" === SyntheticEventCtor && \"file\" === reactName.type)\n        )\n          var getTargetInstFunc = getTargetInstForChangeEvent;\n        else if (isTextInputElement(reactName))\n          if (isInputEventSupported)\n            getTargetInstFunc = getTargetInstForInputOrChangeEvent;\n          else {\n            getTargetInstFunc = getTargetInstForInputEventPolyfill;\n            var handleEventFunc = handleEventsForInputEventPolyfill;\n          }\n        else\n          (SyntheticEventCtor = reactName.nodeName),\n            !SyntheticEventCtor ||\n            \"input\" !== SyntheticEventCtor.toLowerCase() ||\n            (\"checkbox\" !== reactName.type && \"radio\" !== reactName.type)\n              ? targetInst &&\n                isCustomElement(targetInst.elementType) &&\n                (getTargetInstFunc = getTargetInstForChangeEvent)\n              : (getTargetInstFunc = getTargetInstForClickEvent);\n        if (\n          getTargetInstFunc &&\n          (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))\n        ) {\n          createAndAccumulateChangeEvent(\n            dispatchQueue,\n            getTargetInstFunc,\n            nativeEvent,\n            nativeEventTarget\n          );\n          break a;\n        }\n        handleEventFunc && handleEventFunc(domEventName, reactName, targetInst);\n        \"focusout\" === domEventName &&\n          targetInst &&\n          \"number\" === reactName.type &&\n          null != targetInst.memoizedProps.value &&\n          setDefaultValue(reactName, \"number\", reactName.value);\n      }\n      handleEventFunc = targetInst ? getNodeFromInstance(targetInst) : window;\n      switch (domEventName) {\n        case \"focusin\":\n          if (\n            isTextInputElement(handleEventFunc) ||\n            \"true\" === handleEventFunc.contentEditable\n          )\n            (activeElement = handleEventFunc),\n              (activeElementInst = targetInst),\n              (lastSelection = null);\n          break;\n        case \"focusout\":\n          lastSelection = activeElementInst = activeElement = null;\n          break;\n        case \"mousedown\":\n          mouseDown = !0;\n          break;\n        case \"contextmenu\":\n        case \"mouseup\":\n        case \"dragend\":\n          mouseDown = !1;\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n          break;\n        case \"selectionchange\":\n          if (skipSelectionChangeEvent) break;\n        case \"keydown\":\n        case \"keyup\":\n          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);\n      }\n      var fallbackData;\n      if (canUseCompositionEvent)\n        b: {\n          switch (domEventName) {\n            case \"compositionstart\":\n              var eventType = \"onCompositionStart\";\n              break b;\n            case \"compositionend\":\n              eventType = \"onCompositionEnd\";\n              break b;\n            case \"compositionupdate\":\n              eventType = \"onCompositionUpdate\";\n              break b;\n          }\n          eventType = void 0;\n        }\n      else\n        isComposing\n          ? isFallbackCompositionEnd(domEventName, nativeEvent) &&\n            (eventType = \"onCompositionEnd\")\n          : \"keydown\" === domEventName &&\n            229 === nativeEvent.keyCode &&\n            (eventType = \"onCompositionStart\");\n      eventType &&\n        (useFallbackCompositionData &&\n          \"ko\" !== nativeEvent.locale &&\n          (isComposing || \"onCompositionStart\" !== eventType\n            ? \"onCompositionEnd\" === eventType &&\n              isComposing &&\n              (fallbackData = getData())\n            : ((root = nativeEventTarget),\n              (startText = \"value\" in root ? root.value : root.textContent),\n              (isComposing = !0))),\n        (handleEventFunc = accumulateTwoPhaseListeners(targetInst, eventType)),\n        0 < handleEventFunc.length &&\n          ((eventType = new SyntheticCompositionEvent(\n            eventType,\n            domEventName,\n            null,\n            nativeEvent,\n            nativeEventTarget\n          )),\n          dispatchQueue.push({ event: eventType, listeners: handleEventFunc }),\n          fallbackData\n            ? (eventType.data = fallbackData)\n            : ((fallbackData = getDataFromCustomEvent(nativeEvent)),\n              null !== fallbackData && (eventType.data = fallbackData))));\n      if (\n        (fallbackData = canUseTextInputEvent\n          ? getNativeBeforeInputChars(domEventName, nativeEvent)\n          : getFallbackBeforeInputChars(domEventName, nativeEvent))\n      )\n        (eventType = accumulateTwoPhaseListeners(targetInst, \"onBeforeInput\")),\n          0 < eventType.length &&\n            ((handleEventFunc = new SyntheticCompositionEvent(\n              \"onBeforeInput\",\n              \"beforeinput\",\n              null,\n              nativeEvent,\n              nativeEventTarget\n            )),\n            dispatchQueue.push({\n              event: handleEventFunc,\n              listeners: eventType\n            }),\n            (handleEventFunc.data = fallbackData));\n      extractEvents$1(\n        dispatchQueue,\n        domEventName,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget\n      );\n    }\n    processDispatchQueue(dispatchQueue, eventSystemFlags);\n  });\n}\nfunction createDispatchListener(instance, listener, currentTarget) {\n  return {\n    instance: instance,\n    listener: listener,\n    currentTarget: currentTarget\n  };\n}\nfunction accumulateTwoPhaseListeners(targetFiber, reactName) {\n  for (\n    var captureName = reactName + \"Capture\", listeners = [];\n    null !== targetFiber;\n\n  ) {\n    var _instance2 = targetFiber,\n      stateNode = _instance2.stateNode;\n    _instance2 = _instance2.tag;\n    (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||\n      null === stateNode ||\n      ((_instance2 = getListener(targetFiber, captureName)),\n      null != _instance2 &&\n        listeners.unshift(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ),\n      (_instance2 = getListener(targetFiber, reactName)),\n      null != _instance2 &&\n        listeners.push(\n          createDispatchListener(targetFiber, _instance2, stateNode)\n        ));\n    targetFiber = targetFiber.return;\n  }\n  return listeners;\n}\nfunction getParent(inst) {\n  if (null === inst) return null;\n  do inst = inst.return;\n  while (inst && 5 !== inst.tag && 27 !== inst.tag);\n  return inst ? inst : null;\n}\nfunction accumulateEnterLeaveListenersForEvent(\n  dispatchQueue,\n  event,\n  target,\n  common,\n  inCapturePhase\n) {\n  for (\n    var registrationName = event._reactName, listeners = [];\n    null !== target && target !== common;\n\n  ) {\n    var _instance3 = target,\n      alternate = _instance3.alternate,\n      stateNode = _instance3.stateNode;\n    _instance3 = _instance3.tag;\n    if (null !== alternate && alternate === common) break;\n    (5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3) ||\n      null === stateNode ||\n      ((alternate = stateNode),\n      inCapturePhase\n        ? ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.unshift(\n              createDispatchListener(target, stateNode, alternate)\n            ))\n        : inCapturePhase ||\n          ((stateNode = getListener(target, registrationName)),\n          null != stateNode &&\n            listeners.push(\n              createDispatchListener(target, stateNode, alternate)\n            )));\n    target = target.return;\n  }\n  0 !== listeners.length &&\n    dispatchQueue.push({ event: event, listeners: listeners });\n}\nvar NORMALIZE_NEWLINES_REGEX = /\\r\\n?/g,\n  NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\\u0000|\\uFFFD/g;\nfunction normalizeMarkupForTextOrAttribute(markup) {\n  return (\"string\" === typeof markup ? markup : \"\" + markup)\n    .replace(NORMALIZE_NEWLINES_REGEX, \"\\n\")\n    .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, \"\");\n}\nfunction checkForUnmatchedText(serverText, clientText) {\n  clientText = normalizeMarkupForTextOrAttribute(clientText);\n  return normalizeMarkupForTextOrAttribute(serverText) === clientText ? !0 : !1;\n}\nfunction noop$1() {}\nfunction setProp(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"children\":\n      \"string\" === typeof value\n        ? \"body\" === tag ||\n          (\"textarea\" === tag && \"\" === value) ||\n          setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          \"body\" !== tag &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"className\":\n      setValueForKnownAttribute(domElement, \"class\", value);\n      break;\n    case \"tabIndex\":\n      setValueForKnownAttribute(domElement, \"tabindex\", value);\n      break;\n    case \"dir\":\n    case \"role\":\n    case \"viewBox\":\n    case \"width\":\n    case \"height\":\n      setValueForKnownAttribute(domElement, key, value);\n      break;\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"data\":\n      if (\"object\" !== tag) {\n        setValueForKnownAttribute(domElement, \"data\", value);\n        break;\n      }\n    case \"src\":\n    case \"href\":\n      if (\"\" === value && (\"a\" !== tag || \"href\" !== key)) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"action\":\n    case \"formAction\":\n      if (\"function\" === typeof value) {\n        domElement.setAttribute(\n          key,\n          \"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')\"\n        );\n        break;\n      } else\n        \"function\" === typeof prevValue &&\n          (\"formAction\" === key\n            ? (\"input\" !== tag &&\n                setProp(domElement, tag, \"name\", props.name, props, null),\n              setProp(\n                domElement,\n                tag,\n                \"formEncType\",\n                props.formEncType,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formMethod\",\n                props.formMethod,\n                props,\n                null\n              ),\n              setProp(\n                domElement,\n                tag,\n                \"formTarget\",\n                props.formTarget,\n                props,\n                null\n              ))\n            : (setProp(domElement, tag, \"encType\", props.encType, props, null),\n              setProp(domElement, tag, \"method\", props.method, props, null),\n              setProp(domElement, tag, \"target\", props.target, props, null)));\n      if (\n        null == value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      ) {\n        domElement.removeAttribute(key);\n        break;\n      }\n      value = sanitizeURL(\"\" + value);\n      domElement.setAttribute(key, value);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"multiple\":\n      domElement.multiple =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"muted\":\n      domElement.muted =\n        value && \"function\" !== typeof value && \"symbol\" !== typeof value;\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"defaultValue\":\n    case \"defaultChecked\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"autoFocus\":\n      break;\n    case \"xlinkHref\":\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"boolean\" === typeof value ||\n        \"symbol\" === typeof value\n      ) {\n        domElement.removeAttribute(\"xlink:href\");\n        break;\n      }\n      key = sanitizeURL(\"\" + value);\n      domElement.setAttributeNS(\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:href\",\n        key\n      );\n      break;\n    case \"contentEditable\":\n    case \"spellCheck\":\n    case \"draggable\":\n    case \"value\":\n    case \"autoReverse\":\n    case \"externalResourcesRequired\":\n    case \"focusable\":\n    case \"preserveAlpha\":\n      null != value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\" + value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"inert\":\n    case \"allowFullScreen\":\n    case \"async\":\n    case \"autoPlay\":\n    case \"controls\":\n    case \"default\":\n    case \"defer\":\n    case \"disabled\":\n    case \"disablePictureInPicture\":\n    case \"disableRemotePlayback\":\n    case \"formNoValidate\":\n    case \"hidden\":\n    case \"loop\":\n    case \"noModule\":\n    case \"noValidate\":\n    case \"open\":\n    case \"playsInline\":\n    case \"readOnly\":\n    case \"required\":\n    case \"reversed\":\n    case \"scoped\":\n    case \"seamless\":\n    case \"itemScope\":\n      value && \"function\" !== typeof value && \"symbol\" !== typeof value\n        ? domElement.setAttribute(key, \"\")\n        : domElement.removeAttribute(key);\n      break;\n    case \"capture\":\n    case \"download\":\n      !0 === value\n        ? domElement.setAttribute(key, \"\")\n        : !1 !== value &&\n            null != value &&\n            \"function\" !== typeof value &&\n            \"symbol\" !== typeof value\n          ? domElement.setAttribute(key, value)\n          : domElement.removeAttribute(key);\n      break;\n    case \"cols\":\n    case \"rows\":\n    case \"size\":\n    case \"span\":\n      null != value &&\n      \"function\" !== typeof value &&\n      \"symbol\" !== typeof value &&\n      !isNaN(value) &&\n      1 <= value\n        ? domElement.setAttribute(key, value)\n        : domElement.removeAttribute(key);\n      break;\n    case \"rowSpan\":\n    case \"start\":\n      null == value ||\n      \"function\" === typeof value ||\n      \"symbol\" === typeof value ||\n      isNaN(value)\n        ? domElement.removeAttribute(key)\n        : domElement.setAttribute(key, value);\n      break;\n    case \"popover\":\n      listenToNonDelegatedEvent(\"beforetoggle\", domElement);\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      setValueForAttribute(domElement, \"popover\", value);\n      break;\n    case \"xlinkActuate\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:actuate\",\n        value\n      );\n      break;\n    case \"xlinkArcrole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:arcrole\",\n        value\n      );\n      break;\n    case \"xlinkRole\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:role\",\n        value\n      );\n      break;\n    case \"xlinkShow\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:show\",\n        value\n      );\n      break;\n    case \"xlinkTitle\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:title\",\n        value\n      );\n      break;\n    case \"xlinkType\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:type\",\n        value\n      );\n      break;\n    case \"xmlBase\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:base\",\n        value\n      );\n      break;\n    case \"xmlLang\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:lang\",\n        value\n      );\n      break;\n    case \"xmlSpace\":\n      setValueForNamespacedAttribute(\n        domElement,\n        \"http://www.w3.org/XML/1998/namespace\",\n        \"xml:space\",\n        value\n      );\n      break;\n    case \"is\":\n      setValueForAttribute(domElement, \"is\", value);\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (\n        !(2 < key.length) ||\n        (\"o\" !== key[0] && \"O\" !== key[0]) ||\n        (\"n\" !== key[1] && \"N\" !== key[1])\n      )\n        (key = aliases.get(key) || key),\n          setValueForAttribute(domElement, key, value);\n  }\n}\nfunction setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {\n  switch (key) {\n    case \"style\":\n      setValueForStyles(domElement, value, prevValue);\n      break;\n    case \"dangerouslySetInnerHTML\":\n      if (null != value) {\n        if (\"object\" !== typeof value || !(\"__html\" in value))\n          throw Error(formatProdErrorMessage(61));\n        key = value.__html;\n        if (null != key) {\n          if (null != props.children) throw Error(formatProdErrorMessage(60));\n          domElement.innerHTML = key;\n        }\n      }\n      break;\n    case \"children\":\n      \"string\" === typeof value\n        ? setTextContent(domElement, value)\n        : (\"number\" === typeof value || \"bigint\" === typeof value) &&\n          setTextContent(domElement, \"\" + value);\n      break;\n    case \"onScroll\":\n      null != value && listenToNonDelegatedEvent(\"scroll\", domElement);\n      break;\n    case \"onScrollEnd\":\n      null != value && listenToNonDelegatedEvent(\"scrollend\", domElement);\n      break;\n    case \"onClick\":\n      null != value && (domElement.onclick = noop$1);\n      break;\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"innerHTML\":\n    case \"ref\":\n      break;\n    case \"innerText\":\n    case \"textContent\":\n      break;\n    default:\n      if (!registrationNameDependencies.hasOwnProperty(key))\n        a: {\n          if (\n            \"o\" === key[0] &&\n            \"n\" === key[1] &&\n            ((props = key.endsWith(\"Capture\")),\n            (tag = key.slice(2, props ? key.length - 7 : void 0)),\n            (prevValue = domElement[internalPropsKey] || null),\n            (prevValue = null != prevValue ? prevValue[key] : null),\n            \"function\" === typeof prevValue &&\n              domElement.removeEventListener(tag, prevValue, props),\n            \"function\" === typeof value)\n          ) {\n            \"function\" !== typeof prevValue &&\n              null !== prevValue &&\n              (key in domElement\n                ? (domElement[key] = null)\n                : domElement.hasAttribute(key) &&\n                  domElement.removeAttribute(key));\n            domElement.addEventListener(tag, value, props);\n            break a;\n          }\n          key in domElement\n            ? (domElement[key] = value)\n            : !0 === value\n              ? domElement.setAttribute(key, \"\")\n              : setValueForAttribute(domElement, key, value);\n        }\n  }\n}\nfunction setInitialProperties(domElement, tag, props) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"img\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      var hasSrc = !1,\n        hasSrcSet = !1,\n        propKey;\n      for (propKey in props)\n        if (props.hasOwnProperty(propKey)) {\n          var propValue = props[propKey];\n          if (null != propValue)\n            switch (propKey) {\n              case \"src\":\n                hasSrc = !0;\n                break;\n              case \"srcSet\":\n                hasSrcSet = !0;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(formatProdErrorMessage(137, tag));\n              default:\n                setProp(domElement, tag, propKey, propValue, props, null);\n            }\n        }\n      hasSrcSet &&\n        setProp(domElement, tag, \"srcSet\", props.srcSet, props, null);\n      hasSrc && setProp(domElement, tag, \"src\", props.src, props, null);\n      return;\n    case \"input\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      var defaultValue = (propKey = propValue = hasSrcSet = null),\n        checked = null,\n        defaultChecked = null;\n      for (hasSrc in props)\n        if (props.hasOwnProperty(hasSrc)) {\n          var propValue$186 = props[hasSrc];\n          if (null != propValue$186)\n            switch (hasSrc) {\n              case \"name\":\n                hasSrcSet = propValue$186;\n                break;\n              case \"type\":\n                propValue = propValue$186;\n                break;\n              case \"checked\":\n                checked = propValue$186;\n                break;\n              case \"defaultChecked\":\n                defaultChecked = propValue$186;\n                break;\n              case \"value\":\n                propKey = propValue$186;\n                break;\n              case \"defaultValue\":\n                defaultValue = propValue$186;\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                if (null != propValue$186)\n                  throw Error(formatProdErrorMessage(137, tag));\n                break;\n              default:\n                setProp(domElement, tag, hasSrc, propValue$186, props, null);\n            }\n        }\n      initInput(\n        domElement,\n        propKey,\n        defaultValue,\n        checked,\n        defaultChecked,\n        propValue,\n        hasSrcSet,\n        !1\n      );\n      track(domElement);\n      return;\n    case \"select\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      hasSrc = propValue = propKey = null;\n      for (hasSrcSet in props)\n        if (\n          props.hasOwnProperty(hasSrcSet) &&\n          ((defaultValue = props[hasSrcSet]), null != defaultValue)\n        )\n          switch (hasSrcSet) {\n            case \"value\":\n              propKey = defaultValue;\n              break;\n            case \"defaultValue\":\n              propValue = defaultValue;\n              break;\n            case \"multiple\":\n              hasSrc = defaultValue;\n            default:\n              setProp(domElement, tag, hasSrcSet, defaultValue, props, null);\n          }\n      tag = propKey;\n      props = propValue;\n      domElement.multiple = !!hasSrc;\n      null != tag\n        ? updateOptions(domElement, !!hasSrc, tag, !1)\n        : null != props && updateOptions(domElement, !!hasSrc, props, !0);\n      return;\n    case \"textarea\":\n      listenToNonDelegatedEvent(\"invalid\", domElement);\n      propKey = hasSrcSet = hasSrc = null;\n      for (propValue in props)\n        if (\n          props.hasOwnProperty(propValue) &&\n          ((defaultValue = props[propValue]), null != defaultValue)\n        )\n          switch (propValue) {\n            case \"value\":\n              hasSrc = defaultValue;\n              break;\n            case \"defaultValue\":\n              hasSrcSet = defaultValue;\n              break;\n            case \"children\":\n              propKey = defaultValue;\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != defaultValue) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              setProp(domElement, tag, propValue, defaultValue, props, null);\n          }\n      initTextarea(domElement, hasSrc, hasSrcSet, propKey);\n      track(domElement);\n      return;\n    case \"option\":\n      for (checked in props)\n        if (\n          props.hasOwnProperty(checked) &&\n          ((hasSrc = props[checked]), null != hasSrc)\n        )\n          switch (checked) {\n            case \"selected\":\n              domElement.selected =\n                hasSrc &&\n                \"function\" !== typeof hasSrc &&\n                \"symbol\" !== typeof hasSrc;\n              break;\n            default:\n              setProp(domElement, tag, checked, hasSrc, props, null);\n          }\n      return;\n    case \"dialog\":\n      listenToNonDelegatedEvent(\"cancel\", domElement);\n      listenToNonDelegatedEvent(\"close\", domElement);\n      break;\n    case \"iframe\":\n    case \"object\":\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"video\":\n    case \"audio\":\n      for (hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)\n        listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);\n      break;\n    case \"image\":\n      listenToNonDelegatedEvent(\"error\", domElement);\n      listenToNonDelegatedEvent(\"load\", domElement);\n      break;\n    case \"details\":\n      listenToNonDelegatedEvent(\"toggle\", domElement);\n      break;\n    case \"embed\":\n    case \"source\":\n    case \"link\":\n      listenToNonDelegatedEvent(\"error\", domElement),\n        listenToNonDelegatedEvent(\"load\", domElement);\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (defaultChecked in props)\n        if (\n          props.hasOwnProperty(defaultChecked) &&\n          ((hasSrc = props[defaultChecked]), null != hasSrc)\n        )\n          switch (defaultChecked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              throw Error(formatProdErrorMessage(137, tag));\n            default:\n              setProp(domElement, tag, defaultChecked, hasSrc, props, null);\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (propValue$186 in props)\n          props.hasOwnProperty(propValue$186) &&\n            ((hasSrc = props[propValue$186]),\n            void 0 !== hasSrc &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propValue$186,\n                hasSrc,\n                props,\n                void 0\n              ));\n        return;\n      }\n  }\n  for (defaultValue in props)\n    props.hasOwnProperty(defaultValue) &&\n      ((hasSrc = props[defaultValue]),\n      null != hasSrc &&\n        setProp(domElement, tag, defaultValue, hasSrc, props, null));\n}\nfunction updateProperties(domElement, tag, lastProps, nextProps) {\n  switch (tag) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n    case \"a\":\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"input\":\n      var name = null,\n        type = null,\n        value = null,\n        defaultValue = null,\n        lastDefaultValue = null,\n        checked = null,\n        defaultChecked = null;\n      for (propKey in lastProps) {\n        var lastProp = lastProps[propKey];\n        if (lastProps.hasOwnProperty(propKey) && null != lastProp)\n          switch (propKey) {\n            case \"checked\":\n              break;\n            case \"value\":\n              break;\n            case \"defaultValue\":\n              lastDefaultValue = lastProp;\n            default:\n              nextProps.hasOwnProperty(propKey) ||\n                setProp(domElement, tag, propKey, null, nextProps, lastProp);\n          }\n      }\n      for (var propKey$203 in nextProps) {\n        var propKey = nextProps[propKey$203];\n        lastProp = lastProps[propKey$203];\n        if (\n          nextProps.hasOwnProperty(propKey$203) &&\n          (null != propKey || null != lastProp)\n        )\n          switch (propKey$203) {\n            case \"type\":\n              type = propKey;\n              break;\n            case \"name\":\n              name = propKey;\n              break;\n            case \"checked\":\n              checked = propKey;\n              break;\n            case \"defaultChecked\":\n              defaultChecked = propKey;\n              break;\n            case \"value\":\n              value = propKey;\n              break;\n            case \"defaultValue\":\n              defaultValue = propKey;\n              break;\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              propKey !== lastProp &&\n                setProp(\n                  domElement,\n                  tag,\n                  propKey$203,\n                  propKey,\n                  nextProps,\n                  lastProp\n                );\n          }\n      }\n      updateInput(\n        domElement,\n        value,\n        defaultValue,\n        lastDefaultValue,\n        checked,\n        defaultChecked,\n        type,\n        name\n      );\n      return;\n    case \"select\":\n      propKey = value = defaultValue = propKey$203 = null;\n      for (type in lastProps)\n        if (\n          ((lastDefaultValue = lastProps[type]),\n          lastProps.hasOwnProperty(type) && null != lastDefaultValue)\n        )\n          switch (type) {\n            case \"value\":\n              break;\n            case \"multiple\":\n              propKey = lastDefaultValue;\n            default:\n              nextProps.hasOwnProperty(type) ||\n                setProp(\n                  domElement,\n                  tag,\n                  type,\n                  null,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      for (name in nextProps)\n        if (\n          ((type = nextProps[name]),\n          (lastDefaultValue = lastProps[name]),\n          nextProps.hasOwnProperty(name) &&\n            (null != type || null != lastDefaultValue))\n        )\n          switch (name) {\n            case \"value\":\n              propKey$203 = type;\n              break;\n            case \"defaultValue\":\n              defaultValue = type;\n              break;\n            case \"multiple\":\n              value = type;\n            default:\n              type !== lastDefaultValue &&\n                setProp(\n                  domElement,\n                  tag,\n                  name,\n                  type,\n                  nextProps,\n                  lastDefaultValue\n                );\n          }\n      tag = defaultValue;\n      lastProps = value;\n      nextProps = propKey;\n      null != propKey$203\n        ? updateOptions(domElement, !!lastProps, propKey$203, !1)\n        : !!nextProps !== !!lastProps &&\n          (null != tag\n            ? updateOptions(domElement, !!lastProps, tag, !0)\n            : updateOptions(domElement, !!lastProps, lastProps ? [] : \"\", !1));\n      return;\n    case \"textarea\":\n      propKey = propKey$203 = null;\n      for (defaultValue in lastProps)\n        if (\n          ((name = lastProps[defaultValue]),\n          lastProps.hasOwnProperty(defaultValue) &&\n            null != name &&\n            !nextProps.hasOwnProperty(defaultValue))\n        )\n          switch (defaultValue) {\n            case \"value\":\n              break;\n            case \"children\":\n              break;\n            default:\n              setProp(domElement, tag, defaultValue, null, nextProps, name);\n          }\n      for (value in nextProps)\n        if (\n          ((name = nextProps[value]),\n          (type = lastProps[value]),\n          nextProps.hasOwnProperty(value) && (null != name || null != type))\n        )\n          switch (value) {\n            case \"value\":\n              propKey$203 = name;\n              break;\n            case \"defaultValue\":\n              propKey = name;\n              break;\n            case \"children\":\n              break;\n            case \"dangerouslySetInnerHTML\":\n              if (null != name) throw Error(formatProdErrorMessage(91));\n              break;\n            default:\n              name !== type &&\n                setProp(domElement, tag, value, name, nextProps, type);\n          }\n      updateTextarea(domElement, propKey$203, propKey);\n      return;\n    case \"option\":\n      for (var propKey$219 in lastProps)\n        if (\n          ((propKey$203 = lastProps[propKey$219]),\n          lastProps.hasOwnProperty(propKey$219) &&\n            null != propKey$203 &&\n            !nextProps.hasOwnProperty(propKey$219))\n        )\n          switch (propKey$219) {\n            case \"selected\":\n              domElement.selected = !1;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                propKey$219,\n                null,\n                nextProps,\n                propKey$203\n              );\n          }\n      for (lastDefaultValue in nextProps)\n        if (\n          ((propKey$203 = nextProps[lastDefaultValue]),\n          (propKey = lastProps[lastDefaultValue]),\n          nextProps.hasOwnProperty(lastDefaultValue) &&\n            propKey$203 !== propKey &&\n            (null != propKey$203 || null != propKey))\n        )\n          switch (lastDefaultValue) {\n            case \"selected\":\n              domElement.selected =\n                propKey$203 &&\n                \"function\" !== typeof propKey$203 &&\n                \"symbol\" !== typeof propKey$203;\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                lastDefaultValue,\n                propKey$203,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    case \"img\":\n    case \"link\":\n    case \"area\":\n    case \"base\":\n    case \"br\":\n    case \"col\":\n    case \"embed\":\n    case \"hr\":\n    case \"keygen\":\n    case \"meta\":\n    case \"param\":\n    case \"source\":\n    case \"track\":\n    case \"wbr\":\n    case \"menuitem\":\n      for (var propKey$224 in lastProps)\n        (propKey$203 = lastProps[propKey$224]),\n          lastProps.hasOwnProperty(propKey$224) &&\n            null != propKey$203 &&\n            !nextProps.hasOwnProperty(propKey$224) &&\n            setProp(domElement, tag, propKey$224, null, nextProps, propKey$203);\n      for (checked in nextProps)\n        if (\n          ((propKey$203 = nextProps[checked]),\n          (propKey = lastProps[checked]),\n          nextProps.hasOwnProperty(checked) &&\n            propKey$203 !== propKey &&\n            (null != propKey$203 || null != propKey))\n        )\n          switch (checked) {\n            case \"children\":\n            case \"dangerouslySetInnerHTML\":\n              if (null != propKey$203)\n                throw Error(formatProdErrorMessage(137, tag));\n              break;\n            default:\n              setProp(\n                domElement,\n                tag,\n                checked,\n                propKey$203,\n                nextProps,\n                propKey\n              );\n          }\n      return;\n    default:\n      if (isCustomElement(tag)) {\n        for (var propKey$229 in lastProps)\n          (propKey$203 = lastProps[propKey$229]),\n            lastProps.hasOwnProperty(propKey$229) &&\n              void 0 !== propKey$203 &&\n              !nextProps.hasOwnProperty(propKey$229) &&\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                propKey$229,\n                void 0,\n                nextProps,\n                propKey$203\n              );\n        for (defaultChecked in nextProps)\n          (propKey$203 = nextProps[defaultChecked]),\n            (propKey = lastProps[defaultChecked]),\n            !nextProps.hasOwnProperty(defaultChecked) ||\n              propKey$203 === propKey ||\n              (void 0 === propKey$203 && void 0 === propKey) ||\n              setPropOnCustomElement(\n                domElement,\n                tag,\n                defaultChecked,\n                propKey$203,\n                nextProps,\n                propKey\n              );\n        return;\n      }\n  }\n  for (var propKey$234 in lastProps)\n    (propKey$203 = lastProps[propKey$234]),\n      lastProps.hasOwnProperty(propKey$234) &&\n        null != propKey$203 &&\n        !nextProps.hasOwnProperty(propKey$234) &&\n        setProp(domElement, tag, propKey$234, null, nextProps, propKey$203);\n  for (lastProp in nextProps)\n    (propKey$203 = nextProps[lastProp]),\n      (propKey = lastProps[lastProp]),\n      !nextProps.hasOwnProperty(lastProp) ||\n        propKey$203 === propKey ||\n        (null == propKey$203 && null == propKey) ||\n        setProp(domElement, tag, lastProp, propKey$203, nextProps, propKey);\n}\nvar eventsEnabled = null,\n  selectionInformation = null;\nfunction getOwnerDocumentFromRootContainer(rootContainerElement) {\n  return 9 === rootContainerElement.nodeType\n    ? rootContainerElement\n    : rootContainerElement.ownerDocument;\n}\nfunction getOwnHostContext(namespaceURI) {\n  switch (namespaceURI) {\n    case \"http://www.w3.org/2000/svg\":\n      return 1;\n    case \"http://www.w3.org/1998/Math/MathML\":\n      return 2;\n    default:\n      return 0;\n  }\n}\nfunction getChildHostContextProd(parentNamespace, type) {\n  if (0 === parentNamespace)\n    switch (type) {\n      case \"svg\":\n        return 1;\n      case \"math\":\n        return 2;\n      default:\n        return 0;\n    }\n  return 1 === parentNamespace && \"foreignObject\" === type\n    ? 0\n    : parentNamespace;\n}\nfunction shouldSetTextContent(type, props) {\n  return (\n    \"textarea\" === type ||\n    \"noscript\" === type ||\n    \"string\" === typeof props.children ||\n    \"number\" === typeof props.children ||\n    \"bigint\" === typeof props.children ||\n    (\"object\" === typeof props.dangerouslySetInnerHTML &&\n      null !== props.dangerouslySetInnerHTML &&\n      null != props.dangerouslySetInnerHTML.__html)\n  );\n}\nvar currentPopstateTransitionEvent = null;\nfunction shouldAttemptEagerTransition() {\n  var event = window.event;\n  if (event && \"popstate\" === event.type) {\n    if (event === currentPopstateTransitionEvent) return !1;\n    currentPopstateTransitionEvent = event;\n    return !0;\n  }\n  currentPopstateTransitionEvent = null;\n  return !1;\n}\nvar scheduleTimeout = \"function\" === typeof setTimeout ? setTimeout : void 0,\n  cancelTimeout = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n  localPromise = \"function\" === typeof Promise ? Promise : void 0,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : \"undefined\" !== typeof localPromise\n        ? function (callback) {\n            return localPromise\n              .resolve(null)\n              .then(callback)\n              .catch(handleErrorInNextTick);\n          }\n        : scheduleTimeout;\nfunction handleErrorInNextTick(error) {\n  setTimeout(function () {\n    throw error;\n  });\n}\nfunction clearSuspenseBoundary(parentInstance, suspenseInstance) {\n  var node = suspenseInstance,\n    depth = 0;\n  do {\n    var nextNode = node.nextSibling;\n    parentInstance.removeChild(node);\n    if (nextNode && 8 === nextNode.nodeType)\n      if (((node = nextNode.data), \"/$\" === node)) {\n        if (0 === depth) {\n          parentInstance.removeChild(nextNode);\n          retryIfBlockedOn(suspenseInstance);\n          return;\n        }\n        depth--;\n      } else (\"$\" !== node && \"$?\" !== node && \"$!\" !== node) || depth++;\n    node = nextNode;\n  } while (node);\n  retryIfBlockedOn(suspenseInstance);\n}\nfunction clearContainerSparingly(container) {\n  var nextNode = container.firstChild;\n  nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);\n  for (; nextNode; ) {\n    var node = nextNode;\n    nextNode = nextNode.nextSibling;\n    switch (node.nodeName) {\n      case \"HTML\":\n      case \"HEAD\":\n      case \"BODY\":\n        clearContainerSparingly(node);\n        detachDeletedInstance(node);\n        continue;\n      case \"SCRIPT\":\n      case \"STYLE\":\n        continue;\n      case \"LINK\":\n        if (\"stylesheet\" === node.rel.toLowerCase()) continue;\n    }\n    container.removeChild(node);\n  }\n}\nfunction canHydrateInstance(instance, type, props, inRootOrSingleton) {\n  for (; 1 === instance.nodeType; ) {\n    var anyProps = props;\n    if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {\n      if (\n        !inRootOrSingleton &&\n        (\"INPUT\" !== instance.nodeName || \"hidden\" !== instance.type)\n      )\n        break;\n    } else if (!inRootOrSingleton)\n      if (\"input\" === type && \"hidden\" === instance.type) {\n        var name = null == anyProps.name ? null : \"\" + anyProps.name;\n        if (\n          \"hidden\" === anyProps.type &&\n          instance.getAttribute(\"name\") === name\n        )\n          return instance;\n      } else return instance;\n    else if (!instance[internalHoistableMarker])\n      switch (type) {\n        case \"meta\":\n          if (!instance.hasAttribute(\"itemprop\")) break;\n          return instance;\n        case \"link\":\n          name = instance.getAttribute(\"rel\");\n          if (\"stylesheet\" === name && instance.hasAttribute(\"data-precedence\"))\n            break;\n          else if (\n            name !== anyProps.rel ||\n            instance.getAttribute(\"href\") !==\n              (null == anyProps.href ? null : anyProps.href) ||\n            instance.getAttribute(\"crossorigin\") !==\n              (null == anyProps.crossOrigin ? null : anyProps.crossOrigin) ||\n            instance.getAttribute(\"title\") !==\n              (null == anyProps.title ? null : anyProps.title)\n          )\n            break;\n          return instance;\n        case \"style\":\n          if (instance.hasAttribute(\"data-precedence\")) break;\n          return instance;\n        case \"script\":\n          name = instance.getAttribute(\"src\");\n          if (\n            (name !== (null == anyProps.src ? null : anyProps.src) ||\n              instance.getAttribute(\"type\") !==\n                (null == anyProps.type ? null : anyProps.type) ||\n              instance.getAttribute(\"crossorigin\") !==\n                (null == anyProps.crossOrigin ? null : anyProps.crossOrigin)) &&\n            name &&\n            instance.hasAttribute(\"async\") &&\n            !instance.hasAttribute(\"itemprop\")\n          )\n            break;\n          return instance;\n        default:\n          return instance;\n      }\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) break;\n  }\n  return null;\n}\nfunction canHydrateTextInstance(instance, text, inRootOrSingleton) {\n  if (\"\" === text) return null;\n  for (; 3 !== instance.nodeType; ) {\n    if (\n      (1 !== instance.nodeType ||\n        \"INPUT\" !== instance.nodeName ||\n        \"hidden\" !== instance.type) &&\n      !inRootOrSingleton\n    )\n      return null;\n    instance = getNextHydratable(instance.nextSibling);\n    if (null === instance) return null;\n  }\n  return instance;\n}\nfunction getNextHydratable(node) {\n  for (; null != node; node = node.nextSibling) {\n    var nodeType = node.nodeType;\n    if (1 === nodeType || 3 === nodeType) break;\n    if (8 === nodeType) {\n      nodeType = node.data;\n      if (\n        \"$\" === nodeType ||\n        \"$!\" === nodeType ||\n        \"$?\" === nodeType ||\n        \"F!\" === nodeType ||\n        \"F\" === nodeType\n      )\n        break;\n      if (\"/$\" === nodeType) return null;\n    }\n  }\n  return node;\n}\nfunction getParentSuspenseInstance(targetInstance) {\n  targetInstance = targetInstance.previousSibling;\n  for (var depth = 0; targetInstance; ) {\n    if (8 === targetInstance.nodeType) {\n      var data = targetInstance.data;\n      if (\"$\" === data || \"$!\" === data || \"$?\" === data) {\n        if (0 === depth) return targetInstance;\n        depth--;\n      } else \"/$\" === data && depth++;\n    }\n    targetInstance = targetInstance.previousSibling;\n  }\n  return null;\n}\nfunction resolveSingletonInstance(type, props, rootContainerInstance) {\n  props = getOwnerDocumentFromRootContainer(rootContainerInstance);\n  switch (type) {\n    case \"html\":\n      type = props.documentElement;\n      if (!type) throw Error(formatProdErrorMessage(452));\n      return type;\n    case \"head\":\n      type = props.head;\n      if (!type) throw Error(formatProdErrorMessage(453));\n      return type;\n    case \"body\":\n      type = props.body;\n      if (!type) throw Error(formatProdErrorMessage(454));\n      return type;\n    default:\n      throw Error(formatProdErrorMessage(451));\n  }\n}\nvar preloadPropsMap = new Map(),\n  preconnectsSet = new Set();\nfunction getHoistableRoot(container) {\n  return \"function\" === typeof container.getRootNode\n    ? container.getRootNode()\n    : container.ownerDocument;\n}\nvar previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: flushSyncWork,\n  r: requestFormReset,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nfunction flushSyncWork() {\n  var previousWasRendering = previousDispatcher.f(),\n    wasRendering = flushSyncWork$1();\n  return previousWasRendering || wasRendering;\n}\nfunction requestFormReset(form) {\n  var formInst = getInstanceFromNode(form);\n  null !== formInst && 5 === formInst.tag && \"form\" === formInst.type\n    ? requestFormReset$1(formInst)\n    : previousDispatcher.r(form);\n}\nvar globalDocument = \"undefined\" === typeof document ? null : document;\nfunction preconnectAs(rel, href, crossOrigin) {\n  var ownerDocument = globalDocument;\n  if (ownerDocument && \"string\" === typeof href && href) {\n    var limitedEscapedHref =\n      escapeSelectorAttributeValueInsideDoubleQuotes(href);\n    limitedEscapedHref =\n      'link[rel=\"' + rel + '\"][href=\"' + limitedEscapedHref + '\"]';\n    \"string\" === typeof crossOrigin &&\n      (limitedEscapedHref += '[crossorigin=\"' + crossOrigin + '\"]');\n    preconnectsSet.has(limitedEscapedHref) ||\n      (preconnectsSet.add(limitedEscapedHref),\n      (rel = { rel: rel, crossOrigin: crossOrigin, href: href }),\n      null === ownerDocument.querySelector(limitedEscapedHref) &&\n        ((href = ownerDocument.createElement(\"link\")),\n        setInitialProperties(href, \"link\", rel),\n        markNodeAsHoistable(href),\n        ownerDocument.head.appendChild(href)));\n  }\n}\nfunction prefetchDNS(href) {\n  previousDispatcher.D(href);\n  preconnectAs(\"dns-prefetch\", href, null);\n}\nfunction preconnect(href, crossOrigin) {\n  previousDispatcher.C(href, crossOrigin);\n  preconnectAs(\"preconnect\", href, crossOrigin);\n}\nfunction preload(href, as, options) {\n  previousDispatcher.L(href, as, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href && as) {\n    var preloadSelector =\n      'link[rel=\"preload\"][as=\"' +\n      escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n      '\"]';\n    \"image\" === as\n      ? options && options.imageSrcSet\n        ? ((preloadSelector +=\n            '[imagesrcset=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(\n              options.imageSrcSet\n            ) +\n            '\"]'),\n          \"string\" === typeof options.imageSizes &&\n            (preloadSelector +=\n              '[imagesizes=\"' +\n              escapeSelectorAttributeValueInsideDoubleQuotes(\n                options.imageSizes\n              ) +\n              '\"]'))\n        : (preloadSelector +=\n            '[href=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n            '\"]')\n      : (preloadSelector +=\n          '[href=\"' +\n          escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n          '\"]');\n    var key = preloadSelector;\n    switch (as) {\n      case \"style\":\n        key = getStyleKey(href);\n        break;\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    preloadPropsMap.has(key) ||\n      ((href = assign(\n        {\n          rel: \"preload\",\n          href:\n            \"image\" === as && options && options.imageSrcSet ? void 0 : href,\n          as: as\n        },\n        options\n      )),\n      preloadPropsMap.set(key, href),\n      null !== ownerDocument.querySelector(preloadSelector) ||\n        (\"style\" === as &&\n          ownerDocument.querySelector(getStylesheetSelectorFromKey(key))) ||\n        (\"script\" === as &&\n          ownerDocument.querySelector(getScriptSelectorFromKey(key))) ||\n        ((as = ownerDocument.createElement(\"link\")),\n        setInitialProperties(as, \"link\", href),\n        markNodeAsHoistable(as),\n        ownerDocument.head.appendChild(as)));\n  }\n}\nfunction preloadModule(href, options) {\n  previousDispatcher.m(href, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var as = options && \"string\" === typeof options.as ? options.as : \"script\",\n      preloadSelector =\n        'link[rel=\"modulepreload\"][as=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(as) +\n        '\"][href=\"' +\n        escapeSelectorAttributeValueInsideDoubleQuotes(href) +\n        '\"]',\n      key = preloadSelector;\n    switch (as) {\n      case \"audioworklet\":\n      case \"paintworklet\":\n      case \"serviceworker\":\n      case \"sharedworker\":\n      case \"worker\":\n      case \"script\":\n        key = getScriptKey(href);\n    }\n    if (\n      !preloadPropsMap.has(key) &&\n      ((href = assign({ rel: \"modulepreload\", href: href }, options)),\n      preloadPropsMap.set(key, href),\n      null === ownerDocument.querySelector(preloadSelector))\n    ) {\n      switch (as) {\n        case \"audioworklet\":\n        case \"paintworklet\":\n        case \"serviceworker\":\n        case \"sharedworker\":\n        case \"worker\":\n        case \"script\":\n          if (ownerDocument.querySelector(getScriptSelectorFromKey(key)))\n            return;\n      }\n      as = ownerDocument.createElement(\"link\");\n      setInitialProperties(as, \"link\", href);\n      markNodeAsHoistable(as);\n      ownerDocument.head.appendChild(as);\n    }\n  }\n}\nfunction preinitStyle(href, precedence, options) {\n  previousDispatcher.S(href, precedence, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && href) {\n    var styles = getResourcesFromRoot(ownerDocument).hoistableStyles,\n      key = getStyleKey(href);\n    precedence = precedence || \"default\";\n    var resource = styles.get(key);\n    if (!resource) {\n      var state = { loading: 0, preload: null };\n      if (\n        (resource = ownerDocument.querySelector(\n          getStylesheetSelectorFromKey(key)\n        ))\n      )\n        state.loading = 5;\n      else {\n        href = assign(\n          { rel: \"stylesheet\", href: href, \"data-precedence\": precedence },\n          options\n        );\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForStylesheet(href, options);\n        var link = (resource = ownerDocument.createElement(\"link\"));\n        markNodeAsHoistable(link);\n        setInitialProperties(link, \"link\", href);\n        link._p = new Promise(function (resolve, reject) {\n          link.onload = resolve;\n          link.onerror = reject;\n        });\n        link.addEventListener(\"load\", function () {\n          state.loading |= 1;\n        });\n        link.addEventListener(\"error\", function () {\n          state.loading |= 2;\n        });\n        state.loading |= 4;\n        insertStylesheet(resource, precedence, ownerDocument);\n      }\n      resource = {\n        type: \"stylesheet\",\n        instance: resource,\n        count: 1,\n        state: state\n      };\n      styles.set(key, resource);\n    }\n  }\n}\nfunction preinitScript(src, options) {\n  previousDispatcher.X(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0 }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction preinitModuleScript(src, options) {\n  previousDispatcher.M(src, options);\n  var ownerDocument = globalDocument;\n  if (ownerDocument && src) {\n    var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,\n      key = getScriptKey(src),\n      resource = scripts.get(key);\n    resource ||\n      ((resource = ownerDocument.querySelector(getScriptSelectorFromKey(key))),\n      resource ||\n        ((src = assign({ src: src, async: !0, type: \"module\" }, options)),\n        (options = preloadPropsMap.get(key)) &&\n          adoptPreloadPropsForScript(src, options),\n        (resource = ownerDocument.createElement(\"script\")),\n        markNodeAsHoistable(resource),\n        setInitialProperties(resource, \"link\", src),\n        ownerDocument.head.appendChild(resource)),\n      (resource = {\n        type: \"script\",\n        instance: resource,\n        count: 1,\n        state: null\n      }),\n      scripts.set(key, resource));\n  }\n}\nfunction getResource(type, currentProps, pendingProps, currentResource) {\n  var JSCompiler_inline_result = (JSCompiler_inline_result =\n    rootInstanceStackCursor.current)\n    ? getHoistableRoot(JSCompiler_inline_result)\n    : null;\n  if (!JSCompiler_inline_result) throw Error(formatProdErrorMessage(446));\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return null;\n    case \"style\":\n      return \"string\" === typeof pendingProps.precedence &&\n        \"string\" === typeof pendingProps.href\n        ? ((currentProps = getStyleKey(pendingProps.href)),\n          (pendingProps = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles),\n          (currentResource = pendingProps.get(currentProps)),\n          currentResource ||\n            ((currentResource = {\n              type: \"style\",\n              instance: null,\n              count: 0,\n              state: null\n            }),\n            pendingProps.set(currentProps, currentResource)),\n          currentResource)\n        : { type: \"void\", instance: null, count: 0, state: null };\n    case \"link\":\n      if (\n        \"stylesheet\" === pendingProps.rel &&\n        \"string\" === typeof pendingProps.href &&\n        \"string\" === typeof pendingProps.precedence\n      ) {\n        type = getStyleKey(pendingProps.href);\n        var styles$242 = getResourcesFromRoot(\n            JSCompiler_inline_result\n          ).hoistableStyles,\n          resource$243 = styles$242.get(type);\n        resource$243 ||\n          ((JSCompiler_inline_result =\n            JSCompiler_inline_result.ownerDocument || JSCompiler_inline_result),\n          (resource$243 = {\n            type: \"stylesheet\",\n            instance: null,\n            count: 0,\n            state: { loading: 0, preload: null }\n          }),\n          styles$242.set(type, resource$243),\n          (styles$242 = JSCompiler_inline_result.querySelector(\n            getStylesheetSelectorFromKey(type)\n          )) &&\n            !styles$242._p &&\n            ((resource$243.instance = styles$242),\n            (resource$243.state.loading = 5)),\n          preloadPropsMap.has(type) ||\n            ((pendingProps = {\n              rel: \"preload\",\n              as: \"style\",\n              href: pendingProps.href,\n              crossOrigin: pendingProps.crossOrigin,\n              integrity: pendingProps.integrity,\n              media: pendingProps.media,\n              hrefLang: pendingProps.hrefLang,\n              referrerPolicy: pendingProps.referrerPolicy\n            }),\n            preloadPropsMap.set(type, pendingProps),\n            styles$242 ||\n              preloadStylesheet(\n                JSCompiler_inline_result,\n                type,\n                pendingProps,\n                resource$243.state\n              )));\n        if (currentProps && null === currentResource)\n          throw Error(formatProdErrorMessage(528, \"\"));\n        return resource$243;\n      }\n      if (currentProps && null !== currentResource)\n        throw Error(formatProdErrorMessage(529, \"\"));\n      return null;\n    case \"script\":\n      return (\n        (currentProps = pendingProps.async),\n        (pendingProps = pendingProps.src),\n        \"string\" === typeof pendingProps &&\n        currentProps &&\n        \"function\" !== typeof currentProps &&\n        \"symbol\" !== typeof currentProps\n          ? ((currentProps = getScriptKey(pendingProps)),\n            (pendingProps = getResourcesFromRoot(\n              JSCompiler_inline_result\n            ).hoistableScripts),\n            (currentResource = pendingProps.get(currentProps)),\n            currentResource ||\n              ((currentResource = {\n                type: \"script\",\n                instance: null,\n                count: 0,\n                state: null\n              }),\n              pendingProps.set(currentProps, currentResource)),\n            currentResource)\n          : { type: \"void\", instance: null, count: 0, state: null }\n      );\n    default:\n      throw Error(formatProdErrorMessage(444, type));\n  }\n}\nfunction getStyleKey(href) {\n  return 'href=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '\"';\n}\nfunction getStylesheetSelectorFromKey(key) {\n  return 'link[rel=\"stylesheet\"][' + key + \"]\";\n}\nfunction stylesheetPropsFromRawProps(rawProps) {\n  return assign({}, rawProps, {\n    \"data-precedence\": rawProps.precedence,\n    precedence: null\n  });\n}\nfunction preloadStylesheet(ownerDocument, key, preloadProps, state) {\n  ownerDocument.querySelector('link[rel=\"preload\"][as=\"style\"][' + key + \"]\")\n    ? (state.loading = 1)\n    : ((key = ownerDocument.createElement(\"link\")),\n      (state.preload = key),\n      key.addEventListener(\"load\", function () {\n        return (state.loading |= 1);\n      }),\n      key.addEventListener(\"error\", function () {\n        return (state.loading |= 2);\n      }),\n      setInitialProperties(key, \"link\", preloadProps),\n      markNodeAsHoistable(key),\n      ownerDocument.head.appendChild(key));\n}\nfunction getScriptKey(src) {\n  return '[src=\"' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '\"]';\n}\nfunction getScriptSelectorFromKey(key) {\n  return \"script[async]\" + key;\n}\nfunction acquireResource(hoistableRoot, resource, props) {\n  resource.count++;\n  if (null === resource.instance)\n    switch (resource.type) {\n      case \"style\":\n        var instance = hoistableRoot.querySelector(\n          'style[data-href~=\"' +\n            escapeSelectorAttributeValueInsideDoubleQuotes(props.href) +\n            '\"]'\n        );\n        if (instance)\n          return (\n            (resource.instance = instance),\n            markNodeAsHoistable(instance),\n            instance\n          );\n        var styleProps = assign({}, props, {\n          \"data-href\": props.href,\n          \"data-precedence\": props.precedence,\n          href: null,\n          precedence: null\n        });\n        instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement(\n          \"style\"\n        );\n        markNodeAsHoistable(instance);\n        setInitialProperties(instance, \"style\", styleProps);\n        insertStylesheet(instance, props.precedence, hoistableRoot);\n        return (resource.instance = instance);\n      case \"stylesheet\":\n        styleProps = getStyleKey(props.href);\n        var instance$248 = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(styleProps)\n        );\n        if (instance$248)\n          return (\n            (resource.state.loading |= 4),\n            (resource.instance = instance$248),\n            markNodeAsHoistable(instance$248),\n            instance$248\n          );\n        instance = stylesheetPropsFromRawProps(props);\n        (styleProps = preloadPropsMap.get(styleProps)) &&\n          adoptPreloadPropsForStylesheet(instance, styleProps);\n        instance$248 = (\n          hoistableRoot.ownerDocument || hoistableRoot\n        ).createElement(\"link\");\n        markNodeAsHoistable(instance$248);\n        var linkInstance = instance$248;\n        linkInstance._p = new Promise(function (resolve, reject) {\n          linkInstance.onload = resolve;\n          linkInstance.onerror = reject;\n        });\n        setInitialProperties(instance$248, \"link\", instance);\n        resource.state.loading |= 4;\n        insertStylesheet(instance$248, props.precedence, hoistableRoot);\n        return (resource.instance = instance$248);\n      case \"script\":\n        instance$248 = getScriptKey(props.src);\n        if (\n          (styleProps = hoistableRoot.querySelector(\n            getScriptSelectorFromKey(instance$248)\n          ))\n        )\n          return (\n            (resource.instance = styleProps),\n            markNodeAsHoistable(styleProps),\n            styleProps\n          );\n        instance = props;\n        if ((styleProps = preloadPropsMap.get(instance$248)))\n          (instance = assign({}, props)),\n            adoptPreloadPropsForScript(instance, styleProps);\n        hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n        styleProps = hoistableRoot.createElement(\"script\");\n        markNodeAsHoistable(styleProps);\n        setInitialProperties(styleProps, \"link\", instance);\n        hoistableRoot.head.appendChild(styleProps);\n        return (resource.instance = styleProps);\n      case \"void\":\n        return null;\n      default:\n        throw Error(formatProdErrorMessage(443, resource.type));\n    }\n  else\n    \"stylesheet\" === resource.type &&\n      0 === (resource.state.loading & 4) &&\n      ((instance = resource.instance),\n      (resource.state.loading |= 4),\n      insertStylesheet(instance, props.precedence, hoistableRoot));\n  return resource.instance;\n}\nfunction insertStylesheet(instance, precedence, root) {\n  for (\n    var nodes = root.querySelectorAll(\n        'link[rel=\"stylesheet\"][data-precedence],style[data-precedence]'\n      ),\n      last = nodes.length ? nodes[nodes.length - 1] : null,\n      prior = last,\n      i = 0;\n    i < nodes.length;\n    i++\n  ) {\n    var node = nodes[i];\n    if (node.dataset.precedence === precedence) prior = node;\n    else if (prior !== last) break;\n  }\n  prior\n    ? prior.parentNode.insertBefore(instance, prior.nextSibling)\n    : ((precedence = 9 === root.nodeType ? root.head : root),\n      precedence.insertBefore(instance, precedence.firstChild));\n}\nfunction adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {\n  null == stylesheetProps.crossOrigin &&\n    (stylesheetProps.crossOrigin = preloadProps.crossOrigin);\n  null == stylesheetProps.referrerPolicy &&\n    (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == stylesheetProps.title && (stylesheetProps.title = preloadProps.title);\n}\nfunction adoptPreloadPropsForScript(scriptProps, preloadProps) {\n  null == scriptProps.crossOrigin &&\n    (scriptProps.crossOrigin = preloadProps.crossOrigin);\n  null == scriptProps.referrerPolicy &&\n    (scriptProps.referrerPolicy = preloadProps.referrerPolicy);\n  null == scriptProps.integrity &&\n    (scriptProps.integrity = preloadProps.integrity);\n}\nvar tagCaches = null;\nfunction getHydratableHoistableCache(type, keyAttribute, ownerDocument) {\n  if (null === tagCaches) {\n    var cache = new Map();\n    var caches = (tagCaches = new Map());\n    caches.set(ownerDocument, cache);\n  } else\n    (caches = tagCaches),\n      (cache = caches.get(ownerDocument)),\n      cache || ((cache = new Map()), caches.set(ownerDocument, cache));\n  if (cache.has(type)) return cache;\n  cache.set(type, null);\n  ownerDocument = ownerDocument.getElementsByTagName(type);\n  for (caches = 0; caches < ownerDocument.length; caches++) {\n    var node = ownerDocument[caches];\n    if (\n      !(\n        node[internalHoistableMarker] ||\n        node[internalInstanceKey] ||\n        (\"link\" === type && \"stylesheet\" === node.getAttribute(\"rel\"))\n      ) &&\n      \"http://www.w3.org/2000/svg\" !== node.namespaceURI\n    ) {\n      var nodeKey = node.getAttribute(keyAttribute) || \"\";\n      nodeKey = type + nodeKey;\n      var existing = cache.get(nodeKey);\n      existing ? existing.push(node) : cache.set(nodeKey, [node]);\n    }\n  }\n  return cache;\n}\nfunction mountHoistable(hoistableRoot, type, instance) {\n  hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;\n  hoistableRoot.head.insertBefore(\n    instance,\n    \"title\" === type ? hoistableRoot.querySelector(\"head > title\") : null\n  );\n}\nfunction isHostHoistableType(type, props, hostContext) {\n  if (1 === hostContext || null != props.itemProp) return !1;\n  switch (type) {\n    case \"meta\":\n    case \"title\":\n      return !0;\n    case \"style\":\n      if (\n        \"string\" !== typeof props.precedence ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href\n      )\n        break;\n      return !0;\n    case \"link\":\n      if (\n        \"string\" !== typeof props.rel ||\n        \"string\" !== typeof props.href ||\n        \"\" === props.href ||\n        props.onLoad ||\n        props.onError\n      )\n        break;\n      switch (props.rel) {\n        case \"stylesheet\":\n          return (\n            (type = props.disabled),\n            \"string\" === typeof props.precedence && null == type\n          );\n        default:\n          return !0;\n      }\n    case \"script\":\n      if (\n        props.async &&\n        \"function\" !== typeof props.async &&\n        \"symbol\" !== typeof props.async &&\n        !props.onLoad &&\n        !props.onError &&\n        props.src &&\n        \"string\" === typeof props.src\n      )\n        return !0;\n  }\n  return !1;\n}\nfunction preloadResource(resource) {\n  return \"stylesheet\" === resource.type && 0 === (resource.state.loading & 3)\n    ? !1\n    : !0;\n}\nvar suspendedState = null;\nfunction noop() {}\nfunction suspendResource(hoistableRoot, resource, props) {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  if (\n    \"stylesheet\" === resource.type &&\n    (\"string\" !== typeof props.media ||\n      !1 !== matchMedia(props.media).matches) &&\n    0 === (resource.state.loading & 4)\n  ) {\n    if (null === resource.instance) {\n      var key = getStyleKey(props.href),\n        instance = hoistableRoot.querySelector(\n          getStylesheetSelectorFromKey(key)\n        );\n      if (instance) {\n        hoistableRoot = instance._p;\n        null !== hoistableRoot &&\n          \"object\" === typeof hoistableRoot &&\n          \"function\" === typeof hoistableRoot.then &&\n          (state.count++,\n          (state = onUnsuspend.bind(state)),\n          hoistableRoot.then(state, state));\n        resource.state.loading |= 4;\n        resource.instance = instance;\n        markNodeAsHoistable(instance);\n        return;\n      }\n      instance = hoistableRoot.ownerDocument || hoistableRoot;\n      props = stylesheetPropsFromRawProps(props);\n      (key = preloadPropsMap.get(key)) &&\n        adoptPreloadPropsForStylesheet(props, key);\n      instance = instance.createElement(\"link\");\n      markNodeAsHoistable(instance);\n      var linkInstance = instance;\n      linkInstance._p = new Promise(function (resolve, reject) {\n        linkInstance.onload = resolve;\n        linkInstance.onerror = reject;\n      });\n      setInitialProperties(instance, \"link\", props);\n      resource.instance = instance;\n    }\n    null === state.stylesheets && (state.stylesheets = new Map());\n    state.stylesheets.set(resource, hoistableRoot);\n    (hoistableRoot = resource.state.preload) &&\n      0 === (resource.state.loading & 3) &&\n      (state.count++,\n      (resource = onUnsuspend.bind(state)),\n      hoistableRoot.addEventListener(\"load\", resource),\n      hoistableRoot.addEventListener(\"error\", resource));\n  }\n}\nfunction waitForCommitToBeReady() {\n  if (null === suspendedState) throw Error(formatProdErrorMessage(475));\n  var state = suspendedState;\n  state.stylesheets &&\n    0 === state.count &&\n    insertSuspendedStylesheets(state, state.stylesheets);\n  return 0 < state.count\n    ? function (commit) {\n        var stylesheetTimer = setTimeout(function () {\n          state.stylesheets &&\n            insertSuspendedStylesheets(state, state.stylesheets);\n          if (state.unsuspend) {\n            var unsuspend = state.unsuspend;\n            state.unsuspend = null;\n            unsuspend();\n          }\n        }, 6e4);\n        state.unsuspend = commit;\n        return function () {\n          state.unsuspend = null;\n          clearTimeout(stylesheetTimer);\n        };\n      }\n    : null;\n}\nfunction onUnsuspend() {\n  this.count--;\n  if (0 === this.count)\n    if (this.stylesheets) insertSuspendedStylesheets(this, this.stylesheets);\n    else if (this.unsuspend) {\n      var unsuspend = this.unsuspend;\n      this.unsuspend = null;\n      unsuspend();\n    }\n}\nvar precedencesByRoot = null;\nfunction insertSuspendedStylesheets(state, resources) {\n  state.stylesheets = null;\n  null !== state.unsuspend &&\n    (state.count++,\n    (precedencesByRoot = new Map()),\n    resources.forEach(insertStylesheetIntoRoot, state),\n    (precedencesByRoot = null),\n    onUnsuspend.call(state));\n}\nfunction insertStylesheetIntoRoot(root, resource) {\n  if (!(resource.state.loading & 4)) {\n    var precedences = precedencesByRoot.get(root);\n    if (precedences) var last = precedences.get(null);\n    else {\n      precedences = new Map();\n      precedencesByRoot.set(root, precedences);\n      for (\n        var nodes = root.querySelectorAll(\n            \"link[data-precedence],style[data-precedence]\"\n          ),\n          i = 0;\n        i < nodes.length;\n        i++\n      ) {\n        var node = nodes[i];\n        if (\n          \"LINK\" === node.nodeName ||\n          \"not all\" !== node.getAttribute(\"media\")\n        )\n          precedences.set(node.dataset.precedence, node), (last = node);\n      }\n      last && precedences.set(null, last);\n    }\n    nodes = resource.instance;\n    node = nodes.getAttribute(\"data-precedence\");\n    i = precedences.get(node) || last;\n    i === last && precedences.set(null, nodes);\n    precedences.set(node, nodes);\n    this.count++;\n    last = onUnsuspend.bind(this);\n    nodes.addEventListener(\"load\", last);\n    nodes.addEventListener(\"error\", last);\n    i\n      ? i.parentNode.insertBefore(nodes, i.nextSibling)\n      : ((root = 9 === root.nodeType ? root.head : root),\n        root.insertBefore(nodes, root.firstChild));\n    resource.state.loading |= 4;\n  }\n}\nvar HostTransitionContext = {\n  $$typeof: REACT_CONTEXT_TYPE,\n  Provider: null,\n  Consumer: null,\n  _currentValue: sharedNotPendingObject,\n  _currentValue2: sharedNotPendingObject,\n  _threadCount: 0\n};\nfunction FiberRootNode(\n  containerInfo,\n  tag,\n  hydrate,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  formState\n) {\n  this.tag = 1;\n  this.containerInfo = containerInfo;\n  this.finishedWork =\n    this.pingCache =\n    this.current =\n    this.pendingChildren =\n      null;\n  this.timeoutHandle = -1;\n  this.callbackNode =\n    this.next =\n    this.pendingContext =\n    this.context =\n    this.cancelPendingCommit =\n      null;\n  this.callbackPriority = 0;\n  this.expirationTimes = createLaneMap(-1);\n  this.entangledLanes =\n    this.shellSuspendCounter =\n    this.errorRecoveryDisabledLanes =\n    this.finishedLanes =\n    this.expiredLanes =\n    this.warmLanes =\n    this.pingedLanes =\n    this.suspendedLanes =\n    this.pendingLanes =\n      0;\n  this.entanglements = createLaneMap(0);\n  this.hiddenUpdates = createLaneMap(null);\n  this.identifierPrefix = identifierPrefix;\n  this.onUncaughtError = onUncaughtError;\n  this.onCaughtError = onCaughtError;\n  this.onRecoverableError = onRecoverableError;\n  this.pooledCache = null;\n  this.pooledCacheLanes = 0;\n  this.formState = formState;\n  this.incompleteTransitions = new Map();\n}\nfunction createFiberRoot(\n  containerInfo,\n  tag,\n  hydrate,\n  initialChildren,\n  hydrationCallbacks,\n  isStrictMode,\n  identifierPrefix,\n  onUncaughtError,\n  onCaughtError,\n  onRecoverableError,\n  transitionCallbacks,\n  formState\n) {\n  containerInfo = new FiberRootNode(\n    containerInfo,\n    tag,\n    hydrate,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    formState\n  );\n  tag = 1;\n  !0 === isStrictMode && (tag |= 24);\n  isStrictMode = createFiberImplClass(3, null, null, tag);\n  containerInfo.current = isStrictMode;\n  isStrictMode.stateNode = containerInfo;\n  tag = createCache();\n  tag.refCount++;\n  containerInfo.pooledCache = tag;\n  tag.refCount++;\n  isStrictMode.memoizedState = {\n    element: initialChildren,\n    isDehydrated: hydrate,\n    cache: tag\n  };\n  initializeUpdateQueue(isStrictMode);\n  return containerInfo;\n}\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) return emptyContextObject;\n  parentComponent = emptyContextObject;\n  return parentComponent;\n}\nfunction updateContainerImpl(\n  rootFiber,\n  lane,\n  element,\n  container,\n  parentComponent,\n  callback\n) {\n  parentComponent = getContextForSubtree(parentComponent);\n  null === container.context\n    ? (container.context = parentComponent)\n    : (container.pendingContext = parentComponent);\n  container = createUpdate(lane);\n  container.payload = { element: element };\n  callback = void 0 === callback ? null : callback;\n  null !== callback && (container.callback = callback);\n  element = enqueueUpdate(rootFiber, container, lane);\n  null !== element &&\n    (scheduleUpdateOnFiber(element, rootFiber, lane),\n    entangleTransitions(element, rootFiber, lane));\n}\nfunction markRetryLaneImpl(fiber, retryLane) {\n  fiber = fiber.memoizedState;\n  if (null !== fiber && null !== fiber.dehydrated) {\n    var a = fiber.retryLane;\n    fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;\n  }\n}\nfunction markRetryLaneIfNotHydrated(fiber, retryLane) {\n  markRetryLaneImpl(fiber, retryLane);\n  (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);\n}\nfunction attemptContinuousHydration(fiber) {\n  if (13 === fiber.tag) {\n    var root = enqueueConcurrentRenderForLane(fiber, 67108864);\n    null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);\n    markRetryLaneIfNotHydrated(fiber, 67108864);\n  }\n}\nvar _enabled = !0;\nfunction dispatchDiscreteEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 2),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchContinuousEvent(\n  domEventName,\n  eventSystemFlags,\n  container,\n  nativeEvent\n) {\n  var prevTransition = ReactSharedInternals.T;\n  ReactSharedInternals.T = null;\n  var previousPriority = ReactDOMSharedInternals.p;\n  try {\n    (ReactDOMSharedInternals.p = 8),\n      dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);\n  } finally {\n    (ReactDOMSharedInternals.p = previousPriority),\n      (ReactSharedInternals.T = prevTransition);\n  }\n}\nfunction dispatchEvent(\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (_enabled) {\n    var blockedOn = findInstanceBlockingEvent(nativeEvent);\n    if (null === blockedOn)\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        return_targetInst,\n        targetContainer\n      ),\n        clearIfContinuousEvent(domEventName, nativeEvent);\n    else if (\n      queueIfContinuousEvent(\n        blockedOn,\n        domEventName,\n        eventSystemFlags,\n        targetContainer,\n        nativeEvent\n      )\n    )\n      nativeEvent.stopPropagation();\n    else if (\n      (clearIfContinuousEvent(domEventName, nativeEvent),\n      eventSystemFlags & 4 &&\n        -1 < discreteReplayableEvents.indexOf(domEventName))\n    ) {\n      for (; null !== blockedOn; ) {\n        var fiber = getInstanceFromNode(blockedOn);\n        if (null !== fiber)\n          switch (fiber.tag) {\n            case 3:\n              fiber = fiber.stateNode;\n              if (fiber.current.memoizedState.isDehydrated) {\n                var lanes = getHighestPriorityLanes(fiber.pendingLanes);\n                if (0 !== lanes) {\n                  var root = fiber;\n                  root.pendingLanes |= 2;\n                  for (root.entangledLanes |= 2; lanes; ) {\n                    var lane = 1 << (31 - clz32(lanes));\n                    root.entanglements[1] |= lane;\n                    lanes &= ~lane;\n                  }\n                  ensureRootIsScheduled(fiber);\n                  0 === (executionContext & 6) &&\n                    ((workInProgressRootRenderTargetTime = now() + 500),\n                    flushSyncWorkAcrossRoots_impl(0, !1));\n                }\n              }\n              break;\n            case 13:\n              (root = enqueueConcurrentRenderForLane(fiber, 2)),\n                null !== root && scheduleUpdateOnFiber(root, fiber, 2),\n                flushSyncWork$1(),\n                markRetryLaneIfNotHydrated(fiber, 2);\n          }\n        fiber = findInstanceBlockingEvent(nativeEvent);\n        null === fiber &&\n          dispatchEventForPluginEventSystem(\n            domEventName,\n            eventSystemFlags,\n            nativeEvent,\n            return_targetInst,\n            targetContainer\n          );\n        if (fiber === blockedOn) break;\n        blockedOn = fiber;\n      }\n      null !== blockedOn && nativeEvent.stopPropagation();\n    } else\n      dispatchEventForPluginEventSystem(\n        domEventName,\n        eventSystemFlags,\n        nativeEvent,\n        null,\n        targetContainer\n      );\n  }\n}\nfunction findInstanceBlockingEvent(nativeEvent) {\n  nativeEvent = getEventTarget(nativeEvent);\n  return findInstanceBlockingTarget(nativeEvent);\n}\nvar return_targetInst = null;\nfunction findInstanceBlockingTarget(targetNode) {\n  return_targetInst = null;\n  targetNode = getClosestInstanceFromNode(targetNode);\n  if (null !== targetNode) {\n    var nearestMounted = getNearestMountedFiber(targetNode);\n    if (null === nearestMounted) targetNode = null;\n    else {\n      var tag = nearestMounted.tag;\n      if (13 === tag) {\n        targetNode = getSuspenseInstanceFromFiber(nearestMounted);\n        if (null !== targetNode) return targetNode;\n        targetNode = null;\n      } else if (3 === tag) {\n        if (nearestMounted.stateNode.current.memoizedState.isDehydrated)\n          return 3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        targetNode = null;\n      } else nearestMounted !== targetNode && (targetNode = null);\n    }\n  }\n  return_targetInst = targetNode;\n  return null;\n}\nfunction getEventPriority(domEventName) {\n  switch (domEventName) {\n    case \"beforetoggle\":\n    case \"cancel\":\n    case \"click\":\n    case \"close\":\n    case \"contextmenu\":\n    case \"copy\":\n    case \"cut\":\n    case \"auxclick\":\n    case \"dblclick\":\n    case \"dragend\":\n    case \"dragstart\":\n    case \"drop\":\n    case \"focusin\":\n    case \"focusout\":\n    case \"input\":\n    case \"invalid\":\n    case \"keydown\":\n    case \"keypress\":\n    case \"keyup\":\n    case \"mousedown\":\n    case \"mouseup\":\n    case \"paste\":\n    case \"pause\":\n    case \"play\":\n    case \"pointercancel\":\n    case \"pointerdown\":\n    case \"pointerup\":\n    case \"ratechange\":\n    case \"reset\":\n    case \"resize\":\n    case \"seeked\":\n    case \"submit\":\n    case \"toggle\":\n    case \"touchcancel\":\n    case \"touchend\":\n    case \"touchstart\":\n    case \"volumechange\":\n    case \"change\":\n    case \"selectionchange\":\n    case \"textInput\":\n    case \"compositionstart\":\n    case \"compositionend\":\n    case \"compositionupdate\":\n    case \"beforeblur\":\n    case \"afterblur\":\n    case \"beforeinput\":\n    case \"blur\":\n    case \"fullscreenchange\":\n    case \"focus\":\n    case \"hashchange\":\n    case \"popstate\":\n    case \"select\":\n    case \"selectstart\":\n      return 2;\n    case \"drag\":\n    case \"dragenter\":\n    case \"dragexit\":\n    case \"dragleave\":\n    case \"dragover\":\n    case \"mousemove\":\n    case \"mouseout\":\n    case \"mouseover\":\n    case \"pointermove\":\n    case \"pointerout\":\n    case \"pointerover\":\n    case \"scroll\":\n    case \"touchmove\":\n    case \"wheel\":\n    case \"mouseenter\":\n    case \"mouseleave\":\n    case \"pointerenter\":\n    case \"pointerleave\":\n      return 8;\n    case \"message\":\n      switch (getCurrentPriorityLevel()) {\n        case ImmediatePriority:\n          return 2;\n        case UserBlockingPriority:\n          return 8;\n        case NormalPriority$1:\n        case LowPriority:\n          return 32;\n        case IdlePriority:\n          return 268435456;\n        default:\n          return 32;\n      }\n    default:\n      return 32;\n  }\n}\nvar hasScheduledReplayAttempt = !1,\n  queuedFocus = null,\n  queuedDrag = null,\n  queuedMouse = null,\n  queuedPointers = new Map(),\n  queuedPointerCaptures = new Map(),\n  queuedExplicitHydrationTargets = [],\n  discreteReplayableEvents =\n    \"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset\".split(\n      \" \"\n    );\nfunction clearIfContinuousEvent(domEventName, nativeEvent) {\n  switch (domEventName) {\n    case \"focusin\":\n    case \"focusout\":\n      queuedFocus = null;\n      break;\n    case \"dragenter\":\n    case \"dragleave\":\n      queuedDrag = null;\n      break;\n    case \"mouseover\":\n    case \"mouseout\":\n      queuedMouse = null;\n      break;\n    case \"pointerover\":\n    case \"pointerout\":\n      queuedPointers.delete(nativeEvent.pointerId);\n      break;\n    case \"gotpointercapture\":\n    case \"lostpointercapture\":\n      queuedPointerCaptures.delete(nativeEvent.pointerId);\n  }\n}\nfunction accumulateOrCreateContinuousQueuedReplayableEvent(\n  existingQueuedEvent,\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  if (\n    null === existingQueuedEvent ||\n    existingQueuedEvent.nativeEvent !== nativeEvent\n  )\n    return (\n      (existingQueuedEvent = {\n        blockedOn: blockedOn,\n        domEventName: domEventName,\n        eventSystemFlags: eventSystemFlags,\n        nativeEvent: nativeEvent,\n        targetContainers: [targetContainer]\n      }),\n      null !== blockedOn &&\n        ((blockedOn = getInstanceFromNode(blockedOn)),\n        null !== blockedOn && attemptContinuousHydration(blockedOn)),\n      existingQueuedEvent\n    );\n  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;\n  blockedOn = existingQueuedEvent.targetContainers;\n  null !== targetContainer &&\n    -1 === blockedOn.indexOf(targetContainer) &&\n    blockedOn.push(targetContainer);\n  return existingQueuedEvent;\n}\nfunction queueIfContinuousEvent(\n  blockedOn,\n  domEventName,\n  eventSystemFlags,\n  targetContainer,\n  nativeEvent\n) {\n  switch (domEventName) {\n    case \"focusin\":\n      return (\n        (queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedFocus,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"dragenter\":\n      return (\n        (queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedDrag,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"mouseover\":\n      return (\n        (queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedMouse,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )),\n        !0\n      );\n    case \"pointerover\":\n      var pointerId = nativeEvent.pointerId;\n      queuedPointers.set(\n        pointerId,\n        accumulateOrCreateContinuousQueuedReplayableEvent(\n          queuedPointers.get(pointerId) || null,\n          blockedOn,\n          domEventName,\n          eventSystemFlags,\n          targetContainer,\n          nativeEvent\n        )\n      );\n      return !0;\n    case \"gotpointercapture\":\n      return (\n        (pointerId = nativeEvent.pointerId),\n        queuedPointerCaptures.set(\n          pointerId,\n          accumulateOrCreateContinuousQueuedReplayableEvent(\n            queuedPointerCaptures.get(pointerId) || null,\n            blockedOn,\n            domEventName,\n            eventSystemFlags,\n            targetContainer,\n            nativeEvent\n          )\n        ),\n        !0\n      );\n  }\n  return !1;\n}\nfunction attemptExplicitHydrationTarget(queuedTarget) {\n  var targetInst = getClosestInstanceFromNode(queuedTarget.target);\n  if (null !== targetInst) {\n    var nearestMounted = getNearestMountedFiber(targetInst);\n    if (null !== nearestMounted)\n      if (((targetInst = nearestMounted.tag), 13 === targetInst)) {\n        if (\n          ((targetInst = getSuspenseInstanceFromFiber(nearestMounted)),\n          null !== targetInst)\n        ) {\n          queuedTarget.blockedOn = targetInst;\n          runWithPriority(queuedTarget.priority, function () {\n            if (13 === nearestMounted.tag) {\n              var lane = requestUpdateLane(),\n                root = enqueueConcurrentRenderForLane(nearestMounted, lane);\n              null !== root &&\n                scheduleUpdateOnFiber(root, nearestMounted, lane);\n              markRetryLaneIfNotHydrated(nearestMounted, lane);\n            }\n          });\n          return;\n        }\n      } else if (\n        3 === targetInst &&\n        nearestMounted.stateNode.current.memoizedState.isDehydrated\n      ) {\n        queuedTarget.blockedOn =\n          3 === nearestMounted.tag\n            ? nearestMounted.stateNode.containerInfo\n            : null;\n        return;\n      }\n  }\n  queuedTarget.blockedOn = null;\n}\nfunction attemptReplayContinuousQueuedEvent(queuedEvent) {\n  if (null !== queuedEvent.blockedOn) return !1;\n  for (\n    var targetContainers = queuedEvent.targetContainers;\n    0 < targetContainers.length;\n\n  ) {\n    var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);\n    if (null === nextBlockedOn) {\n      nextBlockedOn = queuedEvent.nativeEvent;\n      var nativeEventClone = new nextBlockedOn.constructor(\n        nextBlockedOn.type,\n        nextBlockedOn\n      );\n      currentReplayingEvent = nativeEventClone;\n      nextBlockedOn.target.dispatchEvent(nativeEventClone);\n      currentReplayingEvent = null;\n    } else\n      return (\n        (targetContainers = getInstanceFromNode(nextBlockedOn)),\n        null !== targetContainers &&\n          attemptContinuousHydration(targetContainers),\n        (queuedEvent.blockedOn = nextBlockedOn),\n        !1\n      );\n    targetContainers.shift();\n  }\n  return !0;\n}\nfunction attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {\n  attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);\n}\nfunction replayUnblockedEvents() {\n  hasScheduledReplayAttempt = !1;\n  null !== queuedFocus &&\n    attemptReplayContinuousQueuedEvent(queuedFocus) &&\n    (queuedFocus = null);\n  null !== queuedDrag &&\n    attemptReplayContinuousQueuedEvent(queuedDrag) &&\n    (queuedDrag = null);\n  null !== queuedMouse &&\n    attemptReplayContinuousQueuedEvent(queuedMouse) &&\n    (queuedMouse = null);\n  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);\n  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);\n}\nfunction scheduleCallbackIfUnblocked(queuedEvent, unblocked) {\n  queuedEvent.blockedOn === unblocked &&\n    ((queuedEvent.blockedOn = null),\n    hasScheduledReplayAttempt ||\n      ((hasScheduledReplayAttempt = !0),\n      Scheduler.unstable_scheduleCallback(\n        Scheduler.unstable_NormalPriority,\n        replayUnblockedEvents\n      )));\n}\nvar lastScheduledReplayQueue = null;\nfunction scheduleReplayQueueIfNeeded(formReplayingQueue) {\n  lastScheduledReplayQueue !== formReplayingQueue &&\n    ((lastScheduledReplayQueue = formReplayingQueue),\n    Scheduler.unstable_scheduleCallback(\n      Scheduler.unstable_NormalPriority,\n      function () {\n        lastScheduledReplayQueue === formReplayingQueue &&\n          (lastScheduledReplayQueue = null);\n        for (var i = 0; i < formReplayingQueue.length; i += 3) {\n          var form = formReplayingQueue[i],\n            submitterOrAction = formReplayingQueue[i + 1],\n            formData = formReplayingQueue[i + 2];\n          if (\"function\" !== typeof submitterOrAction)\n            if (null === findInstanceBlockingTarget(submitterOrAction || form))\n              continue;\n            else break;\n          var formInst = getInstanceFromNode(form);\n          null !== formInst &&\n            (formReplayingQueue.splice(i, 3),\n            (i -= 3),\n            startHostTransition(\n              formInst,\n              {\n                pending: !0,\n                data: formData,\n                method: form.method,\n                action: submitterOrAction\n              },\n              submitterOrAction,\n              formData\n            ));\n        }\n      }\n    ));\n}\nfunction retryIfBlockedOn(unblocked) {\n  function unblock(queuedEvent) {\n    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);\n  }\n  null !== queuedFocus && scheduleCallbackIfUnblocked(queuedFocus, unblocked);\n  null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);\n  null !== queuedMouse && scheduleCallbackIfUnblocked(queuedMouse, unblocked);\n  queuedPointers.forEach(unblock);\n  queuedPointerCaptures.forEach(unblock);\n  for (var i = 0; i < queuedExplicitHydrationTargets.length; i++) {\n    var queuedTarget = queuedExplicitHydrationTargets[i];\n    queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);\n  }\n  for (\n    ;\n    0 < queuedExplicitHydrationTargets.length &&\n    ((i = queuedExplicitHydrationTargets[0]), null === i.blockedOn);\n\n  )\n    attemptExplicitHydrationTarget(i),\n      null === i.blockedOn && queuedExplicitHydrationTargets.shift();\n  i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;\n  if (null != i)\n    for (queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3) {\n      var form = i[queuedTarget],\n        submitterOrAction = i[queuedTarget + 1],\n        formProps = form[internalPropsKey] || null;\n      if (\"function\" === typeof submitterOrAction)\n        formProps || scheduleReplayQueueIfNeeded(i);\n      else if (formProps) {\n        var action = null;\n        if (submitterOrAction && submitterOrAction.hasAttribute(\"formAction\"))\n          if (\n            ((form = submitterOrAction),\n            (formProps = submitterOrAction[internalPropsKey] || null))\n          )\n            action = formProps.formAction;\n          else {\n            if (null !== findInstanceBlockingTarget(form)) continue;\n          }\n        else action = formProps.action;\n        \"function\" === typeof action\n          ? (i[queuedTarget + 1] = action)\n          : (i.splice(queuedTarget, 3), (queuedTarget -= 3));\n        scheduleReplayQueueIfNeeded(i);\n      }\n    }\n}\nfunction ReactDOMRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render =\n  function (children) {\n    var root = this._internalRoot;\n    if (null === root) throw Error(formatProdErrorMessage(409));\n    var current = root.current,\n      lane = requestUpdateLane();\n    updateContainerImpl(current, lane, children, root, null, null);\n  };\nReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount =\n  function () {\n    var root = this._internalRoot;\n    if (null !== root) {\n      this._internalRoot = null;\n      var container = root.containerInfo;\n      0 === root.tag && flushPassiveEffects();\n      updateContainerImpl(root.current, 2, null, root, null, null);\n      flushSyncWork$1();\n      container[internalContainerInstanceKey] = null;\n    }\n  };\nfunction ReactDOMHydrationRoot(internalRoot) {\n  this._internalRoot = internalRoot;\n}\nReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {\n  if (target) {\n    var updatePriority = resolveUpdatePriority();\n    target = { blockedOn: null, target: target, priority: updatePriority };\n    for (\n      var i = 0;\n      i < queuedExplicitHydrationTargets.length &&\n      0 !== updatePriority &&\n      updatePriority < queuedExplicitHydrationTargets[i].priority;\n      i++\n    );\n    queuedExplicitHydrationTargets.splice(i, 0, target);\n    0 === i && attemptExplicitHydrationTarget(target);\n  }\n};\nvar isomorphicReactPackageVersion$jscomp$inline_1686 = React.version;\nif (\n  \"19.0.0\" !==\n  isomorphicReactPackageVersion$jscomp$inline_1686\n)\n  throw Error(\n    formatProdErrorMessage(\n      527,\n      isomorphicReactPackageVersion$jscomp$inline_1686,\n      \"19.0.0\"\n    )\n  );\nReactDOMSharedInternals.findDOMNode = function (componentOrElement) {\n  var fiber = componentOrElement._reactInternals;\n  if (void 0 === fiber) {\n    if (\"function\" === typeof componentOrElement.render)\n      throw Error(formatProdErrorMessage(188));\n    componentOrElement = Object.keys(componentOrElement).join(\",\");\n    throw Error(formatProdErrorMessage(268, componentOrElement));\n  }\n  componentOrElement = findCurrentFiberUsingSlowPath(fiber);\n  componentOrElement =\n    null !== componentOrElement\n      ? findCurrentHostFiberImpl(componentOrElement)\n      : null;\n  componentOrElement =\n    null === componentOrElement ? null : componentOrElement.stateNode;\n  return componentOrElement;\n};\nvar internals$jscomp$inline_2165 = {\n  bundleType: 0,\n  version: \"19.0.0\",\n  rendererPackageName: \"react-dom\",\n  currentDispatcherRef: ReactSharedInternals,\n  findFiberByHostInstance: getClosestInstanceFromNode,\n  reconcilerVersion: \"19.0.0\"\n};\nif (\"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {\n  var hook$jscomp$inline_2166 = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (\n    !hook$jscomp$inline_2166.isDisabled &&\n    hook$jscomp$inline_2166.supportsFiber\n  )\n    try {\n      (rendererID = hook$jscomp$inline_2166.inject(\n        internals$jscomp$inline_2165\n      )),\n        (injectedHook = hook$jscomp$inline_2166);\n    } catch (err) {}\n}\nexports.createRoot = function (container, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks));\n  options = createFiberRoot(\n    container,\n    1,\n    !1,\n    null,\n    null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    null\n  );\n  container[internalContainerInstanceKey] = options.current;\n  listenToAllSupportedEvents(\n    8 === container.nodeType ? container.parentNode : container\n  );\n  return new ReactDOMRoot(options);\n};\nexports.hydrateRoot = function (container, initialChildren, options) {\n  if (!isValidContainer(container)) throw Error(formatProdErrorMessage(299));\n  var isStrictMode = !1,\n    identifierPrefix = \"\",\n    onUncaughtError = defaultOnUncaughtError,\n    onCaughtError = defaultOnCaughtError,\n    onRecoverableError = defaultOnRecoverableError,\n    transitionCallbacks = null,\n    formState = null;\n  null !== options &&\n    void 0 !== options &&\n    (!0 === options.unstable_strictMode && (isStrictMode = !0),\n    void 0 !== options.identifierPrefix &&\n      (identifierPrefix = options.identifierPrefix),\n    void 0 !== options.onUncaughtError &&\n      (onUncaughtError = options.onUncaughtError),\n    void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError),\n    void 0 !== options.onRecoverableError &&\n      (onRecoverableError = options.onRecoverableError),\n    void 0 !== options.unstable_transitionCallbacks &&\n      (transitionCallbacks = options.unstable_transitionCallbacks),\n    void 0 !== options.formState && (formState = options.formState));\n  initialChildren = createFiberRoot(\n    container,\n    1,\n    !0,\n    initialChildren,\n    null != options ? options : null,\n    isStrictMode,\n    identifierPrefix,\n    onUncaughtError,\n    onCaughtError,\n    onRecoverableError,\n    transitionCallbacks,\n    formState\n  );\n  initialChildren.context = getContextForSubtree(null);\n  options = initialChildren.current;\n  isStrictMode = requestUpdateLane();\n  identifierPrefix = createUpdate(isStrictMode);\n  identifierPrefix.callback = null;\n  enqueueUpdate(options, identifierPrefix, isStrictMode);\n  initialChildren.current.lanes = isStrictMode;\n  markRootUpdated$1(initialChildren, isStrictMode);\n  ensureRootIsScheduled(initialChildren);\n  container[internalContainerInstanceKey] = initialChildren.current;\n  listenToAllSupportedEvents(container);\n  return new ReactDOMHydrationRoot(initialChildren);\n};\nexports.version = \"19.0.0\";\n","// hooks/useAlertSafe.js\r\nimport { useContext, useRef, useState, useEffect } from 'react';\r\nimport { AlertContext } from '../components/ui/AlertMessage/AlertContext';\r\n\r\n// Globally shared alert management\r\nconst globalAlertCache = {\r\n  messages: new Map(),\r\n  timeout: 3000, // Time to consider message as repeated\r\n  lastAlertTime: 0,\r\n  MIN_ALERT_INTERVAL: 500 // Minimum time between alerts\r\n};\r\n\r\n/**\r\n * Hook for using alerts with advanced protection against loops and duplicates\r\n * \r\n * @returns {Object} Safe alert methods\r\n */\r\nexport const useAlertSafe = () => {\r\n  // Try to get alert context\r\n  const context = useContext(AlertContext);\r\n  \r\n  // Refs for tracking initial render and alert state\r\n  const initialRenderRef = useRef(true);\r\n  const alertCountRef = useRef(0);\r\n  \r\n  // State to control alert behavior\r\n  const [enableAlerts, setEnableAlerts] = useState(false);\r\n  \r\n  // Enable alerts after initial render\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      initialRenderRef.current = false;\r\n      setEnableAlerts(true);\r\n    }, 1500); // Increased delay to ensure stability\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n  \r\n  // Advanced alert protection mechanism\r\n  const guardAlert = (type, message, options = {}) => {\r\n    // Prevent alerts during initial render\r\n    if (initialRenderRef.current) {\r\n      console.log('Alert skipped (initial render):', message);\r\n      return 'initial-render-skipped';\r\n    }\r\n    \r\n    // Disable alerts if not yet enabled\r\n    if (!enableAlerts) {\r\n      console.log('Alert skipped (not enabled):', message);\r\n      return 'not-enabled-yet';\r\n    }\r\n    \r\n    // Prevent too many alerts in quick succession\r\n    const now = Date.now();\r\n    if (now - globalAlertCache.lastAlertTime < globalAlertCache.MIN_ALERT_INTERVAL) {\r\n      console.log('Alert skipped (too frequent):', message);\r\n      return 'too-frequent';\r\n    }\r\n    \r\n    // Prevent duplicate messages\r\n    const key = `${type}:${message}`;\r\n    if (globalAlertCache.messages.has(key)) {\r\n      const lastTime = globalAlertCache.messages.get(key);\r\n      \r\n      // Skip if message is repeated within timeout\r\n      if (now - lastTime < globalAlertCache.timeout) {\r\n        console.log('Alert skipped (duplicate):', message);\r\n        return 'duplicate';\r\n      }\r\n    }\r\n    \r\n    // Limit total number of alerts\r\n    if (alertCountRef.current >= 5) {\r\n      console.log('Alert skipped (max limit reached):', message);\r\n      return 'max-limit';\r\n    }\r\n    \r\n    // Store message in cache\r\n    globalAlertCache.messages.set(key, now);\r\n    globalAlertCache.lastAlertTime = now;\r\n    alertCountRef.current++;\r\n    \r\n    // Clear old messages periodically\r\n    if (globalAlertCache.messages.size > 50) {\r\n      for (const [msgKey, timestamp] of globalAlertCache.messages.entries()) {\r\n        if (now - timestamp > globalAlertCache.timeout * 2) {\r\n          globalAlertCache.messages.delete(msgKey);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Attempt to show alert\r\n    if (context) {\r\n      try {\r\n        const alertResult = context[type](message, {\r\n          ...options,\r\n          autoClose: options.autoClose ?? true,\r\n          autoCloseTime: options.autoCloseTime ?? 5000,\r\n          onClose: () => {\r\n            // Decrement alert count when closed\r\n            alertCountRef.current = Math.max(0, alertCountRef.current - 1);\r\n            \r\n            // Call original onClose if provided\r\n            if (options.onClose) options.onClose();\r\n          }\r\n        });\r\n        \r\n        return alertResult;\r\n      } catch (error) {\r\n        console.error('Error showing alert:', error, message);\r\n        return 'error';\r\n      }\r\n    } else {\r\n      // Fallback for when context is not available\r\n      console.log(`🔔 Alert ${type} (simulated):`, message);\r\n      return 'simulated';\r\n    }\r\n  };\r\n  \r\n  // Expose safe alert methods\r\n  return {\r\n    success: (message, options) => guardAlert('success', message, options),\r\n    error: (message, options) => guardAlert('error', message, options),\r\n    warning: (message, options) => guardAlert('warning', message, options),\r\n    info: (message, options) => guardAlert('info', message, options),\r\n    \r\n    // Method to remove alert\r\n    remove: (id) => {\r\n      if (context?.removeAlert) {\r\n        context.removeAlert(id);\r\n      }\r\n    },\r\n    \r\n    // Debugging flags\r\n    _isInitialRender: initialRenderRef.current,\r\n    _areAlertsEnabled: enableAlerts,\r\n    _resetCache: () => {\r\n      globalAlertCache.messages.clear();\r\n      globalAlertCache.lastAlertTime = 0;\r\n      alertCountRef.current = 0;\r\n    }\r\n  };\r\n};\r\n\r\nexport default useAlertSafe;","import { validateFileUrls } from '../validation/validationService';\r\n\r\nconst API_BASE_URL = 'https://msging.net';\r\n\r\n/**\r\n * Cabeçalhos básicos para requisições à API\r\n * @param {string} authKey - Chave de autorização\r\n * @returns {Object} Cabeçalhos HTTP\r\n */\r\nconst getHeaders = (authKey) => ({\r\n  'Content-Type': 'application/json',\r\n  'Authorization': authKey\r\n});\r\n\r\n/**\r\n * Realiza upload dos arquivos para a API\r\n * @param {Array} cards - Lista de cards com URLs de arquivos\r\n * @param {string} authKey - Chave de autorização\r\n * @returns {Promise<Array>} Resultado do upload com fileHandles\r\n */\r\nexport const uploadFiles = async (cards, authKey) => {\r\n  // Validar URLs antes de começar\r\n  validateFileUrls(cards);\r\n  \r\n  const results = [];\r\n\r\n  // Processar uploads sequencialmente para evitar sobrecarga\r\n  for (let i = 0; i < cards.length; i++) {\r\n    const card = cards[i];\r\n    \r\n    // Gerar ID único para a requisição\r\n    const requestId = `template_${Date.now()}_${Math.floor(Math.random() * 1000)}`;\r\n    \r\n    // Preparar o corpo da requisição\r\n    const uploadRequestBody = {\r\n      id: requestId,\r\n      method: \"set\",\r\n      to: \"postmaster@wa.gw.msging.net\",\r\n      type: \"application/vnd.lime.media-link+json\",\r\n      uri: \"/message-templates-attachment\",\r\n      resource: {\r\n        uri: card.fileUrl\r\n      }\r\n    };\r\n    \r\n    try {\r\n      console.log(`Iniciando upload do arquivo ${i + 1}:`, card.fileUrl);\r\n      \r\n      const response = await fetch(`${API_BASE_URL}/commands`, {\r\n        method: 'POST',\r\n        headers: getHeaders(authKey),\r\n        body: JSON.stringify(uploadRequestBody)\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        console.error(`Erro na resposta HTTP para card ${i+1}: ${response.status} ${response.statusText}`);\r\n        throw new Error(`Falha na requisição: ${response.status} ${response.statusText}`);\r\n      }\r\n      \r\n      const responseData = await response.json();\r\n      console.log(`Resposta do upload do arquivo ${i + 1}:`, responseData);\r\n      \r\n      // Verificar explicitamente o status de falha\r\n      if (responseData.status === 'failure') {\r\n        // Extrair informações detalhadas do erro\r\n        const errorCode = responseData.reason?.code;\r\n        const errorDescription = responseData.reason?.description || 'Erro desconhecido';\r\n        \r\n        // Criar um erro personalizado com detalhes\r\n        const uploadError = new Error(`Falha no upload: ${errorDescription}`);\r\n        uploadError.code = errorCode;\r\n        uploadError.originalResponse = responseData;\r\n        \r\n        // Logar o erro detalhadamente\r\n        console.error(`Erro de upload para o card ${i + 1}:`, {\r\n          code: errorCode,\r\n          description: errorDescription,\r\n          fullResponse: responseData\r\n        });\r\n        \r\n        // Lançar o erro personalizado\r\n        throw uploadError;\r\n      }\r\n      \r\n      // Verificar se o status não é sucesso\r\n      if (responseData.status !== 'success') {\r\n        console.error(`Falha ao fazer upload do arquivo ${i + 1}: ${responseData.reason || 'Erro desconhecido'}`);\r\n        throw new Error(responseData.reason || 'Falha no upload do arquivo');\r\n      }\r\n      \r\n      // Extrair o fileHandle da resposta\r\n      const fileHandle = responseData.resource?.fileHandle;\r\n      \r\n      if (!fileHandle) {\r\n        console.error(`Não foi possível obter o fileHandle para o card ${i + 1}`);\r\n        throw new Error(`Não foi possível obter o fileHandle para o card ${i + 1}`);\r\n      }\r\n      \r\n      // Armazenar o resultado\r\n      results.push({\r\n        fileHandle: fileHandle,\r\n        status: 'success'\r\n      });\r\n      \r\n      console.log(`Upload do arquivo ${i + 1} concluído com sucesso. Handle: ${fileHandle}`);\r\n    } catch (error) {\r\n      console.error(`Erro no upload do card ${i+1}:`, error);\r\n      \r\n      // Adicionar informações detalhadas do erro\r\n      const errorDetails = {\r\n        message: error.message,\r\n        code: error.code,\r\n        cardIndex: i,\r\n        fileUrl: card.fileUrl,\r\n        originalResponse: error.originalResponse\r\n      };\r\n      \r\n      // Se for um erro conhecido da msging.net (código 100 de arquivo expirado)\r\n      if (error.code === 81 && error.message.includes('file handle that has expired')) {\r\n        // Adicionar informação específica de handle expirado\r\n        errorDetails.isExpiredHandle = true;\r\n      }\r\n      \r\n      // Adicionar ao array de resultados como falha\r\n      results.push({\r\n        status: 'failure',\r\n        error: errorDetails\r\n      });\r\n    }\r\n  }\r\n\r\n  return results;\r\n};","/**\r\n * Serviço de validação específico para respostas de criação de template\r\n */\r\nexport const TemplateCreationValidation = {\r\n    /**\r\n     * Códigos de erro específicos para criação de template\r\n     */\r\n    ERROR_CODES: {\r\n      FILE_HANDLE_EXPIRED: 81,\r\n      TEMPLATE_ALREADY_EXISTS: 81\r\n    },\r\n  \r\n    /**\r\n     * Mapeia códigos de erro para mensagens mais amigáveis\r\n     * @param {number} code - Código de erro\r\n     * @param {string} description - Descrição original do erro\r\n     * @returns {string} Mensagem de erro traduzida e formatada\r\n     */\r\n    translateErrorMessage: (code, description) => {\r\n      // Mapeamento de códigos de erro para mensagens mais claras\r\n      const errorMessages = {\r\n        // Handles expirados\r\n        '[81] file handle expired': 'O arquivo usado no template expirou. Faça o upload novamente.',\r\n        '[81] file handle media': 'Erro no arquivo de mídia. Verifique se o arquivo está correto e tente novamente.',\r\n        \r\n        // Template já existente\r\n        '[81] template already exists': 'Já existe um template com este nome em português. Escolha um nome diferente.',\r\n        \r\n        // Mensagem padrão\r\n        'default': 'Erro desconhecido na criação do template.'\r\n      };\r\n  \r\n      // Tentar encontrar uma mensagem de erro específica\r\n      for (const [key, message] of Object.entries(errorMessages)) {\r\n        if (description.toLowerCase().includes(key.replace(/^\\[.*\\]\\s*/, '').toLowerCase())) {\r\n          return message;\r\n        }\r\n      }\r\n  \r\n      // Retornar a descrição original ou uma mensagem genérica\r\n      return description || errorMessages.default;\r\n    },\r\n  \r\n    /**\r\n     * Valida a resposta da criação de template\r\n     * @param {Object} responseData - Resposta completa da API\r\n     * @throws {Error} Lança um erro com detalhes se a criação falhar\r\n     * @returns {Object|null} Retorna os detalhes do template se for bem-sucedido\r\n     */\r\n    validateTemplateCreation: (responseData) => {\r\n      // Verificar se a resposta existe\r\n      if (!responseData) {\r\n        throw new Error('Resposta da API não recebida');\r\n      }\r\n  \r\n      // Verificar status da resposta\r\n      if (responseData.status === 'success') {\r\n        // Criação bem-sucedida\r\n        return {\r\n          templateId: responseData.resource?.id,\r\n          status: 'success'\r\n        };\r\n      }\r\n  \r\n      // Se o status for failure, processar o erro\r\n      if (responseData.status === 'failure') {\r\n        const errorCode = responseData.reason?.code;\r\n        const errorDescription = responseData.reason?.description || 'Erro desconhecido';\r\n  \r\n        // Traduzir a mensagem de erro\r\n        const translatedMessage = TemplateCreationValidation.translateErrorMessage(\r\n          errorCode, \r\n          errorDescription\r\n        );\r\n  \r\n        // Criar erro detalhado\r\n        const detailedError = new Error(translatedMessage);\r\n        detailedError.code = errorCode;\r\n        detailedError.originalDescription = errorDescription;\r\n        detailedError.originalResponse = responseData;\r\n  \r\n        // Log adicional para diferentes tipos de erros\r\n        switch (errorCode) {\r\n          case TemplateCreationValidation.ERROR_CODES.FILE_HANDLE_EXPIRED:\r\n            console.warn('Template Creation - File Handle Expired:', {\r\n              code: errorCode,\r\n              description: errorDescription\r\n            });\r\n            break;\r\n  \r\n          case TemplateCreationValidation.ERROR_CODES.TEMPLATE_ALREADY_EXISTS:\r\n            console.warn('Template Creation - Template Already Exists:', {\r\n              code: errorCode,\r\n              description: errorDescription\r\n            });\r\n            break;\r\n  \r\n          default:\r\n            console.error('Unhandled Template Creation Error:', {\r\n              code: errorCode,\r\n              description: errorDescription\r\n            });\r\n        }\r\n  \r\n        // Lançar erro detalhado\r\n        throw detailedError;\r\n      }\r\n  \r\n      // Caso improvável, mas para garantir\r\n      throw new Error('Resposta da API em formato inesperado');\r\n    },\r\n  \r\n    /**\r\n     * Verifica se um erro é relacionado a handle de arquivo expirado\r\n     * @param {Error} error - Erro a ser verificado\r\n     * @returns {boolean} Se o erro está relacionado a handle expirado\r\n     */\r\n    isFileHandleExpiredError: (error) => {\r\n      return error.code === TemplateCreationValidation.ERROR_CODES.FILE_HANDLE_EXPIRED && \r\n             error.originalDescription.toLowerCase().includes('file handle expired');\r\n    },\r\n  \r\n    /**\r\n     * Verifica se um erro é relacionado a template já existente\r\n     * @param {Error} error - Erro a ser verificado\r\n     * @returns {boolean} Se o erro está relacionado a template duplicado\r\n     */\r\n    isTemplateAlreadyExistsError: (error) => {\r\n      return error.code === TemplateCreationValidation.ERROR_CODES.TEMPLATE_ALREADY_EXISTS && \r\n             error.originalDescription.toLowerCase().includes('already exists');\r\n    }\r\n  };\r\n  \r\n  // Exportação padrão para compatibilidade\r\n  export default TemplateCreationValidation;","import TemplateCreationValidation from '../validation/validationCreateTemplate';\r\n\r\nconst API_BASE_URL = 'https://msging.net';\r\n\r\n/**\r\n * Cabeçalhos básicos para requisições à API\r\n * @param {string} authKey - Chave de autorização\r\n * @returns {Object} Cabeçalhos HTTP\r\n */\r\nconst getHeaders = (authKey) => ({\r\n  'Content-Type': 'application/json',\r\n  'Authorization': authKey\r\n});\r\n\r\n/**\r\n * Cria o template na API\r\n * @param {string} templateName - Nome do template\r\n * @param {string} language - Código de idioma\r\n * @param {string} bodyText - Texto do corpo da mensagem\r\n * @param {Array} cards - Lista de cards do carrossel\r\n * @param {string} authKey - Chave de autorização\r\n * @returns {Promise<Object>} JSONs do template criado\r\n */\r\nexport const createTemplate = async (templateName, language, bodyText, cards, authKey) => {\r\n  // Geração de ID único para o template\r\n  const templateId = `template_${templateName.replace(/\\s+/g, '_').toLowerCase()}_${Date.now()}`;\r\n  \r\n  // Criação do JSON do template\r\n  const templateJson = {\r\n    id: templateId,\r\n    method: \"set\",\r\n    type: \"application/json\",\r\n    to: \"postmaster@wa.gw.msging.net\",\r\n    uri: \"/message-templates\",\r\n    resource: {\r\n      name: templateName,\r\n      language: language,\r\n      category: \"MARKETING\",\r\n      components: [\r\n        { type: \"BODY\", text: bodyText },\r\n        {\r\n          type: \"CAROUSEL\",\r\n          cards: cards.map((card) => ({\r\n            components: [\r\n              {\r\n                type: \"HEADER\",\r\n                format: card.fileType.toUpperCase(),\r\n                example: {\r\n                  header_handle: [card.fileHandle]\r\n                }\r\n              },\r\n              {\r\n                type: \"BODY\",\r\n                text: card.bodyText\r\n              },\r\n              {\r\n                type: \"BUTTONS\",\r\n                buttons: card.buttons.map(button => {\r\n                  if (button.type === 'URL') {\r\n                    return {\r\n                      type: button.type,\r\n                      text: button.text,\r\n                      url: button.url\r\n                    };\r\n                  } else if (button.type === 'PHONE_NUMBER') {\r\n                    return {\r\n                      type: button.type,\r\n                      text: button.text,\r\n                      phone_number: button.phoneNumber\r\n                    };\r\n                  } else {\r\n                    return {\r\n                      type: button.type,\r\n                      text: button.text\r\n                    };\r\n                  }\r\n                })\r\n              }\r\n            ]\r\n          }))\r\n        }\r\n      ]\r\n    }\r\n  };\r\n  \r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/commands`, {\r\n      method: 'POST',\r\n      headers: getHeaders(authKey),\r\n      body: JSON.stringify(templateJson)\r\n    });\r\n    \r\n    // Parse the response\r\n    const responseData = await response.json();\r\n    \r\n    // Log the full response for debugging\r\n    console.log('Template Creation Full Response:', JSON.stringify(responseData, null, 2));\r\n    \r\n    // Validate template creation response\r\n    TemplateCreationValidation.validateTemplateCreation(responseData);\r\n    \r\n    // Successful response\r\n    if (responseData.resource && responseData.resource.id) {\r\n      templateJson.resource.id = responseData.resource.id;\r\n    }\r\n    \r\n    // Gerar JSON para envio do template\r\n    const sendTemplateJson = {\r\n      id: `send_${templateName.replace(/\\s+/g, '_').toLowerCase()}_${Date.now()}`,\r\n      to: \"numero@wa.gw.msging.net\", \r\n      type: \"application/json\",\r\n      content: {\r\n        type: \"template\",\r\n        template: {\r\n          name: templateName,\r\n          language: {\r\n            code: language,\r\n            policy: \"deterministic\"\r\n          },\r\n          components: [\r\n            {\r\n              type: \"CAROUSEL\",\r\n              cards: cards.map((card, index) => ({\r\n                card_index: index,\r\n                components: [\r\n                  {\r\n                    type: \"HEADER\",\r\n                    parameters: [\r\n                      {\r\n                        type: card.fileType.toUpperCase(),\r\n                        [card.fileType.toLowerCase()]: {\r\n                          link: card.fileUrl\r\n                        }\r\n                      }\r\n                    ]\r\n                  },\r\n                  ...card.buttons.map((button, btnIndex) => {\r\n                    if (button.type === 'URL') {\r\n                      return {\r\n                        type: \"BUTTON\",\r\n                        sub_type: button.type,\r\n                        index: btnIndex\r\n                      };\r\n                    } else if (button.type === 'QUICK_REPLY') {\r\n                      return {\r\n                        type: \"BUTTON\",\r\n                        sub_type: button.type,\r\n                        index: btnIndex,\r\n                        parameters: [\r\n                          {\r\n                            type: \"PAYLOAD\",\r\n                            payload: button.payload || button.text\r\n                          }\r\n                        ]\r\n                      };\r\n                    } else {\r\n                      return {\r\n                        type: \"BUTTON\",\r\n                        sub_type: button.type,\r\n                        index: btnIndex\r\n                      };\r\n                    }\r\n                  })\r\n                ]\r\n              }))\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    };\r\n\r\n    // Gerar JSON para uso no Builder da Blip como conteúdo dinâmico\r\n    const builderTemplateJson = {\r\n      type: \"template\",\r\n      template: {\r\n        name: templateName,\r\n        language: {\r\n          code: language,\r\n          policy: \"deterministic\"\r\n        },\r\n        components: [\r\n          {\r\n            type: \"CAROUSEL\",\r\n            cards: cards.map((card, index) => ({\r\n              card_index: index,\r\n              components: [\r\n                {\r\n                  type: \"HEADER\",\r\n                  parameters: [\r\n                    {\r\n                      type: card.fileType.toUpperCase(),\r\n                      [card.fileType.toLowerCase()]: {\r\n                        link: card.fileUrl\r\n                      }\r\n                    }\r\n                  ]\r\n                },\r\n                ...card.buttons.map((button, btnIndex) => {\r\n                  if (button.type === 'URL') {\r\n                    return {\r\n                      type: \"BUTTON\",\r\n                      sub_type: button.type,\r\n                      index: btnIndex\r\n                    };\r\n                  } else if (button.type === 'QUICK_REPLY') {\r\n                    return {\r\n                      type: \"BUTTON\",\r\n                      sub_type: button.type,\r\n                      index: btnIndex,\r\n                      parameters: [\r\n                        {\r\n                          type: \"PAYLOAD\",\r\n                          payload: button.payload || button.text\r\n                        }\r\n                      ]\r\n                    };\r\n                  } else {\r\n                    return {\r\n                      type: \"BUTTON\",\r\n                      sub_type: button.type,\r\n                      index: btnIndex\r\n                    };\r\n                  }\r\n                })\r\n              ]\r\n            }))\r\n          }\r\n        ]\r\n      }\r\n    };\r\n\r\n    return { templateJson, sendTemplateJson, builderTemplateJson };\r\n  } catch (error) {\r\n    // Enhanced error logging\r\n    console.error('Detailed Template Creation Error:', {\r\n      message: error.message,\r\n      code: error.code,\r\n      originalResponse: error.originalResponse,\r\n      fullError: error\r\n    });\r\n    \r\n    // Rethrow the error with a more informative message\r\n    throw new Error(`Falha ao criar o template: ${error.message}`);\r\n  }\r\n};","const API_BASE_URL = 'https://msging.net';\r\n\r\n/**\r\n * Cabeçalhos básicos para requisições à API\r\n * @param {string} authKey - Chave de autorização\r\n * @returns {Object} Cabeçalhos HTTP\r\n */\r\nconst getHeaders = (authKey) => ({\r\n  'Content-Type': 'application/json',\r\n  'Authorization': authKey\r\n});\r\n\r\n/**\r\n * Envia o template para um número de telefone\r\n * @param {string} phoneNumber - Número de telefone formatado\r\n * @param {Object} sendTemplate - JSON de envio do template\r\n * @param {string} authKey - Chave de autorização\r\n * @returns {Promise<Object>} Resultado do envio\r\n */\r\nexport const sendTemplateMessage = async (phoneNumber, sendTemplate, authKey) => {\r\n  // Preparar o JSON de envio\r\n  const sendJson = {\r\n    ...sendTemplate,\r\n    to: `${phoneNumber}@wa.gw.msging.net`\r\n  };\r\n  \r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/messages`, {\r\n      method: 'POST',\r\n      headers: getHeaders(authKey),\r\n      body: JSON.stringify(sendJson)\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(`Erro ao enviar template: ${errorText}`);\r\n    }\r\n    \r\n    return { \r\n      success: true, \r\n      message: `Template enviado com sucesso para ${phoneNumber}` \r\n    };\r\n  } catch (error) {\r\n    console.error('Erro ao enviar template:', error);\r\n    throw error;\r\n  }\r\n};","// services/storage/localStorageService.js - Versão corrigida\r\n\r\n/**\r\n * Salva um rascunho no localStorage com verificações de segurança\r\n * Versão melhorada com melhor preservação de fileHandles e tratamento de erros\r\n * @param {Object} state Estado a ser salvo\r\n * @returns {boolean} Indica se o salvamento foi bem-sucedido\r\n */\r\nexport const saveDraft = (state) => {\r\n  try {\r\n    // Validar se o estado não está vazio\r\n    if (!state || Object.keys(state).length === 0) {\r\n      console.warn('Tentativa de salvar rascunho vazio');\r\n      return false;\r\n    }\r\n\r\n    // Garantir que os fileHandles sejam preservados para cada card\r\n    const cardsWithFileHandles = state.cards?.map(card => {\r\n      // Verificar se há um fileHandle válido\r\n      const hasValidFileHandle = card.fileHandle && typeof card.fileHandle === 'string' && card.fileHandle.length > 0;\r\n      \r\n      // Preserva o fileHandle e adiciona flag para pular upload\r\n      return {\r\n        ...card,\r\n        fileHandle: hasValidFileHandle ? card.fileHandle : '', // Garante que fileHandle nunca seja undefined\r\n        fileUploadSkippable: hasValidFileHandle && card.fileUrl ? true : false // Flag para saber se podemos pular o upload\r\n      };\r\n    }) || [];\r\n\r\n    // Adicionar timestamp de criação e preservar fileHandles\r\n    const draftWithTimestamp = {\r\n      ...state,\r\n      cards: cardsWithFileHandles,\r\n      createdAt: state.createdAt || Date.now(),\r\n      lastUpdated: Date.now()\r\n    };\r\n\r\n    console.log('Salvando estado do rascunho:', { \r\n      templateName: draftWithTimestamp.templateName,\r\n      cards: `${draftWithTimestamp.cards.length} cards`,\r\n      authKey: draftWithTimestamp.authKey ? '(definido)' : '(não definido)',\r\n      lastUpdated: new Date(draftWithTimestamp.lastUpdated).toLocaleString()\r\n    });\r\n\r\n    // Certificar-se de que o objeto é serializável (sem referências circulares)\r\n    try {\r\n      const draftString = JSON.stringify(draftWithTimestamp);\r\n      \r\n      // Verificar limite de localStorage\r\n      try {\r\n        localStorage.setItem('whatsapp_template_draft', draftString);\r\n        localStorage.setItem('draft_last_saved_time', new Date().toISOString());\r\n        return true;\r\n      } catch (storageError) {\r\n        // Tratar erros de armazenamento\r\n        if (storageError instanceof DOMException && \r\n            (storageError.name === 'QuotaExceededError' || \r\n             storageError.name === 'NS_ERROR_DOM_QUOTA_REACHED')) {\r\n          console.error('Limite de armazenamento local excedido');\r\n          \r\n          // Limpar rascunhos antigos para liberar espaço\r\n          clearOldDrafts();\r\n          \r\n          // Tentar salvar novamente\r\n          try {\r\n            localStorage.setItem('whatsapp_template_draft', draftString);\r\n            localStorage.setItem('draft_last_saved_time', new Date().toISOString());\r\n            return true;\r\n          } catch {\r\n            console.error('Falha ao salvar rascunho mesmo após limpar rascunhos antigos');\r\n            return false;\r\n          }\r\n        }\r\n        console.error('Erro de armazenamento:', storageError);\r\n        return false;\r\n      }\r\n    } catch (jsonError) {\r\n      console.error('Erro ao serializar o rascunho:', jsonError);\r\n      \r\n      // Tentar salvar uma versão simplificada do rascunho\r\n      try {\r\n        const simplifiedDraft = {\r\n          templateName: state.templateName || '',\r\n          language: state.language || 'pt_BR',\r\n          bodyText: state.bodyText || '',\r\n          cards: cardsWithFileHandles.map(card => ({\r\n            fileUrl: card.fileUrl || '',\r\n            fileType: card.fileType || 'image',\r\n            fileHandle: card.fileHandle || '',\r\n            bodyText: card.bodyText || '',\r\n            buttons: (card.buttons || []).map(btn => ({\r\n              type: btn.type || 'QUICK_REPLY',\r\n              text: btn.text || '',\r\n              url: btn.url || '',\r\n              phoneNumber: btn.phoneNumber || '',\r\n              payload: btn.payload || ''\r\n            }))\r\n          })),\r\n          authKey: state.authKey || '',\r\n          createdAt: state.createdAt || Date.now(),\r\n          lastUpdated: Date.now()\r\n        };\r\n        \r\n        const simplifiedString = JSON.stringify(simplifiedDraft);\r\n        localStorage.setItem('whatsapp_template_draft', simplifiedString);\r\n        localStorage.setItem('draft_last_saved_time', new Date().toISOString());\r\n        return true;\r\n      } catch (fallbackError) {\r\n        console.error('Erro ao salvar versão simplificada do rascunho:', fallbackError);\r\n        return false;\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Erro ao salvar rascunho:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Carrega o rascunho do localStorage com verificações adicionais\r\n * Versão melhorada para validar corretamente fileHandles e tratar dados incompletos\r\n */\r\nexport const loadDraft = () => {\r\n  try {\r\n    const draftString = localStorage.getItem('whatsapp_template_draft');\r\n    \r\n    if (!draftString) {\r\n      return null;\r\n    }\r\n\r\n    // Parse do rascunho\r\n    const draft = JSON.parse(draftString);\r\n\r\n    // Verificar idade do rascunho\r\n    const MAX_DRAFT_AGE = 30 * 24 * 60 * 60 * 1000; // 30 dias\r\n    if (draft.createdAt && (Date.now() - draft.createdAt > MAX_DRAFT_AGE)) {\r\n      console.warn('Rascunho expirado. Removendo...');\r\n      localStorage.removeItem('whatsapp_template_draft');\r\n      return null;\r\n    }\r\n\r\n    // Processar os cards para garantir que fileHandles sejam mantidos\r\n    const processedCards = draft.cards?.map(card => {\r\n      // Verificar se há um fileHandle válido\r\n      const hasValidFileHandle = card.fileHandle && typeof card.fileHandle === 'string' && card.fileHandle.length > 0;\r\n      \r\n      return {\r\n        fileUrl: card.fileUrl || '',\r\n        fileType: card.fileType || 'image',\r\n        fileHandle: hasValidFileHandle ? card.fileHandle : '',\r\n        bodyText: card.bodyText || '',\r\n        buttons: card.buttons || [{ type: 'QUICK_REPLY', text: '', payload: '' }],\r\n        fileUploadSkippable: hasValidFileHandle && card.fileUrl ? true : false\r\n      };\r\n    });\r\n\r\n    // Filtrar e limpar campos indesejados\r\n    const cleanDraft = {\r\n      templateName: draft.templateName || '',\r\n      language: draft.language || 'pt_BR',\r\n      bodyText: draft.bodyText || '',\r\n      cards: processedCards && processedCards.length >= 2 ? processedCards : null,\r\n      authKey: draft.authKey || '',\r\n      lastSavedTime: draft.lastSavedTime || draft.lastUpdated || new Date().toISOString()\r\n    };\r\n\r\n    console.log('Rascunho carregado:', { \r\n      templateName: cleanDraft.templateName,\r\n      language: cleanDraft.language,\r\n      cards: cleanDraft.cards ? `${cleanDraft.cards.length} cards` : 'nenhum',\r\n      bodyText: cleanDraft.bodyText ? 'presente' : 'não definido',\r\n      authKey: cleanDraft.authKey ? 'presente' : 'não definido',\r\n      lastSavedTime: cleanDraft.lastSavedTime\r\n    });\r\n\r\n    return cleanDraft;\r\n  } catch (error) {\r\n    console.error('Erro ao carregar rascunho:', error);\r\n    // Limpar rascunho inválido\r\n    localStorage.removeItem('whatsapp_template_draft');\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Limpa rascunhos antigos do localStorage\r\n */\r\nconst clearOldDrafts = () => {\r\n  try {\r\n    // Remove todos os rascunhos relacionados ao template\r\n    localStorage.removeItem('whatsapp_template_draft');\r\n    localStorage.removeItem('draft_last_saved_time');\r\n    localStorage.removeItem('last_draft_identifier');\r\n  } catch (error) {\r\n    console.error('Erro ao limpar rascunhos:', error);\r\n  }\r\n};\r\n\r\n/**\r\n * Limpa completamente o rascunho atual\r\n */\r\nexport const clearDraft = () => {\r\n  try {\r\n    clearOldDrafts();\r\n    console.log('Rascunho limpo com sucesso');\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Erro ao limpar rascunho:', error);\r\n    return false;\r\n  }\r\n};","// utils/errorHandler.js\r\n\r\n/**\r\n * Catálogo centralizado de erros para a aplicação de Carrossel WhatsApp\r\n */\r\nexport const ERROR_CATALOG = {\r\n  FILE_UPLOAD: {\r\n    FAILED: {\r\n      code: 'FILE_UPLOAD_001',\r\n      level: 'error',\r\n      message: 'Falha no upload do arquivo. Por favor, tente novamente.',\r\n      recoverable: true\r\n    },\r\n    INVALID_TYPE: {\r\n      code: 'FILE_UPLOAD_002',\r\n      level: 'warning',\r\n      message: 'Tipo de arquivo não suportado. Verifique os formatos permitidos.',\r\n      recoverable: true\r\n    },\r\n    SIZE_LIMIT: {\r\n      code: 'FILE_UPLOAD_003',\r\n      level: 'warning',\r\n      message: 'Tamanho do arquivo excede o limite máximo de 50MB.',\r\n      recoverable: true\r\n    }\r\n  },\r\n  API: {\r\n    UNAUTHORIZED: {\r\n      code: 'API_001',\r\n      level: 'critical',\r\n      message: 'Chave de autorização inválida. Verifique suas credenciais.',\r\n      recoverable: true\r\n    },\r\n    RATE_LIMIT: {\r\n      code: 'API_002',\r\n      level: 'warning',\r\n      message: 'Limite de requisições excedido. Tente novamente mais tarde.',\r\n      recoverable: false\r\n    }\r\n  },\r\n  TEMPLATE: {\r\n    CREATION_LIMIT: {\r\n      code: 'TEMPLATE_001',\r\n      level: 'warning',\r\n      message: 'Limite de templates excedido. Entre em contato com o suporte.',\r\n      recoverable: false\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Classe personalizada de erro para a aplicação\r\n */\r\nexport class WhatsAppTemplateError extends Error {\r\n  constructor(errorDetails) {\r\n    super(errorDetails.message);\r\n    this.name = 'WhatsAppTemplateError';\r\n    this.details = errorDetails;\r\n  }\r\n}\r\n\r\n/**\r\n * Manipulador de erros centralizado\r\n * @param {Error|WhatsAppTemplateError} error - Erro a ser processado\r\n * @returns {Object} Objeto com detalhes do erro para exibição\r\n */\r\nexport const handleApiError = (error) => {\r\n  console.error('Erro capturado:', error);\r\n\r\n  // Erros personalizados da aplicação\r\n  if (error instanceof WhatsAppTemplateError) {\r\n    return {\r\n      type: error.details.level,\r\n      code: error.details.code,\r\n      message: error.details.message,\r\n      recoverable: error.details.recoverable\r\n    };\r\n  }\r\n\r\n  // Erros de resposta do servidor\r\n  if (error.response) {\r\n    const status = error.response.status;\r\n    switch (status) {\r\n      case 401:\r\n        return handleApiError(\r\n          new WhatsAppTemplateError(ERROR_CATALOG.API.UNAUTHORIZED)\r\n        );\r\n      case 429:\r\n        return handleApiError(\r\n          new WhatsAppTemplateError(ERROR_CATALOG.API.RATE_LIMIT)\r\n        );\r\n      default:\r\n        return {\r\n          type: 'error',\r\n          message: `Erro ${status}: ${error.response.data.message || 'Erro desconhecido'}`,\r\n          recoverable: false\r\n        };\r\n    }\r\n  }\r\n\r\n  // Erros de conexão\r\n  if (error.request) {\r\n    return {\r\n      type: 'error',\r\n      message: 'Erro de conexão com o servidor. Verifique sua conexão com a internet.',\r\n      recoverable: true\r\n    };\r\n  }\r\n\r\n  // Outros erros\r\n  return {\r\n    type: 'error',\r\n    message: error.message || 'Ocorreu um erro inesperado. Tente novamente.',\r\n    recoverable: false\r\n  };\r\n};\r\n\r\n/**\r\n * Função para lançar erros personalizados\r\n * @param {string} errorKey - Chave do erro no catálogo\r\n * @throws {WhatsAppTemplateError}\r\n */\r\nexport const throwTemplateError = (errorKey) => {\r\n  const [category, type] = errorKey.split('.');\r\n  const errorDetails = ERROR_CATALOG[category][type];\r\n  \r\n  if (!errorDetails) {\r\n    throw new Error('Erro não encontrado no catálogo');\r\n  }\r\n\r\n  throw new WhatsAppTemplateError(errorDetails);\r\n};","// hooks/useWhatsAppTemplate.js\r\nimport { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { useAlertSafe } from './useAlertSafe';\r\nimport { validateTemplate, validatePhoneNumber } from '../services/validation/validationService';\r\nimport { uploadFiles, createTemplate, sendTemplateMessage } from '../services/api/apiService';\r\nimport { saveDraft, loadDraft, clearDraft } from '../services/storage/localStorageService';\r\nimport { handleApiError } from '../utils/errorHandler';\r\n\r\nexport const useWhatsAppTemplate = () => {\r\n  // Alert hook\r\n  const alert = useAlertSafe();\r\n  \r\n  // Refs para controle\r\n  const draftLoadedRef = useRef(false);\r\n  const autoSaveTimerRef = useRef(null);\r\n  \r\n  // Estados\r\n  const [step, setStep] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n  const [unsavedChanges, setUnsavedChanges] = useState(false);\r\n  const [lastSavedTime, setLastSavedTime] = useState(null);\r\n  \r\n  // Estados do template\r\n  const [authKey, setAuthKey] = useState('');\r\n  const [templateName, setTemplateName] = useState('');\r\n  const [language, setLanguage] = useState('pt_BR');\r\n  const [bodyText, setBodyText] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [hasTriedToAdvance, setHasTriedToAdvance] = useState(false);\r\n  const [hasInteracted, setHasInteracted] = useState(false);\r\n\r\n  // Estados dos cards\r\n  const [numCards, setNumCards] = useState(2);\r\n  const [cards, setCards] = useState([\r\n    createEmptyCard(),\r\n    createEmptyCard()\r\n  ]);\r\n  \r\n  // Estados de resultados\r\n  const [uploadResults, setUploadResults] = useState([]);\r\n  const [finalJson, setFinalJson] = useState({});\r\n\r\n  // Função para criar um card vazio\r\n  function createEmptyCard() {\r\n    return {\r\n      fileUrl: '',\r\n      fileType: 'image',\r\n      fileHandle: '',\r\n      bodyText: '',\r\n      buttons: [{ type: 'QUICK_REPLY', text: '', payload: '' }]\r\n    };\r\n  }\r\n\r\n  // Carregar rascunho apenas uma vez na inicialização\r\n  useEffect(() => {\r\n    // Evitar carregamentos múltiplos\r\n    if (draftLoadedRef.current) return;\r\n    \r\n    const loadSavedData = () => {\r\n      try {\r\n        const savedDraft = loadDraft();\r\n        if (!savedDraft) return;\r\n        \r\n        // Aplicar dados salvos\r\n        if (savedDraft.templateName) setTemplateName(savedDraft.templateName);\r\n        if (savedDraft.language) setLanguage(savedDraft.language);\r\n        if (savedDraft.bodyText) setBodyText(savedDraft.bodyText);\r\n        if (savedDraft.authKey) setAuthKey(savedDraft.authKey);\r\n        \r\n        // Aplicar cards salvos se existirem e forem válidos\r\n        if (savedDraft.cards && savedDraft.cards.length >= 2) {\r\n          // Garantir que os fileHandles estejam preservados\r\n          const processedCards = savedDraft.cards.map(card => ({\r\n            ...card,\r\n            fileHandle: card.fileHandle || '',  // Garantir que fileHandle nunca seja undefined\r\n            buttons: card.buttons || [{ type: 'QUICK_REPLY', text: '', payload: '' }]\r\n          }));\r\n          \r\n          setCards(processedCards);\r\n          setNumCards(processedCards.length);\r\n          \r\n          console.log('Cards carregados do rascunho:', processedCards.length);\r\n          console.log('Cards com fileHandles:', processedCards.filter(c => c.fileHandle).length);\r\n        }\r\n        \r\n        // Definir último salvamento\r\n        if (savedDraft.lastSavedTime) {\r\n          const savedTime = typeof savedDraft.lastSavedTime === 'string' \r\n            ? new Date(savedDraft.lastSavedTime)\r\n            : new Date(savedDraft.lastSavedTime);\r\n            \r\n          setLastSavedTime(savedTime);\r\n        }\r\n        \r\n        // Mostrar confirmação ao usuário\r\n        setTimeout(() => {\r\n          if (alert && typeof alert.info === 'function') {\r\n            alert.info('Rascunho anterior carregado com sucesso!', {\r\n              position: 'top-right',\r\n              autoCloseTime: 3000\r\n            });\r\n          }\r\n        }, 1000);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar dados salvos:', error);\r\n      }\r\n    };\r\n    \r\n    // Usar setTimeout para garantir que execute após a renderização inicial\r\n    setTimeout(loadSavedData, 0);\r\n    draftLoadedRef.current = true;\r\n  }, [alert]);\r\n\r\n  // Salvar o estado atual no localStorage (apenas quando chamado explicitamente)\r\n  const saveCurrentState = useCallback(() => {\r\n    // Criar objeto com estado atual\r\n    const state = {\r\n      templateName,\r\n      language,\r\n      bodyText,\r\n      cards,\r\n      authKey,\r\n      numCards,\r\n      step // Salvar o passo atual\r\n    };\r\n    \r\n    // Chamar saveDraft e obter resultado\r\n    const saveSuccess = saveDraft(state);\r\n    \r\n    if (saveSuccess) {\r\n      // Atualizar estado de UI\r\n      const currentTime = new Date();\r\n      setLastSavedTime(currentTime);\r\n      setUnsavedChanges(false);\r\n      \r\n      console.log('Rascunho salvo com sucesso em', currentTime.toLocaleString());\r\n      return true;\r\n    }\r\n    \r\n    console.error('Falha ao salvar rascunho');\r\n    return false;\r\n  }, [templateName, language, bodyText, cards, authKey, numCards, step]);\r\n\r\n  // Monitorar mudança de step para garantir que os fileHandles sejam preservados\r\n  useEffect(() => {\r\n    if (step === 2 && cards.some(card => card.fileHandle)) {\r\n      // Salvar o estado quando avançar para o step 2 para garantir que os fileHandles sejam preservados\r\n      saveCurrentState();\r\n      console.log('Estado salvo ao avançar para step 2, fileHandles preservados');\r\n    }\r\n  }, [step, cards, saveCurrentState]);\r\n\r\n  // Função para exibir erros de validação\r\n  const showValidationErrors = useCallback((errorMessages) => {\r\n    if (!errorMessages || errorMessages.length === 0) return;\r\n    \r\n    // Usar setTimeout para evitar alertas durante a renderização\r\n    setTimeout(() => {\r\n      if (alert && typeof alert.error === 'function') {\r\n        alert.error(`Problemas de validação encontrados:\\n${errorMessages.join('\\n')}`, {\r\n          position: 'top-center',\r\n          autoCloseTime: 7000\r\n        });\r\n      }\r\n    }, 0);\r\n  }, [alert]);\r\n  \r\n  // Validação do primeiro passo\r\n  const validateStepOne = useCallback((triggerAlerts = false) => {\r\n    // Não validar automaticamente se o usuário ainda não tentou avançar\r\n    if (!hasTriedToAdvance && !triggerAlerts) {\r\n      return true;\r\n    }\r\n  \r\n    const errors = {};\r\n    const errorMessages = [];\r\n  \r\n    // Validar a chave de autorização\r\n    if (!authKey) {\r\n      errors.authKey = 'A chave de autorização (Router Key) é obrigatória';\r\n      errorMessages.push('Chave de autorização (Router Key) é obrigatória');\r\n    }\r\n  \r\n    // Validar URLs dos arquivos para cada card\r\n    cards.slice(0, numCards).forEach((card, index) => {\r\n      if (!card.fileUrl) {\r\n        errors[`card_${index}_fileUrl`] = `URL do arquivo não informada para o card ${index + 1}`;\r\n        errorMessages.push(`Card ${index + 1}: URL do arquivo não informada`);\r\n      }\r\n    });\r\n  \r\n    // Atualizar erros de validação no estado\r\n    setValidationErrors(errors);\r\n  \r\n    // Disparar alertas apenas se solicitado\r\n    if (triggerAlerts && errorMessages.length > 0) {\r\n      showValidationErrors(errorMessages);\r\n    }\r\n  \r\n    return errorMessages.length === 0;\r\n  }, [authKey, cards, numCards, hasTriedToAdvance, showValidationErrors]);\r\n  \r\n  // Validação do segundo passo\r\n  const validateStepTwo = useCallback(() => {\r\n    const errors = {};\r\n    const errorMessages = [];\r\n    \r\n    // Validar nome do template\r\n    if (!templateName) {\r\n      errors.templateName = 'Nome do template é obrigatório';\r\n      errorMessages.push('Nome do template é obrigatório');\r\n    } else if (templateName.length < 3) {\r\n      errors.templateName = 'Nome do template deve ter pelo menos 3 caracteres';\r\n      errorMessages.push('Nome do template deve ter pelo menos 3 caracteres');\r\n    }\r\n    \r\n    // Validar texto do corpo\r\n    if (!bodyText) {\r\n      errors.bodyText = 'Texto do corpo da mensagem é obrigatório';\r\n      errorMessages.push('Texto do corpo da mensagem é obrigatório');\r\n    } else if (bodyText.length > 1024) {\r\n      errors.bodyText = `Texto do corpo excede o limite de 1024 caracteres. Atual: ${bodyText.length}`;\r\n      errorMessages.push(`Texto do corpo excede o limite de 1024 caracteres (${bodyText.length})`);\r\n    }\r\n    \r\n    // Validar cards\r\n    cards.slice(0, numCards).forEach((card, index) => {\r\n      // Validar texto do card\r\n      if (!card.bodyText) {\r\n        errors[`card_${index}_bodyText`] = `Texto do card ${index + 1} é obrigatório`;\r\n        errorMessages.push(`Card ${index + 1}: texto é obrigatório`);\r\n      } else if (card.bodyText.length > 160) {\r\n        errors[`card_${index}_bodyText`] = `Texto do card ${index + 1} excede o limite de 160 caracteres`;\r\n        errorMessages.push(`Card ${index + 1}: texto excede limite de 160 caracteres`);\r\n      }\r\n      \r\n      // Validar botões\r\n      if (!card.buttons || card.buttons.length === 0) {\r\n        errors[`card_${index}_buttons`] = `Adicione pelo menos um botão para o card ${index + 1}`;\r\n        errorMessages.push(`Card ${index + 1}: adicione pelo menos um botão`);\r\n      } else {\r\n        card.buttons.forEach((button, btnIndex) => {\r\n          // Validar texto do botão\r\n          if (!button.text) {\r\n            errors[`card_${index}_button_${btnIndex}_text`] = `Texto do botão ${btnIndex + 1} no card ${index + 1} é obrigatório`;\r\n            errorMessages.push(`Card ${index + 1}, Botão ${btnIndex + 1}: texto é obrigatório`);\r\n          }\r\n          \r\n          // Validar URL do botão\r\n          if (button.type === 'URL' && !button.url) {\r\n            errors[`card_${index}_button_${btnIndex}_url`] = `URL do botão ${btnIndex + 1} no card ${index + 1} é obrigatória`;\r\n            errorMessages.push(`Card ${index + 1}, Botão ${btnIndex + 1}: URL é obrigatória`);\r\n          }\r\n          \r\n          // Validar número de telefone do botão\r\n          if (button.type === 'PHONE_NUMBER' && !button.phoneNumber) {\r\n            errors[`card_${index}_button_${btnIndex}_phoneNumber`] = `Número de telefone do botão ${btnIndex + 1} no card ${index + 1} é obrigatório`;\r\n            errorMessages.push(`Card ${index + 1}, Botão ${btnIndex + 1}: número de telefone é obrigatório`);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    // Atualizar erros de validação\r\n    setValidationErrors(errors);\r\n    \r\n    return errorMessages.length > 0 ? errorMessages : [];\r\n  }, [templateName, bodyText, cards, numCards]);\r\n  \r\n  // Validação do terceiro passo\r\n  const validateStepThree = useCallback(() => {\r\n    const errors = {};\r\n    const errorMessages = [];\r\n    \r\n    // Validar número de telefone\r\n    if (!phoneNumber) {\r\n      errors.phoneNumber = 'Número de telefone é obrigatório para enviar o template';\r\n      errorMessages.push('Número de telefone é obrigatório');\r\n    } else {\r\n      try {\r\n        validatePhoneNumber(phoneNumber);\r\n      } catch (err) {\r\n        errors.phoneNumber = err.message;\r\n        errorMessages.push(err.message);\r\n      }\r\n    }\r\n    \r\n    // Atualizar erros de validação\r\n    setValidationErrors(errors);\r\n    \r\n    return errorMessages.length > 0 ? errorMessages : [];\r\n  }, [phoneNumber]);\r\n  \r\n  // Verificar se o passo atual é válido\r\n  const isStepValid = useCallback((currentStep, triggerAlerts = false) => {\r\n    let errors = [];\r\n    \r\n    switch(currentStep) {\r\n      case 1:\r\n        return validateStepOne(triggerAlerts);\r\n      case 2:\r\n        errors = validateStepTwo();\r\n        break;\r\n      case 3:\r\n        errors = validateStepThree();\r\n        break;\r\n      default:\r\n        errors = [];\r\n    }\r\n    \r\n    // Mostrar alertas apenas se solicitado\r\n    if (triggerAlerts && errors.length > 0) {\r\n      showValidationErrors(errors);\r\n    }\r\n    \r\n    return errors.length === 0;\r\n  }, [validateStepOne, validateStepTwo, validateStepThree, showValidationErrors]);\r\n  \r\n  // Verificar a consistência dos botões entre todos os cards\r\n  const checkButtonConsistency = useCallback(() => {\r\n    const activeCards = cards.slice(0, numCards);\r\n    \r\n    // Consistente se houver apenas um card\r\n    if (activeCards.length <= 1) {\r\n      return { \r\n        isConsistent: true,\r\n        message: \"Consistente: Apenas um card no carrossel.\"\r\n      };\r\n    }\r\n    \r\n    // Coletar informações do primeiro card como referência\r\n    const referenceButtons = activeCards[0].buttons;\r\n    const referenceCount = referenceButtons.length;\r\n    const referenceTypes = referenceButtons.map(button => button.type);\r\n    \r\n    // Verificar consistência em todos os cards\r\n    let allSameCount = true;\r\n    let allSameTypes = true;\r\n    let inconsistentCards = [];\r\n    \r\n    activeCards.forEach((card, index) => {\r\n      if (index === 0) return; // Pular o primeiro card (referência)\r\n      \r\n      // Verificar quantidade de botões\r\n      if (card.buttons.length !== referenceCount) {\r\n        allSameCount = false;\r\n        inconsistentCards.push({\r\n          cardIndex: index,\r\n          issue: `Quantidade diferente de botões: ${card.buttons.length} vs ${referenceCount}`\r\n        });\r\n      }\r\n      \r\n      // Verificar tipos de botões se a quantidade for a mesma\r\n      if (card.buttons.length === referenceCount) {\r\n        for (let i = 0; i < referenceCount; i++) {\r\n          if (card.buttons[i].type !== referenceTypes[i]) {\r\n            allSameTypes = false;\r\n            inconsistentCards.push({\r\n              cardIndex: index,\r\n              buttonIndex: i,\r\n              issue: `Tipo de botão diferente: ${card.buttons[i].type} vs ${referenceTypes[i]}`\r\n            });\r\n          }\r\n        }\r\n      }\r\n    });\r\n    \r\n    // Determinar status geral\r\n    const isConsistent = allSameCount && allSameTypes;\r\n    \r\n    // Formatar mensagem detalhada\r\n    let message = isConsistent \r\n      ? \"Consistente: Todos os cards têm a mesma quantidade e tipos de botões.\"\r\n      : \"Inconsistente: \";\r\n      \r\n    if (!allSameCount) {\r\n      message += \"Alguns cards têm números diferentes de botões. \";\r\n    }\r\n    \r\n    if (!allSameTypes) {\r\n      message += \"Alguns cards têm tipos diferentes de botões. \";\r\n    }\r\n    \r\n    // Incluir informações sobre padronização\r\n    if (!isConsistent) {\r\n      // Encontrar o card com mais botões\r\n      const maxButtonCount = Math.max(...activeCards.map(card => card.buttons.length));\r\n      const templateCard = activeCards.find(card => card.buttons.length === maxButtonCount);\r\n      const templateIndex = activeCards.indexOf(templateCard);\r\n      \r\n      message += `A padronização usará como modelo o Card ${templateIndex + 1} com ${maxButtonCount} botões.`;\r\n    }\r\n    \r\n    return {\r\n      isConsistent,\r\n      message,\r\n      inconsistentCards,\r\n      allSameCount,\r\n      allSameTypes\r\n    };\r\n  }, [cards, numCards]);\r\n\r\n  // Padronizar botões entre todos os cards\r\n  const standardizeButtons = useCallback(() => {\r\n    const activeCards = cards.slice(0, numCards);\r\n    \r\n    // Se tiver apenas um card, não precisa padronizar\r\n    if (activeCards.length <= 1) {\r\n      return cards;\r\n    }\r\n    \r\n    // Encontrar o card com mais botões para usar como modelo\r\n    const maxButtonCount = Math.max(...activeCards.map(card => card.buttons.length));\r\n    const templateCard = activeCards.find(card => card.buttons.length === maxButtonCount);\r\n    const templateButtons = templateCard.buttons;\r\n    \r\n    // Criar cópia dos cards para modificação\r\n    const standardizedCards = [...cards];\r\n    \r\n    // Padronizar todos os cards ativos\r\n    for (let cardIndex = 0; cardIndex < numCards; cardIndex++) {\r\n      const card = standardizedCards[cardIndex];\r\n      \r\n      // Se já é o card template, pular\r\n      if (card === templateCard) continue;\r\n      \r\n      const newButtons = [];\r\n      \r\n      // Para cada botão no card modelo\r\n      for (let btnIndex = 0; btnIndex < templateButtons.length; btnIndex++) {\r\n        const templateButton = templateButtons[btnIndex];\r\n        \r\n        if (btnIndex < card.buttons.length) {\r\n          // Card já tem este botão, atualizar apenas o tipo\r\n          const existingButton = card.buttons[btnIndex];\r\n          newButtons.push({\r\n            ...existingButton,\r\n            type: templateButton.type,\r\n            // Garantir campos específicos do tipo\r\n            ...(templateButton.type === 'URL' && !existingButton.url ? { url: '' } : {}),\r\n            ...(templateButton.type === 'PHONE_NUMBER' && !existingButton.phoneNumber ? { phoneNumber: '' } : {}),\r\n            ...(templateButton.type === 'QUICK_REPLY' && !existingButton.payload ? { payload: '' } : {})\r\n          });\r\n        } else {\r\n          // Card não tem este botão, criar novo baseado no template\r\n          newButtons.push({\r\n            type: templateButton.type,\r\n            text: '', // Texto vazio para o usuário preencher\r\n            ...(templateButton.type === 'URL' ? { url: '' } : {}),\r\n            ...(templateButton.type === 'PHONE_NUMBER' ? { phoneNumber: '' } : {}),\r\n            ...(templateButton.type === 'QUICK_REPLY' ? { payload: '' } : {})\r\n          });\r\n        }\r\n      }\r\n      \r\n      standardizedCards[cardIndex] = { ...card, buttons: newButtons };\r\n    }\r\n    \r\n    return standardizedCards;\r\n  }, [cards, numCards]);\r\n\r\n  // Aplicar padronização de botões\r\n  const applyButtonStandardization = useCallback(() => {\r\n    const standardizedCards = standardizeButtons();\r\n    setCards(standardizedCards);\r\n    \r\n    // Marcar alterações não salvas\r\n    setUnsavedChanges(true);\r\n    \r\n    // Exibir mensagem de sucesso\r\n    setTimeout(() => {\r\n      if (alert && typeof alert.success === 'function') {\r\n        alert.success('Botões padronizados com sucesso em todos os cards!', {\r\n          position: 'top-right',\r\n          autoCloseTime: 3000\r\n        });\r\n      }\r\n    }, 0);\r\n    \r\n    // Registrar alteração como não salva\r\n    setSuccess('Botões padronizados com sucesso em todos os cards!');\r\n    setTimeout(() => setSuccess(''), 3000);\r\n  }, [standardizeButtons, alert]);\r\n\r\n  // Sincronizar tipo de botão em todos os cards\r\n  const syncButtonType = useCallback((buttonIndex, newType) => {\r\n    // Atualizar o tipo do botão em todos os cards ativos\r\n    setCards(prev => {\r\n      const newCards = [...prev];\r\n      \r\n      // Percorrer todos os cards ativos\r\n      for (let cardIndex = 0; cardIndex < numCards; cardIndex++) {\r\n        // Verificar se o card tem um botão nesse índice\r\n        if (newCards[cardIndex].buttons.length > buttonIndex) {\r\n          const cardButtons = [...newCards[cardIndex].buttons];\r\n          const existingButton = cardButtons[buttonIndex];\r\n          \r\n          // Atualizar o tipo do botão mantendo os outros campos\r\n          cardButtons[buttonIndex] = {\r\n            ...existingButton,\r\n            type: newType,\r\n            // Adicionar campos específicos do tipo se não existirem\r\n            ...(newType === 'URL' && !existingButton.url ? { url: '' } : {}),\r\n            ...(newType === 'PHONE_NUMBER' && !existingButton.phoneNumber ? { phoneNumber: '' } : {}),\r\n            ...(newType === 'QUICK_REPLY' && !existingButton.payload ? { payload: '' } : {})\r\n          };\r\n          \r\n          // Atualizar o card\r\n          newCards[cardIndex] = {\r\n            ...newCards[cardIndex],\r\n            buttons: cardButtons\r\n          };\r\n        }\r\n      }\r\n      \r\n      return newCards;\r\n    });\r\n    \r\n    // Marcar alterações não salvas\r\n    setUnsavedChanges(true);\r\n    \r\n    // Informar sobre a sincronização\r\n    setTimeout(() => {\r\n      if (alert && typeof alert.info === 'function') {\r\n        alert.info(`Tipo de botão \"${newType}\" sincronizado em todos os cards`, {\r\n          position: 'bottom-right',\r\n          autoCloseTime: 3000\r\n        });\r\n      }\r\n    }, 0);\r\n  }, [numCards, alert]);\r\n\r\n  // Sincronizar adição de botão em todos os cards\r\n  const syncAddButton = useCallback((cardIndex, buttonType = 'QUICK_REPLY') => {\r\n    setCards(prev => {\r\n      const newCards = [...prev];\r\n      \r\n      // Adicionar novo botão em todos os cards ativos\r\n      for (let i = 0; i < numCards; i++) {\r\n        if (i !== cardIndex) {\r\n          const newButton = { \r\n            type: buttonType, \r\n            text: '',\r\n            ...(buttonType === 'URL' ? { url: '' } : {}),\r\n            ...(buttonType === 'PHONE_NUMBER' ? { phoneNumber: '' } : {}),\r\n            ...(buttonType === 'QUICK_REPLY' ? { payload: '' } : {})\r\n          };\r\n          \r\n          const cardButtons = [...newCards[i].buttons, newButton];\r\n          newCards[i] = { ...newCards[i], buttons: cardButtons };\r\n        }\r\n      }\r\n      \r\n      return newCards;\r\n    });\r\n    \r\n    // Marcar alterações não salvas\r\n    setUnsavedChanges(true);\r\n    \r\n    // Informar sobre a adição de botões\r\n    setTimeout(() => {\r\n      if (alert && typeof alert.info === 'function') {\r\n        alert.info(`Botão do tipo \"${buttonType}\" adicionado a todos os cards`, {\r\n          position: 'bottom-right',\r\n          autoCloseTime: 3000\r\n        });\r\n      }\r\n    }, 0);\r\n  }, [numCards, alert]);\r\n\r\n  // Sincronizar remoção de botão em todos os cards\r\n  const syncRemoveButton = useCallback((buttonIndex) => {\r\n    setCards(prev => {\r\n      const newCards = [...prev];\r\n      \r\n      // Remover o botão em todos os cards ativos\r\n      for (let cardIndex = 0; cardIndex < numCards; cardIndex++) {\r\n        const cardButtons = newCards[cardIndex].buttons.filter((_, idx) => idx !== buttonIndex);\r\n        newCards[cardIndex] = { ...newCards[cardIndex], buttons: cardButtons };\r\n      }\r\n      \r\n      return newCards;\r\n    });\r\n    \r\n    // Marcar alterações não salvas\r\n    setUnsavedChanges(true);\r\n    \r\n    // Informar sobre a remoção de botões\r\n    setTimeout(() => {\r\n      if (alert && typeof alert.warning === 'function') {\r\n        alert.warning(`Botão removido de todos os cards`, {\r\n          position: 'bottom-right',\r\n          autoCloseTime: 3000\r\n        });\r\n      }\r\n    }, 0);\r\n  }, [numCards, alert]);\r\n  \r\n  // Adicionar um novo card\r\n  const handleAddCard = useCallback(() => {\r\n    if (numCards < 10) {\r\n      setNumCards(prev => prev + 1);\r\n      setCards(prev => [...prev, createEmptyCard()]);\r\n      \r\n      // Marcar alterações não salvas\r\n      setUnsavedChanges(true);\r\n      \r\n      // Mostrar alerta\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.info === 'function') {\r\n          alert.info(`Card ${numCards + 1} adicionado ao carrossel`, {\r\n            position: 'bottom-right',\r\n            autoCloseTime: 2000\r\n          });\r\n        }\r\n      }, 0);\r\n    } else {\r\n      // Mostrar alerta de limite máximo\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.warning === 'function') {\r\n          alert.warning('Limite máximo de 10 cards atingido', {\r\n            position: 'top-center'\r\n          });\r\n        }\r\n      }, 0);\r\n    }\r\n  }, [numCards, alert]);\r\n  \r\n  // Remover o último card\r\n  const handleRemoveCard = useCallback(() => {\r\n    if (numCards > 2) {\r\n      setNumCards(prev => prev - 1);\r\n      \r\n      // Não remover o card do array, apenas diminuir o número de cards visíveis\r\n      // Isso permite recuperar o card se o usuário mudar de ideia\r\n      \r\n      // Marcar alterações não salvas\r\n      setUnsavedChanges(true);\r\n      \r\n      // Mostrar alerta\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.info === 'function') {\r\n          alert.info(`Card ${numCards} removido do carrossel`, {\r\n            position: 'bottom-right',\r\n            autoCloseTime: 2000\r\n          });\r\n        }\r\n      }, 0);\r\n    } else {\r\n      // Mostrar alerta de limite mínimo\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.warning === 'function') {\r\n          alert.warning('Um carrossel precisa ter no mínimo 2 cards', {\r\n            position: 'top-center'\r\n          });\r\n        }\r\n      }, 0);\r\n    }\r\n  }, [numCards, alert]);\r\n  \r\n  // Atualizar um campo específico de um card\r\n  const updateCard = useCallback((index, field, value) => {\r\n    setCards(prev => {\r\n      const newCards = [...prev];\r\n      \r\n      // Se o índice é válido\r\n      if (index >= 0 && index < newCards.length) {\r\n        // Cria uma cópia do card para modificação\r\n        newCards[index] = { ...newCards[index], [field]: value };\r\n      }\r\n      \r\n      return newCards;\r\n    });\r\n    \r\n    // Marcar alterações não salvas\r\n    setUnsavedChanges(true);\r\n    \r\n    // Limpar erro de validação relacionado a este campo\r\n    if (validationErrors[`card_${index}_${field}`]) {\r\n      setValidationErrors(prev => {\r\n        const newErrors = { ...prev };\r\n        delete newErrors[`card_${index}_${field}`];\r\n        return newErrors;\r\n      });\r\n    }\r\n  }, [validationErrors]);\r\n  \r\n  // Atualizar um campo específico de um botão em um card\r\n  const updateButtonField = useCallback((cardIndex, buttonIndex, field, value) => {\r\n    setCards(prev => {\r\n      const newCards = [...prev];\r\n      \r\n      // Verificar se o card existe\r\n      if (cardIndex >= 0 && cardIndex < newCards.length) {\r\n        const card = newCards[cardIndex];\r\n        \r\n        // Verificar se o botão existe\r\n        if (buttonIndex >= 0 && buttonIndex < card.buttons.length) {\r\n          // Criar cópias para preservar imutabilidade\r\n          const newButtons = [...card.buttons];\r\n          newButtons[buttonIndex] = { ...newButtons[buttonIndex], [field]: value };\r\n          \r\n          // Atualizar o card com os novos botões\r\n          newCards[cardIndex] = { ...card, buttons: newButtons };\r\n        }\r\n      }\r\n      \r\n      return newCards;\r\n    });\r\n    \r\n    // Marcar alterações não salvas\r\n    setUnsavedChanges(true);\r\n    \r\n    // Se estiver alterando o tipo do botão e for o primeiro card, sincronizar com os outros\r\n    if (field === 'type' && cardIndex === 0 && numCards > 1) {\r\n      syncButtonType(buttonIndex, value);\r\n    }\r\n    \r\n    // Limpar erro de validação relacionado a este campo\r\n    if (validationErrors[`card_${cardIndex}_button_${buttonIndex}_${field}`]) {\r\n      setValidationErrors(prev => {\r\n        const newErrors = { ...prev };\r\n        delete newErrors[`card_${cardIndex}_button_${buttonIndex}_${field}`];\r\n        return newErrors;\r\n      });\r\n    }\r\n  }, [validationErrors, numCards, syncButtonType]);\r\n  \r\n  // Adicionar um novo botão a um card\r\n  const addButton = useCallback((cardIndex) => {\r\n    // Verificar se já possui o máximo de botões\r\n    const card = cards[cardIndex];\r\n    if (!card || card.buttons.length >= 2) {\r\n      // Mostrar alerta sobre o limite de botões\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.warning === 'function') {\r\n          alert.warning('Cada card pode ter no máximo 2 botões', {\r\n            position: 'top-center'\r\n          });\r\n        }\r\n      }, 0);\r\n      return;\r\n    }\r\n    \r\n    // Obter o tipo de botão padrão (usar o tipo do primeiro botão do primeiro card, ou QUICK_REPLY)\r\n    const defaultButtonType = cards[0]?.buttons[0]?.type || 'QUICK_REPLY';\r\n    \r\n    setCards(prev => {\r\n      const newCards = [...prev];\r\n      \r\n      // Se o card existe\r\n      if (cardIndex >= 0 && cardIndex < newCards.length) {\r\n        const newButton = { \r\n          type: defaultButtonType, \r\n          text: '',\r\n          ...(defaultButtonType === 'URL' ? { url: '' } : {}),\r\n          ...(defaultButtonType === 'PHONE_NUMBER' ? { phoneNumber: '' } : {}),\r\n          ...(defaultButtonType === 'QUICK_REPLY' ? { payload: '' } : {})\r\n        };\r\n        \r\n        // Adicionar novo botão aos botões existentes\r\n        const newButtons = [...newCards[cardIndex].buttons, newButton];\r\n        newCards[cardIndex] = { ...newCards[cardIndex], buttons: newButtons };\r\n      }\r\n      \r\n      return newCards;\r\n    });\r\n    \r\n    // Marcar alterações não salvas\r\n    setUnsavedChanges(true);\r\n    \r\n    // Se tiver mais de um card, sincronizar a adição com os outros cards\r\n    if (numCards > 1) {\r\n      syncAddButton(cardIndex, defaultButtonType);\r\n    } else {\r\n      // Mostrar alerta sobre adição de botão\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.info === 'function') {\r\n          alert.info(`Botão adicionado ao Card ${cardIndex + 1}`, {\r\n            position: 'bottom-right',\r\n            autoCloseTime: 2000\r\n          });\r\n        }\r\n      }, 0);\r\n    }\r\n  }, [cards, numCards, syncAddButton, alert]);\r\n  \r\n  // Remover um botão de um card\r\n  const removeButton = useCallback((cardIndex, buttonIndex) => {\r\n    setCards(prev => {\r\n      const newCards = [...prev];\r\n      \r\n      // Se o card existe\r\n      if (cardIndex >= 0 && cardIndex < newCards.length) {\r\n        // Remover o botão especificado\r\n        const newButtons = newCards[cardIndex].buttons.filter((_, i) => i !== buttonIndex);\r\n        newCards[cardIndex] = { ...newCards[cardIndex], buttons: newButtons };\r\n      }\r\n      \r\n      return newCards;\r\n    });\r\n    \r\n    // Marcar alterações não salvas\r\n    setUnsavedChanges(true);\r\n    \r\n    // Se tiver mais de um card, sincronizar a remoção com os outros cards\r\n    if (numCards > 1) {\r\n      syncRemoveButton(buttonIndex);\r\n    } else {\r\n      // Mostrar alerta sobre remoção de botão\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.info === 'function') {\r\n          alert.info(`Botão removido do Card ${cardIndex + 1}`, {\r\n            position: 'bottom-right',\r\n            autoCloseTime: 2000\r\n          });\r\n        }\r\n      }, 0);\r\n    }\r\n  }, [numCards, syncRemoveButton, alert]);\r\n  \r\n  /**\r\n   * Realiza o upload dos arquivos dos cards para a API\r\n   * Esta função preserva os fileHandles existentes e só faz upload de novos arquivos\r\n   */\r\n  const handleUploadFiles = useCallback(async () => {\r\n    const uploadResults = await uploadFiles(cards, authKey);\r\n  \r\n    // Verificar se algum upload falhou\r\n    const failedUploads = uploadResults.filter(result => result.status === 'failure');\r\n    \r\n    if (failedUploads.length > 0) {\r\n      // Tratar uploads que falharam\r\n      failedUploads.forEach(failedUpload => {\r\n        const { error } = failedUpload;\r\n        \r\n        if (error.isExpiredHandle) {\r\n          // Caso específico de handle expirado\r\n          alert.error(`Handle expirado para o card ${error.cardIndex + 1}: ${error.message}`, {\r\n            position: 'top-center'\r\n          });\r\n        } else {\r\n          // Erro genérico de upload\r\n          alert.error(`Falha no upload do card ${error.cardIndex + 1}: ${error.message}`, {\r\n            position: 'top-center'\r\n          });\r\n        }\r\n      });\r\n      \r\n      // Não prosseguir se houver falhas\r\n      return;\r\n    }\r\n    // Validar antes de prosseguir\r\n    if (!validateStepOne(true)) {\r\n      setError('Por favor, corrija os erros antes de continuar.');\r\n      return;\r\n    }\r\n\r\n    // Salvar o estado atual antes de fazer uploads\r\n    // Isso garante que os fileHandles existentes sejam preservados\r\n    saveCurrentState();\r\n  \r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      // Mostrar alerta de início do processo\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.info === 'function') {\r\n          alert.info('Iniciando processo de upload...', {\r\n            position: 'top-right',\r\n            autoCloseTime: 3000\r\n          });\r\n        }\r\n      }, 0);\r\n      \r\n      setSuccess('Iniciando processo de upload...');\r\n      \r\n      // Separar cards em dois grupos:\r\n      // 1. Cards com fileHandles válidos (podem pular upload)\r\n      // 2. Cards que precisam de upload (sem fileHandle ou com URL alterada)\r\n      \r\n      // Carregar o rascunho mais recente para obter os fileHandles mais atualizados\r\n      const savedDraft = loadDraft();\r\n      const savedCards = savedDraft?.cards || [];\r\n      \r\n      // Mapear cada card atual para verificar se precisa de upload\r\n      const currentCards = cards.slice(0, numCards);\r\n      \r\n      // Cards que já têm fileHandle e URL não mudou (podem pular upload)\r\n      const cardsWithValidHandles = [];\r\n      // Cards que precisam de upload\r\n      const cardsToUpload = [];\r\n      \r\n      // Verificar cada card atual\r\n      currentCards.forEach((card, index) => {\r\n        // Se não tem URL, pular\r\n        if (!card.fileUrl) return;\r\n        \r\n        // Verificar se existe um card salvo correspondente\r\n        const savedCard = savedCards[index];\r\n        \r\n        // Verificar se o card já tem um fileHandle válido e a URL não mudou\r\n        if (savedCard && \r\n            savedCard.fileHandle && \r\n            savedCard.fileUrl === card.fileUrl) {\r\n          // Atualizar o card atual com o fileHandle salvo\r\n          const updatedCard = { ...card, fileHandle: savedCard.fileHandle };\r\n          cardsWithValidHandles.push(updatedCard);\r\n          \r\n          // Atualizar o card no estado\r\n          updateCard(index, 'fileHandle', savedCard.fileHandle);\r\n        } else if (card.fileUrl) {\r\n          // Card precisa de upload\r\n          cardsToUpload.push(card);\r\n        }\r\n      });\r\n      \r\n      console.log('Cards com fileHandles válidos:', cardsWithValidHandles.length);\r\n      console.log('Cards que precisam de upload:', cardsToUpload.length);\r\n      \r\n      // Resultados finais combinados\r\n      let finalResults = [];\r\n      \r\n      // Adicionar resultados dos cards que já têm fileHandle\r\n      cardsWithValidHandles.forEach(card => {\r\n        finalResults.push({\r\n          fileHandle: card.fileHandle,\r\n          status: 'cached', // Status especial para indicar que foi carregado do cache\r\n          cardIndex: cards.indexOf(card)\r\n        });\r\n      });\r\n      \r\n      // Se houver cards para upload, fazer o upload\r\n      if (cardsToUpload.length > 0) {\r\n        // Fazer upload dos arquivos que precisam\r\n        const newResults = await uploadFiles(cardsToUpload, authKey);\r\n        \r\n        // Mapear resultados aos índices originais dos cards\r\n        for (let i = 0; i < newResults.length; i++) {\r\n          const result = newResults[i];\r\n          const originalCard = cardsToUpload[i];\r\n          const originalIndex = cards.indexOf(originalCard);\r\n          \r\n          // Adicionar o índice original ao resultado\r\n          result.cardIndex = originalIndex;\r\n          \r\n          // Atualizar o card com o fileHandle recebido\r\n          updateCard(originalIndex, 'fileHandle', result.fileHandle);\r\n          \r\n          // Adicionar ao array de resultados finais\r\n          finalResults.push(result);\r\n        }\r\n      }\r\n      \r\n      // Ordenar resultados pelo índice original\r\n      finalResults.sort((a, b) => a.cardIndex - b.cardIndex);\r\n      \r\n      // Definir os resultados de upload\r\n      setUploadResults(finalResults);\r\n      \r\n      // Salvar novamente o estado para garantir que todos os fileHandles estão preservados\r\n      saveCurrentState();\r\n      \r\n      // Mensagem de sucesso baseada em quantos arquivos foram processados\r\n      const skippedCount = cardsWithValidHandles.length;\r\n      let successMessage = '';\r\n\r\n      if (cardsToUpload.length > 0 && skippedCount > 0) {\r\n        successMessage = `${cardsToUpload.length} arquivo(s) enviado(s) e ${skippedCount} carregado(s) do cache`;\r\n      } else if (cardsToUpload.length > 0) {\r\n        successMessage = `${cardsToUpload.length} arquivo(s) enviado(s) com sucesso`;\r\n      } else if (skippedCount > 0) {\r\n        successMessage = `${skippedCount} arquivo(s) carregado(s) do cache`;\r\n      } else {\r\n        successMessage = 'Nenhum arquivo precisava ser processado';\r\n      }\r\n      \r\n      setSuccess(successMessage);\r\n\r\n      setTimeout(() => {\r\n        setSuccess('');\r\n      }, 5000);\r\n      \r\n      // Mostrar alerta de sucesso\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.success === 'function') {\r\n          alert.success(successMessage, {\r\n            position: 'top-right'\r\n          });\r\n        }\r\n      }, 0);\r\n      \r\n      // Avançar para a próxima etapa\r\n      setStep(2);\r\n    } catch (err) {\r\n      const errorMessage = handleApiError(err);\r\n      setError(errorMessage);\r\n      \r\n      // Mostrar alerta de erro\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.error === 'function') {\r\n          alert.error(`Erro durante o processo de upload: ${errorMessage}`, {\r\n            position: 'top-center',\r\n            autoCloseTime: 7000\r\n          });\r\n        }\r\n      }, 0);\r\n      \r\n      console.error('Erro durante o processo de upload:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [authKey, cards, numCards, updateCard, validateStepOne, saveCurrentState, alert]);\r\n  \r\n  // Avançar para o próximo passo com validação\r\n  const handleNextStep = useCallback(() => {\r\n    setHasTriedToAdvance(true); // Marcar que o usuário tentou avançar\r\n    const isValid = validateStepOne(true); // Forçar validação com alertas\r\n    if (isValid) {\r\n      // Salvar o estado atual antes de avançar\r\n      saveCurrentState();\r\n      setStep((prev) => prev + 1); // Avançar para o próximo passo\r\n    }\r\n  }, [validateStepOne, saveCurrentState]);\r\n\r\n  // Criar o template\r\n  const handleCreateTemplate = useCallback(async () => {\r\n    // Validar antes de prosseguir\r\n    const errors = validateStepTwo();\r\n    if (errors.length > 0) {\r\n      setError('Por favor, corrija os erros antes de continuar.');\r\n      showValidationErrors(errors);\r\n      return;\r\n    }\r\n    \r\n    // Verificar consistência de botões\r\n    const consistency = checkButtonConsistency();\r\n    \r\n    // Se não for consistente, padronizar os botões antes de prosseguir\r\n    if (!consistency.isConsistent) {\r\n      // Mostrar alerta sobre a padronização necessária\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.warning === 'function') {\r\n          alert.warning('Inconsistência detectada nos botões. O WhatsApp exige que todos os cards tenham o mesmo número e tipos de botões. Será realizada uma padronização automática.', {\r\n            position: 'top-center',\r\n            autoCloseTime: 5000\r\n          });\r\n        }\r\n      }, 0);\r\n      \r\n      // Padronizar botões\r\n      const standardizedCards = standardizeButtons();\r\n      \r\n      // Verificar se a padronização criou campos vazios obrigatórios\r\n      const hasEmptyRequiredFields = standardizedCards.slice(0, numCards).some(card => \r\n        card.buttons.some(button => {\r\n          if (!button.text) return true;\r\n          if (button.type === 'URL' && !button.url) return true;\r\n          if (button.type === 'PHONE_NUMBER' && !button.phoneNumber) return true;\r\n          return false;\r\n        })\r\n      );\r\n      \r\n      if (hasEmptyRequiredFields) {\r\n        // Atualizar os cards com a versão padronizada\r\n        setCards(standardizedCards);\r\n        \r\n        // Informar ao usuário que precisa preencher os campos\r\n        setError('A padronização de botões criou novos campos que precisam ser preenchidos. Por favor, revise os botões em todos os cards.');\r\n        \r\n        // Mostrar alerta sobre campos obrigatórios vazios\r\n        setTimeout(() => {\r\n          if (alert && typeof alert.warning === 'function') {\r\n            alert.warning('A padronização de botões criou novos campos que precisam ser preenchidos. Por favor, revise os botões em todos os cards.', {\r\n              position: 'top-center',\r\n              autoCloseTime: 7000\r\n            });\r\n          }\r\n        }, 0);\r\n        \r\n        return;\r\n      }\r\n      \r\n      // Se não tiver campos vazios obrigatórios, prosseguir com os cards padronizados\r\n      setCards(standardizedCards);\r\n      \r\n      // Informar ao usuário sobre a padronização\r\n      setSuccess('Botões padronizados automaticamente para atender aos requisitos do WhatsApp.');\r\n      \r\n      // Mostrar alerta sobre a padronização automática\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.success === 'function') {\r\n          alert.success('Botões padronizados automaticamente para atender aos requisitos do WhatsApp.', {\r\n            position: 'top-right',\r\n            autoCloseTime: 3000\r\n          });\r\n        }\r\n      }, 0);\r\n      \r\n      // Pequena pausa para o usuário ver a mensagem\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      // Usar a versão mais recente dos cards (possivelmente padronizada)\r\n      const cardsToUse = cards.slice(0, numCards);\r\n      \r\n      // Validar informações do template\r\n      validateTemplate(templateName, bodyText, authKey, cardsToUse);\r\n\r\n      // Criar template na API\r\n      const { templateJson, sendTemplateJson, builderTemplateJson } = await createTemplate(\r\n        templateName, \r\n        language, \r\n        bodyText, \r\n        cardsToUse, \r\n        authKey\r\n      );\r\n\r\n      // Armazenar os JSONs gerados\r\n      setFinalJson({\r\n        createTemplate: templateJson,\r\n        sendTemplate: sendTemplateJson,\r\n        builderTemplate: builderTemplateJson\r\n      });\r\n\r\n      // Salvar o estado atual\r\n      saveCurrentState();\r\n      \r\n      // Avançar para a próxima etapa\r\n      setStep(3);\r\n    } catch (err) {\r\n      const errorMessage = handleApiError(err);\r\n      setError(errorMessage);\r\n      \r\n      // Mostrar alerta de erro\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.error === 'function') {\r\n          alert.error(`Erro ao criar template: ${errorMessage}`, {\r\n            position: 'top-center',\r\n            autoCloseTime: 7000\r\n          });\r\n        }\r\n      }, 0);\r\n      \r\n      console.error('Erro ao criar template:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [templateName, language, bodyText, authKey, cards, numCards, validateStepTwo, saveCurrentState, checkButtonConsistency, standardizeButtons, alert, showValidationErrors]);\r\n  \r\n  /**\r\n   * Envia o template para um número de telefone\r\n   */\r\n  const sendTemplate = useCallback(async (phoneNumberToSend = phoneNumber) => {\r\n    // Verificar se temos um número de telefone\r\n    if (!phoneNumberToSend) {\r\n      const errorMsg = 'Número de telefone é obrigatório para enviar o template';\r\n      setError(errorMsg);\r\n      \r\n      alert.error(errorMsg, {\r\n        position: 'top-center'\r\n      });\r\n      \r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n  \r\n    try {\r\n      // Mostrar alerta de envio apenas uma vez\r\n      alert.info(`Enviando template para ${phoneNumberToSend}...`, {\r\n        position: 'top-right',\r\n        autoCloseTime: 3000\r\n      });\r\n      \r\n      const formattedPhone = validatePhoneNumber(phoneNumberToSend);\r\n      \r\n      if (!finalJson || !finalJson.sendTemplate) {\r\n        throw new Error('Template não disponível para envio. Por favor, complete a etapa 2 primeiro.');\r\n      }\r\n      \r\n      // Enviar template\r\n      await sendTemplateMessage(formattedPhone, finalJson.sendTemplate, authKey);\r\n      \r\n      const successMsg = `Template enviado com sucesso para ${phoneNumberToSend}!`;\r\n      \r\n      // Definir o sucesso apenas uma vez\r\n      setSuccess(successMsg);\r\n      \r\n      // Mostrar alerta de sucesso apenas uma vez\r\n      alert.success(successMsg, {\r\n        position: 'top-right',\r\n        autoCloseTime: 3000\r\n      });\r\n      \r\n      // Limpar o sucesso após 3 segundos\r\n      setTimeout(() => {\r\n        setSuccess('');\r\n      }, 3000);\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      const errorMessage = handleApiError(err);\r\n      setError(errorMessage);\r\n      \r\n      alert.error(`Erro no envio: ${errorMessage}`, {\r\n        position: 'top-center',\r\n        autoCloseTime: 7000\r\n      });\r\n      \r\n      console.error(\"Erro no envio:\", err);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [phoneNumber, finalJson, authKey, alert]);\r\n  \r\n  // Copiar o JSON do template para a área de transferência\r\n  const copyToClipboard = useCallback((jsonType) => {\r\n    try {\r\n      if (!finalJson || !finalJson[jsonType]) {\r\n        const errorMsg = 'Não foi possível copiar. JSON não disponível.';\r\n        setError(errorMsg);\r\n        \r\n        // Mostrar alerta de erro\r\n        setTimeout(() => {\r\n          if (alert && typeof alert.error === 'function') {\r\n            alert.error(errorMsg, {\r\n              position: 'top-center'\r\n            });\r\n          }\r\n        }, 0);\r\n        \r\n        return;\r\n      }\r\n      \r\n      navigator.clipboard.writeText(JSON.stringify(finalJson[jsonType], null, 2))\r\n        .then(() => {\r\n          const successMsg = `JSON para ${jsonType === 'createTemplate' ? 'criação do template' : jsonType === 'sendTemplate' ? 'envio do template' : 'integração com Builder'} copiado!`;\r\n          setSuccess(successMsg);\r\n          \r\n          // Mostrar alerta de sucesso\r\n          setTimeout(() => {\r\n            if (alert && typeof alert.success === 'function') {\r\n              alert.success(successMsg, {\r\n                position: 'bottom-right',\r\n                autoCloseTime: 3000\r\n              });\r\n            }\r\n          }, 0);\r\n          \r\n          // Limpar a mensagem de sucesso após 3 segundos\r\n          setTimeout(() => {\r\n            setSuccess('');\r\n          }, 3000);\r\n        })\r\n        .catch(err => {\r\n          const errorMsg = `Erro ao copiar: ${err.message}`;\r\n          setError(errorMsg);\r\n          \r\n          // Mostrar alerta de erro\r\n          setTimeout(() => {\r\n            if (alert && typeof alert.error === 'function') {\r\n              alert.error(errorMsg, {\r\n                position: 'top-center'\r\n              });\r\n            }\r\n          }, 0);\r\n        });\r\n    } catch (err) {\r\n      const errorMsg = `Erro ao copiar: ${err.message}`;\r\n      setError(errorMsg);\r\n      \r\n      // Mostrar alerta de erro\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.error === 'function') {\r\n          alert.error(errorMsg, {\r\n            position: 'top-center'\r\n          });\r\n        }\r\n      }, 0);\r\n    }\r\n  }, [finalJson, alert]);\r\n  \r\n  // Reiniciar o formulário para criar um novo template\r\n  const resetForm = useCallback(() => {\r\n    // Confirmar antes de resetar\r\n    if (window.confirm('Tem certeza que deseja criar um novo template? Os dados atuais serão perdidos.')) {\r\n      setStep(1);\r\n      setCards(Array(2).fill().map(() => createEmptyCard()));\r\n      setNumCards(2);\r\n      setTemplateName('');\r\n      setBodyText('');\r\n      setFinalJson({});\r\n      setPhoneNumber('');\r\n      setError('');\r\n      setSuccess('');\r\n      setValidationErrors({});\r\n      \r\n      // Limpar o rascunho salvo\r\n      clearDraft();\r\n      setLastSavedTime(null);\r\n      setUnsavedChanges(false);\r\n      \r\n      // Mostrar alerta de reset\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.info === 'function') {\r\n          alert.info('Template resetado. Você pode começar um novo template agora.', {\r\n            position: 'top-right',\r\n            autoCloseTime: 3000\r\n          });\r\n        }\r\n      }, 0);\r\n    }\r\n  }, [alert]);\r\n\r\n  // Ir para o passo anterior\r\n  const goToPreviousStep = useCallback(() => {\r\n    if (step > 1) {\r\n      // Salvar o estado atual antes de voltar ao passo anterior\r\n      // Isso é crucial para preservar os fileHandles entre passos\r\n      saveCurrentState();\r\n      \r\n      setStep(prev => prev - 1);\r\n      setError('');\r\n      \r\n      // Mostrar alerta de navegação\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.info === 'function') {\r\n          alert.info(`Retornando para o passo ${step - 1}`, {\r\n            position: 'bottom-right',\r\n            autoCloseTime: 2000\r\n          });\r\n        }\r\n      }, 0);\r\n    }\r\n  }, [step, alert, saveCurrentState]);\r\n\r\n  // Limpar mensagens\r\n  const clearMessages = useCallback(() => {\r\n    setError('');\r\n    setSuccess('');\r\n  }, []);\r\n\r\n  // Atualizar campos de texto com limpeza de validação\r\n  const handleInputChange = useCallback((field, value) => {\r\n    setHasInteracted(true); // Marcar que o usuário interagiu\r\n    \r\n    // Atualizar o campo apropriado\r\n    switch (field) {\r\n      case 'authKey':\r\n        setAuthKey(value);\r\n        break;\r\n      case 'templateName':\r\n        setTemplateName(value);\r\n        break;\r\n      case 'bodyText':\r\n        setBodyText(value);\r\n        break;\r\n      case 'phoneNumber':\r\n        setPhoneNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    \r\n    // Marcar alterações não salvas\r\n    setUnsavedChanges(true);\r\n    \r\n    // Limpar erros de validação relacionados ao campo\r\n    if (validationErrors[field]) {\r\n      setValidationErrors((prev) => {\r\n        const newErrors = { ...prev };\r\n        delete newErrors[field];\r\n        return newErrors;\r\n      });\r\n    }\r\n  }, [validationErrors]);\r\n\r\n  // Manipulador de Save/Load e status de salvamento para conectar com UI\r\n  const handleSaveBeforeUpload = useCallback(() => {\r\n    // Verificar se a função saveCurrentState existe\r\n    const saveSuccess = saveCurrentState();\r\n    \r\n    if (saveSuccess) {\r\n      // Adicionar alerta de sucesso\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.success === 'function') {\r\n          alert.success(\"Rascunho salvo com sucesso!\", {\r\n            position: 'bottom-right',\r\n            autoCloseTime: 3000\r\n          });\r\n        }\r\n      }, 0);\r\n    } else {\r\n      // Mostrar erro se o salvamento falhou\r\n      setTimeout(() => {\r\n        if (alert && typeof alert.error === 'function') {\r\n          alert.error(\"Não foi possível salvar o rascunho.\", {\r\n            position: 'top-center',\r\n            autoCloseTime: 5000\r\n          });\r\n        }\r\n      }, 0);\r\n    }\r\n    \r\n    return saveSuccess;\r\n  }, [saveCurrentState, alert]);\r\n\r\n  return {\r\n    // Estados\r\n    step, setStep,\r\n    authKey, setAuthKey,\r\n    numCards,\r\n    templateName, setTemplateName,\r\n    language, setLanguage,\r\n    bodyText, setBodyText,\r\n    finalJson,\r\n    phoneNumber, setPhoneNumber,\r\n    uploadResults,\r\n    loading,\r\n    error,\r\n    success,\r\n    cards, setCards,\r\n    validationErrors,\r\n    unsavedChanges,\r\n    lastSavedTime,\r\n    hasInteracted,\r\n    setHasInteracted,\r\n    \r\n    // Métodos\r\n    handleAddCard,\r\n    handleRemoveCard,\r\n    updateCard,\r\n    updateButtonField,\r\n    addButton,\r\n    removeButton,\r\n    handleUploadFiles,\r\n    handleCreateTemplate,\r\n    sendTemplate,\r\n    copyToClipboard,\r\n    resetForm,\r\n    goToPreviousStep,\r\n    clearMessages,\r\n    isStepValid,\r\n    handleInputChange,\r\n    handleNextStep,\r\n    \r\n    // Funções de sincronização de botões\r\n    checkButtonConsistency,\r\n    standardizeButtons,\r\n    applyButtonStandardization,\r\n    syncButtonType,\r\n    syncAddButton,\r\n    syncRemoveButton,\r\n    \r\n    // Funções específicas de rascunho\r\n    saveCurrentState,\r\n    handleSaveBeforeUpload,\r\n  };\r\n};","// contexts/WhatsAppTemplateContext.js\r\nimport React, { createContext, useContext, useMemo } from 'react';\r\nimport { useWhatsAppTemplate } from '../hooks/useWhatsAppTemplate';\r\n\r\n// Create the context with a default empty value\r\nconst WhatsAppTemplateContext = createContext(null);\r\n\r\n/**\r\n * Provider component that wraps the application to make WhatsApp template state\r\n * available to all child components\r\n * @param {Object} props - Component props\r\n * @param {React.ReactNode} props.children - Child components\r\n * @returns {JSX.Element} Provider component\r\n */\r\nexport const WhatsAppTemplateProvider = ({ children }) => {\r\n  // Get the template state from the hook\r\n  const templateState = useWhatsAppTemplate();\r\n  \r\n  // Memoize the context value to prevent unnecessary re-renders\r\n  const memoizedValue = useMemo(() => templateState, [\r\n    // Include dependencies that should trigger context updates\r\n    templateState.step,\r\n    templateState.authKey,\r\n    templateState.numCards,\r\n    templateState.templateName,\r\n    templateState.language,\r\n    templateState.bodyText,\r\n    templateState.phoneNumber,\r\n    templateState.loading,\r\n    templateState.error,\r\n    templateState.success,\r\n    // Using JSON.stringify for complex objects - use with caution as it has performance implications\r\n    // but helps prevent excessive rerenders for complex state\r\n    JSON.stringify(templateState.cards),\r\n    JSON.stringify(templateState.finalJson),\r\n    JSON.stringify(templateState.uploadResults)\r\n  ]);\r\n  \r\n  return (\r\n    <WhatsAppTemplateContext.Provider value={memoizedValue}>\r\n      {children}\r\n    </WhatsAppTemplateContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * Custom hook to use the WhatsApp template context\r\n * @returns {Object} The WhatsApp template context\r\n * @throws {Error} If used outside of a WhatsAppTemplateProvider\r\n */\r\nexport const useWhatsAppTemplateContext = () => {\r\n  const context = useContext(WhatsAppTemplateContext);\r\n  \r\n  if (context === null) {\r\n    throw new Error('useWhatsAppTemplateContext deve ser usado dentro de WhatsAppTemplateProvider');\r\n  }\r\n  \r\n  return context;\r\n};","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__+oh1C\",\"disabled\":\"Button_disabled__ccgR4\",\"loading\":\"Button_loading__qEre3\",\"size-large\":\"Button_size-large__EsYxL\",\"size-medium\":\"Button_size-medium__ZR5Dv\",\"size-small\":\"Button_size-small__M6mlM\",\"variant-solid\":\"Button_variant-solid__Z7zoG\",\"color-primary\":\"Button_color-primary__QRACC\",\"color-content\":\"Button_color-content__G3YGJ\",\"color-positive\":\"Button_color-positive__Hl6k9\",\"color-negative\":\"Button_color-negative__DHWIc\",\"variant-outline\":\"Button_variant-outline__Pm-Ie\",\"variant-text\":\"Button_variant-text__Yrkco\",\"text\":\"Button_text__RTO0R\",\"fullWidth\":\"Button_fullWidth__Wd9NZ\",\"iconLeft\":\"Button_iconLeft__-OKx0\",\"iconRight\":\"Button_iconRight__QcDGM\",\"loadingIcon\":\"Button_loadingIcon__2XyCB\",\"spin\":\"Button_spin__MmJ1L\",\"loadingCircle\":\"Button_loadingCircle__kJSsS\",\"iconOnly\":\"Button_iconOnly__G4ERu\",\"rounded\":\"Button_rounded__qI2rg\",\"tooltipWrapper\":\"Button_tooltipWrapper__jU4Av\",\"tooltipText\":\"Button_tooltipText__E1U-y\",\"tooltip-top\":\"Button_tooltip-top__FEw0Q\",\"tooltip-bottom\":\"Button_tooltip-bottom__StMBi\",\"tooltip-left\":\"Button_tooltip-left__BdnED\",\"tooltip-right\":\"Button_tooltip-right__BcDp2\"};","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\n/**\r\n * Enhanced reusable Button component\r\n * Standardized to match the application design system\r\n * \r\n * @param {Object} props Component properties\r\n * @param {React.ReactNode} props.children Button content/label\r\n * @param {string} props.variant Button style variant (solid, outline, text)\r\n * @param {string} props.color Button color scheme (primary, content, positive, negative)\r\n * @param {string} props.size Button size (large, medium, small)\r\n * @param {string} props.type Button HTML type attribute\r\n * @param {boolean} props.disabled Whether the button is disabled\r\n * @param {boolean} props.loading Whether to show loading spinner\r\n * @param {boolean} props.fullWidth Whether the button should take full width\r\n * @param {boolean} props.rounded Whether the button should have fully rounded corners\r\n * @param {boolean} props.showLabel Whether to display the button label\r\n * @param {boolean} props.iconOnly Whether the button is an icon-only button\r\n * @param {React.ReactNode} props.iconLeft Icon to display at the left of text\r\n * @param {React.ReactNode} props.iconRight Icon to display at the right of text\r\n * @param {string} props.className Additional CSS classes\r\n * @param {Function} props.onClick Click handler function\r\n * @param {string} props.as Render the button as a different component (e.g., 'a' for link)\r\n * @param {string} props.href Href attribute for link-like buttons\r\n * @param {string} props.target Target attribute for link-like buttons\r\n * @param {Object} props.tooltipProps Tooltip properties for the button\r\n * @returns {JSX.Element} Button component\r\n */\r\nconst Button = ({\r\n  children,\r\n  variant = 'solid',\r\n  color = 'primary',\r\n  size = 'medium',\r\n  type = 'button',\r\n  disabled = false,\r\n  loading = false,\r\n  fullWidth = false,\r\n  rounded = false,\r\n  showLabel = true,\r\n  iconOnly = false,\r\n  iconLeft,\r\n  iconRight,\r\n  className = '',\r\n  onClick,\r\n  as: Component = 'button',\r\n  href,\r\n  target,\r\n  tooltipProps,\r\n  ...restProps\r\n}) => {\r\n  // Determine if the button is icon-only\r\n  const isIconOnly = iconOnly || (!showLabel && (iconLeft || iconRight));\r\n\r\n  // Construct CSS class names dynamically\r\n  const buttonClasses = [\r\n    styles.button,\r\n    styles[`variant-${variant}`],\r\n    styles[`color-${color}`],\r\n    styles[`size-${size}`],\r\n    disabled ? styles.disabled : '',\r\n    loading ? styles.loading : '',\r\n    fullWidth ? styles.fullWidth : '',\r\n    rounded ? styles.rounded : '',\r\n    isIconOnly ? styles.iconOnly : '',\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n  \r\n  // Loading spinner component\r\n  const LoadingSpinner = () => (\r\n    <div className={styles.loadingIcon} aria-hidden=\"true\">\r\n      <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle className={styles.loadingCircle} cx=\"12\" cy=\"12\" r=\"10\" \r\n          stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\" />\r\n      </svg>\r\n    </div>\r\n  );\r\n  \r\n  // Prepare props based on button type\r\n  const componentProps = {\r\n    ...restProps,\r\n    className: buttonClasses,\r\n    disabled: disabled || loading,\r\n    onClick: !loading && !disabled ? onClick : undefined,\r\n    \"aria-busy\": loading ? \"true\" : undefined,\r\n    \"aria-disabled\": disabled ? \"true\" : undefined,\r\n  };\r\n\r\n  // Add href and target for link-like buttons\r\n  if (Component === 'a') {\r\n    componentProps.href = href;\r\n    componentProps.target = target;\r\n    componentProps.rel = target === '_blank' ? 'noopener noreferrer' : undefined;\r\n  }\r\n\r\n  // Add type for button elements\r\n  if (Component === 'button') {\r\n    componentProps.type = type;\r\n  }\r\n\r\n  // Render button content\r\n  const buttonContent = (\r\n    <>\r\n      {loading && <LoadingSpinner />}\r\n      {!loading && iconLeft && <span className={styles.iconLeft} aria-hidden=\"true\">{iconLeft}</span>}\r\n      {showLabel && children && <span className={styles.text}>{children}</span>}\r\n      {!loading && iconRight && <span className={styles.iconRight} aria-hidden=\"true\">{iconRight}</span>}\r\n    </>\r\n  );\r\n\r\n  // Wrap with tooltip if tooltip props are provided\r\n  const renderButton = () => {\r\n    const BasicButton = (\r\n      <Component {...componentProps}>\r\n        {buttonContent}\r\n      </Component>\r\n    );\r\n\r\n    // If tooltip props are provided, wrap the button with a tooltip component\r\n    if (tooltipProps) {\r\n      return (\r\n        <Tooltip {...tooltipProps}>\r\n          {BasicButton}\r\n        </Tooltip>\r\n      );\r\n    }\r\n\r\n    return BasicButton;\r\n  };\r\n\r\n  return renderButton();\r\n};\r\n\r\n// Tooltip component (you'll need to replace this with your actual Tooltip implementation)\r\nconst Tooltip = ({ children, text, position = 'top', ...props }) => {\r\n  return (\r\n    <div className={styles.tooltipWrapper} {...props}>\r\n      {children}\r\n      <span className={`${styles.tooltipText} ${styles[`tooltip-${position}`]}`}>{text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;","// THIS FILE IS AUTO GENERATED\nimport { GenIcon } from '../lib/index.mjs';\nexport function FiActivity (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"22 12 18 12 15 21 9 3 6 12 2 12\"},\"child\":[]}]})(props);\n};\nexport function FiAirplay (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1\"},\"child\":[]},{\"tag\":\"polygon\",\"attr\":{\"points\":\"12 15 17 21 7 21 12 15\"},\"child\":[]}]})(props);\n};\nexport function FiAlertCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"16\",\"x2\":\"12.01\",\"y2\":\"16\"},\"child\":[]}]})(props);\n};\nexport function FiAlertOctagon (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"16\",\"x2\":\"12.01\",\"y2\":\"16\"},\"child\":[]}]})(props);\n};\nexport function FiAlertTriangle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"9\",\"x2\":\"12\",\"y2\":\"13\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"17\",\"x2\":\"12.01\",\"y2\":\"17\"},\"child\":[]}]})(props);\n};\nexport function FiAlignCenter (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"10\",\"x2\":\"6\",\"y2\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"6\",\"x2\":\"3\",\"y2\":\"6\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"14\",\"x2\":\"3\",\"y2\":\"14\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"18\",\"x2\":\"6\",\"y2\":\"18\"},\"child\":[]}]})(props);\n};\nexport function FiAlignJustify (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"10\",\"x2\":\"3\",\"y2\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"6\",\"x2\":\"3\",\"y2\":\"6\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"14\",\"x2\":\"3\",\"y2\":\"14\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"18\",\"x2\":\"3\",\"y2\":\"18\"},\"child\":[]}]})(props);\n};\nexport function FiAlignLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"10\",\"x2\":\"3\",\"y2\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"6\",\"x2\":\"3\",\"y2\":\"6\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"14\",\"x2\":\"3\",\"y2\":\"14\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"18\",\"x2\":\"3\",\"y2\":\"18\"},\"child\":[]}]})(props);\n};\nexport function FiAlignRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"10\",\"x2\":\"7\",\"y2\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"6\",\"x2\":\"3\",\"y2\":\"6\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"14\",\"x2\":\"3\",\"y2\":\"14\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"18\",\"x2\":\"7\",\"y2\":\"18\"},\"child\":[]}]})(props);\n};\nexport function FiAnchor (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"5\",\"r\":\"3\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22\",\"x2\":\"12\",\"y2\":\"8\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5 12H2a10 10 0 0 0 20 0h-3\"},\"child\":[]}]})(props);\n};\nexport function FiAperture (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"14.31\",\"y1\":\"8\",\"x2\":\"20.05\",\"y2\":\"17.94\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9.69\",\"y1\":\"8\",\"x2\":\"21.17\",\"y2\":\"8\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"7.38\",\"y1\":\"12\",\"x2\":\"13.12\",\"y2\":\"2.06\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9.69\",\"y1\":\"16\",\"x2\":\"3.95\",\"y2\":\"6.06\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"14.31\",\"y1\":\"16\",\"x2\":\"2.83\",\"y2\":\"16\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"16.62\",\"y1\":\"12\",\"x2\":\"10.88\",\"y2\":\"21.94\"},\"child\":[]}]})(props);\n};\nexport function FiArchive (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"21 8 21 21 3 21 3 8\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"1\",\"y\":\"3\",\"width\":\"22\",\"height\":\"5\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"10\",\"y1\":\"12\",\"x2\":\"14\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiArrowDownCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"8 12 12 16 16 12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"16\"},\"child\":[]}]})(props);\n};\nexport function FiArrowDownLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"7\",\"x2\":\"7\",\"y2\":\"17\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 17 7 17 7 7\"},\"child\":[]}]})(props);\n};\nexport function FiArrowDownRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"7\",\"y1\":\"7\",\"x2\":\"17\",\"y2\":\"17\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 7 17 17 7 17\"},\"child\":[]}]})(props);\n};\nexport function FiArrowDown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"5\",\"x2\":\"12\",\"y2\":\"19\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"19 12 12 19 5 12\"},\"child\":[]}]})(props);\n};\nexport function FiArrowLeftCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"12 8 8 12 12 16\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"12\",\"x2\":\"8\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiArrowLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"19\",\"y1\":\"12\",\"x2\":\"5\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"12 19 5 12 12 5\"},\"child\":[]}]})(props);\n};\nexport function FiArrowRightCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"12 16 16 12 12 8\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiArrowRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"5\",\"y1\":\"12\",\"x2\":\"19\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"12 5 19 12 12 19\"},\"child\":[]}]})(props);\n};\nexport function FiArrowUpCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 12 12 8 8 12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"16\",\"x2\":\"12\",\"y2\":\"8\"},\"child\":[]}]})(props);\n};\nexport function FiArrowUpLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"17\",\"x2\":\"7\",\"y2\":\"7\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7 17 7 7 17 7\"},\"child\":[]}]})(props);\n};\nexport function FiArrowUpRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"7\",\"y1\":\"17\",\"x2\":\"17\",\"y2\":\"7\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7 7 17 7 17 17\"},\"child\":[]}]})(props);\n};\nexport function FiArrowUp (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"19\",\"x2\":\"12\",\"y2\":\"5\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"5 12 12 5 19 12\"},\"child\":[]}]})(props);\n};\nexport function FiAtSign (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"4\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94\"},\"child\":[]}]})(props);\n};\nexport function FiAward (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"8\",\"r\":\"7\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"8.21 13.89 7 23 12 20 17 23 15.79 13.88\"},\"child\":[]}]})(props);\n};\nexport function FiBarChart2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"20\",\"x2\":\"18\",\"y2\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"20\",\"x2\":\"12\",\"y2\":\"4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"20\",\"x2\":\"6\",\"y2\":\"14\"},\"child\":[]}]})(props);\n};\nexport function FiBarChart (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"20\",\"x2\":\"12\",\"y2\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"20\",\"x2\":\"18\",\"y2\":\"4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"20\",\"x2\":\"6\",\"y2\":\"16\"},\"child\":[]}]})(props);\n};\nexport function FiBatteryCharging (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"13\",\"x2\":\"23\",\"y2\":\"11\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"11 6 7 12 13 12 9 18\"},\"child\":[]}]})(props);\n};\nexport function FiBattery (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"1\",\"y\":\"6\",\"width\":\"18\",\"height\":\"12\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"13\",\"x2\":\"23\",\"y2\":\"11\"},\"child\":[]}]})(props);\n};\nexport function FiBellOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M13.73 21a2 2 0 0 1-3.46 0\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.63 13A17.89 17.89 0 0 1 18 8\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M6.26 6.26A5.86 5.86 0 0 0 6 8c0 7-3 9-3 9h14\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18 8a6 6 0 0 0-9.33-5\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"},\"child\":[]}]})(props);\n};\nexport function FiBell (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13.73 21a2 2 0 0 1-3.46 0\"},\"child\":[]}]})(props);\n};\nexport function FiBluetooth (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5\"},\"child\":[]}]})(props);\n};\nexport function FiBold (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z\"},\"child\":[]}]})(props);\n};\nexport function FiBookOpen (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"},\"child\":[]}]})(props);\n};\nexport function FiBook (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4 19.5A2.5 2.5 0 0 1 6.5 17H20\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z\"},\"child\":[]}]})(props);\n};\nexport function FiBookmark (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"},\"child\":[]}]})(props);\n};\nexport function FiBox (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"3.27 6.96 12 12.01 20.73 6.96\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22.08\",\"x2\":\"12\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiBriefcase (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"7\",\"width\":\"20\",\"height\":\"14\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\"},\"child\":[]}]})(props);\n};\nexport function FiCalendar (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"4\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"2\",\"x2\":\"16\",\"y2\":\"6\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"2\",\"x2\":\"8\",\"y2\":\"6\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"10\",\"x2\":\"21\",\"y2\":\"10\"},\"child\":[]}]})(props);\n};\nexport function FiCameraOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56\"},\"child\":[]}]})(props);\n};\nexport function FiCamera (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"13\",\"r\":\"4\"},\"child\":[]}]})(props);\n};\nexport function FiCast (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"2\",\"y1\":\"20\",\"x2\":\"2.01\",\"y2\":\"20\"},\"child\":[]}]})(props);\n};\nexport function FiCheckCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"22 4 12 14.01 9 11.01\"},\"child\":[]}]})(props);\n};\nexport function FiCheckSquare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"9 11 12 14 22 4\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"},\"child\":[]}]})(props);\n};\nexport function FiCheck (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"20 6 9 17 4 12\"},\"child\":[]}]})(props);\n};\nexport function FiChevronDown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"6 9 12 15 18 9\"},\"child\":[]}]})(props);\n};\nexport function FiChevronLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"15 18 9 12 15 6\"},\"child\":[]}]})(props);\n};\nexport function FiChevronRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"9 18 15 12 9 6\"},\"child\":[]}]})(props);\n};\nexport function FiChevronUp (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"18 15 12 9 6 15\"},\"child\":[]}]})(props);\n};\nexport function FiChevronsDown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"7 13 12 18 17 13\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7 6 12 11 17 6\"},\"child\":[]}]})(props);\n};\nexport function FiChevronsLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"11 17 6 12 11 7\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"18 17 13 12 18 7\"},\"child\":[]}]})(props);\n};\nexport function FiChevronsRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"13 17 18 12 13 7\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"6 17 11 12 6 7\"},\"child\":[]}]})(props);\n};\nexport function FiChevronsUp (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 11 12 6 7 11\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 18 12 13 7 18\"},\"child\":[]}]})(props);\n};\nexport function FiChrome (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21.17\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"8\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"3.95\",\"y1\":\"6.06\",\"x2\":\"8.54\",\"y2\":\"14\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"10.88\",\"y1\":\"21.94\",\"x2\":\"15.46\",\"y2\":\"14\"},\"child\":[]}]})(props);\n};\nexport function FiCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]}]})(props);\n};\nexport function FiClipboard (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"8\",\"y\":\"2\",\"width\":\"8\",\"height\":\"4\",\"rx\":\"1\",\"ry\":\"1\"},\"child\":[]}]})(props);\n};\nexport function FiClock (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"12 6 12 12 16 14\"},\"child\":[]}]})(props);\n};\nexport function FiCloudDrizzle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"19\",\"x2\":\"8\",\"y2\":\"21\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"13\",\"x2\":\"8\",\"y2\":\"15\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"19\",\"x2\":\"16\",\"y2\":\"21\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"13\",\"x2\":\"16\",\"y2\":\"15\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"21\",\"x2\":\"12\",\"y2\":\"23\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"15\",\"x2\":\"12\",\"y2\":\"17\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25\"},\"child\":[]}]})(props);\n};\nexport function FiCloudLightning (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"13 11 9 17 15 17 11 23\"},\"child\":[]}]})(props);\n};\nexport function FiCloudOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"},\"child\":[]}]})(props);\n};\nexport function FiCloudRain (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"13\",\"x2\":\"16\",\"y2\":\"21\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"13\",\"x2\":\"8\",\"y2\":\"21\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"15\",\"x2\":\"12\",\"y2\":\"23\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25\"},\"child\":[]}]})(props);\n};\nexport function FiCloudSnow (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"16\",\"x2\":\"8.01\",\"y2\":\"16\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"20\",\"x2\":\"8.01\",\"y2\":\"20\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"18\",\"x2\":\"12.01\",\"y2\":\"18\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22\",\"x2\":\"12.01\",\"y2\":\"22\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"16\",\"x2\":\"16.01\",\"y2\":\"16\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"20\",\"x2\":\"16.01\",\"y2\":\"20\"},\"child\":[]}]})(props);\n};\nexport function FiCloud (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z\"},\"child\":[]}]})(props);\n};\nexport function FiCode (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 18 22 12 16 6\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"8 6 2 12 8 18\"},\"child\":[]}]})(props);\n};\nexport function FiCodepen (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22\",\"x2\":\"12\",\"y2\":\"15.5\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"22 8.5 12 15.5 2 8.5\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"2 15.5 12 8.5 22 15.5\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"2\",\"x2\":\"12\",\"y2\":\"8.5\"},\"child\":[]}]})(props);\n};\nexport function FiCodesandbox (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7.5 4.21 12 6.81 16.5 4.21\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7.5 19.79 7.5 14.6 3 12\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"21 12 16.5 14.6 16.5 19.79\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"3.27 6.96 12 12.01 20.73 6.96\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22.08\",\"x2\":\"12\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiCoffee (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18 8h1a4 4 0 0 1 0 8h-1\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"1\",\"x2\":\"6\",\"y2\":\"4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"10\",\"y1\":\"1\",\"x2\":\"10\",\"y2\":\"4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"14\",\"y1\":\"1\",\"x2\":\"14\",\"y2\":\"4\"},\"child\":[]}]})(props);\n};\nexport function FiColumns (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12 3h7a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-7m0-18H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7m0-18v18\"},\"child\":[]}]})(props);\n};\nexport function FiCommand (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z\"},\"child\":[]}]})(props);\n};\nexport function FiCompass (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"polygon\",\"attr\":{\"points\":\"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76\"},\"child\":[]}]})(props);\n};\nexport function FiCopy (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"9\",\"y\":\"9\",\"width\":\"13\",\"height\":\"13\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"},\"child\":[]}]})(props);\n};\nexport function FiCornerDownLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"9 10 4 15 9 20\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20 4v7a4 4 0 0 1-4 4H4\"},\"child\":[]}]})(props);\n};\nexport function FiCornerDownRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"15 10 20 15 15 20\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M4 4v7a4 4 0 0 0 4 4h12\"},\"child\":[]}]})(props);\n};\nexport function FiCornerLeftDown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"14 15 9 20 4 15\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20 4h-7a4 4 0 0 0-4 4v12\"},\"child\":[]}]})(props);\n};\nexport function FiCornerLeftUp (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"14 9 9 4 4 9\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20 20h-7a4 4 0 0 1-4-4V4\"},\"child\":[]}]})(props);\n};\nexport function FiCornerRightDown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"10 15 15 20 20 15\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M4 4h7a4 4 0 0 1 4 4v12\"},\"child\":[]}]})(props);\n};\nexport function FiCornerRightUp (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"10 9 15 4 20 9\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M4 20h7a4 4 0 0 0 4-4V4\"},\"child\":[]}]})(props);\n};\nexport function FiCornerUpLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"9 14 4 9 9 4\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20 20v-7a4 4 0 0 0-4-4H4\"},\"child\":[]}]})(props);\n};\nexport function FiCornerUpRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"15 14 20 9 15 4\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M4 20v-7a4 4 0 0 1 4-4h12\"},\"child\":[]}]})(props);\n};\nexport function FiCpu (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"4\",\"y\":\"4\",\"width\":\"16\",\"height\":\"16\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"9\",\"y\":\"9\",\"width\":\"6\",\"height\":\"6\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"1\",\"x2\":\"9\",\"y2\":\"4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"1\",\"x2\":\"15\",\"y2\":\"4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"20\",\"x2\":\"9\",\"y2\":\"23\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"20\",\"x2\":\"15\",\"y2\":\"23\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"20\",\"y1\":\"9\",\"x2\":\"23\",\"y2\":\"9\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"20\",\"y1\":\"14\",\"x2\":\"23\",\"y2\":\"14\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"9\",\"x2\":\"4\",\"y2\":\"9\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"14\",\"x2\":\"4\",\"y2\":\"14\"},\"child\":[]}]})(props);\n};\nexport function FiCreditCard (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"1\",\"y\":\"4\",\"width\":\"22\",\"height\":\"16\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"10\",\"x2\":\"23\",\"y2\":\"10\"},\"child\":[]}]})(props);\n};\nexport function FiCrop (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M6.13 1L6 16a2 2 0 0 0 2 2h15\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M1 6.13L16 6a2 2 0 0 1 2 2v15\"},\"child\":[]}]})(props);\n};\nexport function FiCrosshair (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"22\",\"y1\":\"12\",\"x2\":\"18\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"12\",\"x2\":\"2\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"6\",\"x2\":\"12\",\"y2\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22\",\"x2\":\"12\",\"y2\":\"18\"},\"child\":[]}]})(props);\n};\nexport function FiDatabase (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"ellipse\",\"attr\":{\"cx\":\"12\",\"cy\":\"5\",\"rx\":\"9\",\"ry\":\"3\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5\"},\"child\":[]}]})(props);\n};\nexport function FiDelete (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"9\",\"x2\":\"12\",\"y2\":\"15\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"9\",\"x2\":\"18\",\"y2\":\"15\"},\"child\":[]}]})(props);\n};\nexport function FiDisc (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"3\"},\"child\":[]}]})(props);\n};\nexport function FiDivideCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"16\",\"x2\":\"12\",\"y2\":\"16\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"8\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]}]})(props);\n};\nexport function FiDivideSquare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"16\",\"x2\":\"12\",\"y2\":\"16\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"8\"},\"child\":[]}]})(props);\n};\nexport function FiDivide (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"6\",\"r\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"5\",\"y1\":\"12\",\"x2\":\"19\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"18\",\"r\":\"2\"},\"child\":[]}]})(props);\n};\nexport function FiDollarSign (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"1\",\"x2\":\"12\",\"y2\":\"23\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"},\"child\":[]}]})(props);\n};\nexport function FiDownloadCloud (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"8 17 12 21 16 17\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"12\",\"x2\":\"12\",\"y2\":\"21\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29\"},\"child\":[]}]})(props);\n};\nexport function FiDownload (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7 10 12 15 17 10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"15\",\"x2\":\"12\",\"y2\":\"3\"},\"child\":[]}]})(props);\n};\nexport function FiDribbble (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.56 2.75c4.37 6.03 6.02 9.42 8.03 17.72m2.54-15.38c-3.72 4.35-8.94 5.66-16.88 5.85m19.5 1.9c-3.5-.93-6.63-.82-8.94 0-2.58.92-5.01 2.86-7.44 6.32\"},\"child\":[]}]})(props);\n};\nexport function FiDroplet (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z\"},\"child\":[]}]})(props);\n};\nexport function FiEdit2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"},\"child\":[]}]})(props);\n};\nexport function FiEdit3 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12 20h9\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z\"},\"child\":[]}]})(props);\n};\nexport function FiEdit (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"},\"child\":[]}]})(props);\n};\nexport function FiExternalLink (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"15 3 21 3 21 9\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"10\",\"y1\":\"14\",\"x2\":\"21\",\"y2\":\"3\"},\"child\":[]}]})(props);\n};\nexport function FiEyeOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"},\"child\":[]}]})(props);\n};\nexport function FiEye (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"3\"},\"child\":[]}]})(props);\n};\nexport function FiFacebook (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\"},\"child\":[]}]})(props);\n};\nexport function FiFastForward (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"13 19 22 12 13 5 13 19\"},\"child\":[]},{\"tag\":\"polygon\",\"attr\":{\"points\":\"2 19 11 12 2 5 2 19\"},\"child\":[]}]})(props);\n};\nexport function FiFeather (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"8\",\"x2\":\"2\",\"y2\":\"22\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"17.5\",\"y1\":\"15\",\"x2\":\"9\",\"y2\":\"15\"},\"child\":[]}]})(props);\n};\nexport function FiFigma (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z\"},\"child\":[]}]})(props);\n};\nexport function FiFileMinus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"14 2 14 8 20 8\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"15\",\"x2\":\"15\",\"y2\":\"15\"},\"child\":[]}]})(props);\n};\nexport function FiFilePlus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"14 2 14 8 20 8\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"18\",\"x2\":\"12\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"15\",\"x2\":\"15\",\"y2\":\"15\"},\"child\":[]}]})(props);\n};\nexport function FiFileText (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"14 2 14 8 20 8\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"13\",\"x2\":\"8\",\"y2\":\"13\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"17\",\"x2\":\"8\",\"y2\":\"17\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"10 9 9 9 8 9\"},\"child\":[]}]})(props);\n};\nexport function FiFile (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"13 2 13 9 20 9\"},\"child\":[]}]})(props);\n};\nexport function FiFilm (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"2\",\"width\":\"20\",\"height\":\"20\",\"rx\":\"2.18\",\"ry\":\"2.18\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"7\",\"y1\":\"2\",\"x2\":\"7\",\"y2\":\"22\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"2\",\"x2\":\"17\",\"y2\":\"22\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"2\",\"y1\":\"12\",\"x2\":\"22\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"2\",\"y1\":\"7\",\"x2\":\"7\",\"y2\":\"7\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"2\",\"y1\":\"17\",\"x2\":\"7\",\"y2\":\"17\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"17\",\"x2\":\"22\",\"y2\":\"17\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"7\",\"x2\":\"22\",\"y2\":\"7\"},\"child\":[]}]})(props);\n};\nexport function FiFilter (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3\"},\"child\":[]}]})(props);\n};\nexport function FiFlag (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"22\",\"x2\":\"4\",\"y2\":\"15\"},\"child\":[]}]})(props);\n};\nexport function FiFolderMinus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"14\",\"x2\":\"15\",\"y2\":\"14\"},\"child\":[]}]})(props);\n};\nexport function FiFolderPlus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"11\",\"x2\":\"12\",\"y2\":\"17\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"14\",\"x2\":\"15\",\"y2\":\"14\"},\"child\":[]}]})(props);\n};\nexport function FiFolder (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"},\"child\":[]}]})(props);\n};\nexport function FiFramer (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M5 16V9h14V2H5l14 14h-7m-7 0l7 7v-7m-7 0h7\"},\"child\":[]}]})(props);\n};\nexport function FiFrown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16 16s-1.5-2-4-2-4 2-4 2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"9\",\"x2\":\"9.01\",\"y2\":\"9\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"9\",\"x2\":\"15.01\",\"y2\":\"9\"},\"child\":[]}]})(props);\n};\nexport function FiGift (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"20 12 20 22 4 22 4 12\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"7\",\"width\":\"20\",\"height\":\"5\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22\",\"x2\":\"12\",\"y2\":\"7\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z\"},\"child\":[]}]})(props);\n};\nexport function FiGitBranch (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"3\",\"x2\":\"6\",\"y2\":\"15\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18\",\"cy\":\"6\",\"r\":\"3\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"6\",\"cy\":\"18\",\"r\":\"3\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18 9a9 9 0 0 1-9 9\"},\"child\":[]}]})(props);\n};\nexport function FiGitCommit (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"1.05\",\"y1\":\"12\",\"x2\":\"7\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"17.01\",\"y1\":\"12\",\"x2\":\"22.96\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiGitMerge (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"18\",\"cy\":\"18\",\"r\":\"3\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"6\",\"cy\":\"6\",\"r\":\"3\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M6 21V9a9 9 0 0 0 9 9\"},\"child\":[]}]})(props);\n};\nexport function FiGitPullRequest (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"18\",\"cy\":\"18\",\"r\":\"3\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"6\",\"cy\":\"6\",\"r\":\"3\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13 6h3a2 2 0 0 1 2 2v7\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"9\",\"x2\":\"6\",\"y2\":\"21\"},\"child\":[]}]})(props);\n};\nexport function FiGithub (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"},\"child\":[]}]})(props);\n};\nexport function FiGitlab (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z\"},\"child\":[]}]})(props);\n};\nexport function FiGlobe (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"2\",\"y1\":\"12\",\"x2\":\"22\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"},\"child\":[]}]})(props);\n};\nexport function FiGrid (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"7\",\"height\":\"7\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"14\",\"y\":\"3\",\"width\":\"7\",\"height\":\"7\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"14\",\"y\":\"14\",\"width\":\"7\",\"height\":\"7\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"14\",\"width\":\"7\",\"height\":\"7\"},\"child\":[]}]})(props);\n};\nexport function FiHardDrive (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"22\",\"y1\":\"12\",\"x2\":\"2\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"16\",\"x2\":\"6.01\",\"y2\":\"16\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"10\",\"y1\":\"16\",\"x2\":\"10.01\",\"y2\":\"16\"},\"child\":[]}]})(props);\n};\nexport function FiHash (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"9\",\"x2\":\"20\",\"y2\":\"9\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"15\",\"x2\":\"20\",\"y2\":\"15\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"10\",\"y1\":\"3\",\"x2\":\"8\",\"y2\":\"21\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"3\",\"x2\":\"14\",\"y2\":\"21\"},\"child\":[]}]})(props);\n};\nexport function FiHeadphones (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3 18v-6a9 9 0 0 1 18 0v6\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z\"},\"child\":[]}]})(props);\n};\nexport function FiHeart (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"},\"child\":[]}]})(props);\n};\nexport function FiHelpCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"17\",\"x2\":\"12.01\",\"y2\":\"17\"},\"child\":[]}]})(props);\n};\nexport function FiHexagon (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"},\"child\":[]}]})(props);\n};\nexport function FiHome (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"9 22 9 12 15 12 15 22\"},\"child\":[]}]})(props);\n};\nexport function FiImage (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8.5\",\"cy\":\"8.5\",\"r\":\"1.5\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"21 15 16 10 5 21\"},\"child\":[]}]})(props);\n};\nexport function FiInbox (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"22 12 16 12 14 15 10 15 8 12 2 12\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"},\"child\":[]}]})(props);\n};\nexport function FiInfo (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"16\",\"x2\":\"12\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12.01\",\"y2\":\"8\"},\"child\":[]}]})(props);\n};\nexport function FiInstagram (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"2\",\"width\":\"20\",\"height\":\"20\",\"rx\":\"5\",\"ry\":\"5\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"17.5\",\"y1\":\"6.5\",\"x2\":\"17.51\",\"y2\":\"6.5\"},\"child\":[]}]})(props);\n};\nexport function FiItalic (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"19\",\"y1\":\"4\",\"x2\":\"10\",\"y2\":\"4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"14\",\"y1\":\"20\",\"x2\":\"5\",\"y2\":\"20\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"4\",\"x2\":\"9\",\"y2\":\"20\"},\"child\":[]}]})(props);\n};\nexport function FiKey (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 2l-2 2m-7.61 7.61a5.5 5.5 0 1 1-7.778 7.778 5.5 5.5 0 0 1 7.777-7.777zm0 0L15.5 7.5m0 0l3 3L22 7l-3-3m-3.5 3.5L19 4\"},\"child\":[]}]})(props);\n};\nexport function FiLayers (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"12 2 2 7 12 12 22 7 12 2\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"2 17 12 22 22 17\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"2 12 12 17 22 12\"},\"child\":[]}]})(props);\n};\nexport function FiLayout (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"9\",\"x2\":\"21\",\"y2\":\"9\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"21\",\"x2\":\"9\",\"y2\":\"9\"},\"child\":[]}]})(props);\n};\nexport function FiLifeBuoy (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.93\",\"y1\":\"4.93\",\"x2\":\"9.17\",\"y2\":\"9.17\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"14.83\",\"y1\":\"14.83\",\"x2\":\"19.07\",\"y2\":\"19.07\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"14.83\",\"y1\":\"9.17\",\"x2\":\"19.07\",\"y2\":\"4.93\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"14.83\",\"y1\":\"9.17\",\"x2\":\"18.36\",\"y2\":\"5.64\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.93\",\"y1\":\"19.07\",\"x2\":\"9.17\",\"y2\":\"14.83\"},\"child\":[]}]})(props);\n};\nexport function FiLink2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiLink (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"},\"child\":[]}]})(props);\n};\nexport function FiLinkedin (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"9\",\"width\":\"4\",\"height\":\"12\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"4\",\"cy\":\"4\",\"r\":\"2\"},\"child\":[]}]})(props);\n};\nexport function FiList (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"6\",\"x2\":\"21\",\"y2\":\"6\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"21\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"18\",\"x2\":\"21\",\"y2\":\"18\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"6\",\"x2\":\"3.01\",\"y2\":\"6\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"12\",\"x2\":\"3.01\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"18\",\"x2\":\"3.01\",\"y2\":\"18\"},\"child\":[]}]})(props);\n};\nexport function FiLoader (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"2\",\"x2\":\"12\",\"y2\":\"6\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"18\",\"x2\":\"12\",\"y2\":\"22\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.93\",\"y1\":\"4.93\",\"x2\":\"7.76\",\"y2\":\"7.76\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"16.24\",\"y1\":\"16.24\",\"x2\":\"19.07\",\"y2\":\"19.07\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"2\",\"y1\":\"12\",\"x2\":\"6\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"12\",\"x2\":\"22\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.93\",\"y1\":\"19.07\",\"x2\":\"7.76\",\"y2\":\"16.24\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"16.24\",\"y1\":\"7.76\",\"x2\":\"19.07\",\"y2\":\"4.93\"},\"child\":[]}]})(props);\n};\nexport function FiLock (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"11\",\"width\":\"18\",\"height\":\"11\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M7 11V7a5 5 0 0 1 10 0v4\"},\"child\":[]}]})(props);\n};\nexport function FiLogIn (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"10 17 15 12 10 7\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"12\",\"x2\":\"3\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiLogOut (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 17 21 12 16 7\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"12\",\"x2\":\"9\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiMail (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"22,6 12,13 2,6\"},\"child\":[]}]})(props);\n};\nexport function FiMapPin (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"10\",\"r\":\"3\"},\"child\":[]}]})(props);\n};\nexport function FiMap (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"2\",\"x2\":\"8\",\"y2\":\"18\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"6\",\"x2\":\"16\",\"y2\":\"22\"},\"child\":[]}]})(props);\n};\nexport function FiMaximize2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"15 3 21 3 21 9\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"9 21 3 21 3 15\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"3\",\"x2\":\"14\",\"y2\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"21\",\"x2\":\"10\",\"y2\":\"14\"},\"child\":[]}]})(props);\n};\nexport function FiMaximize (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3\"},\"child\":[]}]})(props);\n};\nexport function FiMeh (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"15\",\"x2\":\"16\",\"y2\":\"15\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"9\",\"x2\":\"9.01\",\"y2\":\"9\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"9\",\"x2\":\"15.01\",\"y2\":\"9\"},\"child\":[]}]})(props);\n};\nexport function FiMenu (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"12\",\"x2\":\"21\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"6\",\"x2\":\"21\",\"y2\":\"6\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"18\",\"x2\":\"21\",\"y2\":\"18\"},\"child\":[]}]})(props);\n};\nexport function FiMessageCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z\"},\"child\":[]}]})(props);\n};\nexport function FiMessageSquare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"},\"child\":[]}]})(props);\n};\nexport function FiMicOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"19\",\"x2\":\"12\",\"y2\":\"23\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"23\",\"x2\":\"16\",\"y2\":\"23\"},\"child\":[]}]})(props);\n};\nexport function FiMic (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M19 10v2a7 7 0 0 1-14 0v-2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"19\",\"x2\":\"12\",\"y2\":\"23\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"23\",\"x2\":\"16\",\"y2\":\"23\"},\"child\":[]}]})(props);\n};\nexport function FiMinimize2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"4 14 10 14 10 20\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"20 10 14 10 14 4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"14\",\"y1\":\"10\",\"x2\":\"21\",\"y2\":\"3\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"21\",\"x2\":\"10\",\"y2\":\"14\"},\"child\":[]}]})(props);\n};\nexport function FiMinimize (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3\"},\"child\":[]}]})(props);\n};\nexport function FiMinusCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiMinusSquare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiMinus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"5\",\"y1\":\"12\",\"x2\":\"19\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiMonitor (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"3\",\"width\":\"20\",\"height\":\"14\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"21\",\"x2\":\"16\",\"y2\":\"21\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"17\",\"x2\":\"12\",\"y2\":\"21\"},\"child\":[]}]})(props);\n};\nexport function FiMoon (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"},\"child\":[]}]})(props);\n};\nexport function FiMoreHorizontal (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"19\",\"cy\":\"12\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"5\",\"cy\":\"12\",\"r\":\"1\"},\"child\":[]}]})(props);\n};\nexport function FiMoreVertical (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"5\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"19\",\"r\":\"1\"},\"child\":[]}]})(props);\n};\nexport function FiMousePointer (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13 13l6 6\"},\"child\":[]}]})(props);\n};\nexport function FiMove (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"5 9 2 12 5 15\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"9 5 12 2 15 5\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"15 19 12 22 9 19\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"19 9 22 12 19 15\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"2\",\"y1\":\"12\",\"x2\":\"22\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"2\",\"x2\":\"12\",\"y2\":\"22\"},\"child\":[]}]})(props);\n};\nexport function FiMusic (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M9 18V5l12-2v13\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"6\",\"cy\":\"18\",\"r\":\"3\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18\",\"cy\":\"16\",\"r\":\"3\"},\"child\":[]}]})(props);\n};\nexport function FiNavigation2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"12 2 19 21 12 17 5 21 12 2\"},\"child\":[]}]})(props);\n};\nexport function FiNavigation (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"3 11 22 2 13 21 11 13 3 11\"},\"child\":[]}]})(props);\n};\nexport function FiOctagon (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"},\"child\":[]}]})(props);\n};\nexport function FiPackage (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"16.5\",\"y1\":\"9.4\",\"x2\":\"7.5\",\"y2\":\"4.21\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"3.27 6.96 12 12.01 20.73 6.96\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22.08\",\"x2\":\"12\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiPaperclip (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48\"},\"child\":[]}]})(props);\n};\nexport function FiPauseCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"10\",\"y1\":\"15\",\"x2\":\"10\",\"y2\":\"9\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"14\",\"y1\":\"15\",\"x2\":\"14\",\"y2\":\"9\"},\"child\":[]}]})(props);\n};\nexport function FiPause (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"6\",\"y\":\"4\",\"width\":\"4\",\"height\":\"16\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"14\",\"y\":\"4\",\"width\":\"4\",\"height\":\"16\"},\"child\":[]}]})(props);\n};\nexport function FiPenTool (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12 19l7-7 3 3-7 7-3-3z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M2 2l7.586 7.586\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"11\",\"cy\":\"11\",\"r\":\"2\"},\"child\":[]}]})(props);\n};\nexport function FiPercent (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"19\",\"y1\":\"5\",\"x2\":\"5\",\"y2\":\"19\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"6.5\",\"cy\":\"6.5\",\"r\":\"2.5\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"17.5\",\"cy\":\"17.5\",\"r\":\"2.5\"},\"child\":[]}]})(props);\n};\nexport function FiPhoneCall (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"},\"child\":[]}]})(props);\n};\nexport function FiPhoneForwarded (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"19 1 23 5 19 9\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"5\",\"x2\":\"23\",\"y2\":\"5\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"},\"child\":[]}]})(props);\n};\nexport function FiPhoneIncoming (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 2 16 8 22 8\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"1\",\"x2\":\"16\",\"y2\":\"8\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"},\"child\":[]}]})(props);\n};\nexport function FiPhoneMissed (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"1\",\"x2\":\"17\",\"y2\":\"7\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"7\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"},\"child\":[]}]})(props);\n};\nexport function FiPhoneOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"1\",\"x2\":\"1\",\"y2\":\"23\"},\"child\":[]}]})(props);\n};\nexport function FiPhoneOutgoing (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"23 7 23 1 17 1\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"8\",\"x2\":\"23\",\"y2\":\"1\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"},\"child\":[]}]})(props);\n};\nexport function FiPhone (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"},\"child\":[]}]})(props);\n};\nexport function FiPieChart (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.21 15.89A10 10 0 1 1 8 2.83\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M22 12A10 10 0 0 0 12 2v10z\"},\"child\":[]}]})(props);\n};\nexport function FiPlayCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"polygon\",\"attr\":{\"points\":\"10 8 16 12 10 16 10 8\"},\"child\":[]}]})(props);\n};\nexport function FiPlay (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"5 3 19 12 5 21 5 3\"},\"child\":[]}]})(props);\n};\nexport function FiPlusCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"16\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiPlusSquare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"16\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiPlus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"5\",\"x2\":\"12\",\"y2\":\"19\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"5\",\"y1\":\"12\",\"x2\":\"19\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiPocket (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"8 10 12 14 16 10\"},\"child\":[]}]})(props);\n};\nexport function FiPower (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.36 6.64a9 9 0 1 1-12.73 0\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"2\",\"x2\":\"12\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiPrinter (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"6 9 6 2 18 2 18 9\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"6\",\"y\":\"14\",\"width\":\"12\",\"height\":\"8\"},\"child\":[]}]})(props);\n};\nexport function FiRadio (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"2\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14\"},\"child\":[]}]})(props);\n};\nexport function FiRefreshCcw (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"1 4 1 10 7 10\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"23 20 23 14 17 14\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\"},\"child\":[]}]})(props);\n};\nexport function FiRefreshCw (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"23 4 23 10 17 10\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"1 20 1 14 7 14\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\"},\"child\":[]}]})(props);\n};\nexport function FiRepeat (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 1 21 5 17 9\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M3 11V9a4 4 0 0 1 4-4h14\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7 23 3 19 7 15\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M21 13v2a4 4 0 0 1-4 4H3\"},\"child\":[]}]})(props);\n};\nexport function FiRewind (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"11 19 2 12 11 5 11 19\"},\"child\":[]},{\"tag\":\"polygon\",\"attr\":{\"points\":\"22 19 13 12 22 5 22 19\"},\"child\":[]}]})(props);\n};\nexport function FiRotateCcw (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"1 4 1 10 7 10\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M3.51 15a9 9 0 1 0 2.13-9.36L1 10\"},\"child\":[]}]})(props);\n};\nexport function FiRotateCw (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"23 4 23 10 17 10\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.49 15a9 9 0 1 1-2.12-9.36L23 10\"},\"child\":[]}]})(props);\n};\nexport function FiRss (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4 11a9 9 0 0 1 9 9\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M4 4a16 16 0 0 1 16 16\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"5\",\"cy\":\"19\",\"r\":\"1\"},\"child\":[]}]})(props);\n};\nexport function FiSave (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 21 17 13 7 13 7 21\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7 3 7 8 15 8\"},\"child\":[]}]})(props);\n};\nexport function FiScissors (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"6\",\"cy\":\"6\",\"r\":\"3\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"6\",\"cy\":\"18\",\"r\":\"3\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"20\",\"y1\":\"4\",\"x2\":\"8.12\",\"y2\":\"15.88\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"14.47\",\"y1\":\"14.48\",\"x2\":\"20\",\"y2\":\"20\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8.12\",\"y1\":\"8.12\",\"x2\":\"12\",\"y2\":\"12\"},\"child\":[]}]})(props);\n};\nexport function FiSearch (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"11\",\"cy\":\"11\",\"r\":\"8\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"21\",\"x2\":\"16.65\",\"y2\":\"16.65\"},\"child\":[]}]})(props);\n};\nexport function FiSend (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"22\",\"y1\":\"2\",\"x2\":\"11\",\"y2\":\"13\"},\"child\":[]},{\"tag\":\"polygon\",\"attr\":{\"points\":\"22 2 15 22 11 13 2 9 22 2\"},\"child\":[]}]})(props);\n};\nexport function FiServer (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"2\",\"width\":\"20\",\"height\":\"8\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"14\",\"width\":\"20\",\"height\":\"8\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"6\",\"x2\":\"6.01\",\"y2\":\"6\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"18\",\"x2\":\"6.01\",\"y2\":\"18\"},\"child\":[]}]})(props);\n};\nexport function FiSettings (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"3\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"},\"child\":[]}]})(props);\n};\nexport function FiShare2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"18\",\"cy\":\"5\",\"r\":\"3\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"6\",\"cy\":\"12\",\"r\":\"3\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18\",\"cy\":\"19\",\"r\":\"3\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8.59\",\"y1\":\"13.51\",\"x2\":\"15.42\",\"y2\":\"17.49\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"15.41\",\"y1\":\"6.51\",\"x2\":\"8.59\",\"y2\":\"10.49\"},\"child\":[]}]})(props);\n};\nexport function FiShare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 6 12 2 8 6\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"2\",\"x2\":\"12\",\"y2\":\"15\"},\"child\":[]}]})(props);\n};\nexport function FiShieldOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"},\"child\":[]}]})(props);\n};\nexport function FiShield (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\"},\"child\":[]}]})(props);\n};\nexport function FiShoppingBag (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"6\",\"x2\":\"21\",\"y2\":\"6\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16 10a4 4 0 0 1-8 0\"},\"child\":[]}]})(props);\n};\nexport function FiShoppingCart (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"9\",\"cy\":\"21\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"20\",\"cy\":\"21\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"},\"child\":[]}]})(props);\n};\nexport function FiShuffle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 3 21 3 21 8\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"20\",\"x2\":\"21\",\"y2\":\"3\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"21 16 21 21 16 21\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"15\",\"x2\":\"21\",\"y2\":\"21\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"4\",\"x2\":\"9\",\"y2\":\"9\"},\"child\":[]}]})(props);\n};\nexport function FiSidebar (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"3\",\"x2\":\"9\",\"y2\":\"21\"},\"child\":[]}]})(props);\n};\nexport function FiSkipBack (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"19 20 9 12 19 4 19 20\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"5\",\"y1\":\"19\",\"x2\":\"5\",\"y2\":\"5\"},\"child\":[]}]})(props);\n};\nexport function FiSkipForward (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"5 4 15 12 5 20 5 4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"19\",\"y1\":\"5\",\"x2\":\"19\",\"y2\":\"19\"},\"child\":[]}]})(props);\n};\nexport function FiSlack (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z\"},\"child\":[]}]})(props);\n};\nexport function FiSlash (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.93\",\"y1\":\"4.93\",\"x2\":\"19.07\",\"y2\":\"19.07\"},\"child\":[]}]})(props);\n};\nexport function FiSliders (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"21\",\"x2\":\"4\",\"y2\":\"14\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"10\",\"x2\":\"4\",\"y2\":\"3\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"21\",\"x2\":\"12\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"3\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"20\",\"y1\":\"21\",\"x2\":\"20\",\"y2\":\"16\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"20\",\"y1\":\"12\",\"x2\":\"20\",\"y2\":\"3\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"14\",\"x2\":\"7\",\"y2\":\"14\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"8\",\"x2\":\"15\",\"y2\":\"8\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"16\",\"x2\":\"23\",\"y2\":\"16\"},\"child\":[]}]})(props);\n};\nexport function FiSmartphone (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"5\",\"y\":\"2\",\"width\":\"14\",\"height\":\"20\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"18\",\"x2\":\"12.01\",\"y2\":\"18\"},\"child\":[]}]})(props);\n};\nexport function FiSmile (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8 14s1.5 2 4 2 4-2 4-2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"9\",\"x2\":\"9.01\",\"y2\":\"9\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"9\",\"x2\":\"15.01\",\"y2\":\"9\"},\"child\":[]}]})(props);\n};\nexport function FiSpeaker (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"4\",\"y\":\"2\",\"width\":\"16\",\"height\":\"20\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"14\",\"r\":\"4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"6\",\"x2\":\"12.01\",\"y2\":\"6\"},\"child\":[]}]})(props);\n};\nexport function FiSquare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]}]})(props);\n};\nexport function FiStar (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"},\"child\":[]}]})(props);\n};\nexport function FiStopCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"9\",\"y\":\"9\",\"width\":\"6\",\"height\":\"6\"},\"child\":[]}]})(props);\n};\nexport function FiSun (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"5\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"1\",\"x2\":\"12\",\"y2\":\"3\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"21\",\"x2\":\"12\",\"y2\":\"23\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.22\",\"y1\":\"4.22\",\"x2\":\"5.64\",\"y2\":\"5.64\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"18.36\",\"y1\":\"18.36\",\"x2\":\"19.78\",\"y2\":\"19.78\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"12\",\"x2\":\"3\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"12\",\"x2\":\"23\",\"y2\":\"12\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.22\",\"y1\":\"19.78\",\"x2\":\"5.64\",\"y2\":\"18.36\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"18.36\",\"y1\":\"5.64\",\"x2\":\"19.78\",\"y2\":\"4.22\"},\"child\":[]}]})(props);\n};\nexport function FiSunrise (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17 18a5 5 0 0 0-10 0\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"2\",\"x2\":\"12\",\"y2\":\"9\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.22\",\"y1\":\"10.22\",\"x2\":\"5.64\",\"y2\":\"11.64\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"18\",\"x2\":\"3\",\"y2\":\"18\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"18\",\"x2\":\"23\",\"y2\":\"18\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"18.36\",\"y1\":\"11.64\",\"x2\":\"19.78\",\"y2\":\"10.22\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"22\",\"x2\":\"1\",\"y2\":\"22\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"8 6 12 2 16 6\"},\"child\":[]}]})(props);\n};\nexport function FiSunset (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17 18a5 5 0 0 0-10 0\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"9\",\"x2\":\"12\",\"y2\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.22\",\"y1\":\"10.22\",\"x2\":\"5.64\",\"y2\":\"11.64\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"18\",\"x2\":\"3\",\"y2\":\"18\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"18\",\"x2\":\"23\",\"y2\":\"18\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"18.36\",\"y1\":\"11.64\",\"x2\":\"19.78\",\"y2\":\"10.22\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"22\",\"x2\":\"1\",\"y2\":\"22\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 5 12 9 8 5\"},\"child\":[]}]})(props);\n};\nexport function FiTable (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18\"},\"child\":[]}]})(props);\n};\nexport function FiTablet (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"4\",\"y\":\"2\",\"width\":\"16\",\"height\":\"20\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"18\",\"x2\":\"12.01\",\"y2\":\"18\"},\"child\":[]}]})(props);\n};\nexport function FiTag (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"7\",\"y1\":\"7\",\"x2\":\"7.01\",\"y2\":\"7\"},\"child\":[]}]})(props);\n};\nexport function FiTarget (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"6\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"2\"},\"child\":[]}]})(props);\n};\nexport function FiTerminal (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"4 17 10 11 4 5\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"19\",\"x2\":\"20\",\"y2\":\"19\"},\"child\":[]}]})(props);\n};\nexport function FiThermometer (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z\"},\"child\":[]}]})(props);\n};\nexport function FiThumbsDown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"},\"child\":[]}]})(props);\n};\nexport function FiThumbsUp (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"},\"child\":[]}]})(props);\n};\nexport function FiToggleLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"1\",\"y\":\"5\",\"width\":\"22\",\"height\":\"14\",\"rx\":\"7\",\"ry\":\"7\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8\",\"cy\":\"12\",\"r\":\"3\"},\"child\":[]}]})(props);\n};\nexport function FiToggleRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"1\",\"y\":\"5\",\"width\":\"22\",\"height\":\"14\",\"rx\":\"7\",\"ry\":\"7\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"16\",\"cy\":\"12\",\"r\":\"3\"},\"child\":[]}]})(props);\n};\nexport function FiTool (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z\"},\"child\":[]}]})(props);\n};\nexport function FiTrash2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"3 6 5 6 21 6\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"10\",\"y1\":\"11\",\"x2\":\"10\",\"y2\":\"17\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"14\",\"y1\":\"11\",\"x2\":\"14\",\"y2\":\"17\"},\"child\":[]}]})(props);\n};\nexport function FiTrash (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"3 6 5 6 21 6\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"},\"child\":[]}]})(props);\n};\nexport function FiTrello (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"7\",\"y\":\"7\",\"width\":\"3\",\"height\":\"9\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"14\",\"y\":\"7\",\"width\":\"3\",\"height\":\"5\"},\"child\":[]}]})(props);\n};\nexport function FiTrendingDown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"23 18 13.5 8.5 8.5 13.5 1 6\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 18 23 18 23 12\"},\"child\":[]}]})(props);\n};\nexport function FiTrendingUp (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"23 6 13.5 15.5 8.5 10.5 1 18\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 6 23 6 23 12\"},\"child\":[]}]})(props);\n};\nexport function FiTriangle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"},\"child\":[]}]})(props);\n};\nexport function FiTruck (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"1\",\"y\":\"3\",\"width\":\"15\",\"height\":\"13\"},\"child\":[]},{\"tag\":\"polygon\",\"attr\":{\"points\":\"16 8 20 8 23 11 23 16 16 16 16 8\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"5.5\",\"cy\":\"18.5\",\"r\":\"2.5\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18.5\",\"cy\":\"18.5\",\"r\":\"2.5\"},\"child\":[]}]})(props);\n};\nexport function FiTv (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"7\",\"width\":\"20\",\"height\":\"15\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 2 12 7 7 2\"},\"child\":[]}]})(props);\n};\nexport function FiTwitch (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7\"},\"child\":[]}]})(props);\n};\nexport function FiTwitter (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"},\"child\":[]}]})(props);\n};\nexport function FiType (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"4 7 4 4 20 4 20 7\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"20\",\"x2\":\"15\",\"y2\":\"20\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"4\",\"x2\":\"12\",\"y2\":\"20\"},\"child\":[]}]})(props);\n};\nexport function FiUmbrella (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7\"},\"child\":[]}]})(props);\n};\nexport function FiUnderline (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"21\",\"x2\":\"20\",\"y2\":\"21\"},\"child\":[]}]})(props);\n};\nexport function FiUnlock (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"11\",\"width\":\"18\",\"height\":\"11\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M7 11V7a5 5 0 0 1 9.9-1\"},\"child\":[]}]})(props);\n};\nexport function FiUploadCloud (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 16 12 12 8 16\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"12\",\"x2\":\"12\",\"y2\":\"21\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 16 12 12 8 16\"},\"child\":[]}]})(props);\n};\nexport function FiUpload (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 8 12 3 7 8\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"3\",\"x2\":\"12\",\"y2\":\"15\"},\"child\":[]}]})(props);\n};\nexport function FiUserCheck (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8.5\",\"cy\":\"7\",\"r\":\"4\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 11 19 13 23 9\"},\"child\":[]}]})(props);\n};\nexport function FiUserMinus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8.5\",\"cy\":\"7\",\"r\":\"4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"11\",\"x2\":\"17\",\"y2\":\"11\"},\"child\":[]}]})(props);\n};\nexport function FiUserPlus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8.5\",\"cy\":\"7\",\"r\":\"4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"20\",\"y1\":\"8\",\"x2\":\"20\",\"y2\":\"14\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"11\",\"x2\":\"17\",\"y2\":\"11\"},\"child\":[]}]})(props);\n};\nexport function FiUserX (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8.5\",\"cy\":\"7\",\"r\":\"4\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"8\",\"x2\":\"23\",\"y2\":\"13\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"8\",\"x2\":\"18\",\"y2\":\"13\"},\"child\":[]}]})(props);\n};\nexport function FiUser (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"7\",\"r\":\"4\"},\"child\":[]}]})(props);\n};\nexport function FiUsers (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"9\",\"cy\":\"7\",\"r\":\"4\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M23 21v-2a4 4 0 0 0-3-3.87\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16 3.13a4 4 0 0 1 0 7.75\"},\"child\":[]}]})(props);\n};\nexport function FiVideoOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"},\"child\":[]}]})(props);\n};\nexport function FiVideo (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"23 7 16 12 23 17 23 7\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"1\",\"y\":\"5\",\"width\":\"15\",\"height\":\"14\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]}]})(props);\n};\nexport function FiVoicemail (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"5.5\",\"cy\":\"11.5\",\"r\":\"4.5\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18.5\",\"cy\":\"11.5\",\"r\":\"4.5\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"5.5\",\"y1\":\"16\",\"x2\":\"18.5\",\"y2\":\"16\"},\"child\":[]}]})(props);\n};\nexport function FiVolume1 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15.54 8.46a5 5 0 0 1 0 7.07\"},\"child\":[]}]})(props);\n};\nexport function FiVolume2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07\"},\"child\":[]}]})(props);\n};\nexport function FiVolumeX (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"9\",\"x2\":\"17\",\"y2\":\"15\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"9\",\"x2\":\"23\",\"y2\":\"15\"},\"child\":[]}]})(props);\n};\nexport function FiVolume (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"},\"child\":[]}]})(props);\n};\nexport function FiWatch (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"7\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"12 9 12 12 13.5 13.5\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83\"},\"child\":[]}]})(props);\n};\nexport function FiWifiOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.72 11.06A10.94 10.94 0 0 1 19 12.55\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5 12.55a10.94 10.94 0 0 1 5.17-2.39\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M10.71 5.05A16 16 0 0 1 22.58 9\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M1.42 9a15.91 15.91 0 0 1 4.7-2.88\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.53 16.11a6 6 0 0 1 6.95 0\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"20\",\"x2\":\"12.01\",\"y2\":\"20\"},\"child\":[]}]})(props);\n};\nexport function FiWifi (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M5 12.55a11 11 0 0 1 14.08 0\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M1.42 9a16 16 0 0 1 21.16 0\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.53 16.11a6 6 0 0 1 6.95 0\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"20\",\"x2\":\"12.01\",\"y2\":\"20\"},\"child\":[]}]})(props);\n};\nexport function FiWind (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2\"},\"child\":[]}]})(props);\n};\nexport function FiXCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"9\",\"x2\":\"9\",\"y2\":\"15\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"9\",\"x2\":\"15\",\"y2\":\"15\"},\"child\":[]}]})(props);\n};\nexport function FiXOctagon (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"9\",\"x2\":\"9\",\"y2\":\"15\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"9\",\"x2\":\"15\",\"y2\":\"15\"},\"child\":[]}]})(props);\n};\nexport function FiXSquare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"9\",\"x2\":\"15\",\"y2\":\"15\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"9\",\"x2\":\"9\",\"y2\":\"15\"},\"child\":[]}]})(props);\n};\nexport function FiX (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"6\",\"x2\":\"6\",\"y2\":\"18\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"6\",\"x2\":\"18\",\"y2\":\"18\"},\"child\":[]}]})(props);\n};\nexport function FiYoutube (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z\"},\"child\":[]},{\"tag\":\"polygon\",\"attr\":{\"points\":\"9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02\"},\"child\":[]}]})(props);\n};\nexport function FiZapOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"12.41 6.75 13 2 10.57 4.92\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"18.57 12.91 21 10 15.66 10\"},\"child\":[]},{\"tag\":\"polyline\",\"attr\":{\"points\":\"8 8 3 14 12 14 11 22 16 16\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"},\"child\":[]}]})(props);\n};\nexport function FiZap (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"13 2 3 14 12 14 11 22 21 10 12 10 13 2\"},\"child\":[]}]})(props);\n};\nexport function FiZoomIn (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"11\",\"cy\":\"11\",\"r\":\"8\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"21\",\"x2\":\"16.65\",\"y2\":\"16.65\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"11\",\"y1\":\"8\",\"x2\":\"11\",\"y2\":\"14\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"11\",\"x2\":\"14\",\"y2\":\"11\"},\"child\":[]}]})(props);\n};\nexport function FiZoomOut (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"11\",\"cy\":\"11\",\"r\":\"8\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"21\",\"x2\":\"16.65\",\"y2\":\"16.65\"},\"child\":[]},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"11\",\"x2\":\"14\",\"y2\":\"11\"},\"child\":[]}]})(props);\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals = { H: null, A: null, T: null, S: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop$1() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop$1, noop$1)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction noop() {}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.act = function () {\n  throw Error(\"act(...) is not supported in production builds of React.\");\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    ReactSharedInternals.T = prevTransition;\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, deps) {\n  return ReactSharedInternals.H.useEffect(create, deps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.0.0\";\n","// services/validation/validationService.js\r\n\r\n/**\r\n * Valida os dados do template antes de enviar para a API\r\n * @param {string} templateName - Nome do template\r\n * @param {string} bodyText - Texto do corpo da mensagem\r\n * @param {string} authKey - Chave de autorização da API\r\n * @param {Array} cards - Lista de cards do carrossel\r\n * @throws {Error} Lança erro se alguma validação falhar\r\n */\r\nexport const validateTemplate = (templateName, bodyText, authKey, cards) => {\r\n  // Validação do nome do template\r\n  if (!templateName) {\r\n    throw new Error('Nome do template é obrigatório');\r\n  }\r\n  \r\n  if (templateName.length < 3) {\r\n    throw new Error('Nome do template deve ter pelo menos 3 caracteres');\r\n  }\r\n  \r\n  // Validação do texto do corpo\r\n  if (!bodyText) {\r\n    throw new Error('Texto do corpo da mensagem é obrigatório');\r\n  }\r\n  \r\n  if (bodyText.length > 1024) {\r\n    throw new Error(`Texto do corpo excede o limite de 1024 caracteres. Atual: ${bodyText.length}`);\r\n  }\r\n  \r\n  // Validação da chave de autorização\r\n  if (!authKey) {\r\n    throw new Error('A chave de autorização (Router Key) é obrigatória');\r\n  }\r\n  \r\n  // Validação do número de cards\r\n  if (!cards || cards.length < 2) {\r\n    throw new Error('É necessário pelo menos 2 cards para criar um carrossel');\r\n  }\r\n  \r\n  if (cards.length > 10) {\r\n    throw new Error('O carrossel pode ter no máximo 10 cards');\r\n  }\r\n  \r\n  // Validação detalhada de cada card\r\n  cards.forEach((card, i) => {\r\n    // Validar URL do arquivo\r\n    if (!card.fileUrl) {\r\n      throw new Error(`URL do arquivo é obrigatória para o card ${i + 1}`);\r\n    }\r\n    \r\n    // Validar texto do card\r\n    if (!card.bodyText) {\r\n      throw new Error(`Texto do corpo é obrigatório para o card ${i + 1}`);\r\n    }\r\n    \r\n    if (card.bodyText.length > 160) {\r\n      throw new Error(`Texto do card ${i + 1} excede o limite de 160 caracteres. Atual: ${card.bodyText.length}`);\r\n    }\r\n    \r\n    // Validar file handle\r\n    if (!card.fileHandle) {\r\n      throw new Error(`File Handle não encontrado para o card ${i + 1}. Você deve concluir o upload na etapa anterior.`);\r\n    }\r\n    \r\n    // Validar botões\r\n    if (!card.buttons || card.buttons.length === 0) {\r\n      throw new Error(`Adicione pelo menos um botão para o card ${i + 1}`);\r\n    }\r\n    \r\n    if (card.buttons.length > 2) {\r\n      throw new Error(`O card ${i + 1} pode ter no máximo 2 botões`);\r\n    }\r\n    \r\n    // Validar cada botão do card\r\n    card.buttons.forEach((button, j) => {\r\n      if (!button.text) {\r\n        throw new Error(`Texto do botão ${j+1} no card ${i+1} é obrigatório`);\r\n      }\r\n      \r\n      if (button.text.length > 25) {\r\n        throw new Error(`Texto do botão ${j+1} no card ${i+1} excede o limite de 25 caracteres. Atual: ${button.text.length}`);\r\n      }\r\n      \r\n      if (button.type === 'URL' && !button.url) {\r\n        throw new Error(`URL do botão ${j+1} no card ${i+1} é obrigatório`);\r\n      }\r\n      \r\n      if (button.type === 'PHONE_NUMBER' && !button.phoneNumber) {\r\n        throw new Error(`Número de telefone do botão ${j+1} no card ${i+1} é obrigatório`);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Valida e formata um número de telefone\r\n * @param {string} phoneNumber - Número de telefone a ser validado\r\n * @returns {string} Número de telefone formatado\r\n * @throws {Error} Lança erro se o número for inválido\r\n */\r\nexport const validatePhoneNumber = (phoneNumber) => {\r\n  // Remove todos os caracteres não numéricos\r\n  const cleaned = phoneNumber.replace(/\\D/g, '');\r\n  \r\n  // Verifica se o número tem um formato válido\r\n  if (cleaned.length < 10) {\r\n    throw new Error('Número de telefone inválido. Use formato com DDI+DDD+Número (ex: 5521999999999)');\r\n  }\r\n  \r\n  // Valida código do país\r\n  const countryCode = cleaned.substring(0, 2);\r\n  if (countryCode !== '55') {\r\n    console.warn(`Código de país não é do Brasil: ${countryCode}`);\r\n    // Não lançamos erro, apenas avisamos, pois pode ser um número internacional válido\r\n  }\r\n  \r\n  return cleaned;\r\n};\r\n\r\n/**\r\n * Valida arquivos antes do upload\r\n * @param {File} file - Arquivo a ser validado\r\n * @throws {Error} Lança erro se o arquivo for inválido\r\n */\r\nexport const validateFile = (file) => {\r\n  const allowedTypes = [\r\n    'image/jpeg', 'image/png', 'image/gif', \r\n    'image/webp', 'video/mp4', 'video/webm'\r\n  ];\r\n  const maxFileSize = 50 * 1024 * 1024; // 50MB\r\n\r\n  if (!file) {\r\n    throw new Error('Nenhum arquivo foi fornecido');\r\n  }\r\n\r\n  if (!allowedTypes.includes(file.type)) {\r\n    throw new Error(`Tipo de arquivo não suportado: ${file.type}. Tipos permitidos: JPEG, PNG, GIF, WebP, MP4, WebM`);\r\n  }\r\n\r\n  if (file.size > maxFileSize) {\r\n    throw new Error(`Tamanho do arquivo excede o limite de 50MB. Tamanho atual: ${(file.size / 1024 / 1024).toFixed(2)}MB`);\r\n  }\r\n};\r\n\r\n/**\r\n * Valida URLs antes do upload\r\n * @param {string} url - URL a ser validada\r\n * @returns {boolean} Verdadeiro se a URL for válida\r\n */\r\nexport const isValidUrl = (url) => {\r\n  try {\r\n    new URL(url);\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Verifica se os cards têm URLs válidas para upload\r\n * @param {Array} cards - Array de cards a serem validados\r\n * @throws {Error} Lança erro se alguma URL for inválida\r\n */\r\nexport const validateFileUrls = (cards) => {\r\n  cards.forEach((card, index) => {\r\n    if (!card.fileUrl) {\r\n      throw new Error(`URL do arquivo não informada para o card ${index + 1}`);\r\n    }\r\n    \r\n    if (!isValidUrl(card.fileUrl)) {\r\n      throw new Error(`URL inválida para o card ${index + 1}: ${card.fileUrl}`);\r\n    }\r\n  });\r\n};\r\n\r\nexport const ValidationService = {\r\n  validateUrl: (url) => {\r\n    // Lógica de validação de URL\r\n  },\r\n  validatePhone: (phone) => {\r\n    // Lógica de validação de telefone\r\n  },\r\n  validateTemplate: (template) => {\r\n    // Lógica de validação de template\r\n  }\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"alertContainer\":\"AlertMessage_alertContainer__97bJD\",\"slideIn\":\"AlertMessage_slideIn__67Sc6\",\"alertContent\":\"AlertMessage_alertContent__8VABZ\",\"success\":\"AlertMessage_success__zYeH7\",\"icon\":\"AlertMessage_icon__zasZC\",\"error\":\"AlertMessage_error__Vsb2d\",\"warning\":\"AlertMessage_warning__svh6o\",\"info\":\"AlertMessage_info__bPrZE\",\"message\":\"AlertMessage_message__MVDEf\",\"closeButton\":\"AlertMessage_closeButton__ZoCRM\",\"progressBar\":\"AlertMessage_progressBar__U4qfV\",\"progress\":\"AlertMessage_progress__m+PYm\",\"floating\":\"AlertMessage_floating__peGwV\",\"position-top-right\":\"AlertMessage_position-top-right__TL+hZ\",\"slideInRight\":\"AlertMessage_slideInRight__r3ErF\",\"position-top-center\":\"AlertMessage_position-top-center__imMKN\",\"slideInTop\":\"AlertMessage_slideInTop__FM7Kx\",\"position-top-left\":\"AlertMessage_position-top-left__nuHXr\",\"slideInLeft\":\"AlertMessage_slideInLeft__yHIZy\",\"position-bottom-right\":\"AlertMessage_position-bottom-right__cXfvL\",\"position-bottom-center\":\"AlertMessage_position-bottom-center__rsThc\",\"slideInBottom\":\"AlertMessage_slideInBottom__8Qwh-\",\"position-bottom-left\":\"AlertMessage_position-bottom-left__w7CsP\"};","// components/ui/AlertMessage/AlertMessage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FiAlertCircle, FiCheckCircle, FiInfo, FiX } from 'react-icons/fi';\r\nimport styles from './AlertMessage.module.css';\r\n\r\n/**\r\n * Enhanced AlertMessage component for displaying notifications with customizable positioning\r\n * \r\n * @param {Object} props Component properties\r\n * @param {string} props.id Unique ID for the alert\r\n * @param {string} props.type Type of alert ('success', 'error', 'info', 'warning')\r\n * @param {string} props.content Message content to display\r\n * @param {boolean} props.autoClose Whether the alert should auto-close\r\n * @param {number} props.autoCloseTime Time in ms before auto-closing\r\n * @param {Function} props.onClose Callback function when alert is closed\r\n * @param {string} props.position Positioning of alert ('top-right', 'top-center', 'top-left', 'bottom-right', 'bottom-center', 'bottom-left')\r\n * @param {boolean} props.closable Whether the alert can be manually closed\r\n * @param {boolean} props.floating Whether the alert should float over content\r\n * @param {string} props.className Additional class names\r\n * @returns {JSX.Element|null} AlertMessage component or null if not visible\r\n */\r\nconst AlertMessage = ({ \r\n  id,\r\n  type = 'info',\r\n  content,\r\n  autoClose = true,\r\n  autoCloseTime = 5000,\r\n  onClose = () => {},\r\n  position = 'top-right',\r\n  closable = true,\r\n  floating = true,\r\n  className = '',\r\n  ...restProps\r\n}) => {\r\n  // State to track visibility\r\n  const [visible, setVisible] = useState(true);\r\n  \r\n  // Auto-close the alert after specified time\r\n  useEffect(() => {\r\n    if (autoClose && visible) {\r\n      const timer = setTimeout(() => {\r\n        handleClose();\r\n      }, autoCloseTime);\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [autoClose, visible, autoCloseTime]);\r\n\r\n  // Handle manual close\r\n  const handleClose = () => {\r\n    setVisible(false);\r\n    onClose();\r\n  };\r\n\r\n  // If not visible, don't render\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  // Get appropriate icon based on message type\r\n  const getIcon = () => {\r\n    switch (type) {\r\n      case 'success':\r\n        return <FiCheckCircle className={styles.icon} size={20} />;\r\n      case 'error':\r\n        return <FiAlertCircle className={styles.icon} size={20} />;\r\n      case 'warning':\r\n        return <FiAlertCircle className={styles.icon} size={20} />;\r\n      default:\r\n        return <FiInfo className={styles.icon} size={20} />;\r\n    }\r\n  };\r\n\r\n  // Combine classes for positioning and floating\r\n  const containerClasses = [\r\n    styles.alertContainer,\r\n    styles[type],\r\n    floating ? styles.floating : '',\r\n    styles[`position-${position}`],\r\n    className\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <div \r\n      className={containerClasses} \r\n      role=\"alert\"\r\n      data-alert-id={id}\r\n      {...restProps}\r\n    >\r\n      <div className={styles.alertContent}>\r\n        {getIcon()}\r\n        <div className={styles.message}>{content}</div>\r\n      </div>\r\n      {closable && (\r\n        <button \r\n          className={styles.closeButton} \r\n          onClick={handleClose}\r\n          aria-label=\"Close alert\"\r\n        >\r\n          <FiX size={18} />\r\n        </button>\r\n      )}\r\n      \r\n      {autoClose && (\r\n        <div className={styles.progressBar}>\r\n          <div className={styles.progress} style={{ animationDuration: `${autoCloseTime}ms` }}></div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertMessage;","// components/ui/AlertMessage/AlertContext.js - Versão melhorada\r\nimport React, { createContext, useContext, useState, useCallback, useRef } from 'react';\r\nimport AlertMessage from './AlertMessage';\r\n\r\n// Create the context for alerts\r\nexport const AlertContext = createContext(null);\r\n\r\n// Default configuration for alerts\r\nconst defaultConfig = {\r\n  position: 'top-right',\r\n  autoCloseTime: 5000,\r\n  closable: true,\r\n};\r\n\r\n/**\r\n * Provider component for the Alert system\r\n * Versão melhorada com menos throttling e melhor gerenciamento de estados\r\n * \r\n * @param {Object} props - Component props\r\n * @param {React.ReactNode} props.children - Child components\r\n * @returns {JSX.Element} Provider component\r\n */\r\nexport const AlertProvider = ({ children }) => {\r\n  // State to store alerts\r\n  const [alerts, setAlerts] = useState([]);\r\n  \r\n  // Refs to track alert state between renders\r\n  const enabled = useRef(true);\r\n  const lastAlertTime = useRef(0);\r\n  const alertMessageCache = useRef(new Map());\r\n  const alertCount = useRef(0);\r\n  \r\n  // Remove an alert by ID\r\n  const removeAlert = useCallback((id) => {\r\n    setAlerts((currentAlerts) => \r\n      currentAlerts.filter((alert) => alert.id !== id)\r\n    );\r\n    // Decrease alert count when an alert is removed\r\n    alertCount.current = Math.max(0, alertCount.current - 1);\r\n  }, []);\r\n\r\n  // Clear all alerts\r\n  const clearAll = useCallback(() => {\r\n    setAlerts([]);\r\n    alertCount.current = 0;\r\n  }, []);\r\n\r\n  // Function to add alerts with proper object serialization\r\n  const addAlert = useCallback((content, type, config = {}) => {\r\n    // Ensure enabled state\r\n    if (!enabled.current) {\r\n      console.log(`Alert skipped (disabled): ${content}`);\r\n      return null;\r\n    }\r\n    \r\n    // Generate unique ID\r\n    const id = `alert_${Date.now().toString(36)}_${Math.random().toString(36).substr(2, 5)}`;\r\n    \r\n    // Merge with default configuration\r\n    const alertConfig = { ...defaultConfig, ...config };\r\n    \r\n    // Create the new alert\r\n    const newAlert = {\r\n      id,\r\n      content,\r\n      type,\r\n      ...alertConfig,\r\n    };\r\n    \r\n    // Add the alert to the state\r\n    setAlerts((currentAlerts) => [...currentAlerts, newAlert]);\r\n    alertCount.current += 1;\r\n    \r\n    // If auto-close is enabled, set a timeout to remove the alert\r\n    if (alertConfig.autoCloseTime > 0) {\r\n      setTimeout(() => {\r\n        removeAlert(id);\r\n      }, alertConfig.autoCloseTime);\r\n    }\r\n    \r\n    return id;\r\n  }, [removeAlert]);\r\n\r\n  // Create type-specific alert functions\r\n  const info = useCallback((content, config = {}) => {\r\n    return addAlert(content, 'info', config);\r\n  }, [addAlert]);\r\n  \r\n  const success = useCallback((content, config = {}) => {\r\n    return addAlert(content, 'success', config);\r\n  }, [addAlert]);\r\n  \r\n  const warning = useCallback((content, config = {}) => {\r\n    return addAlert(content, 'warning', config);\r\n  }, [addAlert]);\r\n  \r\n  const error = useCallback((content, config = {}) => {\r\n    return addAlert(content, 'error', config);\r\n  }, [addAlert]);\r\n\r\n  // Improved guardAlert with less throttling and better caching\r\n  const guardAlert = useCallback((type, ...args) => {\r\n    // Skip if alerts are disabled\r\n    if (!enabled.current) {\r\n      console.log(`Alert skipped (not enabled): ${args[0]}`);\r\n      return null;\r\n    }\r\n    \r\n    // Get alert content\r\n    const content = typeof args[0] === 'string' ? args[0] : 'Teste';\r\n    const config = args[1] || {};\r\n    \r\n    // Throttle alerts - prevent too many in quick succession\r\n    // Reduced from 500ms to 300ms for less aggressive throttling\r\n    const now = Date.now();\r\n    if (now - lastAlertTime.current < 300) {\r\n      console.log(`Alert skipped (too frequent): ${content}`);\r\n      return null;\r\n    }\r\n    \r\n    // Create a key for caching\r\n    const cacheKey = `${type.name}:${content}`;\r\n    \r\n    // Check for duplicate alerts (only if they're identical)\r\n    if (alertMessageCache.current.has(cacheKey)) {\r\n      const lastTime = alertMessageCache.current.get(cacheKey);\r\n      // Only consider as duplicate if seen in the last 3 seconds\r\n      if (now - lastTime < 3000) {\r\n        console.log(`Alert skipped (duplicate): ${content}`);\r\n        return null;\r\n      }\r\n    }\r\n    \r\n    // Limit total active alerts - increased from 3 to 5\r\n    if (alertCount.current >= 5) {\r\n      console.log(`Alert skipped (too many): ${content}`);\r\n      return null;\r\n    }\r\n    \r\n    // Update tracking variables\r\n    lastAlertTime.current = now;\r\n    alertMessageCache.current.set(cacheKey, now);\r\n    \r\n    // Clean up old cache entries\r\n    if (alertMessageCache.current.size > 50) {\r\n      // Remove entries older than 10 seconds\r\n      const oldThreshold = now - 10000;\r\n      for (const [key, timestamp] of alertMessageCache.current.entries()) {\r\n        if (timestamp < oldThreshold) {\r\n          alertMessageCache.current.delete(key);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Call the appropriate function in a try-catch block\r\n    try {\r\n      // Make sure the function exists\r\n      if (typeof type === 'function') {\r\n        return type(content, config);\r\n      } else {\r\n        throw new Error(`Invalid alert type: ${type}`);\r\n      }\r\n    } catch (err) {\r\n      console.error(`Error showing alert: ${err.message}`, content);\r\n      return null;\r\n    }\r\n  }, [info, success, warning, error]);\r\n\r\n  // Create the context value\r\n  const contextValue = {\r\n    alerts,\r\n    removeAlert,\r\n    clearAll,\r\n    // Wrap alert functions with the guard\r\n    info: (...args) => guardAlert(info, ...args),\r\n    success: (...args) => guardAlert(success, ...args),\r\n    warning: (...args) => guardAlert(warning, ...args),\r\n    error: (...args) => guardAlert(error, ...args),\r\n    // Utility functions\r\n    disable: () => { enabled.current = false; },\r\n    enable: () => { enabled.current = true; },\r\n    getAlertCount: () => alertCount.current\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider value={contextValue}>\r\n      {children}\r\n      <div className=\"alert-container\">\r\n        {alerts.map((alert) => (\r\n          <AlertMessage\r\n            key={alert.id}\r\n            id={alert.id}\r\n            type={alert.type}\r\n            content={alert.content}\r\n            position={alert.position}\r\n            onClose={() => removeAlert(alert.id)}\r\n            closable={alert.closable}\r\n          />\r\n        ))}\r\n      </div>\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * Custom hook to use the alert context\r\n * @returns {Object} The alert context\r\n * @throws {Error} If used outside of an AlertProvider\r\n */\r\nexport const useAlert = () => {\r\n  const context = useContext(AlertContext);\r\n  \r\n  if (!context) {\r\n    console.warn('useAlert used outside of AlertProvider. Alerts will be simulated.');\r\n    \r\n    // Provide dummy functions if context is not available\r\n    return {\r\n      info: (message) => { \r\n        console.log(`Alert (simulated INFO): ${message}`);\r\n        return null;\r\n      },\r\n      success: (message) => {\r\n        console.log(`Alert (simulated SUCCESS): ${message}`);\r\n        return null;\r\n      },\r\n      warning: (message) => {\r\n        console.log(`Alert (simulated WARNING): ${message}`);\r\n        return null;\r\n      },\r\n      error: (message) => {\r\n        console.log(`Alert (simulated ERROR): ${message}`);\r\n        return null;\r\n      },\r\n      clearAll: () => {},\r\n      removeAlert: () => {},\r\n      getAlertCount: () => 0\r\n    };\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\n/**\r\n * Enhanced AlertMessage component with safety checks\r\n * Helps manage alerts during render cycles\r\n */\r\nexport const SafeAlert = {\r\n  // Use setTimeout to avoid calling alerts during render\r\n  info: (alert, message, config = {}) => {\r\n    if (!alert || !alert.info) return null;\r\n    setTimeout(() => {\r\n      alert.info(message, config);\r\n    }, 0);\r\n    return null;\r\n  },\r\n  \r\n  success: (alert, message, config = {}) => {\r\n    if (!alert || !alert.success) return null;\r\n    setTimeout(() => {\r\n      alert.success(message, config);\r\n    }, 0);\r\n    return null;\r\n  },\r\n  \r\n  warning: (alert, message, config = {}) => {\r\n    if (!alert || !alert.warning) return null;\r\n    setTimeout(() => {\r\n      alert.warning(message, config);\r\n    }, 0);\r\n    return null;\r\n  },\r\n  \r\n  error: (alert, message, config = {}) => {\r\n    if (!alert || !alert.error) return null;\r\n    setTimeout(() => {\r\n      alert.error(message, config);\r\n    }, 0);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Export the default context for backward compatibility\r\nexport default AlertContext;","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom-client.production.js');\n} else {\n  module.exports = require('./cjs/react-dom-client.development.js');\n}\n","export var IconsManifest = [\n  {\n    \"id\": \"ci\",\n    \"name\": \"Circum Icons\",\n    \"projectUrl\": \"https://circumicons.com/\",\n    \"license\": \"MPL-2.0 license\",\n    \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome 5\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"fa6\",\n    \"name\": \"Font Awesome 6\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"lu\",\n    \"name\": \"Lucide\",\n    \"projectUrl\": \"https://lucide.dev/\",\n    \"license\": \"ISC\",\n    \"licenseUrl\": \"https://github.com/lucide-icons/lucide/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"hi2\",\n    \"name\": \"Heroicons 2\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"sl\",\n    \"name\": \"Simple Line Icons\",\n    \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"tb\",\n    \"name\": \"Tabler Icons\",\n    \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"tfi\",\n    \"name\": \"Themify Icons\",\n    \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n  },\n  {\n    \"id\": \"rx\",\n    \"name\": \"Radix Icons\",\n    \"projectUrl\": \"https://icons.radix-ui.com\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"pi\",\n    \"name\": \"Phosphor Icons\",\n    \"projectUrl\": \"https://github.com/phosphor-icons/core\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/phosphor-icons/core/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"lia\",\n    \"name\": \"Icons8 Line Awesome\",\n    \"projectUrl\": \"https://icons8.com/line-awesome\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/icons8/line-awesome/blob/master/LICENSE.md\"\n  }\n]","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && /*#__PURE__*/React.createContext(DefaultContext);","var _excluded = [\"attr\", \"size\", \"title\"];\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext.mjs\";\nfunction Tree2Element(tree) {\n  return tree && tree.map((node, i) => /*#__PURE__*/React.createElement(node.tag, _objectSpread({\n    key: i\n  }, node.attr), Tree2Element(node.child)));\n}\nexport function GenIcon(data) {\n  return props => /*#__PURE__*/React.createElement(IconBase, _extends({\n    attr: _objectSpread({}, data.attr)\n  }, props), Tree2Element(data.child));\n}\nexport function IconBase(props) {\n  var elem = conf => {\n    var {\n        attr,\n        size,\n        title\n      } = props,\n      svgProps = _objectWithoutProperties(props, _excluded);\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return /*#__PURE__*/React.createElement(\"svg\", _extends({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: _objectSpread(_objectSpread({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && /*#__PURE__*/React.createElement(\"title\", null, title), props.children);\n  };\n  return IconContext !== undefined ? /*#__PURE__*/React.createElement(IconContext.Consumer, null, conf => elem(conf)) : elem(DefaultContext);\n}","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-dom.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction noop() {}\nvar Internals = {\n    d: {\n      f: noop,\n      r: function () {\n        throw Error(formatProdErrorMessage(522));\n      },\n      D: noop,\n      C: noop,\n      L: noop,\n      m: noop,\n      X: noop,\n      S: noop,\n      M: noop\n    },\n    p: 0,\n    findDOMNode: null\n  },\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\nfunction createPortal$1(children, containerInfo, implementation) {\n  var key =\n    3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: REACT_PORTAL_TYPE,\n    key: null == key ? null : \"\" + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\nvar ReactSharedInternals =\n  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.createPortal = function (children, container) {\n  var key =\n    2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  if (\n    !container ||\n    (1 !== container.nodeType &&\n      9 !== container.nodeType &&\n      11 !== container.nodeType)\n  )\n    throw Error(formatProdErrorMessage(299));\n  return createPortal$1(children, container, null, key);\n};\nexports.flushSync = function (fn) {\n  var previousTransition = ReactSharedInternals.T,\n    previousUpdatePriority = Internals.p;\n  try {\n    if (((ReactSharedInternals.T = null), (Internals.p = 2), fn)) return fn();\n  } finally {\n    (ReactSharedInternals.T = previousTransition),\n      (Internals.p = previousUpdatePriority),\n      Internals.d.f();\n  }\n};\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.requestFormReset = function (form) {\n  Internals.d.r(form);\n};\nexports.unstable_batchedUpdates = function (fn, a) {\n  return fn(a);\n};\nexports.useFormState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useFormState(action, initialState, permalink);\n};\nexports.useFormStatus = function () {\n  return ReactSharedInternals.H.useHostTransitionStatus();\n};\nexports.version = \"19.0.0\";\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortOptions } from \"./aborterUtils.js\";\nimport { createAbortablePromise } from \"./createAbortablePromise.js\";\nimport { getRandomIntegerInclusive } from \"./random.js\";\n\nconst StandardAbortMessage = \"The delay was aborted.\";\n\n/**\n * Options for support abort functionality for the delay method\n */\nexport interface DelayOptions extends AbortOptions {}\n\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @param options - The options for delay - currently abort options\n * @returns Promise that is resolved after timeInMs\n */\nexport function delay(timeInMs: number, options?: DelayOptions): Promise<void> {\n  let token: ReturnType<typeof setTimeout>;\n  const { abortSignal, abortErrorMsg } = options ?? {};\n  return createAbortablePromise(\n    (resolve) => {\n      token = setTimeout(resolve, timeInMs);\n    },\n    {\n      cleanupBeforeAbort: () => clearTimeout(token),\n      abortSignal,\n      abortErrorMsg: abortErrorMsg ?? StandardAbortMessage,\n    },\n  );\n}\n\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n * @param retryAttempt - The current retry attempt number.\n * @param config - The exponential retry configuration.\n * @returns An object containing the calculated retry delay.\n */\nexport function calculateRetryDelay(\n  retryAttempt: number,\n  config: {\n    retryDelayInMs: number;\n    maxRetryDelayInMs: number;\n  },\n): { retryAfterInMs: number } {\n  // Exponentially increase the delay each time\n  const exponentialDelay = config.retryDelayInMs * Math.pow(2, retryAttempt);\n\n  // Don't let the delay exceed the maximum\n  const clampedDelay = Math.min(config.maxRetryDelayInMs, exponentialDelay);\n\n  // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n  // that retries across multiple clients don't occur simultaneously.\n  const retryAfterInMs = clampedDelay / 2 + getRandomIntegerInclusive(0, clampedDelay / 2);\n\n  return { retryAfterInMs };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport type { AbortOptions } from \"./aborterUtils.js\";\n\n/**\n * Options for the createAbortablePromise function.\n */\nexport interface CreateAbortablePromiseOptions extends AbortOptions {\n  /** A function to be called if the promise was aborted */\n  cleanupBeforeAbort?: () => void;\n}\n\n/**\n * Creates an abortable promise.\n * @param buildPromise - A function that takes the resolve and reject functions as parameters.\n * @param options - The options for the abortable promise.\n * @returns A promise that can be aborted.\n */\nexport function createAbortablePromise<T>(\n  buildPromise: (\n    resolve: (value: T | PromiseLike<T>) => void,\n    reject: (reason?: any) => void,\n  ) => void,\n  options?: CreateAbortablePromiseOptions,\n): Promise<T> {\n  const { cleanupBeforeAbort, abortSignal, abortErrorMsg } = options ?? {};\n  return new Promise((resolve, reject) => {\n    function rejectOnAbort(): void {\n      reject(new AbortError(abortErrorMsg ?? \"The operation was aborted.\"));\n    }\n    function removeListeners(): void {\n      abortSignal?.removeEventListener(\"abort\", onAbort);\n    }\n    function onAbort(): void {\n      cleanupBeforeAbort?.();\n      removeListeners();\n      rejectOnAbort();\n    }\n    if (abortSignal?.aborted) {\n      return rejectOnAbort();\n    }\n    try {\n      buildPromise(\n        (x) => {\n          removeListeners();\n          resolve(x);\n        },\n        (x) => {\n          removeListeners();\n          reject(x);\n        },\n      );\n    } catch (err) {\n      reject(err);\n    }\n    abortSignal?.addEventListener(\"abort\", onAbort);\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Returns a random integer value between a lower and upper bound,\n * inclusive of both bounds.\n * Note that this uses Math.random and isn't secure. If you need to use\n * this for any kind of security purpose, find a better source of random.\n * @param min - The smallest integer value allowed.\n * @param max - The largest integer value allowed.\n */\nexport function getRandomIntegerInclusive(min: number, max: number): number {\n  // Make sure inputs are integers.\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // Pick a random offset from zero to the size of the range.\n  // Since Math.random() can never return 1, we have to make the range one larger\n  // in order to be inclusive of the maximum value after we take the floor.\n  const offset = Math.floor(Math.random() * (max - min + 1));\n  return offset + min;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * A generic shape for a plain JS object.\n */\nexport type UnknownObject = { [s: string]: unknown };\n\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input: unknown): input is UnknownObject {\n  return (\n    typeof input === \"object\" &&\n    input !== null &&\n    !Array.isArray(input) &&\n    !(input instanceof RegExp) &&\n    !(input instanceof Date)\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isObject } from \"./object.js\";\n\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nexport function isError(e: unknown): e is Error {\n  if (isObject(e)) {\n    const hasName = typeof e.name === \"string\";\n    const hasMessage = typeof e.message === \"string\";\n    return hasName && hasMessage;\n  }\n  return false;\n}\n\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nexport function getErrorMessage(e: unknown): string {\n  if (isError(e)) {\n    return e.message;\n  } else {\n    let stringified: string;\n    try {\n      if (typeof e === \"object\" && e) {\n        stringified = JSON.stringify(e);\n      } else {\n        stringified = String(e);\n      }\n    } catch (err: any) {\n      stringified = \"[unable to stringify input]\";\n    }\n    return `Unknown error ${stringified}`;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\ndeclare global {\n  // stub these out for the browser\n  function btoa(input: string): string;\n  function atob(input: string): string;\n}\n\n/** The supported character encoding type */\nexport type EncodingType = \"utf-8\" | \"base64\" | \"base64url\" | \"hex\";\n\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nexport function uint8ArrayToString(bytes: Uint8Array, format: EncodingType): string {\n  switch (format) {\n    case \"utf-8\":\n      return uint8ArrayToUtf8String(bytes);\n    case \"base64\":\n      return uint8ArrayToBase64(bytes);\n    case \"base64url\":\n      return uint8ArrayToBase64Url(bytes);\n    case \"hex\":\n      return uint8ArrayToHexString(bytes);\n  }\n}\n\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nexport function stringToUint8Array(value: string, format: EncodingType): Uint8Array {\n  switch (format) {\n    case \"utf-8\":\n      return utf8StringToUint8Array(value);\n    case \"base64\":\n      return base64ToUint8Array(value);\n    case \"base64url\":\n      return base64UrlToUint8Array(value);\n    case \"hex\":\n      return hexStringToUint8Array(value);\n  }\n}\n\n/**\n * Decodes a Uint8Array into a Base64 string.\n * @internal\n */\nexport function uint8ArrayToBase64(bytes: Uint8Array): string {\n  return btoa([...bytes].map((x) => String.fromCharCode(x)).join(\"\"));\n}\n\n/**\n * Decodes a Uint8Array into a Base64Url string.\n * @internal\n */\nexport function uint8ArrayToBase64Url(bytes: Uint8Array): string {\n  return uint8ArrayToBase64(bytes).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n}\n\n/**\n * Decodes a Uint8Array into a javascript string.\n * @internal\n */\nexport function uint8ArrayToUtf8String(bytes: Uint8Array): string {\n  const decoder = new TextDecoder();\n  const dataString = decoder.decode(bytes);\n  return dataString;\n}\n\n/**\n * Decodes a Uint8Array into a hex string\n * @internal\n */\nexport function uint8ArrayToHexString(bytes: Uint8Array): string {\n  return [...bytes].map((x) => x.toString(16).padStart(2, \"0\")).join(\"\");\n}\n\n/**\n * Encodes a JavaScript string into a Uint8Array.\n * @internal\n */\nexport function utf8StringToUint8Array(value: string): Uint8Array {\n  return new TextEncoder().encode(value);\n}\n\n/**\n * Encodes a Base64 string into a Uint8Array.\n * @internal\n */\nexport function base64ToUint8Array(value: string): Uint8Array {\n  return new Uint8Array([...atob(value)].map((x) => x.charCodeAt(0)));\n}\n\n/**\n * Encodes a Base64Url string into a Uint8Array.\n * @internal\n */\nexport function base64UrlToUint8Array(value: string): Uint8Array {\n  const base64String = value.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  return base64ToUint8Array(base64String);\n}\n\nconst hexDigits = new Set(\"0123456789abcdefABCDEF\");\n\n/**\n * Encodes a hex string into a Uint8Array\n * @internal\n */\nexport function hexStringToUint8Array(value: string): Uint8Array {\n  // If value has odd length, the last character will be ignored, consistent with NodeJS Buffer behavior\n  const bytes = new Uint8Array(value.length / 2);\n  for (let i = 0; i < value.length / 2; ++i) {\n    const highNibble = value[2 * i];\n    const lowNibble = value[2 * i + 1];\n    if (!hexDigits.has(highNibble) || !hexDigits.has(lowNibble)) {\n      // Replicate Node Buffer behavior by exiting early when we encounter an invalid byte\n      return bytes.slice(0, i);\n    }\n\n    bytes[i] = parseInt(`${highNibble}${lowNibble}`, 16);\n  }\n\n  return bytes;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function generateUUID(): string {\n  let uuid = \"\";\n  for (let i = 0; i < 32; i++) {\n    // Generate a random number between 0 and 15\n    const randomNumber = Math.floor(Math.random() * 16);\n    // Set the UUID version to 4 in the 13th position\n    if (i === 12) {\n      uuid += \"4\";\n    } else if (i === 16) {\n      // Set the UUID variant to \"10\" in the 17th position\n      uuid += (randomNumber & 0x3) | 0x8;\n    } else {\n      // Add a random hexadecimal digit to the UUID string\n      uuid += randomNumber.toString(16);\n    }\n    // Add hyphens to the UUID string at the appropriate positions\n    if (i === 7 || i === 11 || i === 15 || i === 19) {\n      uuid += \"-\";\n    }\n  }\n  return uuid;\n}\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID(): string {\n  return generateUUID();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { generateUUID } from \"./uuidUtils.common.js\";\n\ninterface Crypto {\n  randomUUID(): string;\n}\n\ndeclare const globalThis: {\n  crypto: Crypto;\n};\n\n// NOTE: This could be undefined if not used in a secure context\nconst uuidFunction =\n  typeof globalThis?.crypto?.randomUUID === \"function\"\n    ? globalThis.crypto.randomUUID.bind(globalThis.crypto)\n    : generateUUID;\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID(): string {\n  return uuidFunction();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\ninterface Window {\n  document: unknown;\n}\n\ninterface DedicatedWorkerGlobalScope {\n  constructor: {\n    name: string;\n  };\n\n  importScripts: (...paths: string[]) => void;\n}\n\ninterface Navigator {\n  product: string;\n}\n\ninterface DenoGlobal {\n  version: {\n    deno: string;\n  };\n}\n\ninterface BunGlobal {\n  version: string;\n}\n\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\ndeclare const window: Window;\ndeclare const self: DedicatedWorkerGlobalScope;\ndeclare const Deno: DenoGlobal;\ndeclare const Bun: BunGlobal;\ndeclare const navigator: Navigator;\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nexport const isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexport const isWebWorker =\n  typeof self === \"object\" &&\n  typeof self?.importScripts === \"function\" &&\n  (self.constructor?.name === \"DedicatedWorkerGlobalScope\" ||\n    self.constructor?.name === \"ServiceWorkerGlobalScope\" ||\n    self.constructor?.name === \"SharedWorkerGlobalScope\");\n\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexport const isDeno =\n  typeof Deno !== \"undefined\" &&\n  typeof Deno.version !== \"undefined\" &&\n  typeof Deno.version.deno !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexport const isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nexport const isNodeLike =\n  typeof globalThis.process !== \"undefined\" &&\n  Boolean(globalThis.process.version) &&\n  Boolean(globalThis.process.versions?.node);\n\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n * @deprecated Use `isNodeLike` instead.\n */\nexport const isNode = isNodeLike;\n\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexport const isNodeRuntime = isNodeLike && !isBun && !isDeno;\n\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nexport const isReactNative =\n  typeof navigator !== \"undefined\" && navigator?.product === \"ReactNative\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { TracingContext } from \"./tracing.js\";\nimport { HttpMethods } from \"@azure/core-util\";\n\n/**\n * Represents a credential capable of providing an authentication token.\n */\nexport interface TokenCredential {\n  /**\n   * Gets the token provided by this credential.\n   *\n   * This method is called automatically by Azure SDK client libraries. You may call this method\n   * directly, but you must also handle token caching and token refreshing.\n   *\n   * @param scopes - The list of scopes for which the token will have access.\n   * @param options - The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  getToken(scopes: string | string[], options?: GetTokenOptions): Promise<AccessToken | null>;\n}\n\n/**\n * Defines options for TokenCredential.getToken.\n */\nexport interface GetTokenOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: {\n    /**\n     * The number of milliseconds a request can take before automatically being terminated.\n     */\n    timeout?: number;\n  };\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: {\n    /**\n     * Tracing Context for the current request.\n     */\n    tracingContext?: TracingContext;\n  };\n  /**\n   * Claim details to perform the Continuous Access Evaluation authentication flow\n   */\n  claims?: string;\n  /**\n   * Indicates whether to enable the Continuous Access Evaluation authentication flow\n   */\n  enableCae?: boolean;\n  /**\n   * Allows specifying a tenantId. Useful to handle challenges that provide tenant Id hints.\n   */\n  tenantId?: string;\n\n  /**\n   * Options for Proof of Possession token requests\n   */\n  proofOfPossessionOptions?: {\n    /**\n     * The nonce value required for PoP token requests.\n     * This is typically retrieved from the WWW-Authenticate header of a 401 challenge response.\n     * This is used in combination with {@link resourceRequestUrl} and {@link resourceRequestMethod} to generate the PoP token.\n     */\n    nonce: string;\n    /**\n     * The HTTP method of the request.\n     * This is used in combination with {@link resourceRequestUrl} and {@link nonce} to generate the PoP token.\n     */\n    resourceRequestMethod: HttpMethods;\n    /**\n     * The URL of the request.\n     * This is used in combination with {@link resourceRequestMethod} and {@link nonce} to generate the PoP token.\n     */\n    resourceRequestUrl: string;\n  };\n}\n\n/**\n * Represents an access token with an expiration time.\n */\nexport interface AccessToken {\n  /**\n   * The access token returned by the authentication service.\n   */\n  token: string;\n\n  /**\n   * The access token's expiration timestamp in milliseconds, UNIX epoch time.\n   */\n  expiresOnTimestamp: number;\n\n  /**\n   * The timestamp when the access token should be refreshed, in milliseconds, UNIX epoch time.\n   */\n  refreshAfterTimestamp?: number;\n\n  /** Type of token - `Bearer` or `pop` */\n  tokenType?: \"Bearer\" | \"pop\";\n}\n\n/**\n * @internal\n * @param accessToken - Access token\n * @returns Whether a token is bearer type or not\n */\nexport function isBearerToken(accessToken: AccessToken): boolean {\n  return !accessToken.tokenType || accessToken.tokenType === \"Bearer\";\n}\n\n/**\n * @internal\n * @param accessToken - Access token\n * @returns Whether a token is Pop token or not\n */\nexport function isPopToken(accessToken: AccessToken): boolean {\n  return accessToken.tokenType === \"pop\";\n}\n\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential: unknown): credential is TokenCredential {\n  // Check for an object with a 'getToken' function and possibly with\n  // a 'signRequest' function.  We do this check to make sure that\n  // a ServiceClientCredentials implementor (like TokenClientCredentials\n  // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n  // it doesn't actually implement TokenCredential also.\n  const castCredential = credential as {\n    getToken: unknown;\n    signRequest: unknown;\n  };\n  return (\n    castCredential &&\n    typeof castCredential.getToken === \"function\" &&\n    (castCredential.signRequest === undefined || castCredential.getToken.length > 0)\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient, PipelineRequest, PipelineResponse, SendRequest } from \"./interfaces.js\";\n\n/**\n * Policies are executed in phases.\n * The execution order is:\n * 1. Serialize Phase\n * 2. Policies not in a phase\n * 3. Deserialize Phase\n * 4. Retry Phase\n * 5. Sign Phase\n */\nexport type PipelinePhase = \"Deserialize\" | \"Serialize\" | \"Retry\" | \"Sign\";\n\nconst ValidPhaseNames = new Set<PipelinePhase>([\"Deserialize\", \"Serialize\", \"Retry\", \"Sign\"]);\n\n/**\n * Options when adding a policy to the pipeline.\n * Used to express dependencies on other policies.\n */\nexport interface AddPolicyOptions {\n  /**\n   * Policies that this policy must come before.\n   */\n  beforePolicies?: string[];\n  /**\n   * Policies that this policy must come after.\n   */\n  afterPolicies?: string[];\n  /**\n   * The phase that this policy must come after.\n   */\n  afterPhase?: PipelinePhase;\n  /**\n   * The phase this policy belongs to.\n   */\n  phase?: PipelinePhase;\n}\n\n/**\n * A pipeline policy manipulates a request as it travels through the pipeline.\n * It is conceptually a middleware that is allowed to modify the request before\n * it is made as well as the response when it is received.\n */\nexport interface PipelinePolicy {\n  /**\n   * The policy name. Must be a unique string in the pipeline.\n   */\n  name: string;\n  /**\n   * The main method to implement that manipulates a request/response.\n   * @param request - The request being performed.\n   * @param next - The next policy in the pipeline. Must be called to continue the pipeline.\n   */\n  sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse>;\n}\n\n/**\n * Represents a pipeline for making a HTTP request to a URL.\n * Pipelines can have multiple policies to manage manipulating each request\n * before and after it is made to the server.\n */\nexport interface Pipeline {\n  /**\n   * Add a new policy to the pipeline.\n   * @param policy - A policy that manipulates a request.\n   * @param options - A set of options for when the policy should run.\n   */\n  addPolicy(policy: PipelinePolicy, options?: AddPolicyOptions): void;\n  /**\n   * Remove a policy from the pipeline.\n   * @param options - Options that let you specify which policies to remove.\n   */\n  removePolicy(options: { name?: string; phase?: PipelinePhase }): PipelinePolicy[];\n  /**\n   * Uses the pipeline to make a HTTP request.\n   * @param httpClient - The HttpClient that actually performs the request.\n   * @param request - The request to be made.\n   */\n  sendRequest(httpClient: HttpClient, request: PipelineRequest): Promise<PipelineResponse>;\n  /**\n   * Returns the current set of policies in the pipeline in the order in which\n   * they will be applied to the request. Later in the list is closer to when\n   * the request is performed.\n   */\n  getOrderedPolicies(): PipelinePolicy[];\n  /**\n   * Duplicates this pipeline to allow for modifying an existing one without mutating it.\n   */\n  clone(): Pipeline;\n}\n\ninterface PipelineDescriptor {\n  policy: PipelinePolicy;\n  options: AddPolicyOptions;\n}\n\ninterface PolicyGraphNode {\n  policy: PipelinePolicy;\n  dependsOn: Set<PolicyGraphNode>;\n  dependants: Set<PolicyGraphNode>;\n  afterPhase?: Phase;\n}\n\ninterface Phase {\n  name: PipelinePhase | \"None\";\n  policies: Set<PolicyGraphNode>;\n  hasRun: boolean;\n  hasAfterPolicies: boolean;\n}\n\n/**\n * A private implementation of Pipeline.\n * Do not export this class from the package.\n * @internal\n */\nclass HttpPipeline implements Pipeline {\n  private _policies: PipelineDescriptor[] = [];\n  private _orderedPolicies?: PipelinePolicy[];\n\n  private constructor(policies?: PipelineDescriptor[]) {\n    this._policies = policies?.slice(0) ?? [];\n    this._orderedPolicies = undefined;\n  }\n\n  public addPolicy(policy: PipelinePolicy, options: AddPolicyOptions = {}): void {\n    if (options.phase && options.afterPhase) {\n      throw new Error(\"Policies inside a phase cannot specify afterPhase.\");\n    }\n    if (options.phase && !ValidPhaseNames.has(options.phase)) {\n      throw new Error(`Invalid phase name: ${options.phase}`);\n    }\n    if (options.afterPhase && !ValidPhaseNames.has(options.afterPhase)) {\n      throw new Error(`Invalid afterPhase name: ${options.afterPhase}`);\n    }\n    this._policies.push({\n      policy,\n      options,\n    });\n    this._orderedPolicies = undefined;\n  }\n\n  public removePolicy(options: { name?: string; phase?: string }): PipelinePolicy[] {\n    const removedPolicies: PipelinePolicy[] = [];\n\n    this._policies = this._policies.filter((policyDescriptor) => {\n      if (\n        (options.name && policyDescriptor.policy.name === options.name) ||\n        (options.phase && policyDescriptor.options.phase === options.phase)\n      ) {\n        removedPolicies.push(policyDescriptor.policy);\n        return false;\n      } else {\n        return true;\n      }\n    });\n    this._orderedPolicies = undefined;\n\n    return removedPolicies;\n  }\n\n  public sendRequest(httpClient: HttpClient, request: PipelineRequest): Promise<PipelineResponse> {\n    const policies = this.getOrderedPolicies();\n\n    const pipeline = policies.reduceRight<SendRequest>(\n      (next, policy) => {\n        return (req: PipelineRequest) => {\n          return policy.sendRequest(req, next);\n        };\n      },\n      (req: PipelineRequest) => httpClient.sendRequest(req),\n    );\n\n    return pipeline(request);\n  }\n\n  public getOrderedPolicies(): PipelinePolicy[] {\n    if (!this._orderedPolicies) {\n      this._orderedPolicies = this.orderPolicies();\n    }\n    return this._orderedPolicies;\n  }\n\n  public clone(): Pipeline {\n    return new HttpPipeline(this._policies);\n  }\n\n  public static create(): Pipeline {\n    return new HttpPipeline();\n  }\n\n  private orderPolicies(): PipelinePolicy[] {\n    /**\n     * The goal of this method is to reliably order pipeline policies\n     * based on their declared requirements when they were added.\n     *\n     * Order is first determined by phase:\n     *\n     * 1. Serialize Phase\n     * 2. Policies not in a phase\n     * 3. Deserialize Phase\n     * 4. Retry Phase\n     * 5. Sign Phase\n     *\n     * Within each phase, policies are executed in the order\n     * they were added unless they were specified to execute\n     * before/after other policies or after a particular phase.\n     *\n     * To determine the final order, we will walk the policy list\n     * in phase order multiple times until all dependencies are\n     * satisfied.\n     *\n     * `afterPolicies` are the set of policies that must be\n     * executed before a given policy. This requirement is\n     * considered satisfied when each of the listed policies\n     * have been scheduled.\n     *\n     * `beforePolicies` are the set of policies that must be\n     * executed after a given policy. Since this dependency\n     * can be expressed by converting it into a equivalent\n     * `afterPolicies` declarations, they are normalized\n     * into that form for simplicity.\n     *\n     * An `afterPhase` dependency is considered satisfied when all\n     * policies in that phase have scheduled.\n     *\n     */\n    const result: PipelinePolicy[] = [];\n\n    // Track all policies we know about.\n    const policyMap: Map<string, PolicyGraphNode> = new Map<string, PolicyGraphNode>();\n\n    function createPhase(name: PipelinePhase | \"None\"): Phase {\n      return {\n        name,\n        policies: new Set<PolicyGraphNode>(),\n        hasRun: false,\n        hasAfterPolicies: false,\n      };\n    }\n\n    // Track policies for each phase.\n    const serializePhase = createPhase(\"Serialize\");\n    const noPhase = createPhase(\"None\");\n    const deserializePhase = createPhase(\"Deserialize\");\n    const retryPhase = createPhase(\"Retry\");\n    const signPhase = createPhase(\"Sign\");\n\n    // a list of phases in order\n    const orderedPhases = [serializePhase, noPhase, deserializePhase, retryPhase, signPhase];\n\n    // Small helper function to map phase name to each Phase\n    function getPhase(phase: PipelinePhase | undefined): Phase {\n      if (phase === \"Retry\") {\n        return retryPhase;\n      } else if (phase === \"Serialize\") {\n        return serializePhase;\n      } else if (phase === \"Deserialize\") {\n        return deserializePhase;\n      } else if (phase === \"Sign\") {\n        return signPhase;\n      } else {\n        return noPhase;\n      }\n    }\n\n    // First walk each policy and create a node to track metadata.\n    for (const descriptor of this._policies) {\n      const policy = descriptor.policy;\n      const options = descriptor.options;\n      const policyName = policy.name;\n      if (policyMap.has(policyName)) {\n        throw new Error(\"Duplicate policy names not allowed in pipeline\");\n      }\n      const node: PolicyGraphNode = {\n        policy,\n        dependsOn: new Set<PolicyGraphNode>(),\n        dependants: new Set<PolicyGraphNode>(),\n      };\n      if (options.afterPhase) {\n        node.afterPhase = getPhase(options.afterPhase);\n        node.afterPhase.hasAfterPolicies = true;\n      }\n      policyMap.set(policyName, node);\n      const phase = getPhase(options.phase);\n      phase.policies.add(node);\n    }\n\n    // Now that each policy has a node, connect dependency references.\n    for (const descriptor of this._policies) {\n      const { policy, options } = descriptor;\n      const policyName = policy.name;\n      const node = policyMap.get(policyName);\n      if (!node) {\n        throw new Error(`Missing node for policy ${policyName}`);\n      }\n\n      if (options.afterPolicies) {\n        for (const afterPolicyName of options.afterPolicies) {\n          const afterNode = policyMap.get(afterPolicyName);\n          if (afterNode) {\n            // Linking in both directions helps later\n            // when we want to notify dependants.\n            node.dependsOn.add(afterNode);\n            afterNode.dependants.add(node);\n          }\n        }\n      }\n      if (options.beforePolicies) {\n        for (const beforePolicyName of options.beforePolicies) {\n          const beforeNode = policyMap.get(beforePolicyName);\n          if (beforeNode) {\n            // To execute before another node, make it\n            // depend on the current node.\n            beforeNode.dependsOn.add(node);\n            node.dependants.add(beforeNode);\n          }\n        }\n      }\n    }\n\n    function walkPhase(phase: Phase): void {\n      phase.hasRun = true;\n      // Sets iterate in insertion order\n      for (const node of phase.policies) {\n        if (node.afterPhase && (!node.afterPhase.hasRun || node.afterPhase.policies.size)) {\n          // If this node is waiting on a phase to complete,\n          // we need to skip it for now.\n          // Even if the phase is empty, we should wait for it\n          // to be walked to avoid re-ordering policies.\n          continue;\n        }\n        if (node.dependsOn.size === 0) {\n          // If there's nothing else we're waiting for, we can\n          // add this policy to the result list.\n          result.push(node.policy);\n          // Notify anything that depends on this policy that\n          // the policy has been scheduled.\n          for (const dependant of node.dependants) {\n            dependant.dependsOn.delete(node);\n          }\n          policyMap.delete(node.policy.name);\n          phase.policies.delete(node);\n        }\n      }\n    }\n\n    function walkPhases(): void {\n      for (const phase of orderedPhases) {\n        walkPhase(phase);\n        // if the phase isn't complete\n        if (phase.policies.size > 0 && phase !== noPhase) {\n          if (!noPhase.hasRun) {\n            // Try running noPhase to see if that unblocks this phase next tick.\n            // This can happen if a phase that happens before noPhase\n            // is waiting on a noPhase policy to complete.\n            walkPhase(noPhase);\n          }\n          // Don't proceed to the next phase until this phase finishes.\n          return;\n        }\n\n        if (phase.hasAfterPolicies) {\n          // Run any policies unblocked by this phase\n          walkPhase(noPhase);\n        }\n      }\n    }\n\n    // Iterate until we've put every node in the result list.\n    let iteration = 0;\n    while (policyMap.size > 0) {\n      iteration++;\n      const initialResultLength = result.length;\n      // Keep walking each phase in order until we can order every node.\n      walkPhases();\n      // The result list *should* get at least one larger each time\n      // after the first full pass.\n      // Otherwise, we're going to loop forever.\n      if (result.length <= initialResultLength && iteration > 1) {\n        throw new Error(\"Cannot satisfy policy dependencies due to requirements cycle.\");\n      }\n    }\n\n    return result;\n  }\n}\n\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nexport function createEmptyPipeline(): Pipeline {\n  return HttpPipeline.create();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { log } from \"./log.js\";\n\n/**\n * A simple mechanism for enabling logging.\n * Intended to mimic the publicly available `debug` package.\n */\nexport interface Debug {\n  /**\n   * Creates a new logger with the given namespace.\n   */\n  (namespace: string): Debugger;\n  /**\n   * The default log method (defaults to console)\n   */\n  log: (...args: any[]) => void;\n  /**\n   * Enables a particular set of namespaces.\n   * To enable multiple separate them with commas, e.g. \"info,debug\".\n   * Supports wildcards, e.g. \"azure:*\"\n   * Supports skip syntax, e.g. \"azure:*,-azure:storage:*\" will enable\n   * everything under azure except for things under azure:storage.\n   */\n  enable: (namespaces: string) => void;\n  /**\n   * Checks if a particular namespace is enabled.\n   */\n  enabled: (namespace: string) => boolean;\n  /**\n   * Disables all logging, returns what was previously enabled.\n   */\n  disable: () => string;\n}\n\n/**\n * A log function that can be dynamically enabled and redirected.\n */\nexport interface Debugger {\n  /**\n   * Logs the given arguments to the `log` method.\n   */\n  (...args: any[]): void;\n  /**\n   * True if this logger is active and logging.\n   */\n  enabled: boolean;\n  /**\n   * Used to cleanup/remove this logger.\n   */\n  destroy: () => boolean;\n  /**\n   * The current log method. Can be overridden to redirect output.\n   */\n  log: (...args: any[]) => void;\n  /**\n   * The namespace of this logger.\n   */\n  namespace: string;\n  /**\n   * Extends this logger with a child namespace.\n   * Namespaces are separated with a ':' character.\n   */\n  extend: (namespace: string) => Debugger;\n}\n\nconst debugEnvVariable =\n  (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\n\nlet enabledString: string | undefined;\nlet enabledNamespaces: RegExp[] = [];\nlet skippedNamespaces: RegExp[] = [];\nconst debuggers: Debugger[] = [];\n\nif (debugEnvVariable) {\n  enable(debugEnvVariable);\n}\n\nconst debugObj: Debug = Object.assign(\n  (namespace: string): Debugger => {\n    return createDebugger(namespace);\n  },\n  {\n    enable,\n    enabled,\n    disable,\n    log,\n  },\n);\n\nfunction enable(namespaces: string): void {\n  enabledString = namespaces;\n  enabledNamespaces = [];\n  skippedNamespaces = [];\n  const wildcard = /\\*/g;\n  const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n  for (const ns of namespaceList) {\n    if (ns.startsWith(\"-\")) {\n      skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n    } else {\n      enabledNamespaces.push(new RegExp(`^${ns}$`));\n    }\n  }\n  for (const instance of debuggers) {\n    instance.enabled = enabled(instance.namespace);\n  }\n}\n\nfunction enabled(namespace: string): boolean {\n  if (namespace.endsWith(\"*\")) {\n    return true;\n  }\n\n  for (const skipped of skippedNamespaces) {\n    if (skipped.test(namespace)) {\n      return false;\n    }\n  }\n  for (const enabledNamespace of enabledNamespaces) {\n    if (enabledNamespace.test(namespace)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction disable(): string {\n  const result = enabledString || \"\";\n  enable(\"\");\n  return result;\n}\n\nfunction createDebugger(namespace: string): Debugger {\n  const newDebugger: Debugger = Object.assign(debug, {\n    enabled: enabled(namespace),\n    destroy,\n    log: debugObj.log,\n    namespace,\n    extend,\n  });\n\n  function debug(...args: any[]): void {\n    if (!newDebugger.enabled) {\n      return;\n    }\n    if (args.length > 0) {\n      args[0] = `${namespace} ${args[0]}`;\n    }\n    newDebugger.log(...args);\n  }\n\n  debuggers.push(newDebugger);\n\n  return newDebugger;\n}\n\nfunction destroy(this: Debugger): boolean {\n  const index = debuggers.indexOf(this);\n  if (index >= 0) {\n    debuggers.splice(index, 1);\n    return true;\n  }\n  return false;\n}\n\nfunction extend(this: Debugger, namespace: string): Debugger {\n  const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n  newDebugger.log = this.log;\n  return newDebugger;\n}\n\nexport default debugObj;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport function log(...args: any[]): void {\n  if (args.length > 0) {\n    const firstArg = String(args[0]);\n    if (firstArg.includes(\":error\")) {\n      console.error(...args);\n    } else if (firstArg.includes(\":warning\")) {\n      console.warn(...args);\n    } else if (firstArg.includes(\":info\")) {\n      console.info(...args);\n    } else if (firstArg.includes(\":verbose\")) {\n      console.debug(...args);\n    } else {\n      console.debug(...args);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport debug, { type Debugger } from \"./debug.js\";\nexport type { Debugger } from \"./debug.js\";\n\nconst registeredLoggers = new Set<AzureDebugger>();\nconst logLevelFromEnv =\n  (typeof process !== \"undefined\" && process.env && process.env.AZURE_LOG_LEVEL) || undefined;\n\nlet azureLogLevel: AzureLogLevel | undefined;\n\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nexport const AzureLogger: AzureClientLogger = debug(\"azure\");\nAzureLogger.log = (...args) => {\n  debug.log(...args);\n};\n\n/**\n * The log levels supported by the logger.\n * The log levels in order of most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport type AzureLogLevel = \"verbose\" | \"info\" | \"warning\" | \"error\";\nconst AZURE_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\n\ntype AzureDebugger = Debugger & { level: AzureLogLevel };\n\n/**\n * An AzureClientLogger is a function that can log to an appropriate severity level.\n */\nexport type AzureClientLogger = Debugger;\n\nif (logLevelFromEnv) {\n  // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n  if (isAzureLogLevel(logLevelFromEnv)) {\n    setLogLevel(logLevelFromEnv);\n  } else {\n    console.error(\n      `AZURE_LOG_LEVEL set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${AZURE_LOG_LEVELS.join(\n        \", \",\n      )}.`,\n    );\n  }\n}\n\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport function setLogLevel(level?: AzureLogLevel): void {\n  if (level && !isAzureLogLevel(level)) {\n    throw new Error(\n      `Unknown log level '${level}'. Acceptable values: ${AZURE_LOG_LEVELS.join(\",\")}`,\n    );\n  }\n  azureLogLevel = level;\n\n  const enabledNamespaces = [];\n  for (const logger of registeredLoggers) {\n    if (shouldEnable(logger)) {\n      enabledNamespaces.push(logger.namespace);\n    }\n  }\n\n  debug.enable(enabledNamespaces.join(\",\"));\n}\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel(): AzureLogLevel | undefined {\n  return azureLogLevel;\n}\n\nconst levelMap = {\n  verbose: 400,\n  info: 300,\n  warning: 200,\n  error: 100,\n};\n\n/**\n * Defines the methods available on the SDK-facing logger.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface AzureLogger {\n  /**\n   * Used for failures the program is unlikely to recover from,\n   * such as Out of Memory.\n   */\n  error: Debugger;\n  /**\n   * Used when a function fails to perform its intended task.\n   * Usually this means the function will throw an exception.\n   * Not used for self-healing events (e.g. automatic retry)\n   */\n  warning: Debugger;\n  /**\n   * Used when a function operates normally.\n   */\n  info: Debugger;\n  /**\n   * Used for detailed troubleshooting scenarios. This is\n   * intended for use by developers / system administrators\n   * for diagnosing specific failures.\n   */\n  verbose: Debugger;\n}\n\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace: string): AzureLogger {\n  const clientRootLogger: AzureClientLogger = AzureLogger.extend(namespace);\n  patchLogMethod(AzureLogger, clientRootLogger);\n  return {\n    error: createLogger(clientRootLogger, \"error\"),\n    warning: createLogger(clientRootLogger, \"warning\"),\n    info: createLogger(clientRootLogger, \"info\"),\n    verbose: createLogger(clientRootLogger, \"verbose\"),\n  };\n}\n\nfunction patchLogMethod(parent: AzureClientLogger, child: AzureClientLogger | AzureDebugger): void {\n  child.log = (...args) => {\n    parent.log(...args);\n  };\n}\n\nfunction createLogger(parent: AzureClientLogger, level: AzureLogLevel): AzureDebugger {\n  const logger: AzureDebugger = Object.assign(parent.extend(level), {\n    level,\n  });\n\n  patchLogMethod(parent, logger);\n\n  if (shouldEnable(logger)) {\n    const enabledNamespaces = debug.disable();\n    debug.enable(enabledNamespaces + \",\" + logger.namespace);\n  }\n\n  registeredLoggers.add(logger);\n\n  return logger;\n}\n\nfunction shouldEnable(logger: AzureDebugger): boolean {\n  return Boolean(azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]);\n}\n\nfunction isAzureLogLevel(logLevel: string): logLevel is AzureLogLevel {\n  return AZURE_LOG_LEVELS.includes(logLevel as any);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-rest-pipeline\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { type UnknownObject, isObject } from \"@azure/core-util\";\n\n/**\n * @internal\n */\nexport interface SanitizerOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled.\n   * Defaults include a list of well-known safe headers. Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  additionalAllowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n}\n\nconst RedactedString = \"REDACTED\";\n\n// Make sure this list is up-to-date with the one under core/logger/Readme#Keyconcepts\nconst defaultAllowedHeaderNames = [\n  \"x-ms-client-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-useragent\",\n  \"x-ms-correlation-request-id\",\n  \"x-ms-request-id\",\n  \"client-request-id\",\n  \"ms-cv\",\n  \"return-client-request-id\",\n  \"traceparent\",\n\n  \"Access-Control-Allow-Credentials\",\n  \"Access-Control-Allow-Headers\",\n  \"Access-Control-Allow-Methods\",\n  \"Access-Control-Allow-Origin\",\n  \"Access-Control-Expose-Headers\",\n  \"Access-Control-Max-Age\",\n  \"Access-Control-Request-Headers\",\n  \"Access-Control-Request-Method\",\n  \"Origin\",\n\n  \"Accept\",\n  \"Accept-Encoding\",\n  \"Cache-Control\",\n  \"Connection\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"ETag\",\n  \"Expires\",\n  \"If-Match\",\n  \"If-Modified-Since\",\n  \"If-None-Match\",\n  \"If-Unmodified-Since\",\n  \"Last-Modified\",\n  \"Pragma\",\n  \"Request-Id\",\n  \"Retry-After\",\n  \"Server\",\n  \"Transfer-Encoding\",\n  \"User-Agent\",\n  \"WWW-Authenticate\",\n];\n\nconst defaultAllowedQueryParameters: string[] = [\"api-version\"];\n\n/**\n * @internal\n */\nexport class Sanitizer {\n  private allowedHeaderNames: Set<string>;\n  private allowedQueryParameters: Set<string>;\n\n  constructor({\n    additionalAllowedHeaderNames: allowedHeaderNames = [],\n    additionalAllowedQueryParameters: allowedQueryParameters = [],\n  }: SanitizerOptions = {}) {\n    allowedHeaderNames = defaultAllowedHeaderNames.concat(allowedHeaderNames);\n    allowedQueryParameters = defaultAllowedQueryParameters.concat(allowedQueryParameters);\n\n    this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n    this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n  }\n\n  public sanitize(obj: unknown): string {\n    const seen = new Set<unknown>();\n    return JSON.stringify(\n      obj,\n      (key: string, value: unknown) => {\n        // Ensure Errors include their interesting non-enumerable members\n        if (value instanceof Error) {\n          return {\n            ...value,\n            name: value.name,\n            message: value.message,\n          };\n        }\n\n        if (key === \"headers\") {\n          return this.sanitizeHeaders(value as UnknownObject);\n        } else if (key === \"url\") {\n          return this.sanitizeUrl(value as string);\n        } else if (key === \"query\") {\n          return this.sanitizeQuery(value as UnknownObject);\n        } else if (key === \"body\") {\n          // Don't log the request body\n          return undefined;\n        } else if (key === \"response\") {\n          // Don't log response again\n          return undefined;\n        } else if (key === \"operationSpec\") {\n          // When using sendOperationRequest, the request carries a massive\n          // field with the autorest spec. No need to log it.\n          return undefined;\n        } else if (Array.isArray(value) || isObject(value)) {\n          if (seen.has(value)) {\n            return \"[Circular]\";\n          }\n          seen.add(value);\n        }\n\n        return value;\n      },\n      2,\n    );\n  }\n\n  public sanitizeUrl(value: string): string {\n    if (typeof value !== \"string\" || value === null || value === \"\") {\n      return value;\n    }\n\n    const url = new URL(value);\n\n    if (!url.search) {\n      return value;\n    }\n\n    for (const [key] of url.searchParams) {\n      if (!this.allowedQueryParameters.has(key.toLowerCase())) {\n        url.searchParams.set(key, RedactedString);\n      }\n    }\n\n    return url.toString();\n  }\n\n  private sanitizeHeaders(obj: UnknownObject): UnknownObject {\n    const sanitized: UnknownObject = {};\n    for (const key of Object.keys(obj)) {\n      if (this.allowedHeaderNames.has(key.toLowerCase())) {\n        sanitized[key] = obj[key];\n      } else {\n        sanitized[key] = RedactedString;\n      }\n    }\n    return sanitized;\n  }\n\n  private sanitizeQuery(value: UnknownObject): UnknownObject {\n    if (typeof value !== \"object\" || value === null) {\n      return value;\n    }\n\n    const sanitized: UnknownObject = {};\n\n    for (const k of Object.keys(value)) {\n      if (this.allowedQueryParameters.has(k.toLowerCase())) {\n        sanitized[k] = value[k];\n      } else {\n        sanitized[k] = RedactedString;\n      }\n    }\n\n    return sanitized;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nexport const redirectPolicyName = \"redirectPolicy\";\n\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n\n/**\n * Options for how redirect responses are handled.\n */\nexport interface RedirectPolicyOptions {\n  /**\n   * The maximum number of times the redirect URL will be tried before\n   * failing.  Defaults to 20.\n   */\n  maxRetries?: number;\n}\n\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nexport function redirectPolicy(options: RedirectPolicyOptions = {}): PipelinePolicy {\n  const { maxRetries = 20 } = options;\n  return {\n    name: redirectPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      const response = await next(request);\n      return handleRedirect(next, response, maxRetries);\n    },\n  };\n}\n\nasync function handleRedirect(\n  next: SendRequest,\n  response: PipelineResponse,\n  maxRetries: number,\n  currentRetries: number = 0,\n): Promise<PipelineResponse> {\n  const { request, status, headers } = response;\n  const locationHeader = headers.get(\"location\");\n  if (\n    locationHeader &&\n    (status === 300 ||\n      (status === 301 && allowedRedirect.includes(request.method)) ||\n      (status === 302 && allowedRedirect.includes(request.method)) ||\n      (status === 303 && request.method === \"POST\") ||\n      status === 307) &&\n    currentRetries < maxRetries\n  ) {\n    const url = new URL(locationHeader, request.url);\n    request.url = url.toString();\n\n    // POST request with Status code 303 should be converted into a\n    // redirected GET request if the redirect url is present in the location header\n    if (status === 303) {\n      request.method = \"GET\";\n      request.headers.delete(\"Content-Length\");\n      delete request.body;\n    }\n\n    request.headers.delete(\"Authorization\");\n\n    const res = await next(request);\n    return handleRedirect(next, res, maxRetries, currentRetries + 1);\n  }\n\n  return response;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport const SDK_VERSION: string = \"1.19.0\";\n\nexport const DEFAULT_RETRY_POLICY_COUNT = 3;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { getHeaderName, setPlatformSpecificData } from \"./userAgentPlatform.js\";\nimport { SDK_VERSION } from \"../constants.js\";\n\nfunction getUserAgentString(telemetryInfo: Map<string, string>): string {\n  const parts: string[] = [];\n  for (const [key, value] of telemetryInfo) {\n    const token = value ? `${key}/${value}` : key;\n    parts.push(token);\n  }\n  return parts.join(\" \");\n}\n\n/**\n * @internal\n */\nexport function getUserAgentHeaderName(): string {\n  return getHeaderName();\n}\n\n/**\n * @internal\n */\nexport async function getUserAgentValue(prefix?: string): Promise<string> {\n  const runtimeInfo = new Map<string, string>();\n  runtimeInfo.set(\"core-rest-pipeline\", SDK_VERSION);\n  await setPlatformSpecificData(runtimeInfo);\n  const defaultAgent = getUserAgentString(runtimeInfo);\n  const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n  return userAgentValue;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * @internal\n */\nexport function getHeaderName(): string {\n  return \"x-ms-useragent\";\n}\n\ninterface BrowserBrand {\n  brand: string;\n  version: string;\n}\n\ninterface NavigatorEx extends Navigator {\n  userAgentData?: {\n    brands: BrowserBrand[];\n    mobile: boolean;\n    platform?: string;\n    getHighEntropyValues: (hints: string[]) => Promise<{\n      architecture: string;\n      bitness: string;\n      brands: BrowserBrand[];\n      formFactor: string;\n      fullVersionList: BrowserBrand[];\n      mobile: boolean;\n      model: string;\n      platform: string;\n      platformVersion: string;\n      wow64: boolean;\n    }>;\n  };\n}\n\ndeclare const globalThis: {\n  navigator?: NavigatorEx;\n  EdgeRuntime?: unknown;\n};\n\nfunction getBrowserInfo(userAgent: string): BrowserBrand | undefined {\n  const browserRegexes = [\n    { name: \"Firefox\", regex: /Firefox\\/([\\d.]+)/ },\n    { name: \"Safari\", regex: /Version\\/([\\d.]+).*Safari/ },\n  ];\n\n  for (const browser of browserRegexes) {\n    const match = userAgent.match(browser.regex);\n    if (match) {\n      return { brand: browser.name, version: match[1] };\n    }\n  }\n\n  return undefined;\n}\n\nfunction getBrandVersionString(brands: BrowserBrand[]): BrowserBrand | undefined {\n  const brandOrder = [\"Google Chrome\", \"Microsoft Edge\", \"Opera\", \"Brave\", \"Chromium\"];\n  for (const brand of brandOrder) {\n    const foundBrand = brands.find((b) => b.brand === brand);\n    if (foundBrand) {\n      return foundBrand;\n    }\n  }\n  return undefined;\n}\n\n/**\n * @internal\n */\nexport async function setPlatformSpecificData(map: Map<string, string>): Promise<void> {\n  const localNavigator = globalThis.navigator as NavigatorEx;\n  let osPlatform = \"unknown\";\n  if (localNavigator?.userAgentData) {\n    const entropyValues = await localNavigator.userAgentData.getHighEntropyValues([\n      \"architecture\",\n      \"platformVersion\",\n    ]);\n    osPlatform = `${entropyValues.architecture}-${entropyValues.platform}-${entropyValues.platformVersion}`;\n\n    // Get the brand and version\n    const brand = getBrandVersionString(localNavigator.userAgentData.brands);\n    if (brand) {\n      map.set(brand.brand, brand.version);\n    }\n  } else if (localNavigator?.platform) {\n    osPlatform = localNavigator.platform;\n    const brand = getBrowserInfo(localNavigator.userAgent);\n    if (brand) {\n      map.set(brand.brand, brand.version);\n    }\n  } else if (typeof globalThis.EdgeRuntime === \"string\") {\n    map.set(\"EdgeRuntime\", globalThis.EdgeRuntime);\n  }\n\n  map.set(\"OS\", osPlatform);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { getUserAgentHeaderName, getUserAgentValue } from \"../util/userAgent.js\";\n\nconst UserAgentHeaderName = getUserAgentHeaderName();\n\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nexport const userAgentPolicyName = \"userAgentPolicy\";\n\n/**\n * Options for adding user agent details to outgoing requests.\n */\nexport interface UserAgentPolicyOptions {\n  /**\n   * String prefix to add to the user agent for outgoing requests.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n}\n\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nexport function userAgentPolicy(options: UserAgentPolicyOptions = {}): PipelinePolicy {\n  const userAgentValue = getUserAgentValue(options.userAgentPrefix);\n  return {\n    name: userAgentPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.headers.has(UserAgentHeaderName)) {\n        request.headers.set(UserAgentHeaderName, await userAgentValue);\n      }\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isNodeLike } from \"@azure/core-util\";\nimport { isNodeReadableStream } from \"./typeGuards.js\";\n\n/**\n * Options passed into createFile specifying metadata about the file.\n */\nexport interface CreateFileOptions {\n  /**\n   * The MIME type of the file.\n   */\n  type?: string;\n\n  /**\n   * Last modified time of the file as a UNIX timestamp.\n   * This will default to the current date.\n   */\n  lastModified?: number;\n\n  /**\n   * relative path of this file when uploading a directory.\n   */\n  webkitRelativePath?: string;\n}\n\n/**\n * Extra options for createFile when a stream is being passed in.\n */\nexport interface CreateFileFromStreamOptions extends CreateFileOptions {\n  /**\n   * Size of the file represented by the stream in bytes.\n   *\n   * This will be used by the pipeline when calculating the Content-Length header\n   * for the overall request.\n   */\n  size?: number;\n}\n\nconst unimplementedMethods = {\n  arrayBuffer: () => {\n    throw new Error(\"Not implemented\");\n  },\n  bytes: () => {\n    throw new Error(\"Not implemented\");\n  },\n  slice: () => {\n    throw new Error(\"Not implemented\");\n  },\n  text: () => {\n    throw new Error(\"Not implemented\");\n  },\n};\n\n/**\n * Private symbol used as key on objects created using createFile containing the\n * original source of the file object.\n *\n * This is used in Node to access the original Node stream without using Blob#stream, which\n * returns a web stream. This is done to avoid a couple of bugs to do with Blob#stream and\n * Readable#to/fromWeb in Node versions we support:\n * - https://github.com/nodejs/node/issues/42694 (fixed in Node 18.14)\n * - https://github.com/nodejs/node/issues/48916 (fixed in Node 20.6)\n *\n * Once these versions are no longer supported, we may be able to stop doing this.\n *\n * @internal\n */\nconst rawContent: unique symbol = Symbol(\"rawContent\");\n\n/**\n * Type signature of a blob-like object with a raw content property.\n */\ninterface RawContent {\n  [rawContent](): Uint8Array | NodeJS.ReadableStream | ReadableStream<Uint8Array>;\n}\n\nfunction hasRawContent(x: unknown): x is RawContent {\n  return typeof (x as RawContent)[rawContent] === \"function\";\n}\n\n/**\n * Extract the raw content from a given blob-like object. If the input was created using createFile\n * or createFileFromStream, the exact content passed into createFile/createFileFromStream will be used.\n * For true instances of Blob and File, returns the blob's content as a Web ReadableStream<Uint8Array>.\n *\n * @internal\n */\nexport function getRawContent(\n  blob: Blob,\n): NodeJS.ReadableStream | ReadableStream<Uint8Array> | Uint8Array {\n  if (hasRawContent(blob)) {\n    return blob[rawContent]();\n  } else {\n    return blob.stream();\n  }\n}\n\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function to:\n * - Create a File object for use in RequestBodyType.formData in environments where the\n *   global File object is unavailable.\n * - Create a File-like object from a readable stream without reading the stream into memory.\n *\n * @param stream - the content of the file as a callback returning a stream. When a File object made using createFile is\n *                  passed in a request's form data map, the stream will not be read into memory\n *                  and instead will be streamed when the request is made. In the event of a retry, the\n *                  stream needs to be read again, so this callback SHOULD return a fresh stream if possible.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nexport function createFileFromStream(\n  stream: () => ReadableStream<Uint8Array> | NodeJS.ReadableStream,\n  name: string,\n  options: CreateFileFromStreamOptions = {},\n): File {\n  return {\n    ...unimplementedMethods,\n    type: options.type ?? \"\",\n    lastModified: options.lastModified ?? new Date().getTime(),\n    webkitRelativePath: options.webkitRelativePath ?? \"\",\n    size: options.size ?? -1,\n    name,\n    stream: () => {\n      const s = stream();\n      if (isNodeReadableStream(s)) {\n        throw new Error(\n          \"Not supported: a Node stream was provided as input to createFileFromStream.\",\n        );\n      }\n\n      return s;\n    },\n    [rawContent]: stream,\n  } as File & RawContent;\n}\n\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function create a File object for use in RequestBodyType.formData in environments where the global File object is unavailable.\n *\n * @param content - the content of the file as a Uint8Array in memory.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nexport function createFile(\n  content: Uint8Array,\n  name: string,\n  options: CreateFileOptions = {},\n): File {\n  if (isNodeLike) {\n    return {\n      ...unimplementedMethods,\n      type: options.type ?? \"\",\n      lastModified: options.lastModified ?? new Date().getTime(),\n      webkitRelativePath: options.webkitRelativePath ?? \"\",\n      size: content.byteLength,\n      name,\n      arrayBuffer: async () => content.buffer,\n      stream: () => new Blob([content]).stream(),\n      [rawContent]: () => content,\n    } as File & RawContent;\n  } else {\n    return new File([content], name, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport function isNodeReadableStream(x: unknown): x is NodeJS.ReadableStream {\n  return Boolean(x && typeof (x as NodeJS.ReadableStream)[\"pipe\"] === \"function\");\n}\n\nexport function isWebReadableStream(x: unknown): x is ReadableStream {\n  return Boolean(\n    x &&\n      typeof (x as ReadableStream).getReader === \"function\" &&\n      typeof (x as ReadableStream).tee === \"function\",\n  );\n}\n\nexport function isReadableStream(x: unknown): x is ReadableStream | NodeJS.ReadableStream {\n  return isNodeReadableStream(x) || isWebReadableStream(x);\n}\n\nexport function isBlob(x: unknown): x is Blob {\n  return typeof (x as Blob).stream === \"function\";\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { getRawContent } from \"./file.js\";\nimport { isNodeReadableStream, isWebReadableStream } from \"./typeGuards.js\";\n\n/**\n * Drain the content of the given ReadableStream into a Blob.\n * The blob's content may end up in memory or on disk dependent on size.\n */\nfunction drain(stream: ReadableStream<Uint8Array>): Promise<Blob> {\n  return new Response(stream).blob();\n}\n\nasync function toBlobPart(\n  source: ReadableStream<Uint8Array> | Blob | Uint8Array,\n): Promise<BlobPart> {\n  if (source instanceof Blob || source instanceof Uint8Array) {\n    return source;\n  }\n\n  if (isWebReadableStream(source)) {\n    return drain(source);\n  }\n\n  // If it's not a true Blob, and it's not a Uint8Array, we can assume the source\n  // is a fake File created by createFileFromStream and we can get the original stream\n  // using getRawContent.\n  const rawContent = getRawContent(source);\n\n  // Shouldn't happen but guard for it anyway\n  if (isNodeReadableStream(rawContent)) {\n    throw new Error(\n      \"Encountered unexpected type. In the browser, `concat` supports Web ReadableStream, Blob, Uint8Array, and files created using `createFile` only.\",\n    );\n  }\n\n  return toBlobPart(rawContent);\n}\n\n/**\n * Accepted binary data types for concat\n *\n * @internal\n */\ntype ConcatSource = ReadableStream<Uint8Array> | Blob | Uint8Array;\n\n/**\n * Utility function that concatenates a set of binary inputs into one combined output.\n *\n * @param sources - array of sources for the concatenation\n * @returns - in Node, a (() =\\> NodeJS.ReadableStream) which, when read, produces a concatenation of all the inputs.\n *           In browser, returns a `Blob` representing all the concatenated inputs.\n *\n * @internal\n */\nexport async function concat(\n  sources: (ConcatSource | (() => ConcatSource))[],\n): Promise<(() => NodeJS.ReadableStream) | Blob> {\n  const parts = [];\n  for (const source of sources) {\n    parts.push(await toBlobPart(typeof source === \"function\" ? source() : source));\n  }\n\n  return new Blob(parts);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { randomUUID, stringToUint8Array } from \"@azure/core-util\";\nimport type { BodyPart, HttpHeaders, PipelineRequest, PipelineResponse } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { concat } from \"../util/concat.js\";\nimport { isBlob } from \"../util/typeGuards.js\";\n\nfunction generateBoundary(): string {\n  return `----AzSDKFormBoundary${randomUUID()}`;\n}\n\nfunction encodeHeaders(headers: HttpHeaders): string {\n  let result = \"\";\n  for (const [key, value] of headers) {\n    result += `${key}: ${value}\\r\\n`;\n  }\n  return result;\n}\n\nfunction getLength(\n  source:\n    | (() => ReadableStream<Uint8Array>)\n    | (() => NodeJS.ReadableStream)\n    | Uint8Array\n    | Blob\n    | ReadableStream\n    | NodeJS.ReadableStream,\n): number | undefined {\n  if (source instanceof Uint8Array) {\n    return source.byteLength;\n  } else if (isBlob(source)) {\n    // if was created using createFile then -1 means we have an unknown size\n    return source.size === -1 ? undefined : source.size;\n  } else {\n    return undefined;\n  }\n}\n\nfunction getTotalLength(\n  sources: (\n    | (() => ReadableStream<Uint8Array>)\n    | (() => NodeJS.ReadableStream)\n    | Uint8Array\n    | Blob\n    | ReadableStream\n    | NodeJS.ReadableStream\n  )[],\n): number | undefined {\n  let total = 0;\n  for (const source of sources) {\n    const partLength = getLength(source);\n    if (partLength === undefined) {\n      return undefined;\n    } else {\n      total += partLength;\n    }\n  }\n  return total;\n}\n\nasync function buildRequestBody(\n  request: PipelineRequest,\n  parts: BodyPart[],\n  boundary: string,\n): Promise<void> {\n  const sources = [\n    stringToUint8Array(`--${boundary}`, \"utf-8\"),\n    ...parts.flatMap((part) => [\n      stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n      stringToUint8Array(encodeHeaders(part.headers), \"utf-8\"),\n      stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n      part.body,\n      stringToUint8Array(`\\r\\n--${boundary}`, \"utf-8\"),\n    ]),\n    stringToUint8Array(\"--\\r\\n\\r\\n\", \"utf-8\"),\n  ];\n\n  const contentLength = getTotalLength(sources);\n  if (contentLength) {\n    request.headers.set(\"Content-Length\", contentLength);\n  }\n\n  request.body = await concat(sources);\n}\n\n/**\n * Name of multipart policy\n */\nexport const multipartPolicyName = \"multipartPolicy\";\n\nconst maxBoundaryLength = 70;\nconst validBoundaryCharacters = new Set(\n  `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'()+,-./:=?`,\n);\n\nfunction assertValidBoundary(boundary: string): void {\n  if (boundary.length > maxBoundaryLength) {\n    throw new Error(`Multipart boundary \"${boundary}\" exceeds maximum length of 70 characters`);\n  }\n\n  if (Array.from(boundary).some((x) => !validBoundaryCharacters.has(x))) {\n    throw new Error(`Multipart boundary \"${boundary}\" contains invalid characters`);\n  }\n}\n\n/**\n * Pipeline policy for multipart requests\n */\nexport function multipartPolicy(): PipelinePolicy {\n  return {\n    name: multipartPolicyName,\n    async sendRequest(request, next): Promise<PipelineResponse> {\n      if (!request.multipartBody) {\n        return next(request);\n      }\n\n      if (request.body) {\n        throw new Error(\"multipartBody and regular body cannot be set at the same time\");\n      }\n\n      let boundary = request.multipartBody.boundary;\n\n      const contentTypeHeader = request.headers.get(\"Content-Type\") ?? \"multipart/mixed\";\n      const parsedHeader = contentTypeHeader.match(/^(multipart\\/[^ ;]+)(?:; *boundary=(.+))?$/);\n      if (!parsedHeader) {\n        throw new Error(\n          `Got multipart request body, but content-type header was not multipart: ${contentTypeHeader}`,\n        );\n      }\n\n      const [, contentType, parsedBoundary] = parsedHeader;\n      if (parsedBoundary && boundary && parsedBoundary !== boundary) {\n        throw new Error(\n          `Multipart boundary was specified as ${parsedBoundary} in the header, but got ${boundary} in the request body`,\n        );\n      }\n\n      boundary ??= parsedBoundary;\n      if (boundary) {\n        assertValidBoundary(boundary);\n      } else {\n        boundary = generateBoundary();\n      }\n      request.headers.set(\"Content-Type\", `${contentType}; boundary=${boundary}`);\n      await buildRequestBody(request, request.multipartBody.parts, boundary);\n\n      request.multipartBody = undefined;\n\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortError, type AbortSignalLike } from \"@azure/abort-controller\";\nimport type { PipelineResponse } from \"../interfaces.js\";\n\nconst StandardAbortMessage = \"The operation was aborted.\";\n\n/**\n * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @param options - The options for delay - currently abort options\n *                  - abortSignal - The abortSignal associated with containing operation.\n *                  - abortErrorMsg - The abort error message associated with containing operation.\n * @returns Resolved promise\n */\nexport function delay<T>(\n  delayInMs: number,\n  value?: T,\n  options?: {\n    abortSignal?: AbortSignalLike;\n    abortErrorMsg?: string;\n  },\n): Promise<T | void> {\n  return new Promise((resolve, reject) => {\n    let timer: ReturnType<typeof setTimeout> | undefined = undefined;\n    let onAborted: (() => void) | undefined = undefined;\n\n    const rejectOnAbort = (): void => {\n      return reject(\n        new AbortError(options?.abortErrorMsg ? options?.abortErrorMsg : StandardAbortMessage),\n      );\n    };\n\n    const removeListeners = (): void => {\n      if (options?.abortSignal && onAborted) {\n        options.abortSignal.removeEventListener(\"abort\", onAborted);\n      }\n    };\n\n    onAborted = (): void => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      removeListeners();\n      return rejectOnAbort();\n    };\n\n    if (options?.abortSignal && options.abortSignal.aborted) {\n      return rejectOnAbort();\n    }\n\n    timer = setTimeout(() => {\n      removeListeners();\n      resolve(value);\n    }, delayInMs);\n\n    if (options?.abortSignal) {\n      options.abortSignal.addEventListener(\"abort\", onAborted);\n    }\n  });\n}\n\n/**\n * @internal\n * @returns the parsed value or undefined if the parsed value is invalid.\n */\nexport function parseHeaderValueAsNumber(\n  response: PipelineResponse,\n  headerName: string,\n): number | undefined {\n  const value = response.headers.get(headerName);\n  if (!value) return;\n  const valueAsNum = Number(value);\n  if (Number.isNaN(valueAsNum)) return;\n  return valueAsNum;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineResponse } from \"../index.js\";\nimport { parseHeaderValueAsNumber } from \"../util/helpers.js\";\nimport type { RetryStrategy } from \"./retryStrategy.js\";\n\n/**\n * The header that comes back from Azure services representing\n * the amount of time (minimum) to wait to retry (in seconds or timestamp after which we can retry).\n */\nconst RetryAfterHeader = \"Retry-After\";\n/**\n * The headers that come back from Azure services representing\n * the amount of time (minimum) to wait to retry.\n *\n * \"retry-after-ms\", \"x-ms-retry-after-ms\" : milliseconds\n * \"Retry-After\" : seconds or timestamp\n */\nconst AllRetryAfterHeaders: string[] = [\"retry-after-ms\", \"x-ms-retry-after-ms\", RetryAfterHeader];\n\n/**\n * A response is a throttling retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n *\n * Returns the `retryAfterInMs` value if the response is a throttling retry response.\n * If not throttling retry response, returns `undefined`.\n *\n * @internal\n */\nfunction getRetryAfterInMs(response?: PipelineResponse): number | undefined {\n  if (!(response && [429, 503].includes(response.status))) return undefined;\n  try {\n    // Headers: \"retry-after-ms\", \"x-ms-retry-after-ms\", \"Retry-After\"\n    for (const header of AllRetryAfterHeaders) {\n      const retryAfterValue = parseHeaderValueAsNumber(response, header);\n      if (retryAfterValue === 0 || retryAfterValue) {\n        // \"Retry-After\" header ==> seconds\n        // \"retry-after-ms\", \"x-ms-retry-after-ms\" headers ==> milli-seconds\n        const multiplyingFactor = header === RetryAfterHeader ? 1000 : 1;\n        return retryAfterValue * multiplyingFactor; // in milli-seconds\n      }\n    }\n\n    // RetryAfterHeader (\"Retry-After\") has a special case where it might be formatted as a date instead of a number of seconds\n    const retryAfterHeader = response.headers.get(RetryAfterHeader);\n    if (!retryAfterHeader) return;\n\n    const date = Date.parse(retryAfterHeader);\n    const diff = date - Date.now();\n    // negative diff would mean a date in the past, so retry asap with 0 milliseconds\n    return Number.isFinite(diff) ? Math.max(0, diff) : undefined;\n  } catch {\n    return undefined;\n  }\n}\n\n/**\n * A response is a retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n */\nexport function isThrottlingRetryResponse(response?: PipelineResponse): boolean {\n  return Number.isFinite(getRetryAfterInMs(response));\n}\n\nexport function throttlingRetryStrategy(): RetryStrategy {\n  return {\n    name: \"throttlingRetryStrategy\",\n    retry({ response }) {\n      const retryAfterInMs = getRetryAfterInMs(response);\n      if (!Number.isFinite(retryAfterInMs)) {\n        return { skipStrategy: true };\n      }\n      return {\n        retryAfterInMs,\n      };\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineResponse } from \"../interfaces.js\";\nimport type { RestError } from \"../restError.js\";\nimport { calculateRetryDelay } from \"@azure/core-util\";\nimport type { RetryStrategy } from \"./retryStrategy.js\";\nimport { isThrottlingRetryResponse } from \"./throttlingRetryStrategy.js\";\n\n// intervals are in milliseconds\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 64;\n\n/**\n * A retry strategy that retries with an exponentially increasing delay in these two cases:\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails (408, greater or equal than 500, except for 501 and 505).\n */\nexport function exponentialRetryStrategy(\n  options: {\n    /**\n     * The amount of delay in milliseconds between retry attempts. Defaults to 1000\n     * (1 second.) The delay increases exponentially with each retry up to a maximum\n     * specified by maxRetryDelayInMs.\n     */\n    retryDelayInMs?: number;\n\n    /**\n     * The maximum delay in milliseconds allowed before retrying an operation. Defaults\n     * to 64000 (64 seconds).\n     */\n    maxRetryDelayInMs?: number;\n\n    /**\n     * If true it won't retry if it received a system error.\n     */\n    ignoreSystemErrors?: boolean;\n\n    /**\n     * If true it won't retry if it received a non-fatal HTTP status code.\n     */\n    ignoreHttpStatusCodes?: boolean;\n  } = {},\n): RetryStrategy {\n  const retryInterval = options.retryDelayInMs ?? DEFAULT_CLIENT_RETRY_INTERVAL;\n  const maxRetryInterval = options.maxRetryDelayInMs ?? DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n\n  return {\n    name: \"exponentialRetryStrategy\",\n    retry({ retryCount, response, responseError }) {\n      const matchedSystemError = isSystemError(responseError);\n      const ignoreSystemErrors = matchedSystemError && options.ignoreSystemErrors;\n\n      const isExponential = isExponentialRetryResponse(response);\n      const ignoreExponentialResponse = isExponential && options.ignoreHttpStatusCodes;\n      const unknownResponse = response && (isThrottlingRetryResponse(response) || !isExponential);\n\n      if (unknownResponse || ignoreExponentialResponse || ignoreSystemErrors) {\n        return { skipStrategy: true };\n      }\n\n      if (responseError && !matchedSystemError && !isExponential) {\n        return { errorToThrow: responseError };\n      }\n\n      return calculateRetryDelay(retryCount, {\n        retryDelayInMs: retryInterval,\n        maxRetryDelayInMs: maxRetryInterval,\n      });\n    },\n  };\n}\n\n/**\n * A response is a retry response if it has status codes:\n * - 408, or\n * - Greater or equal than 500, except for 501 and 505.\n */\nexport function isExponentialRetryResponse(response?: PipelineResponse): boolean {\n  return Boolean(\n    response &&\n      response.status !== undefined &&\n      (response.status >= 500 || response.status === 408) &&\n      response.status !== 501 &&\n      response.status !== 505,\n  );\n}\n\n/**\n * Determines whether an error from a pipeline response was triggered in the network layer.\n */\nexport function isSystemError(err?: RestError): boolean {\n  if (!err) {\n    return false;\n  }\n  return (\n    err.code === \"ETIMEDOUT\" ||\n    err.code === \"ESOCKETTIMEDOUT\" ||\n    err.code === \"ECONNREFUSED\" ||\n    err.code === \"ECONNRESET\" ||\n    err.code === \"ENOENT\" ||\n    err.code === \"ENOTFOUND\"\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { delay } from \"../util/helpers.js\";\nimport { type AzureLogger, createClientLogger } from \"@azure/logger\";\nimport type { RetryStrategy } from \"../retryStrategies/retryStrategy.js\";\nimport type { RestError } from \"../restError.js\";\nimport { AbortError } from \"@azure/abort-controller\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\nconst retryPolicyLogger = createClientLogger(\"core-rest-pipeline retryPolicy\");\n\n/**\n * The programmatic identifier of the retryPolicy.\n */\nconst retryPolicyName = \"retryPolicy\";\n\n/**\n * Options to the {@link retryPolicy}\n */\nexport interface RetryPolicyOptions {\n  /**\n   * Maximum number of retries. If not specified, it will limit to 3 retries.\n   */\n  maxRetries?: number;\n  /**\n   * Logger. If it's not provided, a default logger is used.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nexport function retryPolicy(\n  strategies: RetryStrategy[],\n  options: RetryPolicyOptions = { maxRetries: DEFAULT_RETRY_POLICY_COUNT },\n): PipelinePolicy {\n  const logger = options.logger || retryPolicyLogger;\n  return {\n    name: retryPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      let response: PipelineResponse | undefined;\n      let responseError: RestError | undefined;\n      let retryCount = -1;\n\n      retryRequest: while (true) {\n        retryCount += 1;\n        response = undefined;\n        responseError = undefined;\n\n        try {\n          logger.info(`Retry ${retryCount}: Attempting to send request`, request.requestId);\n          response = await next(request);\n          logger.info(`Retry ${retryCount}: Received a response from request`, request.requestId);\n        } catch (e: any) {\n          logger.error(`Retry ${retryCount}: Received an error from request`, request.requestId);\n\n          // RestErrors are valid targets for the retry strategies.\n          // If none of the retry strategies can work with them, they will be thrown later in this policy.\n          // If the received error is not a RestError, it is immediately thrown.\n          responseError = e as RestError;\n          if (!e || responseError.name !== \"RestError\") {\n            throw e;\n          }\n\n          response = responseError.response;\n        }\n\n        if (request.abortSignal?.aborted) {\n          logger.error(`Retry ${retryCount}: Request aborted.`);\n          const abortError = new AbortError();\n          throw abortError;\n        }\n\n        if (retryCount >= (options.maxRetries ?? DEFAULT_RETRY_POLICY_COUNT)) {\n          logger.info(\n            `Retry ${retryCount}: Maximum retries reached. Returning the last received response, or throwing the last received error.`,\n          );\n          if (responseError) {\n            throw responseError;\n          } else if (response) {\n            return response;\n          } else {\n            throw new Error(\"Maximum retries reached with no response or error to throw\");\n          }\n        }\n\n        logger.info(`Retry ${retryCount}: Processing ${strategies.length} retry strategies.`);\n\n        strategiesLoop: for (const strategy of strategies) {\n          const strategyLogger = strategy.logger || retryPolicyLogger;\n          strategyLogger.info(`Retry ${retryCount}: Processing retry strategy ${strategy.name}.`);\n\n          const modifiers = strategy.retry({\n            retryCount,\n            response,\n            responseError,\n          });\n\n          if (modifiers.skipStrategy) {\n            strategyLogger.info(`Retry ${retryCount}: Skipped.`);\n            continue strategiesLoop;\n          }\n\n          const { errorToThrow, retryAfterInMs, redirectTo } = modifiers;\n\n          if (errorToThrow) {\n            strategyLogger.error(\n              `Retry ${retryCount}: Retry strategy ${strategy.name} throws error:`,\n              errorToThrow,\n            );\n            throw errorToThrow;\n          }\n\n          if (retryAfterInMs || retryAfterInMs === 0) {\n            strategyLogger.info(\n              `Retry ${retryCount}: Retry strategy ${strategy.name} retries after ${retryAfterInMs}`,\n            );\n            await delay(retryAfterInMs, undefined, { abortSignal: request.abortSignal });\n            continue retryRequest;\n          }\n\n          if (redirectTo) {\n            strategyLogger.info(\n              `Retry ${retryCount}: Retry strategy ${strategy.name} redirects to ${redirectTo}`,\n            );\n            request.url = redirectTo;\n            continue retryRequest;\n          }\n        }\n\n        if (responseError) {\n          logger.info(\n            `None of the retry strategies could work with the received error. Throwing it.`,\n          );\n          throw responseError;\n        }\n        if (response) {\n          logger.info(\n            `None of the retry strategies could work with the received response. Returning it.`,\n          );\n          return response;\n        }\n\n        // If all the retries skip and there's no response,\n        // we're still in the retry loop, so a new request will be sent\n        // until `maxRetries` is reached.\n      }\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpHeaders, RawHttpHeaders, RawHttpHeadersInput } from \"./interfaces.js\";\n\ninterface HeaderEntry {\n  name: string;\n  value: string;\n}\n\nfunction normalizeName(name: string): string {\n  return name.toLowerCase();\n}\n\nfunction* headerIterator(map: Map<string, HeaderEntry>): IterableIterator<[string, string]> {\n  for (const entry of map.values()) {\n    yield [entry.name, entry.value];\n  }\n}\n\nclass HttpHeadersImpl implements HttpHeaders {\n  private readonly _headersMap: Map<string, HeaderEntry>;\n\n  constructor(rawHeaders?: RawHttpHeaders | RawHttpHeadersInput) {\n    this._headersMap = new Map<string, HeaderEntry>();\n    if (rawHeaders) {\n      for (const headerName of Object.keys(rawHeaders)) {\n        this.set(headerName, rawHeaders[headerName]);\n      }\n    }\n  }\n\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param name - The name of the header to set. This value is case-insensitive.\n   * @param value - The value of the header to set.\n   */\n  public set(name: string, value: string | number | boolean): void {\n    this._headersMap.set(normalizeName(name), { name, value: String(value).trim() });\n  }\n\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param name - The name of the header. This value is case-insensitive.\n   */\n  public get(name: string): string | undefined {\n    return this._headersMap.get(normalizeName(name))?.value;\n  }\n\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   * @param name - The name of the header to set. This value is case-insensitive.\n   */\n  public has(name: string): boolean {\n    return this._headersMap.has(normalizeName(name));\n  }\n\n  /**\n   * Remove the header with the provided headerName.\n   * @param name - The name of the header to remove.\n   */\n  public delete(name: string): void {\n    this._headersMap.delete(normalizeName(name));\n  }\n\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   */\n  public toJSON(options: { preserveCase?: boolean } = {}): RawHttpHeaders {\n    const result: RawHttpHeaders = {};\n    if (options.preserveCase) {\n      for (const entry of this._headersMap.values()) {\n        result[entry.name] = entry.value;\n      }\n    } else {\n      for (const [normalizedName, entry] of this._headersMap) {\n        result[normalizedName] = entry.value;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Get the string representation of this HTTP header collection.\n   */\n  public toString(): string {\n    return JSON.stringify(this.toJSON({ preserveCase: true }));\n  }\n\n  /**\n   * Iterate over tuples of header [name, value] pairs.\n   */\n  [Symbol.iterator](): Iterator<[string, string]> {\n    return headerIterator(this._headersMap);\n  }\n}\n\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nexport function createHttpHeaders(rawHeaders?: RawHttpHeadersInput): HttpHeaders {\n  return new HttpHeadersImpl(rawHeaders);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isNodeLike, stringToUint8Array } from \"@azure/core-util\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\nimport type {\n  BodyPart,\n  FormDataMap,\n  FormDataValue,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\n\nfunction formDataToFormDataMap(formData: FormData): FormDataMap {\n  const formDataMap: FormDataMap = {};\n  for (const [key, value] of formData.entries()) {\n    formDataMap[key] ??= [];\n    (formDataMap[key] as FormDataValue[]).push(value);\n  }\n  return formDataMap;\n}\n\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy(): PipelinePolicy {\n  return {\n    name: formDataPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (isNodeLike && typeof FormData !== \"undefined\" && request.body instanceof FormData) {\n        request.formData = formDataToFormDataMap(request.body);\n        request.body = undefined;\n      }\n\n      if (request.formData) {\n        const contentType = request.headers.get(\"Content-Type\");\n        if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n          request.body = wwwFormUrlEncode(request.formData);\n        } else {\n          await prepareFormData(request.formData, request);\n        }\n\n        request.formData = undefined;\n      }\n      return next(request);\n    },\n  };\n}\n\nfunction wwwFormUrlEncode(formData: FormDataMap): string {\n  const urlSearchParams = new URLSearchParams();\n  for (const [key, value] of Object.entries(formData)) {\n    if (Array.isArray(value)) {\n      for (const subValue of value) {\n        urlSearchParams.append(key, subValue.toString());\n      }\n    } else {\n      urlSearchParams.append(key, value.toString());\n    }\n  }\n  return urlSearchParams.toString();\n}\n\nasync function prepareFormData(formData: FormDataMap, request: PipelineRequest): Promise<void> {\n  // validate content type (multipart/form-data)\n  const contentType = request.headers.get(\"Content-Type\");\n  if (contentType && !contentType.startsWith(\"multipart/form-data\")) {\n    // content type is specified and is not multipart/form-data. Exit.\n    return;\n  }\n\n  request.headers.set(\"Content-Type\", contentType ?? \"multipart/form-data\");\n\n  // set body to MultipartRequestBody using content from FormDataMap\n  const parts: BodyPart[] = [];\n\n  for (const [fieldName, values] of Object.entries(formData)) {\n    for (const value of Array.isArray(values) ? values : [values]) {\n      if (typeof value === \"string\") {\n        parts.push({\n          headers: createHttpHeaders({\n            \"Content-Disposition\": `form-data; name=\"${fieldName}\"`,\n          }),\n          body: stringToUint8Array(value, \"utf-8\"),\n        });\n      } else if (value === undefined || value === null || typeof value !== \"object\") {\n        throw new Error(\n          `Unexpected value for key ${fieldName}: ${value}. Value should be serialized to string first.`,\n        );\n      } else {\n        // using || instead of ?? here since if value.name is empty we should create a file name\n        const fileName = (value as File).name || \"blob\";\n        const headers = createHttpHeaders();\n        headers.set(\n          \"Content-Disposition\",\n          `form-data; name=\"${fieldName}\"; filename=\"${fileName}\"`,\n        );\n\n        // again, || is used since an empty value.type means the content type is unset\n        headers.set(\"Content-Type\", value.type || \"application/octet-stream\");\n\n        parts.push({\n          headers,\n          body: value,\n        });\n      }\n    }\n  }\n  request.multipartBody = { parts };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport const proxyPolicyName = \"proxyPolicy\";\nconst errorMessage = \"proxyPolicy is not supported in browser environment\";\n\nexport function getDefaultProxySettings(): never {\n  throw new Error(errorMessage);\n}\n\n/**\n * proxyPolicy is not supported in the browser and attempting\n * to use it will raise an error.\n */\nexport function proxyPolicy(): never {\n  throw new Error(errorMessage);\n}\n\n/**\n * A function to reset the cached agents.\n * proxyPolicy is not supported in the browser and attempting\n * to use it will raise an error.\n * @internal\n */\nexport function resetCachedProxyAgents(): never {\n  throw new Error(errorMessage);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { TracingContext, TracingSpan } from \"./interfaces.js\";\n\n/** @internal */\nexport const knownContextKeys = {\n  span: Symbol.for(\"@azure/core-tracing span\"),\n  namespace: Symbol.for(\"@azure/core-tracing namespace\"),\n};\n\n/**\n * Creates a new {@link TracingContext} with the given options.\n * @param options - A set of known keys that may be set on the context.\n * @returns A new {@link TracingContext} with the given options.\n *\n * @internal\n */\nexport function createTracingContext(options: CreateTracingContextOptions = {}): TracingContext {\n  let context: TracingContext = new TracingContextImpl(options.parentContext);\n  if (options.span) {\n    context = context.setValue(knownContextKeys.span, options.span);\n  }\n  if (options.namespace) {\n    context = context.setValue(knownContextKeys.namespace, options.namespace);\n  }\n  return context;\n}\n\n/** @internal */\nexport class TracingContextImpl implements TracingContext {\n  private _contextMap: Map<symbol, unknown>;\n  constructor(initialContext?: TracingContext) {\n    this._contextMap =\n      initialContext instanceof TracingContextImpl\n        ? new Map<symbol, unknown>(initialContext._contextMap)\n        : new Map();\n  }\n\n  setValue(key: symbol, value: unknown): TracingContext {\n    const newContext = new TracingContextImpl(this);\n    newContext._contextMap.set(key, value);\n    return newContext;\n  }\n\n  getValue(key: symbol): unknown {\n    return this._contextMap.get(key);\n  }\n\n  deleteValue(key: symbol): TracingContext {\n    const newContext = new TracingContextImpl(this);\n    newContext._contextMap.delete(key);\n    return newContext;\n  }\n}\n\n/**\n * Represents a set of items that can be set when creating a new {@link TracingContext}.\n */\nexport interface CreateTracingContextOptions {\n  /** The {@link parentContext} - the newly created context will contain all the values of the parent context unless overridden. */\n  parentContext?: TracingContext;\n  /** An initial span to set on the context. */\n  span?: TracingSpan;\n  /** The namespace to set on any child spans. */\n  namespace?: string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { Instrumenter } from \"./interfaces.js\";\n\n/**\n * Browser-only implementation of the module's state. The browser esm variant will not load the commonjs state, so we do not need to share state between the two.\n */\nexport const state = {\n  instrumenterImplementation: undefined as Instrumenter | undefined,\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  Instrumenter,\n  InstrumenterSpanOptions,\n  TracingContext,\n  TracingSpan,\n} from \"./interfaces.js\";\n\nimport { createTracingContext } from \"./tracingContext.js\";\nimport { state } from \"./state.js\";\n\nexport function createDefaultTracingSpan(): TracingSpan {\n  return {\n    end: () => {\n      // noop\n    },\n    isRecording: () => false,\n    recordException: () => {\n      // noop\n    },\n    setAttribute: () => {\n      // noop\n    },\n    setStatus: () => {\n      // noop\n    },\n    addEvent: () => {\n      // noop\n    },\n  };\n}\n\nexport function createDefaultInstrumenter(): Instrumenter {\n  return {\n    createRequestHeaders: (): Record<string, string> => {\n      return {};\n    },\n    parseTraceparentHeader: (): TracingContext | undefined => {\n      return undefined;\n    },\n    startSpan: (\n      _name: string,\n      spanOptions: InstrumenterSpanOptions,\n    ): { span: TracingSpan; tracingContext: TracingContext } => {\n      return {\n        span: createDefaultTracingSpan(),\n        tracingContext: createTracingContext({ parentContext: spanOptions.tracingContext }),\n      };\n    },\n    withContext<\n      CallbackArgs extends unknown[],\n      Callback extends (...args: CallbackArgs) => ReturnType<Callback>,\n    >(\n      _context: TracingContext,\n      callback: Callback,\n      ...callbackArgs: CallbackArgs\n    ): ReturnType<Callback> {\n      return callback(...callbackArgs);\n    },\n  };\n}\n\n/**\n * Extends the Azure SDK with support for a given instrumenter implementation.\n *\n * @param instrumenter - The instrumenter implementation to use.\n */\nexport function useInstrumenter(instrumenter: Instrumenter): void {\n  state.instrumenterImplementation = instrumenter;\n}\n\n/**\n * Gets the currently set instrumenter, a No-Op instrumenter by default.\n *\n * @returns The currently set instrumenter\n */\nexport function getInstrumenter(): Instrumenter {\n  if (!state.instrumenterImplementation) {\n    state.instrumenterImplementation = createDefaultInstrumenter();\n  }\n  return state.instrumenterImplementation;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  OperationTracingOptions,\n  OptionsWithTracingContext,\n  Resolved,\n  TracingClient,\n  TracingClientOptions,\n  TracingContext,\n  TracingSpan,\n  TracingSpanOptions,\n} from \"./interfaces.js\";\nimport { getInstrumenter } from \"./instrumenter.js\";\nimport { knownContextKeys } from \"./tracingContext.js\";\n\n/**\n * Creates a new tracing client.\n *\n * @param options - Options used to configure the tracing client.\n * @returns - An instance of {@link TracingClient}.\n */\nexport function createTracingClient(options: TracingClientOptions): TracingClient {\n  const { namespace, packageName, packageVersion } = options;\n\n  function startSpan<Options extends { tracingOptions?: OperationTracingOptions }>(\n    name: string,\n    operationOptions?: Options,\n    spanOptions?: TracingSpanOptions,\n  ): {\n    span: TracingSpan;\n    updatedOptions: OptionsWithTracingContext<Options>;\n  } {\n    const startSpanResult = getInstrumenter().startSpan(name, {\n      ...spanOptions,\n      packageName: packageName,\n      packageVersion: packageVersion,\n      tracingContext: operationOptions?.tracingOptions?.tracingContext,\n    });\n    let tracingContext = startSpanResult.tracingContext;\n    const span = startSpanResult.span;\n    if (!tracingContext.getValue(knownContextKeys.namespace)) {\n      tracingContext = tracingContext.setValue(knownContextKeys.namespace, namespace);\n    }\n    span.setAttribute(\"az.namespace\", tracingContext.getValue(knownContextKeys.namespace));\n    const updatedOptions: OptionsWithTracingContext<Options> = Object.assign({}, operationOptions, {\n      tracingOptions: { ...operationOptions?.tracingOptions, tracingContext },\n    });\n\n    return {\n      span,\n      updatedOptions,\n    };\n  }\n\n  async function withSpan<\n    Options extends { tracingOptions?: OperationTracingOptions },\n    Callback extends (\n      updatedOptions: Options,\n      span: Omit<TracingSpan, \"end\">,\n    ) => ReturnType<Callback>,\n  >(\n    name: string,\n    operationOptions: Options,\n    callback: Callback,\n    spanOptions?: TracingSpanOptions,\n  ): Promise<Resolved<ReturnType<Callback>>> {\n    const { span, updatedOptions } = startSpan(name, operationOptions, spanOptions);\n    try {\n      const result = await withContext(updatedOptions.tracingOptions.tracingContext, () =>\n        Promise.resolve(callback(updatedOptions, span)),\n      );\n      span.setStatus({ status: \"success\" });\n      return result as ReturnType<typeof withSpan>;\n    } catch (err: any) {\n      span.setStatus({ status: \"error\", error: err });\n      throw err;\n    } finally {\n      span.end();\n    }\n  }\n\n  function withContext<\n    CallbackArgs extends unknown[],\n    Callback extends (...args: CallbackArgs) => ReturnType<Callback>,\n  >(\n    context: TracingContext,\n    callback: Callback,\n    ...callbackArgs: CallbackArgs\n  ): ReturnType<Callback> {\n    return getInstrumenter().withContext(context, callback, ...callbackArgs);\n  }\n\n  /**\n   * Parses a traceparent header value into a span identifier.\n   *\n   * @param traceparentHeader - The traceparent header to parse.\n   * @returns An implementation-specific identifier for the span.\n   */\n  function parseTraceparentHeader(traceparentHeader: string): TracingContext | undefined {\n    return getInstrumenter().parseTraceparentHeader(traceparentHeader);\n  }\n\n  /**\n   * Creates a set of request headers to propagate tracing information to a backend.\n   *\n   * @param tracingContext - The context containing the span to serialize.\n   * @returns The set of headers to add to a request.\n   */\n  function createRequestHeaders(tracingContext?: TracingContext): Record<string, string> {\n    return getInstrumenter().createRequestHeaders(tracingContext);\n  }\n\n  return {\n    startSpan,\n    withSpan,\n    withContext,\n    parseTraceparentHeader,\n    createRequestHeaders,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport const custom = {};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { isError } from \"@azure/core-util\";\nimport type { PipelineRequest, PipelineResponse } from \"./interfaces.js\";\nimport { custom } from \"./util/inspect.js\";\nimport { Sanitizer } from \"./util/sanitizer.js\";\n\nconst errorSanitizer = new Sanitizer();\n\n/**\n * The options supported by RestError.\n */\nexport interface RestErrorOptions {\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  statusCode?: number;\n  /**\n   * The request that was made.\n   */\n  request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   */\n  response?: PipelineResponse;\n}\n\n/**\n * A custom error type for failed pipeline requests.\n */\nexport class RestError extends Error {\n  /**\n   * Something went wrong when making the request.\n   * This means the actual request failed for some reason,\n   * such as a DNS issue or the connection being lost.\n   */\n  static readonly REQUEST_SEND_ERROR: string = \"REQUEST_SEND_ERROR\";\n  /**\n   * This means that parsing the response from the server failed.\n   * It may have been malformed.\n   */\n  static readonly PARSE_ERROR: string = \"PARSE_ERROR\";\n\n  /**\n   * The code of the error itself (use statics on RestError if possible.)\n   */\n  public code?: string;\n  /**\n   * The HTTP status code of the request (if applicable.)\n   */\n  public statusCode?: number;\n  /**\n   * The request that was made.\n   * This property is non-enumerable.\n   */\n  public request?: PipelineRequest;\n  /**\n   * The response received (if any.)\n   * This property is non-enumerable.\n   */\n  public response?: PipelineResponse;\n  /**\n   * Bonus property set by the throw site.\n   */\n  public details?: unknown;\n\n  constructor(message: string, options: RestErrorOptions = {}) {\n    super(message);\n    this.name = \"RestError\";\n    this.code = options.code;\n    this.statusCode = options.statusCode;\n\n    // The request and response may contain sensitive information in the headers or body.\n    // To help prevent this sensitive information being accidentally logged, the request and response\n    // properties are marked as non-enumerable here. This prevents them showing up in the output of\n    // JSON.stringify and console.log.\n    Object.defineProperty(this, \"request\", { value: options.request, enumerable: false });\n    Object.defineProperty(this, \"response\", { value: options.response, enumerable: false });\n\n    Object.setPrototypeOf(this, RestError.prototype);\n  }\n\n  /**\n   * Logging method for util.inspect in Node\n   */\n  [custom](): string {\n    // Extract non-enumerable properties and add them back. This is OK since in this output the request and\n    // response get sanitized.\n    return `RestError: ${this.message} \\n ${errorSanitizer.sanitize({\n      ...this,\n      request: this.request,\n      response: this.response,\n    })}`;\n  }\n}\n\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nexport function isRestError(e: unknown): e is RestError {\n  if (e instanceof RestError) {\n    return true;\n  }\n  return isError(e) && e.name === \"RestError\";\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  type TracingClient,\n  type TracingContext,\n  type TracingSpan,\n  createTracingClient,\n} from \"@azure/core-tracing\";\nimport { SDK_VERSION } from \"../constants.js\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { getUserAgentValue } from \"../util/userAgent.js\";\nimport { logger } from \"../log.js\";\nimport { getErrorMessage, isError } from \"@azure/core-util\";\nimport { isRestError } from \"../restError.js\";\nimport { Sanitizer } from \"../util/sanitizer.js\";\n\n/**\n * The programmatic identifier of the tracingPolicy.\n */\nexport const tracingPolicyName = \"tracingPolicy\";\n\n/**\n * Options to configure the tracing policy.\n */\nexport interface TracingPolicyOptions {\n  /**\n   * String prefix to add to the user agent logged as metadata\n   * on the generated Span.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n}\n\n/**\n * A simple policy to create OpenTelemetry Spans for each request made by the pipeline\n * that has SpanOptions with a parent.\n * Requests made without a parent Span will not be recorded.\n * @param options - Options to configure the telemetry logged by the tracing policy.\n */\nexport function tracingPolicy(options: TracingPolicyOptions = {}): PipelinePolicy {\n  const userAgentPromise = getUserAgentValue(options.userAgentPrefix);\n  const sanitizer = new Sanitizer({\n    additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n  });\n  const tracingClient = tryCreateTracingClient();\n\n  return {\n    name: tracingPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!tracingClient) {\n        return next(request);\n      }\n\n      const userAgent = await userAgentPromise;\n\n      const spanAttributes = {\n        \"http.url\": sanitizer.sanitizeUrl(request.url),\n        \"http.method\": request.method,\n        \"http.user_agent\": userAgent,\n        requestId: request.requestId,\n      };\n      if (userAgent) {\n        spanAttributes[\"http.user_agent\"] = userAgent;\n      }\n\n      const { span, tracingContext } = tryCreateSpan(tracingClient, request, spanAttributes) ?? {};\n\n      if (!span || !tracingContext) {\n        return next(request);\n      }\n\n      try {\n        const response = await tracingClient.withContext(tracingContext, next, request);\n        tryProcessResponse(span, response);\n        return response;\n      } catch (err: any) {\n        tryProcessError(span, err);\n        throw err;\n      }\n    },\n  };\n}\n\nfunction tryCreateTracingClient(): TracingClient | undefined {\n  try {\n    return createTracingClient({\n      namespace: \"\",\n      packageName: \"@azure/core-rest-pipeline\",\n      packageVersion: SDK_VERSION,\n    });\n  } catch (e: unknown) {\n    logger.warning(`Error when creating the TracingClient: ${getErrorMessage(e)}`);\n    return undefined;\n  }\n}\n\nfunction tryCreateSpan(\n  tracingClient: TracingClient,\n  request: PipelineRequest,\n  spanAttributes: Record<string, unknown>,\n): { span: TracingSpan; tracingContext: TracingContext } | undefined {\n  try {\n    // As per spec, we do not need to differentiate between HTTP and HTTPS in span name.\n    const { span, updatedOptions } = tracingClient.startSpan(\n      `HTTP ${request.method}`,\n      { tracingOptions: request.tracingOptions },\n      {\n        spanKind: \"client\",\n        spanAttributes,\n      },\n    );\n\n    // If the span is not recording, don't do any more work.\n    if (!span.isRecording()) {\n      span.end();\n      return undefined;\n    }\n\n    // set headers\n    const headers = tracingClient.createRequestHeaders(\n      updatedOptions.tracingOptions.tracingContext,\n    );\n    for (const [key, value] of Object.entries(headers)) {\n      request.headers.set(key, value);\n    }\n    return { span, tracingContext: updatedOptions.tracingOptions.tracingContext };\n  } catch (e: any) {\n    logger.warning(`Skipping creating a tracing span due to an error: ${getErrorMessage(e)}`);\n    return undefined;\n  }\n}\n\nfunction tryProcessError(span: TracingSpan, error: unknown): void {\n  try {\n    span.setStatus({\n      status: \"error\",\n      error: isError(error) ? error : undefined,\n    });\n    if (isRestError(error) && error.statusCode) {\n      span.setAttribute(\"http.status_code\", error.statusCode);\n    }\n    span.end();\n  } catch (e: any) {\n    logger.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(e)}`);\n  }\n}\n\nfunction tryProcessResponse(span: TracingSpan, response: PipelineResponse): void {\n  try {\n    span.setAttribute(\"http.status_code\", response.status);\n    const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n    if (serviceRequestId) {\n      span.setAttribute(\"serviceRequestId\", serviceRequestId);\n    }\n    // Per semantic conventions, only set the status to error if the status code is 4xx or 5xx.\n    // Otherwise, the status MUST remain unset.\n    // https://opentelemetry.io/docs/specs/semconv/http/http-spans/#status\n    if (response.status >= 400) {\n      span.setStatus({\n        status: \"error\",\n      });\n    }\n    span.end();\n  } catch (e: any) {\n    logger.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(e)}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { type LogPolicyOptions, logPolicy } from \"./policies/logPolicy.js\";\nimport { type Pipeline, createEmptyPipeline } from \"./pipeline.js\";\nimport type { Agent, PipelineRetryOptions, ProxySettings, TlsSettings } from \"./interfaces.js\";\nimport { type RedirectPolicyOptions, redirectPolicy } from \"./policies/redirectPolicy.js\";\nimport { type UserAgentPolicyOptions, userAgentPolicy } from \"./policies/userAgentPolicy.js\";\nimport { multipartPolicy, multipartPolicyName } from \"./policies/multipartPolicy.js\";\nimport { decompressResponsePolicy } from \"./policies/decompressResponsePolicy.js\";\nimport { defaultRetryPolicy } from \"./policies/defaultRetryPolicy.js\";\nimport { formDataPolicy } from \"./policies/formDataPolicy.js\";\nimport { isNodeLike } from \"@azure/core-util\";\nimport { proxyPolicy } from \"./policies/proxyPolicy.js\";\nimport { setClientRequestIdPolicy } from \"./policies/setClientRequestIdPolicy.js\";\nimport { agentPolicy } from \"./policies/agentPolicy.js\";\nimport { tlsPolicy } from \"./policies/tlsPolicy.js\";\nimport { tracingPolicy } from \"./policies/tracingPolicy.js\";\n\n/**\n * Defines options that are used to configure the HTTP pipeline for\n * an SDK client.\n */\nexport interface PipelineOptions {\n  /**\n   * Options that control how to retry failed requests.\n   */\n  retryOptions?: PipelineRetryOptions;\n\n  /**\n   * Options to configure a proxy for outgoing requests.\n   */\n  proxyOptions?: ProxySettings;\n\n  /** Options for configuring Agent instance for outgoing requests */\n  agent?: Agent;\n\n  /** Options for configuring TLS authentication */\n  tlsOptions?: TlsSettings;\n\n  /**\n   * Options for how redirect responses are handled.\n   */\n  redirectOptions?: RedirectPolicyOptions;\n\n  /**\n   * Options for adding user agent details to outgoing requests.\n   */\n  userAgentOptions?: UserAgentPolicyOptions;\n\n  /**\n   * Options for setting common telemetry and tracing info to outgoing requests.\n   */\n  telemetryOptions?: TelemetryOptions;\n}\n\n/**\n * Defines options that are used to configure common telemetry and tracing info\n */\nexport interface TelemetryOptions {\n  /**\n   * The name of the header to pass the request ID to.\n   */\n  clientRequestIdHeaderName?: string;\n}\n\n/**\n * Defines options that are used to configure internal options of\n * the HTTP pipeline for an SDK client.\n */\nexport interface InternalPipelineOptions extends PipelineOptions {\n  /**\n   * Options to configure request/response logging.\n   */\n  loggingOptions?: LogPolicyOptions;\n}\n\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nexport function createPipelineFromOptions(options: InternalPipelineOptions): Pipeline {\n  const pipeline = createEmptyPipeline();\n\n  if (isNodeLike) {\n    if (options.agent) {\n      pipeline.addPolicy(agentPolicy(options.agent));\n    }\n    if (options.tlsOptions) {\n      pipeline.addPolicy(tlsPolicy(options.tlsOptions));\n    }\n    pipeline.addPolicy(proxyPolicy(options.proxyOptions));\n    pipeline.addPolicy(decompressResponsePolicy());\n  }\n\n  pipeline.addPolicy(formDataPolicy(), { beforePolicies: [multipartPolicyName] });\n  pipeline.addPolicy(userAgentPolicy(options.userAgentOptions));\n  pipeline.addPolicy(setClientRequestIdPolicy(options.telemetryOptions?.clientRequestIdHeaderName));\n  // The multipart policy is added after policies with no phase, so that\n  // policies can be added between it and formDataPolicy to modify\n  // properties (e.g., making the boundary constant in recorded tests).\n  pipeline.addPolicy(multipartPolicy(), { afterPhase: \"Deserialize\" });\n  pipeline.addPolicy(defaultRetryPolicy(options.retryOptions), { phase: \"Retry\" });\n  pipeline.addPolicy(tracingPolicy({ ...options.userAgentOptions, ...options.loggingOptions }), {\n    afterPhase: \"Retry\",\n  });\n  if (isNodeLike) {\n    // Both XHR and Fetch expect to handle redirects automatically,\n    // so only include this policy when we're in Node.\n    pipeline.addPolicy(redirectPolicy(options.redirectOptions), { afterPhase: \"Retry\" });\n  }\n  pipeline.addPolicy(logPolicy(options.loggingOptions), { afterPhase: \"Sign\" });\n\n  return pipeline;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { TlsSettings } from \"../interfaces.js\";\n\n/**\n * Name of the TLS Policy\n */\nexport const tlsPolicyName = \"tlsPolicy\";\n\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nexport function tlsPolicy(tlsSettings?: TlsSettings): PipelinePolicy {\n  return {\n    name: tlsPolicyName,\n    sendRequest: async (req, next) => {\n      // Users may define a request tlsSettings, honor those over the client level one\n      if (!req.tlsSettings) {\n        req.tlsSettings = tlsSettings;\n      }\n      return next(req);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport type { Agent } from \"../interfaces.js\";\n\n/**\n * Name of the Agent Policy\n */\nexport const agentPolicyName = \"agentPolicy\";\n\n/**\n * Gets a pipeline policy that sets http.agent\n */\nexport function agentPolicy(agent?: Agent): PipelinePolicy {\n  return {\n    name: agentPolicyName,\n    sendRequest: async (req, next) => {\n      // Users may define an agent on the request, honor it over the client level one\n      if (!req.agent) {\n        req.agent = agent;\n      }\n      return next(req);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\n\nexport const decompressResponsePolicyName = \"decompressResponsePolicy\";\n\n/**\n * decompressResponsePolicy is not supported in the browser and attempting\n * to use it will raise an error.\n */\nexport function decompressResponsePolicy(): never {\n  throw new Error(\"decompressResponsePolicy is not supported in browser environment\");\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\n\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nexport const setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\nexport function setClientRequestIdPolicy(\n  requestIdHeaderName = \"x-ms-client-request-id\",\n): PipelinePolicy {\n  return {\n    name: setClientRequestIdPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.headers.has(requestIdHeaderName)) {\n        request.headers.set(requestIdHeaderName, request.requestId);\n      }\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelineRetryOptions } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { exponentialRetryStrategy } from \"../retryStrategies/exponentialRetryStrategy.js\";\nimport { throttlingRetryStrategy } from \"../retryStrategies/throttlingRetryStrategy.js\";\nimport { retryPolicy } from \"./retryPolicy.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nexport const defaultRetryPolicyName = \"defaultRetryPolicy\";\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface DefaultRetryPolicyOptions extends PipelineRetryOptions {}\n\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nexport function defaultRetryPolicy(options: DefaultRetryPolicyOptions = {}): PipelinePolicy {\n  return {\n    name: defaultRetryPolicyName,\n    sendRequest: retryPolicy([throttlingRetryStrategy(), exponentialRetryStrategy(options)], {\n      maxRetries: options.maxRetries ?? DEFAULT_RETRY_POLICY_COUNT,\n    }).sendRequest,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { Debugger } from \"@azure/logger\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { logger as coreLogger } from \"../log.js\";\nimport { Sanitizer } from \"../util/sanitizer.js\";\n\n/**\n * The programmatic identifier of the logPolicy.\n */\nexport const logPolicyName = \"logPolicy\";\n\n/**\n * Options to configure the logPolicy.\n */\nexport interface LogPolicyOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled.\n   * Defaults include a list of well-known safe headers. Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  additionalAllowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  additionalAllowedQueryParameters?: string[];\n\n  /**\n   * The log function to use for writing pipeline logs.\n   * Defaults to core-http's built-in logger.\n   * Compatible with the `debug` library.\n   */\n  logger?: Debugger;\n}\n\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nexport function logPolicy(options: LogPolicyOptions = {}): PipelinePolicy {\n  const logger = options.logger ?? coreLogger.info;\n  const sanitizer = new Sanitizer({\n    additionalAllowedHeaderNames: options.additionalAllowedHeaderNames,\n    additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n  });\n  return {\n    name: logPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!logger.enabled) {\n        return next(request);\n      }\n\n      logger(`Request: ${sanitizer.sanitize(request)}`);\n\n      const response = await next(request);\n\n      logger(`Response status code: ${response.status}`);\n      logger(`Headers: ${sanitizer.sanitize(response.headers)}`);\n\n      return response;\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport type {\n  HttpClient,\n  HttpHeaders as PipelineHeaders,\n  PipelineRequest,\n  PipelineResponse,\n  TransferProgressEvent,\n} from \"./interfaces.js\";\nimport { RestError } from \"./restError.js\";\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { isNodeReadableStream, isWebReadableStream } from \"./util/typeGuards.js\";\n\n/**\n * Checks if the body is a Blob or Blob-like\n */\nfunction isBlob(body: unknown): body is Blob {\n  // File objects count as a type of Blob, so we want to use instanceof explicitly\n  return (typeof Blob === \"function\" || typeof Blob === \"object\") && body instanceof Blob;\n}\n\n/**\n * A HttpClient implementation that uses window.fetch to send HTTP requests.\n * @internal\n */\nclass FetchHttpClient implements HttpClient {\n  /**\n   * Makes a request over an underlying transport layer and returns the response.\n   * @param request - The request to be made.\n   */\n  public async sendRequest(request: PipelineRequest): Promise<PipelineResponse> {\n    const url = new URL(request.url);\n    const isInsecure = url.protocol !== \"https:\";\n\n    if (isInsecure && !request.allowInsecureConnection) {\n      throw new Error(`Cannot connect to ${request.url} while allowInsecureConnection is false.`);\n    }\n\n    if (request.proxySettings) {\n      throw new Error(\"HTTP proxy is not supported in browser environment\");\n    }\n\n    try {\n      return await makeRequest(request);\n    } catch (e: any) {\n      throw getError(e, request);\n    }\n  }\n}\n\n/**\n * Sends a request\n */\nasync function makeRequest(request: PipelineRequest): Promise<PipelineResponse> {\n  const { abortController, abortControllerCleanup } = setupAbortSignal(request);\n  try {\n    const headers = buildFetchHeaders(request.headers);\n    const { streaming, body: requestBody } = buildRequestBody(request);\n    const requestInit: RequestInit = {\n      body: requestBody,\n      method: request.method,\n      headers: headers,\n      signal: abortController.signal,\n      // Cloudflare doesn't implement the full Fetch API spec\n      // because of some of it doesn't make sense in the edge.\n      // See https://github.com/cloudflare/workerd/issues/902\n      ...(\"credentials\" in Request.prototype\n        ? { credentials: request.withCredentials ? \"include\" : \"same-origin\" }\n        : {}),\n      ...(\"cache\" in Request.prototype ? { cache: \"no-store\" } : {}),\n    };\n\n    // According to https://fetch.spec.whatwg.org/#fetch-method,\n    // init.duplex must be set when body is a ReadableStream object.\n    // currently \"half\" is the only valid value.\n    if (streaming) {\n      (requestInit as any).duplex = \"half\";\n    }\n    /**\n     * Developers of the future:\n     * Do not set redirect: \"manual\" as part\n     * of request options.\n     * It will not work as you expect.\n     */\n    const response = await fetch(request.url, requestInit);\n    // If we're uploading a blob, we need to fire the progress event manually\n    if (isBlob(request.body) && request.onUploadProgress) {\n      request.onUploadProgress({ loadedBytes: request.body.size });\n    }\n    return buildPipelineResponse(response, request, abortControllerCleanup);\n  } catch (e) {\n    abortControllerCleanup?.();\n    throw e;\n  }\n}\n\n/**\n * Creates a pipeline response from a Fetch response;\n */\nasync function buildPipelineResponse(\n  httpResponse: Response,\n  request: PipelineRequest,\n  abortControllerCleanup?: () => void,\n): Promise<PipelineResponse> {\n  const headers = buildPipelineHeaders(httpResponse);\n  const response: PipelineResponse = {\n    request,\n    headers,\n    status: httpResponse.status,\n  };\n\n  const bodyStream = isWebReadableStream(httpResponse.body)\n    ? buildBodyStream(httpResponse.body, {\n        onProgress: request.onDownloadProgress,\n        onEnd: abortControllerCleanup,\n      })\n    : httpResponse.body;\n\n  if (\n    // Value of POSITIVE_INFINITY in streamResponseStatusCodes is considered as any status code\n    request.streamResponseStatusCodes?.has(Number.POSITIVE_INFINITY) ||\n    request.streamResponseStatusCodes?.has(response.status)\n  ) {\n    if (request.enableBrowserStreams) {\n      response.browserStreamBody = bodyStream ?? undefined;\n    } else {\n      const responseStream = new Response(bodyStream);\n      response.blobBody = responseStream.blob();\n      abortControllerCleanup?.();\n    }\n  } else {\n    const responseStream = new Response(bodyStream);\n\n    response.bodyAsText = await responseStream.text();\n    abortControllerCleanup?.();\n  }\n\n  return response;\n}\n\nfunction setupAbortSignal(request: PipelineRequest): {\n  abortController: AbortController;\n  abortControllerCleanup: (() => void) | undefined;\n} {\n  const abortController = new AbortController();\n\n  // Cleanup function\n  let abortControllerCleanup: (() => void) | undefined;\n\n  /**\n   * Attach an abort listener to the request\n   */\n  let abortListener: ((event: any) => void) | undefined;\n  if (request.abortSignal) {\n    if (request.abortSignal.aborted) {\n      throw new AbortError(\"The operation was aborted.\");\n    }\n\n    abortListener = (event: Event) => {\n      if (event.type === \"abort\") {\n        abortController.abort();\n      }\n    };\n    request.abortSignal.addEventListener(\"abort\", abortListener);\n    abortControllerCleanup = () => {\n      if (abortListener) {\n        request.abortSignal?.removeEventListener(\"abort\", abortListener);\n      }\n    };\n  }\n\n  // If a timeout was passed, call the abort signal once the time elapses\n  if (request.timeout > 0) {\n    setTimeout(() => {\n      abortController.abort();\n    }, request.timeout);\n  }\n\n  return { abortController, abortControllerCleanup };\n}\n\n/**\n * Gets the specific error\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\nfunction getError(e: RestError, request: PipelineRequest): RestError {\n  if (e && e?.name === \"AbortError\") {\n    return e;\n  } else {\n    return new RestError(`Error sending request: ${e.message}`, {\n      code: e?.code ?? RestError.REQUEST_SEND_ERROR,\n      request,\n    });\n  }\n}\n\n/**\n * Converts PipelineRequest headers to Fetch headers\n */\nfunction buildFetchHeaders(pipelineHeaders: PipelineHeaders): Headers {\n  const headers = new Headers();\n  for (const [name, value] of pipelineHeaders) {\n    headers.append(name, value);\n  }\n\n  return headers;\n}\n\nfunction buildPipelineHeaders(httpResponse: Response): PipelineHeaders {\n  const responseHeaders = createHttpHeaders();\n  for (const [name, value] of httpResponse.headers) {\n    responseHeaders.set(name, value);\n  }\n\n  return responseHeaders;\n}\n\ninterface BuildRequestBodyResponse {\n  body:\n    | string\n    | Blob\n    | ReadableStream<Uint8Array>\n    | ArrayBuffer\n    | ArrayBufferView\n    | FormData\n    | null\n    | undefined;\n  streaming: boolean;\n}\n\nfunction buildRequestBody(request: PipelineRequest): BuildRequestBodyResponse {\n  const body = typeof request.body === \"function\" ? request.body() : request.body;\n  if (isNodeReadableStream(body)) {\n    throw new Error(\"Node streams are not supported in browser environment.\");\n  }\n\n  return isWebReadableStream(body)\n    ? { streaming: true, body: buildBodyStream(body, { onProgress: request.onUploadProgress }) }\n    : { streaming: false, body };\n}\n\n/**\n * Reads the request/response original stream and stream it through a new\n * ReadableStream, this is done to be able to report progress in a way that\n * all modern browsers support. TransformStreams would be an alternative,\n * however they are not yet supported by all browsers i.e Firefox\n */\nfunction buildBodyStream(\n  readableStream: ReadableStream<Uint8Array>,\n  options: { onProgress?: (progress: TransferProgressEvent) => void; onEnd?: () => void } = {},\n): ReadableStream<Uint8Array> {\n  let loadedBytes = 0;\n  const { onProgress, onEnd } = options;\n\n  // If the current browser supports pipeThrough we use a TransformStream\n  // to report progress\n  if (isTransformStreamSupported(readableStream)) {\n    return readableStream.pipeThrough(\n      new TransformStream({\n        transform(chunk, controller) {\n          if (chunk === null) {\n            controller.terminate();\n            return;\n          }\n\n          controller.enqueue(chunk);\n          loadedBytes += chunk.length;\n          if (onProgress) {\n            onProgress({ loadedBytes });\n          }\n        },\n        flush() {\n          onEnd?.();\n        },\n      }),\n    );\n  } else {\n    // If we can't use transform streams, wrap the original stream in a new readable stream\n    // and use pull to enqueue each chunk and report progress.\n    const reader = readableStream.getReader();\n    return new ReadableStream({\n      async pull(controller) {\n        const { done, value } = await reader.read();\n        // When no more data needs to be consumed, break the reading\n        if (done || !value) {\n          onEnd?.();\n          // Close the stream\n          controller.close();\n          reader.releaseLock();\n          return;\n        }\n\n        loadedBytes += value?.length ?? 0;\n\n        // Enqueue the next data chunk into our target stream\n        controller.enqueue(value);\n\n        if (onProgress) {\n          onProgress({ loadedBytes });\n        }\n      },\n      cancel(reason?: string) {\n        onEnd?.();\n        return reader.cancel(reason);\n      },\n    });\n  }\n}\n\n/**\n * Create a new HttpClient instance for the browser environment.\n * @internal\n */\nexport function createFetchHttpClient(): HttpClient {\n  return new FetchHttpClient();\n}\n\nfunction isTransformStreamSupported(readableStream: ReadableStream): boolean {\n  return readableStream.pipeThrough !== undefined && self.TransformStream !== undefined;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient } from \"./interfaces.js\";\nimport { createFetchHttpClient } from \"./fetchHttpClient.js\";\n\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient(): HttpClient {\n  return createFetchHttpClient();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  Agent,\n  FormDataMap,\n  HttpHeaders,\n  MultipartRequestBody,\n  PipelineRequest,\n  ProxySettings,\n  RequestBodyType,\n  TlsSettings,\n  TransferProgressEvent,\n} from \"./interfaces.js\";\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport { randomUUID } from \"@azure/core-util\";\nimport type { OperationTracingOptions } from \"@azure/core-tracing\";\nimport type { HttpMethods } from \"@azure/core-util\";\n\n/**\n * Settings to initialize a request.\n * Almost equivalent to Partial<PipelineRequest>, but url is mandatory.\n */\nexport interface PipelineRequestOptions {\n  /**\n   * The URL to make the request to.\n   */\n  url: string;\n\n  /**\n   * The HTTP method to use when making the request.\n   */\n  method?: HttpMethods;\n\n  /**\n   * The HTTP headers to use when making the request.\n   */\n  headers?: HttpHeaders;\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   * Defaults to 0, which disables the timeout.\n   */\n  timeout?: number;\n\n  /**\n   * If credentials (cookies) should be sent along during an XHR.\n   * Defaults to false.\n   */\n  withCredentials?: boolean;\n\n  /**\n   * A unique identifier for the request. Used for logging and tracing.\n   */\n  requestId?: string;\n\n  /**\n   * The HTTP body content (if any)\n   */\n  body?: RequestBodyType;\n\n  /**\n   * Body for a multipart request.\n   */\n  multipartBody?: MultipartRequestBody;\n\n  /**\n   * To simulate a browser form post\n   */\n  formData?: FormDataMap;\n\n  /**\n   * A list of response status codes whose corresponding PipelineResponse body should be treated as a stream.\n   */\n  streamResponseStatusCodes?: Set<number>;\n\n  /**\n   * NODEJS ONLY\n   *\n   * A Node-only option to provide a custom `http.Agent`/`https.Agent`.\n   * NOTE: usually this should be one instance shared by multiple requests so that the underlying\n   *       connection to the service can be reused.\n   * Does nothing when running in the browser.\n   */\n  agent?: Agent;\n\n  /**\n   * BROWSER ONLY\n   *\n   * A browser only option to enable use of the Streams API. If this option is set and streaming is used\n   * (see `streamResponseStatusCodes`), the response will have a property `browserStream` instead of\n   * `blobBody` which will be undefined.\n   *\n   * Default value is false\n   */\n  enableBrowserStreams?: boolean;\n\n  /** Settings for configuring TLS authentication */\n  tlsSettings?: TlsSettings;\n\n  /**\n   * Proxy configuration.\n   */\n  proxySettings?: ProxySettings;\n\n  /**\n   * If the connection should not be reused.\n   */\n  disableKeepAlive?: boolean;\n\n  /**\n   * Used to abort the request later.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Options used to create a span when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Set to true if the request is sent over HTTP instead of HTTPS */\n  allowInsecureConnection?: boolean;\n}\n\nclass PipelineRequestImpl implements PipelineRequest {\n  public url: string;\n  public method: HttpMethods;\n  public headers: HttpHeaders;\n  public timeout: number;\n  public withCredentials: boolean;\n  public body?: RequestBodyType;\n  public multipartBody?: MultipartRequestBody;\n  public formData?: FormDataMap;\n  public streamResponseStatusCodes?: Set<number>;\n  public enableBrowserStreams: boolean;\n  public proxySettings?: ProxySettings;\n  public disableKeepAlive: boolean;\n  public abortSignal?: AbortSignalLike;\n  public requestId: string;\n  public tracingOptions?: OperationTracingOptions;\n  public allowInsecureConnection?: boolean;\n  public onUploadProgress?: (progress: TransferProgressEvent) => void;\n  public onDownloadProgress?: (progress: TransferProgressEvent) => void;\n  public agent?: Agent;\n  public tlsSettings?: TlsSettings;\n\n  constructor(options: PipelineRequestOptions) {\n    this.url = options.url;\n    this.body = options.body;\n    this.headers = options.headers ?? createHttpHeaders();\n    this.method = options.method ?? \"GET\";\n    this.timeout = options.timeout ?? 0;\n    this.multipartBody = options.multipartBody;\n    this.formData = options.formData;\n    this.disableKeepAlive = options.disableKeepAlive ?? false;\n    this.proxySettings = options.proxySettings;\n    this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n    this.withCredentials = options.withCredentials ?? false;\n    this.abortSignal = options.abortSignal;\n    this.tracingOptions = options.tracingOptions;\n    this.onUploadProgress = options.onUploadProgress;\n    this.onDownloadProgress = options.onDownloadProgress;\n    this.requestId = options.requestId || randomUUID();\n    this.allowInsecureConnection = options.allowInsecureConnection ?? false;\n    this.enableBrowserStreams = options.enableBrowserStreams ?? false;\n    this.agent = options.agent;\n    this.tlsSettings = options.tlsSettings;\n  }\n}\n\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nexport function createPipelineRequest(options: PipelineRequestOptions): PipelineRequest {\n  return new PipelineRequestImpl(options);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AccessToken, GetTokenOptions, TokenCredential } from \"@azure/core-auth\";\nimport { delay } from \"./helpers.js\";\n\n/**\n * A function that gets a promise of an access token and allows providing\n * options.\n *\n * @param options - the options to pass to the underlying token provider\n */\nexport type AccessTokenGetter = (\n  scopes: string | string[],\n  options: GetTokenOptions,\n) => Promise<AccessToken>;\n\nexport interface TokenCyclerOptions {\n  /**\n   * The window of time before token expiration during which the token will be\n   * considered unusable due to risk of the token expiring before sending the\n   * request.\n   *\n   * This will only become meaningful if the refresh fails for over\n   * (refreshWindow - forcedRefreshWindow) milliseconds.\n   */\n  forcedRefreshWindowInMs: number;\n  /**\n   * Interval in milliseconds to retry failed token refreshes.\n   */\n  retryIntervalInMs: number;\n  /**\n   * The window of time before token expiration during which\n   * we will attempt to refresh the token.\n   */\n  refreshWindowInMs: number;\n}\n\n// Default options for the cycler if none are provided\nexport const DEFAULT_CYCLER_OPTIONS: TokenCyclerOptions = {\n  forcedRefreshWindowInMs: 1000, // Force waiting for a refresh 1s before the token expires\n  retryIntervalInMs: 3000, // Allow refresh attempts every 3s\n  refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - A function that produces a promise of an access token that may fail by returning null.\n * @param retryIntervalInMs - The time (in milliseconds) to wait between retry attempts.\n * @param refreshTimeout - The timestamp after which the refresh attempt will fail, throwing an exception.\n * @returns - A promise that, if it resolves, will resolve with an access token.\n */\nasync function beginRefresh(\n  getAccessToken: () => Promise<AccessToken | null>,\n  retryIntervalInMs: number,\n  refreshTimeout: number,\n): Promise<AccessToken> {\n  // This wrapper handles exceptions gracefully as long as we haven't exceeded\n  // the timeout.\n  async function tryGetAccessToken(): Promise<AccessToken | null> {\n    if (Date.now() < refreshTimeout) {\n      try {\n        return await getAccessToken();\n      } catch {\n        return null;\n      }\n    } else {\n      const finalToken = await getAccessToken();\n\n      // Timeout is up, so throw if it's still null\n      if (finalToken === null) {\n        throw new Error(\"Failed to refresh access token.\");\n      }\n\n      return finalToken;\n    }\n  }\n\n  let token: AccessToken | null = await tryGetAccessToken();\n\n  while (token === null) {\n    await delay(retryIntervalInMs);\n\n    token = await tryGetAccessToken();\n  }\n\n  return token;\n}\n\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nexport function createTokenCycler(\n  credential: TokenCredential,\n  tokenCyclerOptions?: Partial<TokenCyclerOptions>,\n): AccessTokenGetter {\n  let refreshWorker: Promise<AccessToken> | null = null;\n  let token: AccessToken | null = null;\n  let tenantId: string | undefined;\n\n  const options = {\n    ...DEFAULT_CYCLER_OPTIONS,\n    ...tokenCyclerOptions,\n  };\n\n  /**\n   * This little holder defines several predicates that we use to construct\n   * the rules of refreshing the token.\n   */\n  const cycler = {\n    /**\n     * Produces true if a refresh job is currently in progress.\n     */\n    get isRefreshing(): boolean {\n      return refreshWorker !== null;\n    },\n    /**\n     * Produces true if the cycler SHOULD refresh (we are within the refresh\n     * window and not already refreshing)\n     */\n    get shouldRefresh(): boolean {\n      if (cycler.isRefreshing) {\n        return false;\n      }\n      if (token?.refreshAfterTimestamp && token.refreshAfterTimestamp < Date.now()) {\n        return true;\n      }\n\n      return (token?.expiresOnTimestamp ?? 0) - options.refreshWindowInMs < Date.now();\n    },\n    /**\n     * Produces true if the cycler MUST refresh (null or nearly-expired\n     * token).\n     */\n    get mustRefresh(): boolean {\n      return (\n        token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now()\n      );\n    },\n  };\n\n  /**\n   * Starts a refresh job or returns the existing job if one is already\n   * running.\n   */\n  function refresh(\n    scopes: string | string[],\n    getTokenOptions: GetTokenOptions,\n  ): Promise<AccessToken> {\n    if (!cycler.isRefreshing) {\n      // We bind `scopes` here to avoid passing it around a lot\n      const tryGetAccessToken = (): Promise<AccessToken | null> =>\n        credential.getToken(scopes, getTokenOptions);\n\n      // Take advantage of promise chaining to insert an assignment to `token`\n      // before the refresh can be considered done.\n      refreshWorker = beginRefresh(\n        tryGetAccessToken,\n        options.retryIntervalInMs,\n        // If we don't have a token, then we should timeout immediately\n        token?.expiresOnTimestamp ?? Date.now(),\n      )\n        .then((_token) => {\n          refreshWorker = null;\n          token = _token;\n          tenantId = getTokenOptions.tenantId;\n          return token;\n        })\n        .catch((reason) => {\n          // We also should reset the refresher if we enter a failed state.  All\n          // existing awaiters will throw, but subsequent requests will start a\n          // new retry chain.\n          refreshWorker = null;\n          token = null;\n          tenantId = undefined;\n          throw reason;\n        });\n    }\n\n    return refreshWorker as Promise<AccessToken>;\n  }\n\n  return async (scopes: string | string[], tokenOptions: GetTokenOptions): Promise<AccessToken> => {\n    //\n    // Simple rules:\n    // - If we MUST refresh, then return the refresh task, blocking\n    //   the pipeline until a token is available.\n    // - If we SHOULD refresh, then run refresh but don't return it\n    //   (we can still use the cached token).\n    // - Return the token, since it's fine if we didn't return in\n    //   step 1.\n    //\n\n    const hasClaimChallenge = Boolean(tokenOptions.claims);\n    const tenantIdChanged = tenantId !== tokenOptions.tenantId;\n\n    if (hasClaimChallenge) {\n      // If we've received a claim, we know the existing token isn't valid\n      // We want to clear it so that that refresh worker won't use the old expiration time as a timeout\n      token = null;\n    }\n\n    // If the tenantId passed in token options is different to the one we have\n    // Or if we are in claim challenge and the token was rejected and a new access token need to be issued, we need to\n    // refresh the token with the new tenantId or token.\n    const mustRefresh = tenantIdChanged || hasClaimChallenge || cycler.mustRefresh;\n\n    if (mustRefresh) {\n      return refresh(scopes, tokenOptions);\n    }\n\n    if (cycler.shouldRefresh) {\n      refresh(scopes, tokenOptions);\n    }\n\n    return token as AccessToken;\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AccessToken, GetTokenOptions, TokenCredential } from \"@azure/core-auth\";\nimport type { AzureLogger } from \"@azure/logger\";\nimport type { PipelineRequest, PipelineResponse, SendRequest } from \"../interfaces.js\";\nimport type { PipelinePolicy } from \"../pipeline.js\";\nimport { createTokenCycler } from \"../util/tokenCycler.js\";\nimport { logger as coreLogger } from \"../log.js\";\nimport type { RestError } from \"../restError.js\";\nimport { isRestError } from \"../restError.js\";\n\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nexport const bearerTokenAuthenticationPolicyName = \"bearerTokenAuthenticationPolicy\";\n\n/**\n * Options sent to the authorizeRequest callback\n */\nexport interface AuthorizeRequestOptions {\n  /**\n   * The scopes for which the bearer token applies.\n   */\n  scopes: string[];\n  /**\n   * Function that retrieves either a cached access token or a new access token.\n   */\n  getAccessToken: (scopes: string[], options: GetTokenOptions) => Promise<AccessToken | null>;\n  /**\n   * Request that the policy is trying to fulfill.\n   */\n  request: PipelineRequest;\n  /**\n   * A logger, if one was sent through the HTTP pipeline.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * Options sent to the authorizeRequestOnChallenge callback\n */\nexport interface AuthorizeRequestOnChallengeOptions {\n  /**\n   * The scopes for which the bearer token applies.\n   */\n  scopes: string[];\n  /**\n   * Function that retrieves either a cached access token or a new access token.\n   */\n  getAccessToken: (scopes: string[], options: GetTokenOptions) => Promise<AccessToken | null>;\n  /**\n   * Request that the policy is trying to fulfill.\n   */\n  request: PipelineRequest;\n  /**\n   * Response containing the challenge.\n   */\n  response: PipelineResponse;\n  /**\n   * A logger, if one was sent through the HTTP pipeline.\n   */\n  logger?: AzureLogger;\n}\n\n/**\n * Options to override the processing of [Continuous Access Evaluation](https://learn.microsoft.com/azure/active-directory/conditional-access/concept-continuous-access-evaluation) challenges.\n */\nexport interface ChallengeCallbacks {\n  /**\n   * Allows for the authorization of the main request of this policy before it's sent.\n   */\n  authorizeRequest?(options: AuthorizeRequestOptions): Promise<void>;\n  /**\n   * Allows to handle authentication challenges and to re-authorize the request.\n   * The response containing the challenge is `options.response`.\n   * If this method returns true, the underlying request will be sent once again.\n   * The request may be modified before being sent.\n   */\n  authorizeRequestOnChallenge?(options: AuthorizeRequestOnChallengeOptions): Promise<boolean>;\n}\n\n/**\n * Options to configure the bearerTokenAuthenticationPolicy\n */\nexport interface BearerTokenAuthenticationPolicyOptions {\n  /**\n   * The TokenCredential implementation that can supply the bearer token.\n   */\n  credential?: TokenCredential;\n  /**\n   * The scopes for which the bearer token applies.\n   */\n  scopes: string | string[];\n  /**\n   * Allows for the processing of [Continuous Access Evaluation](https://learn.microsoft.com/azure/active-directory/conditional-access/concept-continuous-access-evaluation) challenges.\n   * If provided, it must contain at least the `authorizeRequestOnChallenge` method.\n   * If provided, after a request is sent, if it has a challenge, it can be processed to re-send the original request with the relevant challenge information.\n   */\n  challengeCallbacks?: ChallengeCallbacks;\n  /**\n   * A logger can be sent for debugging purposes.\n   */\n  logger?: AzureLogger;\n}\n/**\n * Try to send the given request.\n *\n * When a response is received, returns a tuple of the response received and, if the response was received\n * inside a thrown RestError, the RestError that was thrown.\n *\n * Otherwise, if an error was thrown while sending the request that did not provide an underlying response, it\n * will be rethrown.\n */\nasync function trySendRequest(\n  request: PipelineRequest,\n  next: SendRequest,\n): Promise<[PipelineResponse, RestError | undefined]> {\n  try {\n    return [await next(request), undefined];\n  } catch (e: any) {\n    if (isRestError(e) && e.response) {\n      return [e.response, e];\n    } else {\n      throw e;\n    }\n  }\n}\n/**\n * Default authorize request handler\n */\nasync function defaultAuthorizeRequest(options: AuthorizeRequestOptions): Promise<void> {\n  const { scopes, getAccessToken, request } = options;\n  // Enable CAE true by default\n  const getTokenOptions: GetTokenOptions = {\n    abortSignal: request.abortSignal,\n    tracingOptions: request.tracingOptions,\n    enableCae: true,\n  };\n\n  const accessToken = await getAccessToken(scopes, getTokenOptions);\n\n  if (accessToken) {\n    options.request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n  }\n}\n\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction isChallengeResponse(response: PipelineResponse): boolean {\n  return response.status === 401 && response.headers.has(\"WWW-Authenticate\");\n}\n\n/**\n * Re-authorize the request for CAE challenge.\n * The response containing the challenge is `options.response`.\n * If this method returns true, the underlying request will be sent once again.\n */\nasync function authorizeRequestOnCaeChallenge(\n  onChallengeOptions: AuthorizeRequestOnChallengeOptions,\n  caeClaims: string,\n): Promise<boolean> {\n  const { scopes } = onChallengeOptions;\n\n  const accessToken = await onChallengeOptions.getAccessToken(scopes, {\n    enableCae: true,\n    claims: caeClaims,\n  });\n  if (!accessToken) {\n    return false;\n  }\n\n  onChallengeOptions.request.headers.set(\n    \"Authorization\",\n    `${accessToken.tokenType ?? \"Bearer\"} ${accessToken.token}`,\n  );\n  return true;\n}\n\n/**\n * A policy that can request a token from a TokenCredential implementation and\n * then apply it to the Authorization header of a request as a Bearer token.\n */\nexport function bearerTokenAuthenticationPolicy(\n  options: BearerTokenAuthenticationPolicyOptions,\n): PipelinePolicy {\n  const { credential, scopes, challengeCallbacks } = options;\n  const logger = options.logger || coreLogger;\n  const callbacks = {\n    authorizeRequest:\n      challengeCallbacks?.authorizeRequest?.bind(challengeCallbacks) ?? defaultAuthorizeRequest,\n    authorizeRequestOnChallenge:\n      challengeCallbacks?.authorizeRequestOnChallenge?.bind(challengeCallbacks),\n  };\n\n  // This function encapsulates the entire process of reliably retrieving the token\n  // The options are left out of the public API until there's demand to configure this.\n  // Remember to extend `BearerTokenAuthenticationPolicyOptions` with `TokenCyclerOptions`\n  // in order to pass through the `options` object.\n  const getAccessToken = credential\n    ? createTokenCycler(credential /* , options */)\n    : () => Promise.resolve(null);\n\n  return {\n    name: bearerTokenAuthenticationPolicyName,\n    /**\n     * If there's no challenge parameter:\n     * - It will try to retrieve the token using the cache, or the credential's getToken.\n     * - Then it will try the next policy with or without the retrieved token.\n     *\n     * It uses the challenge parameters to:\n     * - Skip a first attempt to get the token from the credential if there's no cached token,\n     *   since it expects the token to be retrievable only after the challenge.\n     * - Prepare the outgoing request if the `prepareRequest` method has been provided.\n     * - Send an initial request to receive the challenge if it fails.\n     * - Process a challenge if the response contains it.\n     * - Retrieve a token with the challenge information, then re-send the request.\n     */\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (!request.url.toLowerCase().startsWith(\"https://\")) {\n        throw new Error(\n          \"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\",\n        );\n      }\n\n      await callbacks.authorizeRequest({\n        scopes: Array.isArray(scopes) ? scopes : [scopes],\n        request,\n        getAccessToken,\n        logger,\n      });\n\n      let response: PipelineResponse;\n      let error: Error | undefined;\n      let shouldSendRequest: boolean;\n      [response, error] = await trySendRequest(request, next);\n\n      if (isChallengeResponse(response)) {\n        let claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\"));\n        // Handle CAE by default when receive CAE claim\n        if (claims) {\n          let parsedClaim: string;\n          // Return the response immediately if claims is not a valid base64 encoded string\n          try {\n            parsedClaim = atob(claims);\n          } catch (e) {\n            logger.warning(\n              `The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`,\n            );\n            return response;\n          }\n          shouldSendRequest = await authorizeRequestOnCaeChallenge(\n            {\n              scopes: Array.isArray(scopes) ? scopes : [scopes],\n              response,\n              request,\n              getAccessToken,\n              logger,\n            },\n            parsedClaim,\n          );\n          // Send updated request and handle response for RestError\n          if (shouldSendRequest) {\n            [response, error] = await trySendRequest(request, next);\n          }\n        } else if (callbacks.authorizeRequestOnChallenge) {\n          // Handle custom challenges when client provides custom callback\n          shouldSendRequest = await callbacks.authorizeRequestOnChallenge({\n            scopes: Array.isArray(scopes) ? scopes : [scopes],\n            request,\n            response,\n            getAccessToken,\n            logger,\n          });\n\n          // Send updated request and handle response for RestError\n          if (shouldSendRequest) {\n            [response, error] = await trySendRequest(request, next);\n          }\n\n          // If we get another CAE Claim, we will handle it by default and return whatever value we receive for this\n          if (isChallengeResponse(response)) {\n            claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\") as string);\n            if (claims) {\n              let parsedClaim: string;\n              try {\n                parsedClaim = atob(claims);\n              } catch (e) {\n                logger.warning(\n                  `The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`,\n                );\n                return response;\n              }\n\n              shouldSendRequest = await authorizeRequestOnCaeChallenge(\n                {\n                  scopes: Array.isArray(scopes) ? scopes : [scopes],\n                  response,\n                  request,\n                  getAccessToken,\n                  logger,\n                },\n                parsedClaim,\n              );\n              // Send updated request and handle response for RestError\n              if (shouldSendRequest) {\n                [response, error] = await trySendRequest(request, next);\n              }\n            }\n          }\n        }\n      }\n\n      if (error) {\n        throw error;\n      } else {\n        return response;\n      }\n    },\n  };\n}\n\n/**\n *\n * Interface to represent a parsed challenge.\n *\n * @internal\n */\ninterface AuthChallenge {\n  scheme: string;\n  params: Record<string, string>;\n}\n\n/**\n * Converts: `Bearer a=\"b\", c=\"d\", Pop e=\"f\", g=\"h\"`.\n * Into: `[ { scheme: 'Bearer', params: { a: 'b', c: 'd' } }, { scheme: 'Pop', params: { e: 'f', g: 'h' } } ]`.\n *\n * @internal\n */\nexport function parseChallenges(challenges: string): AuthChallenge[] {\n  // Challenge regex seperates the string to individual challenges with different schemes in the format `Scheme a=\"b\", c=d`\n  // The challenge regex captures parameteres with either quotes values or unquoted values\n  const challengeRegex = /(\\w+)\\s+((?:\\w+=(?:\"[^\"]*\"|[^,]*),?\\s*)+)/g;\n  // Parameter regex captures the claims group removed from the scheme in the format `a=\"b\"` and `c=\"d\"`\n  // CAE challenge always have quoted parameters. For more reference, https://learn.microsoft.com/entra/identity-platform/claims-challenge\n  const paramRegex = /(\\w+)=\"([^\"]*)\"/g;\n\n  const parsedChallenges: AuthChallenge[] = [];\n  let match;\n\n  // Iterate over each challenge match\n  while ((match = challengeRegex.exec(challenges)) !== null) {\n    const scheme = match[1];\n    const paramsString = match[2];\n    const params: Record<string, string> = {};\n    let paramMatch;\n\n    // Iterate over each parameter match\n    while ((paramMatch = paramRegex.exec(paramsString)) !== null) {\n      params[paramMatch[1]] = paramMatch[2];\n    }\n\n    parsedChallenges.push({ scheme, params });\n  }\n  return parsedChallenges;\n}\n\n/**\n * Parse a pipeline response and look for a CAE challenge with \"Bearer\" scheme\n * Return the value in the header without parsing the challenge\n * @internal\n */\nfunction getCaeChallengeClaims(challenges: string | undefined): string | undefined {\n  if (!challenges) {\n    return;\n  }\n  // Find all challenges present in the header\n  const parsedChallenges = parseChallenges(challenges);\n  return parsedChallenges.find(\n    (x) => x.scheme === \"Bearer\" && x.params.claims && x.params.error === \"insufficient_claims\",\n  )?.params.claims;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  Pipeline,\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\n\nexport const disableKeepAlivePolicyName = \"DisableKeepAlivePolicy\";\n\nexport function createDisableKeepAlivePolicy(): PipelinePolicy {\n  return {\n    name: disableKeepAlivePolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      request.disableKeepAlive = true;\n      return next(request);\n    },\n  };\n}\n\n/**\n * @internal\n */\nexport function pipelineContainsDisableKeepAlivePolicy(pipeline: Pipeline): boolean {\n  return pipeline.getOrderedPolicies().some((policy) => policy.name === disableKeepAlivePolicyName);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\ndeclare global {\n  // stub these out for the browser\n  function btoa(input: string): string;\n  function atob(input: string): string;\n}\n\n/**\n * Encodes a string in base64 format.\n * @param value - the string to encode\n * @internal\n */\nexport function encodeString(value: string): string {\n  return btoa(value);\n}\n\n/**\n * Encodes a byte array in base64 format.\n * @param value - the Uint8Aray to encode\n * @internal\n */\nexport function encodeByteArray(value: Uint8Array): string {\n  let str = \"\";\n  for (let i = 0; i < value.length; i++) {\n    str += String.fromCharCode(value[i]);\n  }\n  return btoa(str);\n}\n\n/**\n * Decodes a base64 string into a byte array.\n * @param value - the base64 string to decode\n * @internal\n */\nexport function decodeString(value: string): Uint8Array {\n  const byteString = atob(value);\n  const arr = new Uint8Array(byteString.length);\n  for (let i = 0; i < byteString.length; i++) {\n    arr[i] = byteString.charCodeAt(i);\n  }\n  return arr;\n}\n\n/**\n * Decodes a base64 string into a string.\n * @param value - the base64 string to decode\n * @internal\n */\nexport function decodeStringToString(value: string): string {\n  return atob(value);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  HttpClient,\n  HttpMethods,\n  PipelineOptions,\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  TransferProgressEvent,\n} from \"@azure/core-rest-pipeline\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { OperationTracingOptions } from \"@azure/core-tracing\";\n\n/**\n * Default key used to access the XML attributes.\n */\nexport const XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nexport const XML_CHARKEY = \"_\";\n/**\n * Options to govern behavior of xml parser and builder.\n */\nexport interface XmlOptions {\n  /**\n   * indicates the name of the root element in the resulting XML when building XML.\n   */\n  rootName?: string;\n  /**\n   * indicates whether the root element is to be included or not in the output when parsing XML.\n   */\n  includeRoot?: boolean;\n  /**\n   * key used to access the XML value content when parsing XML.\n   */\n  xmlCharKey?: string;\n}\n/**\n * Options to configure serialization/de-serialization behavior.\n */\nexport interface SerializerOptions {\n  /**\n   * Options to configure xml parser/builder behavior.\n   */\n  xml: XmlOptions;\n  /**\n   * Normally additional properties are included in the result object, even if there is no mapper for them.\n   * This flag disables this behavior when true. It is used when parsing headers to avoid polluting the result object.\n   */\n  ignoreUnknownProperties?: boolean;\n}\n\nexport type RequiredSerializerOptions = {\n  [K in keyof SerializerOptions]: Required<SerializerOptions[K]>;\n};\n\n/**\n * A type alias for future proofing.\n */\nexport type OperationRequest = PipelineRequest;\n\n/**\n * Metadata that is used to properly parse a response.\n */\nexport interface OperationRequestInfo {\n  /**\n   * Used to parse the response.\n   */\n  operationSpec?: OperationSpec;\n\n  /**\n   * Used to encode the request.\n   */\n  operationArguments?: OperationArguments;\n\n  /**\n   * A function that returns the proper OperationResponseMap for the given OperationSpec and\n   * PipelineResponse combination. If this is undefined, then a simple status code lookup will\n   * be used.\n   */\n  operationResponseGetter?: (\n    operationSpec: OperationSpec,\n    response: PipelineResponse,\n  ) => undefined | OperationResponseMap;\n\n  /**\n   * Whether or not the PipelineResponse should be deserialized. Defaults to true.\n   */\n  shouldDeserialize?: boolean | ((response: PipelineResponse) => boolean);\n}\n\n/**\n * The base options type for all operations.\n */\nexport interface OperationOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: OperationRequestOptions;\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n  /**\n   * Options to override serialization/de-serialization behavior.\n   */\n  serializerOptions?: SerializerOptions;\n\n  /**\n   * A function to be called each time a response is received from the server\n   * while performing the requested operation.\n   * May be called multiple times.\n   */\n  onResponse?: RawResponseCallback;\n}\n\n/**\n * Options used when creating and sending HTTP requests for this operation.\n */\nexport interface OperationRequestOptions {\n  /**\n   * User defined custom request headers that\n   * will be applied before the request is sent.\n   */\n  customHeaders?: { [key: string]: string };\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   */\n  timeout?: number;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Callback which fires upon download progress.\n   */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: PipelineResponse) => boolean);\n\n  /**\n   * Set to true if the request is sent over HTTP instead of HTTPS\n   */\n  allowInsecureConnection?: boolean;\n}\n\n/**\n * A collection of properties that apply to a single invocation of an operation.\n */\nexport interface OperationArguments {\n  /**\n   * The parameters that were passed to the operation method.\n   */\n  [parameterName: string]: unknown;\n\n  /**\n   * The optional arguments that are provided to an operation.\n   */\n  options?: OperationOptions;\n}\n\n/**\n * The format that will be used to join an array of values together for a query parameter value.\n */\nexport type QueryCollectionFormat = \"CSV\" | \"SSV\" | \"TSV\" | \"Pipes\" | \"Multi\";\n\n/**\n * Encodes how to reach a particular property on an object.\n */\nexport type ParameterPath = string | string[] | { [propertyName: string]: ParameterPath };\n\n/**\n * A common interface that all Operation parameter's extend.\n */\nexport interface OperationParameter {\n  /**\n   * The path to this parameter's value in OperationArguments or the object that contains paths for\n   * each property's value in OperationArguments.\n   */\n  parameterPath: ParameterPath;\n\n  /**\n   * The mapper that defines how to validate and serialize this parameter's value.\n   */\n  mapper: Mapper;\n}\n\n/**\n * A parameter for an operation that will be substituted into the operation's request URL.\n */\nexport interface OperationURLParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the URL parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n}\n\n/**\n * A parameter for an operation that will be added as a query parameter to the operation's HTTP\n * request.\n */\nexport interface OperationQueryParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the query parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n\n  /**\n   * If this query parameter's value is a collection, what type of format should the value be\n   * converted to.\n   */\n  collectionFormat?: QueryCollectionFormat;\n}\n\n/**\n * An OperationResponse that can be returned from an operation request for a single status code.\n */\nexport interface OperationResponseMap {\n  /**\n   * The mapper that will be used to deserialize the response headers.\n   */\n  headersMapper?: Mapper;\n\n  /**\n   * The mapper that will be used to deserialize the response body.\n   */\n  bodyMapper?: Mapper;\n\n  /**\n   * Indicates if this is an error response\n   */\n  isError?: boolean;\n}\n\n/**\n * A specification that defines an operation.\n */\nexport interface OperationSpec {\n  /**\n   * The serializer to use in this operation.\n   */\n  readonly serializer: Serializer;\n\n  /**\n   * The HTTP method that should be used by requests for this operation.\n   */\n  readonly httpMethod: HttpMethods;\n\n  /**\n   * The URL that was provided in the service's specification. This will still have all of the URL\n   * template variables in it. If this is not provided when the OperationSpec is created, then it\n   * will be populated by a \"baseUri\" property on the ServiceClient.\n   */\n  readonly baseUrl?: string;\n\n  /**\n   * The fixed path for this operation's URL. This will still have all of the URL template variables\n   * in it.\n   */\n  readonly path?: string;\n\n  /**\n   * The content type of the request body. This value will be used as the \"Content-Type\" header if\n   * it is provided.\n   */\n  readonly contentType?: string;\n\n  /**\n   * The media type of the request body.\n   * This value can be used to aide in serialization if it is provided.\n   */\n  readonly mediaType?:\n    | \"json\"\n    | \"xml\"\n    | \"form\"\n    | \"binary\"\n    | \"multipart\"\n    | \"text\"\n    | \"unknown\"\n    | string;\n  /**\n   * The parameter that will be used to construct the HTTP request's body.\n   */\n  readonly requestBody?: OperationParameter;\n\n  /**\n   * Whether or not this operation uses XML request and response bodies.\n   */\n  readonly isXML?: boolean;\n\n  /**\n   * The parameters to the operation method that will be substituted into the constructed URL.\n   */\n  readonly urlParameters?: ReadonlyArray<OperationURLParameter>;\n\n  /**\n   * The parameters to the operation method that will be added to the constructed URL's query.\n   */\n  readonly queryParameters?: ReadonlyArray<OperationQueryParameter>;\n\n  /**\n   * The parameters to the operation method that will be converted to headers on the operation's\n   * HTTP request.\n   */\n  readonly headerParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The parameters to the operation method that will be used to create a formdata body for the\n   * operation's HTTP request.\n   */\n  readonly formDataParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The different types of responses that this operation can return based on what status code is\n   * returned.\n   */\n  readonly responses: { [responseCode: string]: OperationResponseMap };\n}\n\n/**\n * Wrapper object for http request and response. Deserialized object is stored in\n * the `parsedBody` property when the response body is received in JSON or XML.\n */\nexport interface FullOperationResponse extends PipelineResponse {\n  /**\n   * The parsed HTTP response headers.\n   */\n  parsedHeaders?: { [key: string]: unknown };\n\n  /**\n   * The response body as parsed JSON or XML.\n   */\n  parsedBody?: any;\n\n  /**\n   * The request that generated the response.\n   */\n  request: OperationRequest;\n}\n\n/**\n * A function to be called each time a response is received from the server\n * while performing the requested operation.\n * May be called multiple times.\n */\nexport type RawResponseCallback = (\n  rawResponse: FullOperationResponse,\n  flatResponse: unknown,\n  error?: unknown,\n) => void;\n\n/**\n * Used to map raw response objects to final shapes.\n * Helps packing and unpacking Dates and other encoded types that are not intrinsic to JSON.\n * Also allows pulling values from headers, as well as inserting default values and constants.\n */\nexport interface Serializer {\n  /**\n   * The provided model mapper.\n   */\n  readonly modelMappers: { [key: string]: any };\n  /**\n   * Whether the contents are XML or not.\n   */\n  readonly isXML: boolean;\n\n  /**\n   * Validates constraints, if any. This function will throw if the provided value does not respect those constraints.\n   * @param mapper - The definition of data models.\n   * @param value - The value.\n   * @param objectName - Name of the object. Used in the error messages.\n   * @deprecated Removing the constraints validation on client side.\n   */\n  validateConstraints(mapper: Mapper, value: any, objectName: string): void;\n\n  /**\n   * Serialize the given object based on its metadata defined in the mapper.\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object.\n   * @param object - A valid Javascript object to be serialized.\n   * @param objectName - Name of the serialized object.\n   * @param options - additional options to deserialization.\n   * @returns A valid serialized Javascript object.\n   */\n  serialize(mapper: Mapper, object: any, objectName?: string, options?: SerializerOptions): any;\n\n  /**\n   * Deserialize the given object based on its metadata defined in the mapper.\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object.\n   * @param responseBody - A valid Javascript entity to be deserialized.\n   * @param objectName - Name of the deserialized object.\n   * @param options - Controls behavior of XML parser and builder.\n   * @returns A valid deserialized Javascript object.\n   */\n  deserialize(\n    mapper: Mapper,\n    responseBody: any,\n    objectName: string,\n    options?: SerializerOptions,\n  ): any;\n}\n\n/**\n * Description of various value constraints such as integer ranges and string regex.\n */\nexport interface MapperConstraints {\n  /**\n   * The value should be less than or equal to the `InclusiveMaximum` value.\n   */\n  InclusiveMaximum?: number;\n  /**\n   * The value should be less than the `ExclusiveMaximum` value.\n   */\n  ExclusiveMaximum?: number;\n  /**\n   * The value should be greater than or equal to the `InclusiveMinimum` value.\n   */\n  InclusiveMinimum?: number;\n  /**\n   * The value should be greater than the `InclusiveMinimum` value.\n   */\n  ExclusiveMinimum?: number;\n  /**\n   * The length should be smaller than the `MaxLength`.\n   */\n  MaxLength?: number;\n  /**\n   * The length should be bigger than the `MinLength`.\n   */\n  MinLength?: number;\n  /**\n   * The value must match the pattern.\n   */\n  Pattern?: RegExp;\n  /**\n   * The value must contain fewer items than the MaxItems value.\n   */\n  MaxItems?: number;\n  /**\n   * The value must contain more items than the `MinItems` value.\n   */\n  MinItems?: number;\n  /**\n   * The value must contain only unique items.\n   */\n  UniqueItems?: true;\n  /**\n   * The value should be exactly divisible by the `MultipleOf` value.\n   */\n  MultipleOf?: number;\n}\n\n/**\n * Type of the mapper. Includes known mappers.\n */\nexport type MapperType =\n  | SimpleMapperType\n  | CompositeMapperType\n  | SequenceMapperType\n  | DictionaryMapperType\n  | EnumMapperType;\n\n/**\n * The type of a simple mapper.\n */\nexport interface SimpleMapperType {\n  /**\n   * Name of the type of the property.\n   */\n  name:\n    | \"Base64Url\"\n    | \"Boolean\"\n    | \"ByteArray\"\n    | \"Date\"\n    | \"DateTime\"\n    | \"DateTimeRfc1123\"\n    | \"Object\"\n    | \"Stream\"\n    | \"String\"\n    | \"TimeSpan\"\n    | \"UnixTime\"\n    | \"Uuid\"\n    | \"Number\"\n    | \"any\";\n}\n\n/**\n * Helps build a mapper that describes how to map a set of properties of an object based on other mappers.\n *\n * Only one of the following properties should be present: `className`, `modelProperties` and `additionalProperties`.\n */\nexport interface CompositeMapperType {\n  /**\n   * Name of the composite mapper type.\n   */\n  name: \"Composite\";\n\n  /**\n   * Use `className` to reference another type definition.\n   */\n  className?: string;\n\n  /**\n   * Use `modelProperties` when the reference to the other type has been resolved.\n   */\n  modelProperties?: { [propertyName: string]: Mapper };\n\n  /**\n   * Used when a model has `additionalProperties: true`. Allows the generic processing of unnamed model properties on the response object.\n   */\n  additionalProperties?: Mapper;\n\n  /**\n   * The name of the top-most parent scheme, the one that has no parents.\n   */\n  uberParent?: string;\n\n  /**\n   * A polymorphic discriminator.\n   */\n  polymorphicDiscriminator?: PolymorphicDiscriminator;\n}\n\n/**\n * Helps build a mapper that describes how to parse a sequence of mapped values.\n */\nexport interface SequenceMapperType {\n  /**\n   * Name of the sequence type mapper.\n   */\n  name: \"Sequence\";\n  /**\n   * The mapper to use to map each one of the properties of the sequence.\n   */\n  element: Mapper;\n}\n\n/**\n * Helps build a mapper that describes how to parse a dictionary of mapped values.\n */\nexport interface DictionaryMapperType {\n  /**\n   * Name of the sequence type mapper.\n   */\n  name: \"Dictionary\";\n  /**\n   * The mapper to use to map the value of each property in the dictionary.\n   */\n  value: Mapper;\n}\n\n/**\n * Helps build a mapper that describes how to parse an enum value.\n */\nexport interface EnumMapperType {\n  /**\n   * Name of the enum type mapper.\n   */\n  name: \"Enum\";\n  /**\n   * Values allowed by this mapper.\n   */\n  allowedValues: any[];\n}\n\n/**\n * The base definition of a mapper. Can be used for XML and plain JavaScript objects.\n */\nexport interface BaseMapper {\n  /**\n   * Name for the xml element\n   */\n  xmlName?: string;\n  /**\n   * Xml element namespace\n   */\n  xmlNamespace?: string;\n  /**\n   * Xml element namespace prefix\n   */\n  xmlNamespacePrefix?: string;\n  /**\n   * Determines if the current property should be serialized as an attribute of the parent xml element\n   */\n  xmlIsAttribute?: boolean;\n  /**\n   * Determines if the current property should be serialized as the inner content of the xml element\n   */\n  xmlIsMsText?: boolean;\n  /**\n   * Name for the xml elements when serializing an array\n   */\n  xmlElementName?: string;\n  /**\n   * Whether or not the current property should have a wrapping XML element\n   */\n  xmlIsWrapped?: boolean;\n  /**\n   * Whether or not the current property is readonly\n   */\n  readOnly?: boolean;\n  /**\n   * Whether or not the current property is a constant\n   */\n  isConstant?: boolean;\n  /**\n   * Whether or not the current property is required\n   */\n  required?: boolean;\n  /**\n   * Whether or not the current property allows mull as a value\n   */\n  nullable?: boolean;\n  /**\n   * The name to use when serializing\n   */\n  serializedName?: string;\n  /**\n   * Type of the mapper\n   */\n  type: MapperType;\n  /**\n   * Default value when one is not explicitly provided\n   */\n  defaultValue?: any;\n  /**\n   * Constraints to test the current value against\n   */\n  constraints?: MapperConstraints;\n}\n\n/**\n * Mappers are definitions of the data models used in the library.\n * These data models are part of the Operation or Client definitions in the responses or parameters.\n */\nexport type Mapper = BaseMapper | CompositeMapper | SequenceMapper | DictionaryMapper | EnumMapper;\n\n/**\n * Used to disambiguate discriminated type unions.\n * For example, if response can have many shapes but also includes a 'kind' field (or similar),\n * that field can be used to determine how to deserialize the response to the correct type.\n */\nexport interface PolymorphicDiscriminator {\n  /**\n   * Name of the discriminant property in the original JSON payload, e.g. `@odata.kind`.\n   */\n  serializedName: string;\n  /**\n   * Name to use on the resulting object instead of the original property name.\n   * Useful since the JSON property could be difficult to work with.\n   * For example: For a field received as `@odata.kind`, the final object could instead include a property simply named `kind`.\n   */\n  clientName: string;\n  /**\n   * It may contain any other property.\n   */\n  [key: string]: string;\n}\n\n/**\n * A mapper composed of other mappers.\n */\nexport interface CompositeMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `CompositeMapper`.\n   */\n  type: CompositeMapperType;\n}\n\n/**\n * A mapper describing arrays.\n */\nexport interface SequenceMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `SequenceMapper`.\n   */\n  type: SequenceMapperType;\n}\n\n/**\n * A mapper describing plain JavaScript objects used as key/value pairs.\n */\nexport interface DictionaryMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `DictionaryMapper`.\n   */\n  type: DictionaryMapperType;\n  /**\n   * Optionally, a prefix to add to the header collection.\n   */\n  headerCollectionPrefix?: string;\n}\n\n/**\n * A mapper describing an enum value.\n */\nexport interface EnumMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `EnumMapper`.\n   */\n  type: EnumMapperType;\n}\n\nexport interface UrlParameterValue {\n  value: string;\n  skipUrlEncoding: boolean;\n}\n\n/**\n * Configuration for creating a new Tracing Span\n */\nexport interface SpanConfig {\n  /**\n   * Package name prefix\n   */\n  packagePrefix: string;\n  /**\n   * Service namespace\n   */\n  namespace: string;\n}\n\n/**\n * Used to configure additional policies added to the pipeline at construction.\n */\nexport interface AdditionalPolicyConfig {\n  /**\n   * A policy to be added.\n   */\n  policy: PipelinePolicy;\n  /**\n   * Determines if this policy be applied before or after retry logic.\n   * Only use `perRetry` if you need to modify the request again\n   * each time the operation is retried due to retryable service\n   * issues.\n   */\n  position: \"perCall\" | \"perRetry\";\n}\n\n/**\n * The common set of options that high level clients are expected to expose.\n */\nexport interface CommonClientOptions extends PipelineOptions {\n  /**\n   * The HttpClient that will be used to send HTTP requests.\n   */\n  httpClient?: HttpClient;\n  /**\n   * Set to true if the request is sent over HTTP instead of HTTPS\n   */\n  allowInsecureConnection?: boolean;\n  /**\n   * Additional policies to include in the HTTP pipeline.\n   */\n  additionalPolicies?: AdditionalPolicyConfig[];\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { CompositeMapper, FullOperationResponse, OperationResponseMap } from \"./interfaces.js\";\n\n/**\n * The union of all possible types for a primitive response body.\n * @internal\n */\nexport type BodyPrimitive = number | string | boolean | Date | Uint8Array | undefined | null;\n\n/**\n * A type guard for a primitive response body.\n * @param value - Value to test\n *\n * @internal\n */\nexport function isPrimitiveBody(value: unknown, mapperTypeName?: string): value is BodyPrimitive {\n  return (\n    mapperTypeName !== \"Composite\" &&\n    mapperTypeName !== \"Dictionary\" &&\n    (typeof value === \"string\" ||\n      typeof value === \"number\" ||\n      typeof value === \"boolean\" ||\n      mapperTypeName?.match(/^(Date|DateTime|DateTimeRfc1123|UnixTime|ByteArray|Base64Url)$/i) !==\n        null ||\n      value === undefined ||\n      value === null)\n  );\n}\n\nconst validateISODuration =\n  /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n/**\n * Returns true if the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @internal\n */\nexport function isDuration(value: string): boolean {\n  return validateISODuration.test(value);\n}\n\nconst validUuidRegex =\n  /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n\n/**\n * Returns true if the provided uuid is valid.\n *\n * @param uuid - The uuid that needs to be validated.\n *\n * @internal\n */\nexport function isValidUuid(uuid: string): boolean {\n  return validUuidRegex.test(uuid);\n}\n\n/**\n * Representation of parsed response headers and body coupled with information\n * about how to map them:\n * - whether the response body should be wrapped (typically if its type is primitive).\n * - whether the response is nullable so it can be null if the combination of\n *   the headers and the body is empty.\n */\ninterface ResponseObjectWithMetadata {\n  /** whether the mapper allows nullable body */\n  hasNullableType: boolean;\n  /** whether the response's body should be wrapped */\n  shouldWrapBody: boolean;\n  /** parsed headers of the response */\n  headers:\n    | {\n        [key: string]: unknown;\n      }\n    | undefined;\n  /** parsed body of the response */\n  body: any;\n}\n\n/**\n * Maps the response as follows:\n * - wraps the response body if needed (typically if its type is primitive).\n * - returns null if the combination of the headers and the body is empty.\n * - otherwise, returns the combination of the headers and the body.\n *\n * @param responseObject - a representation of the parsed response\n * @returns the response that will be returned to the user which can be null and/or wrapped\n *\n * @internal\n */\nfunction handleNullableResponseAndWrappableBody(\n  responseObject: ResponseObjectWithMetadata,\n): unknown | null {\n  const combinedHeadersAndBody = {\n    ...responseObject.headers,\n    ...responseObject.body,\n  };\n  if (\n    responseObject.hasNullableType &&\n    Object.getOwnPropertyNames(combinedHeadersAndBody).length === 0\n  ) {\n    return responseObject.shouldWrapBody ? { body: null } : null;\n  } else {\n    return responseObject.shouldWrapBody\n      ? {\n          ...responseObject.headers,\n          body: responseObject.body,\n        }\n      : combinedHeadersAndBody;\n  }\n}\n\n/**\n * Take a `FullOperationResponse` and turn it into a flat\n * response object to hand back to the consumer.\n * @param fullResponse - The processed response from the operation request\n * @param responseSpec - The response map from the OperationSpec\n *\n * @internal\n */\nexport function flattenResponse(\n  fullResponse: FullOperationResponse,\n  responseSpec: OperationResponseMap | undefined,\n): unknown {\n  const parsedHeaders = fullResponse.parsedHeaders;\n\n  // head methods never have a body, but we return a boolean set to body property\n  // to indicate presence/absence of the resource\n  if (fullResponse.request.method === \"HEAD\") {\n    return {\n      ...parsedHeaders,\n      body: fullResponse.parsedBody,\n    };\n  }\n  const bodyMapper = responseSpec && responseSpec.bodyMapper;\n  const isNullable = Boolean(bodyMapper?.nullable);\n  const expectedBodyTypeName = bodyMapper?.type.name;\n\n  /** If the body is asked for, we look at the expected body type to handle it */\n  if (expectedBodyTypeName === \"Stream\") {\n    return {\n      ...parsedHeaders,\n      blobBody: fullResponse.blobBody,\n      readableStreamBody: fullResponse.readableStreamBody,\n    };\n  }\n\n  const modelProperties =\n    (expectedBodyTypeName === \"Composite\" &&\n      (bodyMapper as CompositeMapper).type.modelProperties) ||\n    {};\n  const isPageableResponse = Object.keys(modelProperties).some(\n    (k) => modelProperties[k].serializedName === \"\",\n  );\n  if (expectedBodyTypeName === \"Sequence\" || isPageableResponse) {\n    const arrayResponse: { [key: string]: unknown } =\n      fullResponse.parsedBody ?? ([] as unknown as { [key: string]: unknown });\n\n    for (const key of Object.keys(modelProperties)) {\n      if (modelProperties[key].serializedName) {\n        arrayResponse[key] = fullResponse.parsedBody?.[key];\n      }\n    }\n\n    if (parsedHeaders) {\n      for (const key of Object.keys(parsedHeaders)) {\n        arrayResponse[key] = parsedHeaders[key];\n      }\n    }\n    return isNullable &&\n      !fullResponse.parsedBody &&\n      !parsedHeaders &&\n      Object.getOwnPropertyNames(modelProperties).length === 0\n      ? null\n      : arrayResponse;\n  }\n\n  return handleNullableResponseAndWrappableBody({\n    body: fullResponse.parsedBody,\n    headers: parsedHeaders,\n    hasNullableType: isNullable,\n    shouldWrapBody: isPrimitiveBody(fullResponse.parsedBody, expectedBodyTypeName),\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as base64 from \"./base64.js\";\nimport {\n  BaseMapper,\n  CompositeMapper,\n  DictionaryMapper,\n  EnumMapper,\n  Mapper,\n  MapperConstraints,\n  PolymorphicDiscriminator,\n  RequiredSerializerOptions,\n  SequenceMapper,\n  Serializer,\n  SerializerOptions,\n  XML_ATTRKEY,\n  XML_CHARKEY,\n} from \"./interfaces.js\";\nimport { isDuration, isValidUuid } from \"./utils.js\";\n\nclass SerializerImpl implements Serializer {\n  constructor(\n    public readonly modelMappers: { [key: string]: any } = {},\n    public readonly isXML: boolean = false,\n  ) {}\n\n  /**\n   * @deprecated Removing the constraints validation on client side.\n   */\n  validateConstraints(mapper: Mapper, value: any, objectName: string): void {\n    const failValidation = (\n      constraintName: keyof MapperConstraints,\n      constraintValue: any,\n    ): never => {\n      throw new Error(\n        `\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`,\n      );\n    };\n    if (mapper.constraints && value !== undefined && value !== null) {\n      const {\n        ExclusiveMaximum,\n        ExclusiveMinimum,\n        InclusiveMaximum,\n        InclusiveMinimum,\n        MaxItems,\n        MaxLength,\n        MinItems,\n        MinLength,\n        MultipleOf,\n        Pattern,\n        UniqueItems,\n      } = mapper.constraints;\n      if (ExclusiveMaximum !== undefined && value >= ExclusiveMaximum) {\n        failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n      }\n      if (ExclusiveMinimum !== undefined && value <= ExclusiveMinimum) {\n        failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n      }\n      if (InclusiveMaximum !== undefined && value > InclusiveMaximum) {\n        failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n      }\n      if (InclusiveMinimum !== undefined && value < InclusiveMinimum) {\n        failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n      }\n      if (MaxItems !== undefined && value.length > MaxItems) {\n        failValidation(\"MaxItems\", MaxItems);\n      }\n      if (MaxLength !== undefined && value.length > MaxLength) {\n        failValidation(\"MaxLength\", MaxLength);\n      }\n      if (MinItems !== undefined && value.length < MinItems) {\n        failValidation(\"MinItems\", MinItems);\n      }\n      if (MinLength !== undefined && value.length < MinLength) {\n        failValidation(\"MinLength\", MinLength);\n      }\n      if (MultipleOf !== undefined && value % MultipleOf !== 0) {\n        failValidation(\"MultipleOf\", MultipleOf);\n      }\n      if (Pattern) {\n        const pattern: RegExp = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n        if (typeof value !== \"string\" || value.match(pattern) === null) {\n          failValidation(\"Pattern\", Pattern);\n        }\n      }\n      if (\n        UniqueItems &&\n        value.some((item: any, i: number, ar: Array<any>) => ar.indexOf(item) !== i)\n      ) {\n        failValidation(\"UniqueItems\", UniqueItems);\n      }\n    }\n  }\n\n  /**\n   * Serialize the given object based on its metadata defined in the mapper\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object\n   *\n   * @param object - A valid Javascript object to be serialized\n   *\n   * @param objectName - Name of the serialized object\n   *\n   * @param options - additional options to serialization\n   *\n   * @returns A valid serialized Javascript object\n   */\n  serialize(\n    mapper: Mapper,\n    object: any,\n    objectName?: string,\n    options: SerializerOptions = { xml: {} },\n  ): any {\n    const updatedOptions: RequiredSerializerOptions = {\n      xml: {\n        rootName: options.xml.rootName ?? \"\",\n        includeRoot: options.xml.includeRoot ?? false,\n        xmlCharKey: options.xml.xmlCharKey ?? XML_CHARKEY,\n      },\n    };\n    let payload: any = {};\n    const mapperType = mapper.type.name as string;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n    if (mapperType.match(/^Sequence$/i) !== null) {\n      payload = [];\n    }\n\n    if (mapper.isConstant) {\n      object = mapper.defaultValue;\n    }\n\n    // This table of allowed values should help explain\n    // the mapper.required and mapper.nullable properties.\n    // X means \"neither undefined or null are allowed\".\n    //           || required\n    //           || true      | false\n    //  nullable || ==========================\n    //      true || null      | undefined/null\n    //     false || X         | undefined\n    // undefined || X         | undefined/null\n\n    const { required, nullable } = mapper;\n\n    if (required && nullable && object === undefined) {\n      throw new Error(`${objectName} cannot be undefined.`);\n    }\n    if (required && !nullable && (object === undefined || object === null)) {\n      throw new Error(`${objectName} cannot be null or undefined.`);\n    }\n    if (!required && nullable === false && object === null) {\n      throw new Error(`${objectName} cannot be null.`);\n    }\n\n    if (object === undefined || object === null) {\n      payload = object;\n    } else {\n      if (mapperType.match(/^any$/i) !== null) {\n        payload = object;\n      } else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n        payload = serializeBasicTypes(mapperType, objectName, object);\n      } else if (mapperType.match(/^Enum$/i) !== null) {\n        const enumMapper = mapper as EnumMapper;\n        payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n      } else if (\n        mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null\n      ) {\n        payload = serializeDateTypes(mapperType, object, objectName);\n      } else if (mapperType.match(/^ByteArray$/i) !== null) {\n        payload = serializeByteArrayType(objectName, object);\n      } else if (mapperType.match(/^Base64Url$/i) !== null) {\n        payload = serializeBase64UrlType(objectName, object);\n      } else if (mapperType.match(/^Sequence$/i) !== null) {\n        payload = serializeSequenceType(\n          this,\n          mapper as SequenceMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions,\n        );\n      } else if (mapperType.match(/^Dictionary$/i) !== null) {\n        payload = serializeDictionaryType(\n          this,\n          mapper as DictionaryMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions,\n        );\n      } else if (mapperType.match(/^Composite$/i) !== null) {\n        payload = serializeCompositeType(\n          this,\n          mapper as CompositeMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions,\n        );\n      }\n    }\n    return payload;\n  }\n\n  /**\n   * Deserialize the given object based on its metadata defined in the mapper\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object\n   *\n   * @param responseBody - A valid Javascript entity to be deserialized\n   *\n   * @param objectName - Name of the deserialized object\n   *\n   * @param options - Controls behavior of XML parser and builder.\n   *\n   * @returns A valid deserialized Javascript object\n   */\n  deserialize(\n    mapper: Mapper,\n    responseBody: any,\n    objectName: string,\n    options: SerializerOptions = { xml: {} },\n  ): any {\n    const updatedOptions: RequiredSerializerOptions = {\n      xml: {\n        rootName: options.xml.rootName ?? \"\",\n        includeRoot: options.xml.includeRoot ?? false,\n        xmlCharKey: options.xml.xmlCharKey ?? XML_CHARKEY,\n      },\n      ignoreUnknownProperties: options.ignoreUnknownProperties ?? false,\n    };\n    if (responseBody === undefined || responseBody === null) {\n      if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n        // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n        // between the list being empty versus being missing,\n        // so let's do the more user-friendly thing and return an empty list.\n        responseBody = [];\n      }\n      // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n      if (mapper.defaultValue !== undefined) {\n        responseBody = mapper.defaultValue;\n      }\n      return responseBody;\n    }\n\n    let payload: any;\n    const mapperType = mapper.type.name;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n\n    if (mapperType.match(/^Composite$/i) !== null) {\n      payload = deserializeCompositeType(\n        this,\n        mapper as CompositeMapper,\n        responseBody,\n        objectName,\n        updatedOptions,\n      );\n    } else {\n      if (this.isXML) {\n        const xmlCharKey = updatedOptions.xml.xmlCharKey;\n        /**\n         * If the mapper specifies this as a non-composite type value but the responseBody contains\n         * both header (\"$\" i.e., XML_ATTRKEY) and body (\"#\" i.e., XML_CHARKEY) properties,\n         * then just reduce the responseBody value to the body (\"#\" i.e., XML_CHARKEY) property.\n         */\n        if (responseBody[XML_ATTRKEY] !== undefined && responseBody[xmlCharKey] !== undefined) {\n          responseBody = responseBody[xmlCharKey];\n        }\n      }\n\n      if (mapperType.match(/^Number$/i) !== null) {\n        payload = parseFloat(responseBody);\n        if (isNaN(payload)) {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^Boolean$/i) !== null) {\n        if (responseBody === \"true\") {\n          payload = true;\n        } else if (responseBody === \"false\") {\n          payload = false;\n        } else {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n        payload = responseBody;\n      } else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n        payload = new Date(responseBody);\n      } else if (mapperType.match(/^UnixTime$/i) !== null) {\n        payload = unixTimeToDate(responseBody);\n      } else if (mapperType.match(/^ByteArray$/i) !== null) {\n        payload = base64.decodeString(responseBody);\n      } else if (mapperType.match(/^Base64Url$/i) !== null) {\n        payload = base64UrlToByteArray(responseBody);\n      } else if (mapperType.match(/^Sequence$/i) !== null) {\n        payload = deserializeSequenceType(\n          this,\n          mapper as SequenceMapper,\n          responseBody,\n          objectName,\n          updatedOptions,\n        );\n      } else if (mapperType.match(/^Dictionary$/i) !== null) {\n        payload = deserializeDictionaryType(\n          this,\n          mapper as DictionaryMapper,\n          responseBody,\n          objectName,\n          updatedOptions,\n        );\n      }\n    }\n\n    if (mapper.isConstant) {\n      payload = mapper.defaultValue;\n    }\n\n    return payload;\n  }\n}\n\n/**\n * Method that creates and returns a Serializer.\n * @param modelMappers - Known models to map\n * @param isXML - If XML should be supported\n */\nexport function createSerializer(\n  modelMappers: { [key: string]: any } = {},\n  isXML: boolean = false,\n): Serializer {\n  return new SerializerImpl(modelMappers, isXML);\n}\n\nfunction trimEnd(str: string, ch: string): string {\n  let len = str.length;\n  while (len - 1 >= 0 && str[len - 1] === ch) {\n    --len;\n  }\n  return str.substr(0, len);\n}\n\nfunction bufferToBase64Url(buffer: Uint8Array): string | undefined {\n  if (!buffer) {\n    return undefined;\n  }\n  if (!(buffer instanceof Uint8Array)) {\n    throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n  }\n  // Uint8Array to Base64.\n  const str = base64.encodeByteArray(buffer);\n  // Base64 to Base64Url.\n  return trimEnd(str, \"=\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\n\nfunction base64UrlToByteArray(str: string): Uint8Array | undefined {\n  if (!str) {\n    return undefined;\n  }\n  if (str && typeof str.valueOf() !== \"string\") {\n    throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n  }\n  // Base64Url to Base64.\n  str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  // Base64 to Uint8Array.\n  return base64.decodeString(str);\n}\n\nfunction splitSerializeName(prop: string | undefined): string[] {\n  const classes: string[] = [];\n  let partialclass = \"\";\n  if (prop) {\n    const subwords = prop.split(\".\");\n\n    for (const item of subwords) {\n      if (item.charAt(item.length - 1) === \"\\\\\") {\n        partialclass += item.substr(0, item.length - 1) + \".\";\n      } else {\n        partialclass += item;\n        classes.push(partialclass);\n        partialclass = \"\";\n      }\n    }\n  }\n\n  return classes;\n}\n\nfunction dateToUnixTime(d: string | Date): number | undefined {\n  if (!d) {\n    return undefined;\n  }\n\n  if (typeof d.valueOf() === \"string\") {\n    d = new Date(d as string);\n  }\n  return Math.floor((d as Date).getTime() / 1000);\n}\n\nfunction unixTimeToDate(n: number): Date | undefined {\n  if (!n) {\n    return undefined;\n  }\n  return new Date(n * 1000);\n}\n\nfunction serializeBasicTypes(typeName: string, objectName: string, value: any): any {\n  if (value !== null && value !== undefined) {\n    if (typeName.match(/^Number$/i) !== null) {\n      if (typeof value !== \"number\") {\n        throw new Error(`${objectName} with value ${value} must be of type number.`);\n      }\n    } else if (typeName.match(/^String$/i) !== null) {\n      if (typeof value.valueOf() !== \"string\") {\n        throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n      }\n    } else if (typeName.match(/^Uuid$/i) !== null) {\n      if (!(typeof value.valueOf() === \"string\" && isValidUuid(value))) {\n        throw new Error(\n          `${objectName} with value \"${value}\" must be of type string and a valid uuid.`,\n        );\n      }\n    } else if (typeName.match(/^Boolean$/i) !== null) {\n      if (typeof value !== \"boolean\") {\n        throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n      }\n    } else if (typeName.match(/^Stream$/i) !== null) {\n      const objectType = typeof value;\n      if (\n        objectType !== \"string\" &&\n        typeof value.pipe !== \"function\" && // NodeJS.ReadableStream\n        typeof value.tee !== \"function\" && // browser ReadableStream\n        !(value instanceof ArrayBuffer) &&\n        !ArrayBuffer.isView(value) &&\n        // File objects count as a type of Blob, so we want to use instanceof explicitly\n        !((typeof Blob === \"function\" || typeof Blob === \"object\") && value instanceof Blob) &&\n        objectType !== \"function\"\n      ) {\n        throw new Error(\n          `${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, ReadableStream, or () => ReadableStream.`,\n        );\n      }\n    }\n  }\n  return value;\n}\n\nfunction serializeEnumType(objectName: string, allowedValues: Array<any>, value: any): any {\n  if (!allowedValues) {\n    throw new Error(\n      `Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`,\n    );\n  }\n  const isPresent = allowedValues.some((item) => {\n    if (typeof item.valueOf() === \"string\") {\n      return item.toLowerCase() === value.toLowerCase();\n    }\n    return item === value;\n  });\n  if (!isPresent) {\n    throw new Error(\n      `${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(\n        allowedValues,\n      )}.`,\n    );\n  }\n  return value;\n}\n\nfunction serializeByteArrayType(objectName: string, value: any): any {\n  if (value !== undefined && value !== null) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    value = base64.encodeByteArray(value);\n  }\n  return value;\n}\n\nfunction serializeBase64UrlType(objectName: string, value: any): any {\n  if (value !== undefined && value !== null) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    value = bufferToBase64Url(value);\n  }\n  return value;\n}\n\nfunction serializeDateTypes(typeName: string, value: any, objectName: string): any {\n  if (value !== undefined && value !== null) {\n    if (typeName.match(/^Date$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value =\n        value instanceof Date\n          ? value.toISOString().substring(0, 10)\n          : new Date(value).toISOString().substring(0, 10);\n    } else if (typeName.match(/^DateTime$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n    } else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n      }\n      value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n    } else if (typeName.match(/^UnixTime$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(\n          `${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n            `for it to be serialized in UnixTime/Epoch format.`,\n        );\n      }\n      value = dateToUnixTime(value);\n    } else if (typeName.match(/^TimeSpan$/i) !== null) {\n      if (!isDuration(value)) {\n        throw new Error(\n          `${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`,\n        );\n      }\n    }\n  }\n  return value;\n}\n\nfunction serializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (!Array.isArray(object)) {\n    throw new Error(`${objectName} must be of type Array.`);\n  }\n  let elementType = mapper.type.element;\n  if (!elementType || typeof elementType !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`,\n    );\n  }\n  // Quirk: Composite mappers referenced by `element` might\n  // not have *all* properties declared (like uberParent),\n  // so let's try to look up the full definition by name.\n  if (elementType.type.name === \"Composite\" && elementType.type.className) {\n    elementType = serializer.modelMappers[elementType.type.className] ?? elementType;\n  }\n  const tempArray = [];\n  for (let i = 0; i < object.length; i++) {\n    const serializedValue = serializer.serialize(elementType, object[i], objectName, options);\n    if (isXml && elementType.xmlNamespace) {\n      const xmlnsKey = elementType.xmlNamespacePrefix\n        ? `xmlns:${elementType.xmlNamespacePrefix}`\n        : \"xmlns\";\n      if (elementType.type.name === \"Composite\") {\n        tempArray[i] = { ...serializedValue };\n        tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n      } else {\n        tempArray[i] = {};\n        tempArray[i][options.xml.xmlCharKey] = serializedValue;\n        tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n      }\n    } else {\n      tempArray[i] = serializedValue;\n    }\n  }\n  return tempArray;\n}\n\nfunction serializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (typeof object !== \"object\") {\n    throw new Error(`${objectName} must be of type object.`);\n  }\n  const valueType = mapper.type.value;\n  if (!valueType || typeof valueType !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`,\n    );\n  }\n  const tempDictionary: { [key: string]: any } = {};\n  for (const key of Object.keys(object)) {\n    const serializedValue = serializer.serialize(valueType, object[key], objectName, options);\n    // If the element needs an XML namespace we need to add it within the $ property\n    tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);\n  }\n\n  // Add the namespace to the root element if needed\n  if (isXml && mapper.xmlNamespace) {\n    const xmlnsKey = mapper.xmlNamespacePrefix ? `xmlns:${mapper.xmlNamespacePrefix}` : \"xmlns\";\n    const result = tempDictionary;\n    result[XML_ATTRKEY] = { [xmlnsKey]: mapper.xmlNamespace };\n    return result;\n  }\n\n  return tempDictionary;\n}\n\n/**\n * Resolves the additionalProperties property from a referenced mapper\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveAdditionalProperties(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string,\n): SequenceMapper | BaseMapper | CompositeMapper | DictionaryMapper | EnumMapper | undefined {\n  const additionalProperties = mapper.type.additionalProperties;\n\n  if (!additionalProperties && mapper.type.className) {\n    const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n    return modelMapper?.type.additionalProperties;\n  }\n\n  return additionalProperties;\n}\n\n/**\n * Finds the mapper referenced by className\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveReferencedMapper(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string,\n): CompositeMapper | undefined {\n  const className = mapper.type.className;\n  if (!className) {\n    throw new Error(\n      `Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(\n        mapper,\n        undefined,\n        2,\n      )}\".`,\n    );\n  }\n\n  return serializer.modelMappers[className];\n}\n\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n */\nfunction resolveModelProperties(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string,\n): { [propertyName: string]: Mapper } {\n  let modelProps = mapper.type.modelProperties;\n  if (!modelProps) {\n    const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n    if (!modelMapper) {\n      throw new Error(`mapper() cannot be null or undefined for model \"${mapper.type.className}\".`);\n    }\n    modelProps = modelMapper?.type.modelProperties;\n    if (!modelProps) {\n      throw new Error(\n        `modelProperties cannot be null or undefined in the ` +\n          `mapper \"${JSON.stringify(modelMapper)}\" of type \"${\n            mapper.type.className\n          }\" for object \"${objectName}\".`,\n      );\n    }\n  }\n\n  return modelProps;\n}\n\nfunction serializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n  }\n\n  if (object !== undefined && object !== null) {\n    const payload: any = {};\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    for (const key of Object.keys(modelProps)) {\n      const propertyMapper = modelProps[key];\n      if (propertyMapper.readOnly) {\n        continue;\n      }\n\n      let propName: string | undefined;\n      let parentObject: any = payload;\n      if (serializer.isXML) {\n        if (propertyMapper.xmlIsWrapped) {\n          propName = propertyMapper.xmlName;\n        } else {\n          propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n        }\n      } else {\n        const paths = splitSerializeName(propertyMapper.serializedName!);\n        propName = paths.pop();\n\n        for (const pathName of paths) {\n          const childObject = parentObject[pathName];\n          if (\n            (childObject === undefined || childObject === null) &&\n            ((object[key] !== undefined && object[key] !== null) ||\n              propertyMapper.defaultValue !== undefined)\n          ) {\n            parentObject[pathName] = {};\n          }\n          parentObject = parentObject[pathName];\n        }\n      }\n\n      if (parentObject !== undefined && parentObject !== null) {\n        if (isXml && mapper.xmlNamespace) {\n          const xmlnsKey = mapper.xmlNamespacePrefix\n            ? `xmlns:${mapper.xmlNamespacePrefix}`\n            : \"xmlns\";\n          parentObject[XML_ATTRKEY] = {\n            ...parentObject[XML_ATTRKEY],\n            [xmlnsKey]: mapper.xmlNamespace,\n          };\n        }\n        const propertyObjectName =\n          propertyMapper.serializedName !== \"\"\n            ? objectName + \".\" + propertyMapper.serializedName\n            : objectName;\n\n        let toSerialize = object[key];\n        const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n        if (\n          polymorphicDiscriminator &&\n          polymorphicDiscriminator.clientName === key &&\n          (toSerialize === undefined || toSerialize === null)\n        ) {\n          toSerialize = mapper.serializedName;\n        }\n\n        const serializedValue = serializer.serialize(\n          propertyMapper,\n          toSerialize,\n          propertyObjectName,\n          options,\n        );\n        if (serializedValue !== undefined && propName !== undefined && propName !== null) {\n          const value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);\n          if (isXml && propertyMapper.xmlIsAttribute) {\n            // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.\n            // This keeps things simple while preventing name collision\n            // with names in user documents.\n            parentObject[XML_ATTRKEY] = parentObject[XML_ATTRKEY] || {};\n            parentObject[XML_ATTRKEY][propName] = serializedValue;\n          } else if (isXml && propertyMapper.xmlIsWrapped) {\n            parentObject[propName] = { [propertyMapper.xmlElementName!]: value };\n          } else {\n            parentObject[propName] = value;\n          }\n        }\n      }\n    }\n\n    const additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);\n    if (additionalPropertiesMapper) {\n      const propNames = Object.keys(modelProps);\n      for (const clientPropName in object) {\n        const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n        if (isAdditionalProperty) {\n          payload[clientPropName] = serializer.serialize(\n            additionalPropertiesMapper,\n            object[clientPropName],\n            objectName + '[\"' + clientPropName + '\"]',\n            options,\n          );\n        }\n      }\n    }\n\n    return payload;\n  }\n  return object;\n}\n\nfunction getXmlObjectValue(\n  propertyMapper: Mapper,\n  serializedValue: any,\n  isXml: boolean,\n  options: RequiredSerializerOptions,\n): any {\n  if (!isXml || !propertyMapper.xmlNamespace) {\n    return serializedValue;\n  }\n\n  const xmlnsKey = propertyMapper.xmlNamespacePrefix\n    ? `xmlns:${propertyMapper.xmlNamespacePrefix}`\n    : \"xmlns\";\n  const xmlNamespace = { [xmlnsKey]: propertyMapper.xmlNamespace };\n\n  if ([\"Composite\"].includes(propertyMapper.type.name)) {\n    if (serializedValue[XML_ATTRKEY]) {\n      return serializedValue;\n    } else {\n      const result: any = { ...serializedValue };\n      result[XML_ATTRKEY] = xmlNamespace;\n      return result;\n    }\n  }\n  const result: any = {};\n  result[options.xml.xmlCharKey] = serializedValue;\n  result[XML_ATTRKEY] = xmlNamespace;\n  return result;\n}\n\nfunction isSpecialXmlProperty(propertyName: string, options: RequiredSerializerOptions): boolean {\n  return [XML_ATTRKEY, options.xml.xmlCharKey].includes(propertyName);\n}\n\nfunction deserializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  responseBody: any,\n  objectName: string,\n  options: RequiredSerializerOptions,\n): any {\n  const xmlCharKey = options.xml.xmlCharKey ?? XML_CHARKEY;\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n  }\n\n  const modelProps = resolveModelProperties(serializer, mapper, objectName);\n  let instance: { [key: string]: any } = {};\n  const handledPropertyNames: string[] = [];\n\n  for (const key of Object.keys(modelProps)) {\n    const propertyMapper = modelProps[key];\n    const paths = splitSerializeName(modelProps[key].serializedName!);\n    handledPropertyNames.push(paths[0]);\n    const { serializedName, xmlName, xmlElementName } = propertyMapper;\n    let propertyObjectName = objectName;\n    if (serializedName !== \"\" && serializedName !== undefined) {\n      propertyObjectName = objectName + \".\" + serializedName;\n    }\n\n    const headerCollectionPrefix = (propertyMapper as DictionaryMapper).headerCollectionPrefix;\n    if (headerCollectionPrefix) {\n      const dictionary: any = {};\n      for (const headerKey of Object.keys(responseBody)) {\n        if (headerKey.startsWith(headerCollectionPrefix)) {\n          dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(\n            (propertyMapper as DictionaryMapper).type.value,\n            responseBody[headerKey],\n            propertyObjectName,\n            options,\n          );\n        }\n\n        handledPropertyNames.push(headerKey);\n      }\n      instance[key] = dictionary;\n    } else if (serializer.isXML) {\n      if (propertyMapper.xmlIsAttribute && responseBody[XML_ATTRKEY]) {\n        instance[key] = serializer.deserialize(\n          propertyMapper,\n          responseBody[XML_ATTRKEY][xmlName!],\n          propertyObjectName,\n          options,\n        );\n      } else if (propertyMapper.xmlIsMsText) {\n        if (responseBody[xmlCharKey] !== undefined) {\n          instance[key] = responseBody[xmlCharKey];\n        } else if (typeof responseBody === \"string\") {\n          // The special case where xml parser parses \"<Name>content</Name>\" into JSON of\n          //   `{ name: \"content\"}` instead of `{ name: { \"_\": \"content\" }}`\n          instance[key] = responseBody;\n        }\n      } else {\n        const propertyName = xmlElementName || xmlName || serializedName;\n        if (propertyMapper.xmlIsWrapped) {\n          /* a list of <xmlElementName> wrapped by <xmlName>\n            For the xml example below\n              <Cors>\n                <CorsRule>...</CorsRule>\n                <CorsRule>...</CorsRule>\n              </Cors>\n            the responseBody has\n              {\n                Cors: {\n                  CorsRule: [{...}, {...}]\n                }\n              }\n            xmlName is \"Cors\" and xmlElementName is\"CorsRule\".\n          */\n          const wrapped = responseBody[xmlName!];\n          const elementList = wrapped?.[xmlElementName!] ?? [];\n          instance[key] = serializer.deserialize(\n            propertyMapper,\n            elementList,\n            propertyObjectName,\n            options,\n          );\n          handledPropertyNames.push(xmlName!);\n        } else {\n          const property = responseBody[propertyName!];\n          instance[key] = serializer.deserialize(\n            propertyMapper,\n            property,\n            propertyObjectName,\n            options,\n          );\n          handledPropertyNames.push(propertyName!);\n        }\n      }\n    } else {\n      // deserialize the property if it is present in the provided responseBody instance\n      let propertyInstance;\n      let res = responseBody;\n      // traversing the object step by step.\n      let steps = 0;\n      for (const item of paths) {\n        if (!res) break;\n        steps++;\n        res = res[item];\n      }\n      // only accept null when reaching the last position of object otherwise it would be undefined\n      if (res === null && steps < paths.length) {\n        res = undefined;\n      }\n      propertyInstance = res;\n      const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n      // checking that the model property name (key)(ex: \"fishtype\") and the\n      // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n      // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n      // is a better approach. The generator is not consistent with escaping '\\.' in the\n      // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n      // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n      // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n      // the transformation of model property name (ex: \"fishtype\") is done consistently.\n      // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n      if (\n        polymorphicDiscriminator &&\n        key === polymorphicDiscriminator.clientName &&\n        (propertyInstance === undefined || propertyInstance === null)\n      ) {\n        propertyInstance = mapper.serializedName;\n      }\n\n      let serializedValue;\n      // paging\n      if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n        propertyInstance = responseBody[key];\n        const arrayInstance = serializer.deserialize(\n          propertyMapper,\n          propertyInstance,\n          propertyObjectName,\n          options,\n        );\n        // Copy over any properties that have already been added into the instance, where they do\n        // not exist on the newly de-serialized array\n        for (const [k, v] of Object.entries(instance)) {\n          if (!Object.prototype.hasOwnProperty.call(arrayInstance, k)) {\n            arrayInstance[k] = v;\n          }\n        }\n        instance = arrayInstance;\n      } else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n        serializedValue = serializer.deserialize(\n          propertyMapper,\n          propertyInstance,\n          propertyObjectName,\n          options,\n        );\n        instance[key] = serializedValue;\n      }\n    }\n  }\n\n  const additionalPropertiesMapper = mapper.type.additionalProperties;\n  if (additionalPropertiesMapper) {\n    const isAdditionalProperty = (responsePropName: string): boolean => {\n      for (const clientPropName in modelProps) {\n        const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n        if (paths[0] === responsePropName) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    for (const responsePropName in responseBody) {\n      if (isAdditionalProperty(responsePropName)) {\n        instance[responsePropName] = serializer.deserialize(\n          additionalPropertiesMapper,\n          responseBody[responsePropName],\n          objectName + '[\"' + responsePropName + '\"]',\n          options,\n        );\n      }\n    }\n  } else if (responseBody && !options.ignoreUnknownProperties) {\n    for (const key of Object.keys(responseBody)) {\n      if (\n        instance[key] === undefined &&\n        !handledPropertyNames.includes(key) &&\n        !isSpecialXmlProperty(key, options)\n      ) {\n        instance[key] = responseBody[key];\n      }\n    }\n  }\n\n  return instance;\n}\n\nfunction deserializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  responseBody: any,\n  objectName: string,\n  options: RequiredSerializerOptions,\n): any {\n  /* jshint validthis: true */\n  const value = mapper.type.value;\n  if (!value || typeof value !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`,\n    );\n  }\n  if (responseBody) {\n    const tempDictionary: { [key: string]: any } = {};\n    for (const key of Object.keys(responseBody)) {\n      tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);\n    }\n    return tempDictionary;\n  }\n  return responseBody;\n}\n\nfunction deserializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  responseBody: any,\n  objectName: string,\n  options: RequiredSerializerOptions,\n): any {\n  let element = mapper.type.element;\n  if (!element || typeof element !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`,\n    );\n  }\n  if (responseBody) {\n    if (!Array.isArray(responseBody)) {\n      // xml2js will interpret a single element array as just the element, so force it to be an array\n      responseBody = [responseBody];\n    }\n\n    // Quirk: Composite mappers referenced by `element` might\n    // not have *all* properties declared (like uberParent),\n    // so let's try to look up the full definition by name.\n    if (element.type.name === \"Composite\" && element.type.className) {\n      element = serializer.modelMappers[element.type.className] ?? element;\n    }\n\n    const tempArray = [];\n    for (let i = 0; i < responseBody.length; i++) {\n      tempArray[i] = serializer.deserialize(\n        element,\n        responseBody[i],\n        `${objectName}[${i}]`,\n        options,\n      );\n    }\n    return tempArray;\n  }\n  return responseBody;\n}\n\nfunction getIndexDiscriminator(\n  discriminators: Record<string, CompositeMapper>,\n  discriminatorValue: string,\n  typeName: string,\n): CompositeMapper | undefined {\n  const typeNamesToCheck = [typeName];\n  while (typeNamesToCheck.length) {\n    const currentName = typeNamesToCheck.shift();\n    const indexDiscriminator =\n      discriminatorValue === currentName\n        ? discriminatorValue\n        : currentName + \".\" + discriminatorValue;\n    if (Object.prototype.hasOwnProperty.call(discriminators, indexDiscriminator)) {\n      return discriminators[indexDiscriminator];\n    } else {\n      for (const [name, mapper] of Object.entries(discriminators)) {\n        if (\n          name.startsWith(currentName + \".\") &&\n          mapper.type.uberParent === currentName &&\n          mapper.type.className\n        ) {\n          typeNamesToCheck.push(mapper.type.className);\n        }\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction getPolymorphicMapper(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  polymorphicPropertyName: \"clientName\" | \"serializedName\",\n): CompositeMapper {\n  const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n\n  if (polymorphicDiscriminator) {\n    let discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n    if (discriminatorName) {\n      // The serializedName might have \\\\, which we just want to ignore\n      if (polymorphicPropertyName === \"serializedName\") {\n        discriminatorName = discriminatorName.replace(/\\\\/gi, \"\");\n      }\n      const discriminatorValue = object[discriminatorName];\n      const typeName = mapper.type.uberParent ?? mapper.type.className;\n\n      if (typeof discriminatorValue === \"string\" && typeName) {\n        const polymorphicMapper = getIndexDiscriminator(\n          serializer.modelMappers.discriminators,\n          discriminatorValue,\n          typeName,\n        );\n        if (polymorphicMapper) {\n          mapper = polymorphicMapper;\n        }\n      }\n    }\n  }\n  return mapper;\n}\n\nfunction getPolymorphicDiscriminatorRecursively(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n): PolymorphicDiscriminator | undefined {\n  return (\n    mapper.type.polymorphicDiscriminator ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.className)\n  );\n}\n\nfunction getPolymorphicDiscriminatorSafely(\n  serializer: Serializer,\n  typeName?: string,\n): PolymorphicDiscriminator | undefined {\n  return (\n    typeName &&\n    serializer.modelMappers[typeName] &&\n    serializer.modelMappers[typeName].type.polymorphicDiscriminator\n  );\n}\n\n/**\n * Known types of Mappers\n */\nexport const MapperTypeNames = {\n  Base64Url: \"Base64Url\",\n  Boolean: \"Boolean\",\n  ByteArray: \"ByteArray\",\n  Composite: \"Composite\",\n  Date: \"Date\",\n  DateTime: \"DateTime\",\n  DateTimeRfc1123: \"DateTimeRfc1123\",\n  Dictionary: \"Dictionary\",\n  Enum: \"Enum\",\n  Number: \"Number\",\n  Object: \"Object\",\n  Sequence: \"Sequence\",\n  String: \"String\",\n  Stream: \"Stream\",\n  TimeSpan: \"TimeSpan\",\n  UnixTime: \"UnixTime\",\n} as const;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationRequest, OperationRequestInfo } from \"./interfaces.js\";\n\n/**\n * Browser-only implementation of the module's state. The browser esm variant will not load the commonjs state, so we do not need to share state between the two.\n */\nexport const state = {\n  operationRequestMap: new WeakMap<OperationRequest, OperationRequestInfo>(),\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  CompositeMapper,\n  Mapper,\n  OperationArguments,\n  OperationParameter,\n  OperationRequest,\n  OperationRequestInfo,\n  ParameterPath,\n} from \"./interfaces.js\";\n\nimport { state } from \"./state.js\";\n\n/**\n * @internal\n * Retrieves the value to use for a given operation argument\n * @param operationArguments - The arguments passed from the generated client\n * @param parameter - The parameter description\n * @param fallbackObject - If something isn't found in the arguments bag, look here.\n *  Generally used to look at the service client properties.\n */\nexport function getOperationArgumentValueFromParameter(\n  operationArguments: OperationArguments,\n  parameter: OperationParameter,\n  fallbackObject?: { [parameterName: string]: any },\n): any {\n  let parameterPath = parameter.parameterPath;\n  const parameterMapper = parameter.mapper;\n  let value: any;\n  if (typeof parameterPath === \"string\") {\n    parameterPath = [parameterPath];\n  }\n  if (Array.isArray(parameterPath)) {\n    if (parameterPath.length > 0) {\n      if (parameterMapper.isConstant) {\n        value = parameterMapper.defaultValue;\n      } else {\n        let propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n\n        if (!propertySearchResult.propertyFound && fallbackObject) {\n          propertySearchResult = getPropertyFromParameterPath(fallbackObject, parameterPath);\n        }\n\n        let useDefaultValue = false;\n        if (!propertySearchResult.propertyFound) {\n          useDefaultValue =\n            parameterMapper.required ||\n            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n        }\n        value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n      }\n    }\n  } else {\n    if (parameterMapper.required) {\n      value = {};\n    }\n\n    for (const propertyName in parameterPath) {\n      const propertyMapper: Mapper = (parameterMapper as CompositeMapper).type.modelProperties![\n        propertyName\n      ];\n      const propertyPath: ParameterPath = parameterPath[propertyName];\n      const propertyValue: any = getOperationArgumentValueFromParameter(\n        operationArguments,\n        {\n          parameterPath: propertyPath,\n          mapper: propertyMapper,\n        },\n        fallbackObject,\n      );\n      if (propertyValue !== undefined) {\n        if (!value) {\n          value = {};\n        }\n        value[propertyName] = propertyValue;\n      }\n    }\n  }\n  return value;\n}\n\ninterface PropertySearchResult {\n  propertyValue?: any;\n  propertyFound: boolean;\n}\n\nfunction getPropertyFromParameterPath(\n  parent: { [parameterName: string]: any },\n  parameterPath: string[],\n): PropertySearchResult {\n  const result: PropertySearchResult = { propertyFound: false };\n  let i = 0;\n  for (; i < parameterPath.length; ++i) {\n    const parameterPathPart: string = parameterPath[i];\n    // Make sure to check inherited properties too, so don't use hasOwnProperty().\n    if (parent && parameterPathPart in parent) {\n      parent = parent[parameterPathPart];\n    } else {\n      break;\n    }\n  }\n  if (i === parameterPath.length) {\n    result.propertyValue = parent;\n    result.propertyFound = true;\n  }\n  return result;\n}\n\nconst originalRequestSymbol = Symbol.for(\"@azure/core-client original request\");\n\nfunction hasOriginalRequest(\n  request: OperationRequest,\n): request is OperationRequest & { [originalRequestSymbol]: OperationRequest } {\n  return originalRequestSymbol in request;\n}\n\nexport function getOperationRequestInfo(request: OperationRequest): OperationRequestInfo {\n  if (hasOriginalRequest(request)) {\n    return getOperationRequestInfo(request[originalRequestSymbol]);\n  }\n  let info = state.operationRequestMap.get(request);\n\n  if (!info) {\n    info = {};\n    state.operationRequestMap.set(request, info);\n  }\n  return info;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  FullOperationResponse,\n  OperationRequest,\n  OperationResponseMap,\n  OperationSpec,\n  RequiredSerializerOptions,\n  SerializerOptions,\n  XML_CHARKEY,\n  XmlOptions,\n} from \"./interfaces.js\";\nimport {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  RestError,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport { MapperTypeNames } from \"./serializer.js\";\nimport { getOperationRequestInfo } from \"./operationHelpers.js\";\n\nconst defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nconst defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n\n/**\n * The programmatic identifier of the deserializationPolicy.\n */\nexport const deserializationPolicyName = \"deserializationPolicy\";\n\n/**\n * Options to configure API response deserialization.\n */\nexport interface DeserializationPolicyOptions {\n  /**\n   * Configures the expected content types for the deserialization of\n   * JSON and XML response bodies.\n   */\n  expectedContentTypes?: DeserializationContentTypes;\n\n  /**\n   * A function that is able to parse XML. Required for XML support.\n   */\n  parseXML?: (str: string, opts?: XmlOptions) => Promise<any>;\n\n  /**\n   * Configures behavior of xml parser and builder.\n   */\n  serializerOptions?: SerializerOptions;\n}\n\n/**\n * The content-types that will indicate that an operation response should be deserialized in a\n * particular way.\n */\nexport interface DeserializationContentTypes {\n  /**\n   * The content-types that indicate that an operation response should be deserialized as JSON.\n   * Defaults to [ \"application/json\", \"text/json\" ].\n   */\n  json?: string[];\n\n  /**\n   * The content-types that indicate that an operation response should be deserialized as XML.\n   * Defaults to [ \"application/xml\", \"application/atom+xml\" ].\n   */\n  xml?: string[];\n}\n\n/**\n * This policy handles parsing out responses according to OperationSpecs on the request.\n */\nexport function deserializationPolicy(options: DeserializationPolicyOptions = {}): PipelinePolicy {\n  const jsonContentTypes = options.expectedContentTypes?.json ?? defaultJsonContentTypes;\n  const xmlContentTypes = options.expectedContentTypes?.xml ?? defaultXmlContentTypes;\n  const parseXML = options.parseXML;\n  const serializerOptions = options.serializerOptions;\n  const updatedOptions: RequiredSerializerOptions = {\n    xml: {\n      rootName: serializerOptions?.xml.rootName ?? \"\",\n      includeRoot: serializerOptions?.xml.includeRoot ?? false,\n      xmlCharKey: serializerOptions?.xml.xmlCharKey ?? XML_CHARKEY,\n    },\n  };\n\n  return {\n    name: deserializationPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      const response = await next(request);\n      return deserializeResponseBody(\n        jsonContentTypes,\n        xmlContentTypes,\n        response,\n        updatedOptions,\n        parseXML,\n      );\n    },\n  };\n}\n\nfunction getOperationResponseMap(\n  parsedResponse: PipelineResponse,\n): undefined | OperationResponseMap {\n  let result: OperationResponseMap | undefined;\n  const request: OperationRequest = parsedResponse.request;\n  const operationInfo = getOperationRequestInfo(request);\n  const operationSpec = operationInfo?.operationSpec;\n  if (operationSpec) {\n    if (!operationInfo?.operationResponseGetter) {\n      result = operationSpec.responses[parsedResponse.status];\n    } else {\n      result = operationInfo?.operationResponseGetter(operationSpec, parsedResponse);\n    }\n  }\n  return result;\n}\n\nfunction shouldDeserializeResponse(parsedResponse: PipelineResponse): boolean {\n  const request: OperationRequest = parsedResponse.request;\n  const operationInfo = getOperationRequestInfo(request);\n  const shouldDeserialize = operationInfo?.shouldDeserialize;\n  let result: boolean;\n  if (shouldDeserialize === undefined) {\n    result = true;\n  } else if (typeof shouldDeserialize === \"boolean\") {\n    result = shouldDeserialize;\n  } else {\n    result = shouldDeserialize(parsedResponse);\n  }\n  return result;\n}\n\nasync function deserializeResponseBody(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  response: PipelineResponse,\n  options: RequiredSerializerOptions,\n  parseXML?: (str: string, opts?: XmlOptions) => Promise<any>,\n): Promise<PipelineResponse> {\n  const parsedResponse = await parse(\n    jsonContentTypes,\n    xmlContentTypes,\n    response,\n    options,\n    parseXML,\n  );\n  if (!shouldDeserializeResponse(parsedResponse)) {\n    return parsedResponse;\n  }\n\n  const operationInfo = getOperationRequestInfo(parsedResponse.request);\n  const operationSpec = operationInfo?.operationSpec;\n  if (!operationSpec || !operationSpec.responses) {\n    return parsedResponse;\n  }\n\n  const responseSpec = getOperationResponseMap(parsedResponse);\n  const { error, shouldReturnResponse } = handleErrorResponse(\n    parsedResponse,\n    operationSpec,\n    responseSpec,\n    options,\n  );\n  if (error) {\n    throw error;\n  } else if (shouldReturnResponse) {\n    return parsedResponse;\n  }\n\n  // An operation response spec does exist for current status code, so\n  // use it to deserialize the response.\n  if (responseSpec) {\n    if (responseSpec.bodyMapper) {\n      let valueToDeserialize: any = parsedResponse.parsedBody;\n      if (operationSpec.isXML && responseSpec.bodyMapper.type.name === MapperTypeNames.Sequence) {\n        valueToDeserialize =\n          typeof valueToDeserialize === \"object\"\n            ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName!]\n            : [];\n      }\n      try {\n        parsedResponse.parsedBody = operationSpec.serializer.deserialize(\n          responseSpec.bodyMapper,\n          valueToDeserialize,\n          \"operationRes.parsedBody\",\n          options,\n        );\n      } catch (deserializeError: any) {\n        const restError = new RestError(\n          `Error ${deserializeError} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`,\n          {\n            statusCode: parsedResponse.status,\n            request: parsedResponse.request,\n            response: parsedResponse,\n          },\n        );\n        throw restError;\n      }\n    } else if (operationSpec.httpMethod === \"HEAD\") {\n      // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n      parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n    }\n\n    if (responseSpec.headersMapper) {\n      parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(\n        responseSpec.headersMapper,\n        parsedResponse.headers.toJSON(),\n        \"operationRes.parsedHeaders\",\n        { xml: {}, ignoreUnknownProperties: true },\n      );\n    }\n  }\n\n  return parsedResponse;\n}\n\nfunction isOperationSpecEmpty(operationSpec: OperationSpec): boolean {\n  const expectedStatusCodes = Object.keys(operationSpec.responses);\n  return (\n    expectedStatusCodes.length === 0 ||\n    (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\")\n  );\n}\n\nfunction handleErrorResponse(\n  parsedResponse: FullOperationResponse,\n  operationSpec: OperationSpec,\n  responseSpec: OperationResponseMap | undefined,\n  options: RequiredSerializerOptions,\n): { error: RestError | null; shouldReturnResponse: boolean } {\n  const isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;\n  const isExpectedStatusCode: boolean = isOperationSpecEmpty(operationSpec)\n    ? isSuccessByStatus\n    : !!responseSpec;\n\n  if (isExpectedStatusCode) {\n    if (responseSpec) {\n      if (!responseSpec.isError) {\n        return { error: null, shouldReturnResponse: false };\n      }\n    } else {\n      return { error: null, shouldReturnResponse: false };\n    }\n  }\n\n  const errorResponseSpec = responseSpec ?? operationSpec.responses.default;\n\n  const initialErrorMessage = parsedResponse.request.streamResponseStatusCodes?.has(\n    parsedResponse.status,\n  )\n    ? `Unexpected status code: ${parsedResponse.status}`\n    : (parsedResponse.bodyAsText as string);\n\n  const error = new RestError(initialErrorMessage, {\n    statusCode: parsedResponse.status,\n    request: parsedResponse.request,\n    response: parsedResponse,\n  });\n\n  // If the item failed but there's no error spec or default spec to deserialize the error,\n  // we should fail so we just throw the parsed response\n  if (!errorResponseSpec) {\n    throw error;\n  }\n\n  const defaultBodyMapper = errorResponseSpec.bodyMapper;\n  const defaultHeadersMapper = errorResponseSpec.headersMapper;\n\n  try {\n    // If error response has a body, try to deserialize it using default body mapper.\n    // Then try to extract error code & message from it\n    if (parsedResponse.parsedBody) {\n      const parsedBody = parsedResponse.parsedBody;\n      let deserializedError;\n\n      if (defaultBodyMapper) {\n        let valueToDeserialize: any = parsedBody;\n        if (operationSpec.isXML && defaultBodyMapper.type.name === MapperTypeNames.Sequence) {\n          valueToDeserialize = [];\n          const elementName = defaultBodyMapper.xmlElementName;\n          if (typeof parsedBody === \"object\" && elementName) {\n            valueToDeserialize = parsedBody[elementName];\n          }\n        }\n        deserializedError = operationSpec.serializer.deserialize(\n          defaultBodyMapper,\n          valueToDeserialize,\n          \"error.response.parsedBody\",\n          options,\n        );\n      }\n\n      const internalError: any = parsedBody.error || deserializedError || parsedBody;\n      error.code = internalError.code;\n      if (internalError.message) {\n        error.message = internalError.message;\n      }\n\n      if (defaultBodyMapper) {\n        (error.response! as FullOperationResponse).parsedBody = deserializedError;\n      }\n    }\n\n    // If error response has headers, try to deserialize it using default header mapper\n    if (parsedResponse.headers && defaultHeadersMapper) {\n      (error.response! as FullOperationResponse).parsedHeaders =\n        operationSpec.serializer.deserialize(\n          defaultHeadersMapper,\n          parsedResponse.headers.toJSON(),\n          \"operationRes.parsedHeaders\",\n        );\n    }\n  } catch (defaultError: any) {\n    error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody - \"${parsedResponse.bodyAsText}\" for the default response.`;\n  }\n\n  return { error, shouldReturnResponse: false };\n}\n\nasync function parse(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  operationResponse: FullOperationResponse,\n  opts: RequiredSerializerOptions,\n  parseXML?: (str: string, opts?: XmlOptions) => Promise<any>,\n): Promise<FullOperationResponse> {\n  if (\n    !operationResponse.request.streamResponseStatusCodes?.has(operationResponse.status) &&\n    operationResponse.bodyAsText\n  ) {\n    const text = operationResponse.bodyAsText;\n    const contentType: string = operationResponse.headers.get(\"Content-Type\") || \"\";\n    const contentComponents: string[] = !contentType\n      ? []\n      : contentType.split(\";\").map((component) => component.toLowerCase());\n\n    try {\n      if (\n        contentComponents.length === 0 ||\n        contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)\n      ) {\n        operationResponse.parsedBody = JSON.parse(text);\n        return operationResponse;\n      } else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n        if (!parseXML) {\n          throw new Error(\"Parsing XML not supported.\");\n        }\n        const body = await parseXML(text, opts.xml);\n        operationResponse.parsedBody = body;\n        return operationResponse;\n      }\n    } catch (err: any) {\n      const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n      const errCode = err.code || RestError.PARSE_ERROR;\n      const e = new RestError(msg, {\n        code: errCode,\n        statusCode: operationResponse.status,\n        request: operationResponse.request,\n        response: operationResponse,\n      });\n      throw e;\n    }\n  }\n\n  return operationResponse;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationParameter, OperationSpec } from \"./interfaces.js\";\nimport { MapperTypeNames } from \"./serializer.js\";\n\n/**\n * Gets the list of status codes for streaming responses.\n * @internal\n */\nexport function getStreamingResponseStatusCodes(operationSpec: OperationSpec): Set<number> {\n  const result = new Set<number>();\n  for (const statusCode in operationSpec.responses) {\n    const operationResponse = operationSpec.responses[statusCode];\n    if (\n      operationResponse.bodyMapper &&\n      operationResponse.bodyMapper.type.name === MapperTypeNames.Stream\n    ) {\n      result.add(Number(statusCode));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter - The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n * @internal\n */\nexport function getPathStringFromParameter(parameter: OperationParameter): string {\n  const { parameterPath, mapper } = parameter;\n  let result: string;\n  if (typeof parameterPath === \"string\") {\n    result = parameterPath;\n  } else if (Array.isArray(parameterPath)) {\n    result = parameterPath.join(\".\");\n  } else {\n    result = mapper.serializedName!;\n  }\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  DictionaryMapper,\n  OperationArguments,\n  OperationRequest,\n  OperationSpec,\n  RequiredSerializerOptions,\n  SerializerOptions,\n  XML_ATTRKEY,\n  XML_CHARKEY,\n  XmlOptions,\n} from \"./interfaces.js\";\nimport { PipelinePolicy, PipelineResponse, SendRequest } from \"@azure/core-rest-pipeline\";\nimport {\n  getOperationArgumentValueFromParameter,\n  getOperationRequestInfo,\n} from \"./operationHelpers.js\";\nimport { MapperTypeNames } from \"./serializer.js\";\nimport { getPathStringFromParameter } from \"./interfaceHelpers.js\";\n\n/**\n * The programmatic identifier of the serializationPolicy.\n */\nexport const serializationPolicyName = \"serializationPolicy\";\n\n/**\n * Options to configure API request serialization.\n */\nexport interface SerializationPolicyOptions {\n  /**\n   * A function that is able to write XML. Required for XML support.\n   */\n  stringifyXML?: (obj: any, opts?: XmlOptions) => string;\n\n  /**\n   * Configures behavior of xml parser and builder.\n   */\n  serializerOptions?: SerializerOptions;\n}\n\n/**\n * This policy handles assembling the request body and headers using\n * an OperationSpec and OperationArguments on the request.\n */\nexport function serializationPolicy(options: SerializationPolicyOptions = {}): PipelinePolicy {\n  const stringifyXML = options.stringifyXML;\n\n  return {\n    name: serializationPolicyName,\n    async sendRequest(request: OperationRequest, next: SendRequest): Promise<PipelineResponse> {\n      const operationInfo = getOperationRequestInfo(request);\n      const operationSpec = operationInfo?.operationSpec;\n      const operationArguments = operationInfo?.operationArguments;\n      if (operationSpec && operationArguments) {\n        serializeHeaders(request, operationArguments, operationSpec);\n        serializeRequestBody(request, operationArguments, operationSpec, stringifyXML);\n      }\n      return next(request);\n    },\n  };\n}\n\n/**\n * @internal\n */\nexport function serializeHeaders(\n  request: OperationRequest,\n  operationArguments: OperationArguments,\n  operationSpec: OperationSpec,\n): void {\n  if (operationSpec.headerParameters) {\n    for (const headerParameter of operationSpec.headerParameters) {\n      let headerValue = getOperationArgumentValueFromParameter(operationArguments, headerParameter);\n      if ((headerValue !== null && headerValue !== undefined) || headerParameter.mapper.required) {\n        headerValue = operationSpec.serializer.serialize(\n          headerParameter.mapper,\n          headerValue,\n          getPathStringFromParameter(headerParameter),\n        );\n        const headerCollectionPrefix = (headerParameter.mapper as DictionaryMapper)\n          .headerCollectionPrefix;\n        if (headerCollectionPrefix) {\n          for (const key of Object.keys(headerValue)) {\n            request.headers.set(headerCollectionPrefix + key, headerValue[key]);\n          }\n        } else {\n          request.headers.set(\n            headerParameter.mapper.serializedName || getPathStringFromParameter(headerParameter),\n            headerValue,\n          );\n        }\n      }\n    }\n  }\n  const customHeaders = operationArguments.options?.requestOptions?.customHeaders;\n  if (customHeaders) {\n    for (const customHeaderName of Object.keys(customHeaders)) {\n      request.headers.set(customHeaderName, customHeaders[customHeaderName]);\n    }\n  }\n}\n\n/**\n * @internal\n */\nexport function serializeRequestBody(\n  request: OperationRequest,\n  operationArguments: OperationArguments,\n  operationSpec: OperationSpec,\n  stringifyXML: (obj: any, opts?: XmlOptions) => string = function () {\n    throw new Error(\"XML serialization unsupported!\");\n  },\n): void {\n  const serializerOptions = operationArguments.options?.serializerOptions;\n  const updatedOptions: RequiredSerializerOptions = {\n    xml: {\n      rootName: serializerOptions?.xml.rootName ?? \"\",\n      includeRoot: serializerOptions?.xml.includeRoot ?? false,\n      xmlCharKey: serializerOptions?.xml.xmlCharKey ?? XML_CHARKEY,\n    },\n  };\n\n  const xmlCharKey = updatedOptions.xml.xmlCharKey;\n  if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n    request.body = getOperationArgumentValueFromParameter(\n      operationArguments,\n      operationSpec.requestBody,\n    );\n\n    const bodyMapper = operationSpec.requestBody.mapper;\n    const {\n      required,\n      serializedName,\n      xmlName,\n      xmlElementName,\n      xmlNamespace,\n      xmlNamespacePrefix,\n      nullable,\n    } = bodyMapper;\n    const typeName = bodyMapper.type.name;\n\n    try {\n      if (\n        (request.body !== undefined && request.body !== null) ||\n        (nullable && request.body === null) ||\n        required\n      ) {\n        const requestBodyParameterPathString: string = getPathStringFromParameter(\n          operationSpec.requestBody,\n        );\n        request.body = operationSpec.serializer.serialize(\n          bodyMapper,\n          request.body,\n          requestBodyParameterPathString,\n          updatedOptions,\n        );\n\n        const isStream = typeName === MapperTypeNames.Stream;\n\n        if (operationSpec.isXML) {\n          const xmlnsKey = xmlNamespacePrefix ? `xmlns:${xmlNamespacePrefix}` : \"xmlns\";\n          const value = getXmlValueWithNamespace(\n            xmlNamespace,\n            xmlnsKey,\n            typeName,\n            request.body,\n            updatedOptions,\n          );\n\n          if (typeName === MapperTypeNames.Sequence) {\n            request.body = stringifyXML(\n              prepareXMLRootList(\n                value,\n                xmlElementName || xmlName || serializedName!,\n                xmlnsKey,\n                xmlNamespace,\n              ),\n              { rootName: xmlName || serializedName, xmlCharKey },\n            );\n          } else if (!isStream) {\n            request.body = stringifyXML(value, {\n              rootName: xmlName || serializedName,\n              xmlCharKey,\n            });\n          }\n        } else if (\n          typeName === MapperTypeNames.String &&\n          (operationSpec.contentType?.match(\"text/plain\") || operationSpec.mediaType === \"text\")\n        ) {\n          // the String serializer has validated that request body is a string\n          // so just send the string.\n          return;\n        } else if (!isStream) {\n          request.body = JSON.stringify(request.body);\n        }\n      }\n    } catch (error: any) {\n      throw new Error(\n        `Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(\n          serializedName,\n          undefined,\n          \"  \",\n        )}.`,\n      );\n    }\n  } else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n    request.formData = {};\n    for (const formDataParameter of operationSpec.formDataParameters) {\n      const formDataParameterValue = getOperationArgumentValueFromParameter(\n        operationArguments,\n        formDataParameter,\n      );\n      if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n        const formDataParameterPropertyName: string =\n          formDataParameter.mapper.serializedName || getPathStringFromParameter(formDataParameter);\n        request.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(\n          formDataParameter.mapper,\n          formDataParameterValue,\n          getPathStringFromParameter(formDataParameter),\n          updatedOptions,\n        );\n      }\n    }\n  }\n}\n\n/**\n * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself\n */\nfunction getXmlValueWithNamespace(\n  xmlNamespace: string | undefined,\n  xmlnsKey: string,\n  typeName: string,\n  serializedValue: any,\n  options: RequiredSerializerOptions,\n): any {\n  // Composite and Sequence schemas already got their root namespace set during serialization\n  // We just need to add xmlns to the other schema types\n  if (xmlNamespace && ![\"Composite\", \"Sequence\", \"Dictionary\"].includes(typeName)) {\n    const result: any = {};\n    result[options.xml.xmlCharKey] = serializedValue;\n    result[XML_ATTRKEY] = { [xmlnsKey]: xmlNamespace };\n    return result;\n  }\n\n  return serializedValue;\n}\n\nfunction prepareXMLRootList(\n  obj: any,\n  elementName: string,\n  xmlNamespaceKey?: string,\n  xmlNamespace?: string,\n): { [key: string]: any[] } {\n  if (!Array.isArray(obj)) {\n    obj = [obj];\n  }\n  if (!xmlNamespaceKey || !xmlNamespace) {\n    return { [elementName]: obj };\n  }\n\n  const result = { [elementName]: obj };\n  result[XML_ATTRKEY] = { [xmlNamespaceKey]: xmlNamespace };\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { DeserializationPolicyOptions, deserializationPolicy } from \"./deserializationPolicy.js\";\nimport {\n  InternalPipelineOptions,\n  Pipeline,\n  bearerTokenAuthenticationPolicy,\n  createPipelineFromOptions,\n} from \"@azure/core-rest-pipeline\";\nimport { SerializationPolicyOptions, serializationPolicy } from \"./serializationPolicy.js\";\nimport { TokenCredential } from \"@azure/core-auth\";\n\n/**\n * Options for creating a Pipeline to use with ServiceClient.\n * Mostly for customizing the auth policy (if using token auth) or\n * the deserialization options when using XML.\n */\nexport interface InternalClientPipelineOptions extends InternalPipelineOptions {\n  /**\n   * Options to customize bearerTokenAuthenticationPolicy.\n   */\n  credentialOptions?: { credentialScopes: string | string[]; credential: TokenCredential };\n  /**\n   * Options to customize deserializationPolicy.\n   */\n  deserializationOptions?: DeserializationPolicyOptions;\n  /**\n   * Options to customize serializationPolicy.\n   */\n  serializationOptions?: SerializationPolicyOptions;\n}\n\n/**\n * Creates a new Pipeline for use with a Service Client.\n * Adds in deserializationPolicy by default.\n * Also adds in bearerTokenAuthenticationPolicy if passed a TokenCredential.\n * @param options - Options to customize the created pipeline.\n */\nexport function createClientPipeline(options: InternalClientPipelineOptions = {}): Pipeline {\n  const pipeline = createPipelineFromOptions(options ?? {});\n  if (options.credentialOptions) {\n    pipeline.addPolicy(\n      bearerTokenAuthenticationPolicy({\n        credential: options.credentialOptions.credential,\n        scopes: options.credentialOptions.credentialScopes,\n      }),\n    );\n  }\n\n  pipeline.addPolicy(serializationPolicy(options.serializationOptions), { phase: \"Serialize\" });\n  pipeline.addPolicy(deserializationPolicy(options.deserializationOptions), {\n    phase: \"Deserialize\",\n  });\n\n  return pipeline;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpClient, createDefaultHttpClient } from \"@azure/core-rest-pipeline\";\n\nlet cachedHttpClient: HttpClient | undefined;\n\nexport function getCachedDefaultHttpClient(): HttpClient {\n  if (!cachedHttpClient) {\n    cachedHttpClient = createDefaultHttpClient();\n  }\n\n  return cachedHttpClient;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationArguments, OperationSpec, QueryCollectionFormat } from \"./interfaces.js\";\nimport { getOperationArgumentValueFromParameter } from \"./operationHelpers.js\";\nimport { getPathStringFromParameter } from \"./interfaceHelpers.js\";\n\nconst CollectionFormatToDelimiterMap: { [key in QueryCollectionFormat]: string } = {\n  CSV: \",\",\n  SSV: \" \",\n  Multi: \"Multi\",\n  TSV: \"\\t\",\n  Pipes: \"|\",\n};\n\nexport function getRequestUrl(\n  baseUri: string,\n  operationSpec: OperationSpec,\n  operationArguments: OperationArguments,\n  fallbackObject: { [parameterName: string]: any },\n): string {\n  const urlReplacements = calculateUrlReplacements(\n    operationSpec,\n    operationArguments,\n    fallbackObject,\n  );\n\n  let isAbsolutePath = false;\n\n  let requestUrl = replaceAll(baseUri, urlReplacements);\n  if (operationSpec.path) {\n    let path = replaceAll(operationSpec.path, urlReplacements);\n    // QUIRK: sometimes we get a path component like /{nextLink}\n    // which may be a fully formed URL with a leading /. In that case, we should\n    // remove the leading /\n    if (operationSpec.path === \"/{nextLink}\" && path.startsWith(\"/\")) {\n      path = path.substring(1);\n    }\n    // QUIRK: sometimes we get a path component like {nextLink}\n    // which may be a fully formed URL. In that case, we should\n    // ignore the baseUri.\n    if (isAbsoluteUrl(path)) {\n      requestUrl = path;\n      isAbsolutePath = true;\n    } else {\n      requestUrl = appendPath(requestUrl, path);\n    }\n  }\n\n  const { queryParams, sequenceParams } = calculateQueryParameters(\n    operationSpec,\n    operationArguments,\n    fallbackObject,\n  );\n  /**\n   * Notice that this call sets the `noOverwrite` parameter to true if the `requestUrl`\n   * is an absolute path. This ensures that existing query parameter values in `requestUrl`\n   * do not get overwritten. On the other hand when `requestUrl` is not absolute path, it\n   * is still being built so there is nothing to overwrite.\n   */\n  requestUrl = appendQueryParams(requestUrl, queryParams, sequenceParams, isAbsolutePath);\n\n  return requestUrl;\n}\n\nfunction replaceAll(input: string, replacements: Map<string, string>): string {\n  let result = input;\n  for (const [searchValue, replaceValue] of replacements) {\n    result = result.split(searchValue).join(replaceValue);\n  }\n  return result;\n}\n\nfunction calculateUrlReplacements(\n  operationSpec: OperationSpec,\n  operationArguments: OperationArguments,\n  fallbackObject: { [parameterName: string]: any },\n): Map<string, string> {\n  const result = new Map<string, string>();\n  if (operationSpec.urlParameters?.length) {\n    for (const urlParameter of operationSpec.urlParameters) {\n      let urlParameterValue: string = getOperationArgumentValueFromParameter(\n        operationArguments,\n        urlParameter,\n        fallbackObject,\n      );\n      const parameterPathString = getPathStringFromParameter(urlParameter);\n      urlParameterValue = operationSpec.serializer.serialize(\n        urlParameter.mapper,\n        urlParameterValue,\n        parameterPathString,\n      );\n      if (!urlParameter.skipEncoding) {\n        urlParameterValue = encodeURIComponent(urlParameterValue);\n      }\n      result.set(\n        `{${urlParameter.mapper.serializedName || parameterPathString}}`,\n        urlParameterValue,\n      );\n    }\n  }\n  return result;\n}\n\nfunction isAbsoluteUrl(url: string): boolean {\n  return url.includes(\"://\");\n}\n\nfunction appendPath(url: string, pathToAppend?: string): string {\n  if (!pathToAppend) {\n    return url;\n  }\n\n  const parsedUrl = new URL(url);\n  let newPath = parsedUrl.pathname;\n\n  if (!newPath.endsWith(\"/\")) {\n    newPath = `${newPath}/`;\n  }\n\n  if (pathToAppend.startsWith(\"/\")) {\n    pathToAppend = pathToAppend.substring(1);\n  }\n\n  const searchStart = pathToAppend.indexOf(\"?\");\n  if (searchStart !== -1) {\n    const path = pathToAppend.substring(0, searchStart);\n    const search = pathToAppend.substring(searchStart + 1);\n    newPath = newPath + path;\n    if (search) {\n      parsedUrl.search = parsedUrl.search ? `${parsedUrl.search}&${search}` : search;\n    }\n  } else {\n    newPath = newPath + pathToAppend;\n  }\n\n  parsedUrl.pathname = newPath;\n\n  return parsedUrl.toString();\n}\n\nfunction calculateQueryParameters(\n  operationSpec: OperationSpec,\n  operationArguments: OperationArguments,\n  fallbackObject: { [parameterName: string]: any },\n): {\n  queryParams: Map<string, string | string[]>;\n  sequenceParams: Set<string>;\n} {\n  const result = new Map<string, string | string[]>();\n  const sequenceParams: Set<string> = new Set<string>();\n\n  if (operationSpec.queryParameters?.length) {\n    for (const queryParameter of operationSpec.queryParameters) {\n      if (queryParameter.mapper.type.name === \"Sequence\" && queryParameter.mapper.serializedName) {\n        sequenceParams.add(queryParameter.mapper.serializedName);\n      }\n      let queryParameterValue: string | string[] = getOperationArgumentValueFromParameter(\n        operationArguments,\n        queryParameter,\n        fallbackObject,\n      );\n      if (\n        (queryParameterValue !== undefined && queryParameterValue !== null) ||\n        queryParameter.mapper.required\n      ) {\n        queryParameterValue = operationSpec.serializer.serialize(\n          queryParameter.mapper,\n          queryParameterValue,\n          getPathStringFromParameter(queryParameter),\n        );\n\n        const delimiter = queryParameter.collectionFormat\n          ? CollectionFormatToDelimiterMap[queryParameter.collectionFormat]\n          : \"\";\n        if (Array.isArray(queryParameterValue)) {\n          // replace null and undefined\n          queryParameterValue = queryParameterValue.map((item) => {\n            if (item === null || item === undefined) {\n              return \"\";\n            }\n\n            return item;\n          });\n        }\n        if (queryParameter.collectionFormat === \"Multi\" && queryParameterValue.length === 0) {\n          continue;\n        } else if (\n          Array.isArray(queryParameterValue) &&\n          (queryParameter.collectionFormat === \"SSV\" || queryParameter.collectionFormat === \"TSV\")\n        ) {\n          queryParameterValue = queryParameterValue.join(delimiter);\n        }\n        if (!queryParameter.skipEncoding) {\n          if (Array.isArray(queryParameterValue)) {\n            queryParameterValue = queryParameterValue.map((item: string) => {\n              return encodeURIComponent(item);\n            });\n          } else {\n            queryParameterValue = encodeURIComponent(queryParameterValue);\n          }\n        }\n\n        // Join pipes and CSV *after* encoding, or the server will be upset.\n        if (\n          Array.isArray(queryParameterValue) &&\n          (queryParameter.collectionFormat === \"CSV\" || queryParameter.collectionFormat === \"Pipes\")\n        ) {\n          queryParameterValue = queryParameterValue.join(delimiter);\n        }\n\n        result.set(\n          queryParameter.mapper.serializedName || getPathStringFromParameter(queryParameter),\n          queryParameterValue,\n        );\n      }\n    }\n  }\n  return {\n    queryParams: result,\n    sequenceParams,\n  };\n}\n\nfunction simpleParseQueryParams(queryString: string): Map<string, string | string[] | undefined> {\n  const result: Map<string, string | string[] | undefined> = new Map<\n    string,\n    string | string[] | undefined\n  >();\n  if (!queryString || queryString[0] !== \"?\") {\n    return result;\n  }\n\n  // remove the leading ?\n  queryString = queryString.slice(1);\n  const pairs = queryString.split(\"&\");\n\n  for (const pair of pairs) {\n    const [name, value] = pair.split(\"=\", 2);\n    const existingValue = result.get(name);\n    if (existingValue) {\n      if (Array.isArray(existingValue)) {\n        existingValue.push(value);\n      } else {\n        result.set(name, [existingValue, value]);\n      }\n    } else {\n      result.set(name, value);\n    }\n  }\n\n  return result;\n}\n\n/** @internal */\nexport function appendQueryParams(\n  url: string,\n  queryParams: Map<string, string | string[]>,\n  sequenceParams: Set<string>,\n  noOverwrite: boolean = false,\n): string {\n  if (queryParams.size === 0) {\n    return url;\n  }\n\n  const parsedUrl = new URL(url);\n\n  // QUIRK: parsedUrl.searchParams will have their name/value pairs decoded, which\n  // can change their meaning to the server, such as in the case of a SAS signature.\n  // To avoid accidentally un-encoding a query param, we parse the key/values ourselves\n  const combinedParams = simpleParseQueryParams(parsedUrl.search);\n\n  for (const [name, value] of queryParams) {\n    const existingValue = combinedParams.get(name);\n    if (Array.isArray(existingValue)) {\n      if (Array.isArray(value)) {\n        existingValue.push(...value);\n        const valueSet = new Set(existingValue);\n        combinedParams.set(name, Array.from(valueSet));\n      } else {\n        existingValue.push(value);\n      }\n    } else if (existingValue) {\n      if (Array.isArray(value)) {\n        value.unshift(existingValue);\n      } else if (sequenceParams.has(name)) {\n        combinedParams.set(name, [existingValue, value]);\n      }\n      if (!noOverwrite) {\n        combinedParams.set(name, value);\n      }\n    } else {\n      combinedParams.set(name, value);\n    }\n  }\n\n  const searchPieces: string[] = [];\n  for (const [name, value] of combinedParams) {\n    if (typeof value === \"string\") {\n      searchPieces.push(`${name}=${value}`);\n    } else if (Array.isArray(value)) {\n      // QUIRK: If we get an array of values, include multiple key/value pairs\n      for (const subValue of value) {\n        searchPieces.push(`${name}=${subValue}`);\n      }\n    } else {\n      searchPieces.push(`${name}=${value}`);\n    }\n  }\n\n  // QUIRK: we have to set search manually as searchParams will encode comma when it shouldn't.\n  parsedUrl.search = searchPieces.length ? `?${searchPieces.join(\"&\")}` : \"\";\n  return parsedUrl.toString();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-client\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  CommonClientOptions,\n  OperationArguments,\n  OperationRequest,\n  OperationSpec,\n} from \"./interfaces.js\";\nimport {\n  HttpClient,\n  Pipeline,\n  PipelineRequest,\n  PipelineResponse,\n  createPipelineRequest,\n} from \"@azure/core-rest-pipeline\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport { createClientPipeline } from \"./pipeline.js\";\nimport { flattenResponse } from \"./utils.js\";\nimport { getCachedDefaultHttpClient } from \"./httpClientCache.js\";\nimport { getOperationRequestInfo } from \"./operationHelpers.js\";\nimport { getRequestUrl } from \"./urlHelpers.js\";\nimport { getStreamingResponseStatusCodes } from \"./interfaceHelpers.js\";\nimport { logger } from \"./log.js\";\n\n/**\n * Options to be provided while creating the client.\n */\nexport interface ServiceClientOptions extends CommonClientOptions {\n  /**\n   * If specified, this is the base URI that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   * @deprecated This property is deprecated and will be removed soon, please use endpoint instead\n   */\n  baseUri?: string;\n  /**\n   * If specified, this is the endpoint that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   * to encourage customer to use endpoint, we mark the baseUri as deprecated.\n   */\n  endpoint?: string;\n  /**\n   * If specified, will be used to build the BearerTokenAuthenticationPolicy.\n   */\n  credentialScopes?: string | string[];\n  /**\n   * The default request content type for the service.\n   * Used if no requestContentType is present on an OperationSpec.\n   */\n  requestContentType?: string;\n  /**\n   * Credential used to authenticate the request.\n   */\n  credential?: TokenCredential;\n  /**\n   * A customized pipeline to use, otherwise a default one will be created.\n   */\n  pipeline?: Pipeline;\n}\n\n/**\n * Initializes a new instance of the ServiceClient.\n */\nexport class ServiceClient {\n  /**\n   * If specified, this is the base URI that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   */\n  private readonly _endpoint?: string;\n\n  /**\n   * The default request content type for the service.\n   * Used if no requestContentType is present on an OperationSpec.\n   */\n  private readonly _requestContentType?: string;\n\n  /**\n   * Set to true if the request is sent over HTTP instead of HTTPS\n   */\n  private readonly _allowInsecureConnection?: boolean;\n\n  /**\n   * The HTTP client that will be used to send requests.\n   */\n  private readonly _httpClient: HttpClient;\n\n  /**\n   * The pipeline used by this client to make requests\n   */\n  public readonly pipeline: Pipeline;\n\n  /**\n   * The ServiceClient constructor\n   * @param credential - The credentials used for authentication with the service.\n   * @param options - The service client options that govern the behavior of the client.\n   */\n  constructor(options: ServiceClientOptions = {}) {\n    this._requestContentType = options.requestContentType;\n    this._endpoint = options.endpoint ?? options.baseUri;\n    if (options.baseUri) {\n      logger.warning(\n        \"The baseUri option for SDK Clients has been deprecated, please use endpoint instead.\",\n      );\n    }\n    this._allowInsecureConnection = options.allowInsecureConnection;\n    this._httpClient = options.httpClient || getCachedDefaultHttpClient();\n\n    this.pipeline = options.pipeline || createDefaultPipeline(options);\n    if (options.additionalPolicies?.length) {\n      for (const { policy, position } of options.additionalPolicies) {\n        // Sign happens after Retry and is commonly needed to occur\n        // before policies that intercept post-retry.\n        const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n        this.pipeline.addPolicy(policy, {\n          afterPhase,\n        });\n      }\n    }\n  }\n\n  /**\n   * Send the provided httpRequest.\n   */\n  async sendRequest(request: PipelineRequest): Promise<PipelineResponse> {\n    return this.pipeline.sendRequest(this._httpClient, request);\n  }\n\n  /**\n   * Send an HTTP request that is populated using the provided OperationSpec.\n   * @typeParam T - The typed result of the request, based on the OperationSpec.\n   * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.\n   * @param operationSpec - The OperationSpec to use to populate the httpRequest.\n   */\n  async sendOperationRequest<T>(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<T> {\n    const endpoint: string | undefined = operationSpec.baseUrl || this._endpoint;\n    if (!endpoint) {\n      throw new Error(\n        \"If operationSpec.baseUrl is not specified, then the ServiceClient must have a endpoint string property that contains the base URL to use.\",\n      );\n    }\n\n    // Templatized URLs sometimes reference properties on the ServiceClient child class,\n    // so we have to pass `this` below in order to search these properties if they're\n    // not part of OperationArguments\n    const url = getRequestUrl(endpoint, operationSpec, operationArguments, this);\n\n    const request: OperationRequest = createPipelineRequest({\n      url,\n    });\n    request.method = operationSpec.httpMethod;\n    const operationInfo = getOperationRequestInfo(request);\n    operationInfo.operationSpec = operationSpec;\n    operationInfo.operationArguments = operationArguments;\n\n    const contentType = operationSpec.contentType || this._requestContentType;\n    if (contentType && operationSpec.requestBody) {\n      request.headers.set(\"Content-Type\", contentType);\n    }\n\n    const options = operationArguments.options;\n    if (options) {\n      const requestOptions = options.requestOptions;\n\n      if (requestOptions) {\n        if (requestOptions.timeout) {\n          request.timeout = requestOptions.timeout;\n        }\n\n        if (requestOptions.onUploadProgress) {\n          request.onUploadProgress = requestOptions.onUploadProgress;\n        }\n\n        if (requestOptions.onDownloadProgress) {\n          request.onDownloadProgress = requestOptions.onDownloadProgress;\n        }\n\n        if (requestOptions.shouldDeserialize !== undefined) {\n          operationInfo.shouldDeserialize = requestOptions.shouldDeserialize;\n        }\n\n        if (requestOptions.allowInsecureConnection) {\n          request.allowInsecureConnection = true;\n        }\n      }\n\n      if (options.abortSignal) {\n        request.abortSignal = options.abortSignal;\n      }\n\n      if (options.tracingOptions) {\n        request.tracingOptions = options.tracingOptions;\n      }\n    }\n\n    if (this._allowInsecureConnection) {\n      request.allowInsecureConnection = true;\n    }\n\n    if (request.streamResponseStatusCodes === undefined) {\n      request.streamResponseStatusCodes = getStreamingResponseStatusCodes(operationSpec);\n    }\n\n    try {\n      const rawResponse = await this.sendRequest(request);\n      const flatResponse = flattenResponse(\n        rawResponse,\n        operationSpec.responses[rawResponse.status],\n      ) as T;\n      if (options?.onResponse) {\n        options.onResponse(rawResponse, flatResponse);\n      }\n      return flatResponse;\n    } catch (error: any) {\n      if (typeof error === \"object\" && error?.response) {\n        const rawResponse = error.response;\n        const flatResponse = flattenResponse(\n          rawResponse,\n          operationSpec.responses[error.statusCode] || operationSpec.responses[\"default\"],\n        );\n        error.details = flatResponse;\n        if (options?.onResponse) {\n          options.onResponse(rawResponse, flatResponse, error);\n        }\n      }\n      throw error;\n    }\n  }\n}\n\nfunction createDefaultPipeline(options: ServiceClientOptions): Pipeline {\n  const credentialScopes = getCredentialScopes(options);\n  const credentialOptions =\n    options.credential && credentialScopes\n      ? { credentialScopes, credential: options.credential }\n      : undefined;\n\n  return createClientPipeline({\n    ...options,\n    credentialOptions,\n  });\n}\n\nfunction getCredentialScopes(options: ServiceClientOptions): string | string[] | undefined {\n  if (options.credentialScopes) {\n    return options.credentialScopes;\n  }\n\n  if (options.endpoint) {\n    return `${options.endpoint}/.default`;\n  }\n\n  if (options.baseUri) {\n    return `${options.baseUri}/.default`;\n  }\n\n  if (options.credential && !options.credentialScopes) {\n    throw new Error(\n      `When using credentials, the ServiceClientOptions must contain either a endpoint or a credentialScopes. Unable to create a bearerTokenAuthenticationPolicy`,\n    );\n  }\n\n  return undefined;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  AuthorizeRequestOnChallengeOptions,\n  PipelineRequest,\n  PipelineResponse,\n} from \"@azure/core-rest-pipeline\";\n\nimport { GetTokenOptions } from \"@azure/core-auth\";\n\n/**\n * A set of constants used internally when processing requests.\n */\nconst Constants = {\n  DefaultScope: \"/.default\",\n  /**\n   * Defines constants for use with HTTP headers.\n   */\n  HeaderConstants: {\n    /**\n     * The Authorization header.\n     */\n    AUTHORIZATION: \"authorization\",\n  },\n};\n\nfunction isUuid(text: string): boolean {\n  return /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/.test(\n    text,\n  );\n}\n\n/**\n * Defines a callback to handle auth challenge for Storage APIs.\n * This implements the bearer challenge process described here: https://docs.microsoft.com/rest/api/storageservices/authorize-with-azure-active-directory#bearer-challenge\n * Handling has specific features for storage that departs to the general AAD challenge docs.\n **/\nexport const authorizeRequestOnTenantChallenge: (\n  challengeOptions: AuthorizeRequestOnChallengeOptions,\n) => Promise<boolean> = async (challengeOptions) => {\n  const requestOptions = requestToOptions(challengeOptions.request);\n  const challenge = getChallenge(challengeOptions.response);\n  if (challenge) {\n    const challengeInfo: Challenge = parseChallenge(challenge);\n    const challengeScopes = buildScopes(challengeOptions, challengeInfo);\n    const tenantId = extractTenantId(challengeInfo);\n    if (!tenantId) {\n      return false;\n    }\n    const accessToken = await challengeOptions.getAccessToken(challengeScopes, {\n      ...requestOptions,\n      tenantId,\n    });\n\n    if (!accessToken) {\n      return false;\n    }\n\n    challengeOptions.request.headers.set(\n      Constants.HeaderConstants.AUTHORIZATION,\n      `Bearer ${accessToken.token}`,\n    );\n    return true;\n  }\n  return false;\n};\n\n/**\n * Extracts the tenant id from the challenge information\n * The tenant id is contained in the authorization_uri as the first\n * path part.\n */\nfunction extractTenantId(challengeInfo: Challenge): string | undefined {\n  const parsedAuthUri = new URL(challengeInfo.authorization_uri);\n  const pathSegments = parsedAuthUri.pathname.split(\"/\");\n  const tenantId = pathSegments[1];\n  if (tenantId && isUuid(tenantId)) {\n    return tenantId;\n  }\n  return undefined;\n}\n\n/**\n * Builds the authentication scopes based on the information that comes in the\n * challenge information. Scopes url is present in the resource_id, if it is empty\n * we keep using the original scopes.\n */\nfunction buildScopes(\n  challengeOptions: AuthorizeRequestOnChallengeOptions,\n  challengeInfo: Challenge,\n): string[] {\n  if (!challengeInfo.resource_id) {\n    return challengeOptions.scopes;\n  }\n\n  const challengeScopes = new URL(challengeInfo.resource_id);\n  challengeScopes.pathname = Constants.DefaultScope;\n  let scope = challengeScopes.toString();\n  if (scope === \"https://disk.azure.com/.default\") {\n    // the extra slash is required by the service\n    scope = \"https://disk.azure.com//.default\";\n  }\n  return [scope];\n}\n\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction getChallenge(response: PipelineResponse): string | undefined {\n  const challenge = response.headers.get(\"WWW-Authenticate\");\n  if (response.status === 401 && challenge) {\n    return challenge;\n  }\n  return;\n}\n\n/**\n * Challenge structure\n */\ninterface Challenge {\n  authorization_uri: string;\n  resource_id?: string;\n}\n\n/**\n * Converts: `Bearer a=\"b\" c=\"d\"`.\n * Into: `[ { a: 'b', c: 'd' }]`.\n *\n * @internal\n */\nfunction parseChallenge(challenge: string): Challenge {\n  const bearerChallenge = challenge.slice(\"Bearer \".length);\n  const challengeParts = `${bearerChallenge.trim()} `.split(\" \").filter((x) => x);\n  const keyValuePairs = challengeParts.map((keyValue) =>\n    (([key, value]) => ({ [key]: value }))(keyValue.trim().split(\"=\")),\n  );\n  // Key-value pairs to plain object:\n  return keyValuePairs.reduce((a, b) => ({ ...a, ...b }), {} as Challenge);\n}\n\n/**\n * Extracts the options form a Pipeline Request for later re-use\n */\nfunction requestToOptions(request: PipelineRequest): GetTokenOptions {\n  return {\n    abortSignal: request.abortSignal,\n    requestOptions: {\n      timeout: request.timeout,\n    },\n    tracingOptions: request.tracingOptions,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpMethods, ProxySettings } from \"@azure/core-rest-pipeline\";\nimport { createHttpHeaders, createPipelineRequest } from \"@azure/core-rest-pipeline\";\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { HttpHeaders as HttpHeadersV2, PipelineRequest } from \"@azure/core-rest-pipeline\";\n\n// We use a custom symbol to cache a reference to the original request without\n// exposing it on the public interface.\nconst originalRequestSymbol = Symbol(\"Original PipelineRequest\");\ntype CompatWebResourceLike = WebResourceLike & { [originalRequestSymbol]?: PipelineRequest };\n// Symbol.for() will return the same symbol if it's already been created\n// This particular one is used in core-client to handle the case of when a request is\n// cloned but we need to retrieve the OperationSpec and OperationArguments from the\n// original request.\nconst originalClientRequestSymbol = Symbol.for(\"@azure/core-client original request\");\ntype PipelineRequestWithOriginal = PipelineRequest & {\n  [originalClientRequestSymbol]?: PipelineRequest;\n};\n\nexport function toPipelineRequest(\n  webResource: WebResourceLike,\n  options: {\n    originalRequest?: PipelineRequest;\n  } = {},\n): PipelineRequest {\n  const compatWebResource = webResource as CompatWebResourceLike;\n  const request = compatWebResource[originalRequestSymbol];\n  const headers = createHttpHeaders(webResource.headers.toJson({ preserveCase: true }));\n  if (request) {\n    request.headers = headers;\n    return request;\n  } else {\n    const newRequest = createPipelineRequest({\n      url: webResource.url,\n      method: webResource.method,\n      headers,\n      withCredentials: webResource.withCredentials,\n      timeout: webResource.timeout,\n      requestId: webResource.requestId,\n      abortSignal: webResource.abortSignal,\n      body: webResource.body,\n      formData: webResource.formData,\n      disableKeepAlive: !!webResource.keepAlive,\n      onDownloadProgress: webResource.onDownloadProgress,\n      onUploadProgress: webResource.onUploadProgress,\n      proxySettings: webResource.proxySettings,\n      streamResponseStatusCodes: webResource.streamResponseStatusCodes,\n      agent: webResource.agent,\n    });\n    if (options.originalRequest) {\n      (newRequest as PipelineRequestWithOriginal)[originalClientRequestSymbol] =\n        options.originalRequest;\n    }\n    return newRequest;\n  }\n}\n\nexport function toWebResourceLike(\n  request: PipelineRequest,\n  options?: { createProxy?: boolean; originalRequest?: PipelineRequest },\n): WebResourceLike {\n  const originalRequest = options?.originalRequest ?? request;\n  const webResource: WebResourceLike = {\n    url: request.url,\n    method: request.method,\n    headers: toHttpHeadersLike(request.headers),\n    withCredentials: request.withCredentials,\n    timeout: request.timeout,\n    requestId: request.headers.get(\"x-ms-client-request-id\") || request.requestId,\n    abortSignal: request.abortSignal,\n    body: request.body,\n    formData: request.formData,\n    keepAlive: !!request.disableKeepAlive,\n    onDownloadProgress: request.onDownloadProgress,\n    onUploadProgress: request.onUploadProgress,\n    proxySettings: request.proxySettings,\n    streamResponseStatusCodes: request.streamResponseStatusCodes,\n    agent: request.agent,\n    clone(): WebResourceLike {\n      throw new Error(\"Cannot clone a non-proxied WebResourceLike\");\n    },\n    prepare(): WebResourceLike {\n      throw new Error(\"WebResourceLike.prepare() is not supported by @azure/core-http-compat\");\n    },\n    validateRequestProperties(): void {\n      /** do nothing */\n    },\n  };\n\n  if (options?.createProxy) {\n    return new Proxy(webResource, {\n      get(target, prop, receiver) {\n        if (prop === originalRequestSymbol) {\n          return request;\n        } else if (prop === \"clone\") {\n          return () => {\n            return toWebResourceLike(toPipelineRequest(webResource, { originalRequest }), {\n              createProxy: true,\n              originalRequest,\n            });\n          };\n        }\n        return Reflect.get(target, prop, receiver);\n      },\n      set(target: any, prop, value, receiver) {\n        if (prop === \"keepAlive\") {\n          request.disableKeepAlive = !value;\n        }\n        const passThroughProps = [\n          \"url\",\n          \"method\",\n          \"withCredentials\",\n          \"timeout\",\n          \"requestId\",\n          \"abortSignal\",\n          \"body\",\n          \"formData\",\n          \"onDownloadProgress\",\n          \"onUploadProgress\",\n          \"proxySettings\",\n          \"streamResponseStatusCodes\",\n          \"agent\",\n        ];\n\n        if (typeof prop === \"string\" && passThroughProps.includes(prop)) {\n          (request as any)[prop] = value;\n        }\n\n        return Reflect.set(target, prop, value, receiver);\n      },\n    });\n  } else {\n    return webResource;\n  }\n}\n\n/**\n * Converts HttpHeaders from core-rest-pipeline to look like\n * HttpHeaders from core-http.\n * @param headers - HttpHeaders from core-rest-pipeline\n * @returns HttpHeaders as they looked in core-http\n */\nexport function toHttpHeadersLike(headers: HttpHeadersV2): HttpHeadersLike {\n  return new HttpHeaders(headers.toJSON({ preserveCase: true }));\n}\n\n/**\n * A collection of HttpHeaders that can be sent with a HTTP request.\n */\nfunction getHeaderKey(headerName: string): string {\n  return headerName.toLowerCase();\n}\n\n/**\n * An individual header within a HttpHeaders collection.\n */\nexport interface HttpHeader {\n  /**\n   * The name of the header.\n   */\n  name: string;\n\n  /**\n   * The value of the header.\n   */\n  value: string;\n}\n\n/**\n * A HttpHeaders collection represented as a simple JSON object.\n */\nexport type RawHttpHeaders = { [headerName: string]: string };\n\n/**\n * A collection of HTTP header key/value pairs.\n */\nexport interface HttpHeadersLike {\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param headerName - The name of the header to set. This value is case-insensitive.\n   * @param headerValue - The value of the header to set.\n   */\n  set(headerName: string, headerValue: string | number): void;\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param headerName - The name of the header.\n   */\n  get(headerName: string): string | undefined;\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   */\n  contains(headerName: string): boolean;\n  /**\n   * Remove the header with the provided headerName. Return whether or not the header existed and\n   * was removed.\n   * @param headerName - The name of the header to remove.\n   */\n  remove(headerName: string): boolean;\n  /**\n   * Get the headers that are contained this collection as an object.\n   */\n  rawHeaders(): RawHttpHeaders;\n  /**\n   * Get the headers that are contained in this collection as an array.\n   */\n  headersArray(): HttpHeader[];\n  /**\n   * Get the header names that are contained in this collection.\n   */\n  headerNames(): string[];\n  /**\n   * Get the header values that are contained in this collection.\n   */\n  headerValues(): string[];\n  /**\n   * Create a deep clone/copy of this HttpHeaders collection.\n   */\n  clone(): HttpHeadersLike;\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   * The result is the same as `rawHeaders()`.\n   */\n  toJson(options?: { preserveCase?: boolean }): RawHttpHeaders;\n}\n\n/**\n * A collection of HTTP header key/value pairs.\n */\nexport class HttpHeaders implements HttpHeadersLike {\n  private readonly _headersMap: { [headerKey: string]: HttpHeader };\n\n  constructor(rawHeaders?: RawHttpHeaders) {\n    this._headersMap = {};\n    if (rawHeaders) {\n      for (const headerName in rawHeaders) {\n        this.set(headerName, rawHeaders[headerName]);\n      }\n    }\n  }\n\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param headerName - The name of the header to set. This value is case-insensitive.\n   * @param headerValue - The value of the header to set.\n   */\n  public set(headerName: string, headerValue: string | number): void {\n    this._headersMap[getHeaderKey(headerName)] = {\n      name: headerName,\n      value: headerValue.toString(),\n    };\n  }\n\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param headerName - The name of the header.\n   */\n  public get(headerName: string): string | undefined {\n    const header: HttpHeader = this._headersMap[getHeaderKey(headerName)];\n    return !header ? undefined : header.value;\n  }\n\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   */\n  public contains(headerName: string): boolean {\n    return !!this._headersMap[getHeaderKey(headerName)];\n  }\n\n  /**\n   * Remove the header with the provided headerName. Return whether or not the header existed and\n   * was removed.\n   * @param headerName - The name of the header to remove.\n   */\n  public remove(headerName: string): boolean {\n    const result: boolean = this.contains(headerName);\n    delete this._headersMap[getHeaderKey(headerName)];\n    return result;\n  }\n\n  /**\n   * Get the headers that are contained this collection as an object.\n   */\n  public rawHeaders(): RawHttpHeaders {\n    return this.toJson({ preserveCase: true });\n  }\n\n  /**\n   * Get the headers that are contained in this collection as an array.\n   */\n  public headersArray(): HttpHeader[] {\n    const headers: HttpHeader[] = [];\n    for (const headerKey in this._headersMap) {\n      headers.push(this._headersMap[headerKey]);\n    }\n    return headers;\n  }\n\n  /**\n   * Get the header names that are contained in this collection.\n   */\n  public headerNames(): string[] {\n    const headerNames: string[] = [];\n    const headers: HttpHeader[] = this.headersArray();\n    for (let i = 0; i < headers.length; ++i) {\n      headerNames.push(headers[i].name);\n    }\n    return headerNames;\n  }\n\n  /**\n   * Get the header values that are contained in this collection.\n   */\n  public headerValues(): string[] {\n    const headerValues: string[] = [];\n    const headers: HttpHeader[] = this.headersArray();\n    for (let i = 0; i < headers.length; ++i) {\n      headerValues.push(headers[i].value);\n    }\n    return headerValues;\n  }\n\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   */\n  public toJson(options: { preserveCase?: boolean } = {}): RawHttpHeaders {\n    const result: RawHttpHeaders = {};\n    if (options.preserveCase) {\n      for (const headerKey in this._headersMap) {\n        const header: HttpHeader = this._headersMap[headerKey];\n        result[header.name] = header.value;\n      }\n    } else {\n      for (const headerKey in this._headersMap) {\n        const header: HttpHeader = this._headersMap[headerKey];\n        result[getHeaderKey(header.name)] = header.value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Get the string representation of this HTTP header collection.\n   */\n  public toString(): string {\n    return JSON.stringify(this.toJson({ preserveCase: true }));\n  }\n\n  /**\n   * Create a deep clone/copy of this HttpHeaders collection.\n   */\n  public clone(): HttpHeaders {\n    const resultPreservingCasing: RawHttpHeaders = {};\n    for (const headerKey in this._headersMap) {\n      const header: HttpHeader = this._headersMap[headerKey];\n      resultPreservingCasing[header.name] = header.value;\n    }\n    return new HttpHeaders(resultPreservingCasing);\n  }\n}\n\n/**\n * An interface compatible with NodeJS's `http.Agent`.\n * We want to avoid publicly re-exporting the actual interface,\n * since it might vary across runtime versions.\n */\nexport interface Agent {\n  /**\n   * Destroy any sockets that are currently in use by the agent.\n   */\n  destroy(): void;\n  /**\n   * For agents with keepAlive enabled, this sets the maximum number of sockets that will be left open in the free state.\n   */\n  maxFreeSockets: number;\n  /**\n   * Determines how many concurrent sockets the agent can have open per origin.\n   */\n  maxSockets: number;\n  /**\n   * An object which contains queues of requests that have not yet been assigned to sockets.\n   */\n  requests: unknown;\n  /**\n   * An object which contains arrays of sockets currently in use by the agent.\n   */\n  sockets: unknown;\n}\n\n/**\n * A description of a HTTP request to be made to a remote server.\n */\nexport interface WebResourceLike {\n  /**\n   * The URL being accessed by the request.\n   */\n  url: string;\n  /**\n   * The HTTP method to use when making the request.\n   */\n  method: HttpMethods;\n  /**\n   * The HTTP body contents of the request.\n   */\n  body?: any;\n  /**\n   * The HTTP headers to use when making the request.\n   */\n  headers: HttpHeadersLike;\n  /**\n   * Whether or not the body of the HttpOperationResponse should be treated as a stream.\n   * @deprecated Use streamResponseStatusCodes property instead.\n   */\n  streamResponseBody?: boolean;\n  /**\n   * A list of response status codes whose corresponding HttpOperationResponse body should be treated as a stream.\n   */\n  streamResponseStatusCodes?: Set<number>;\n  /**\n   * Form data, used to build the request body.\n   */\n  formData?: any;\n  /**\n   * A query string represented as an object.\n   */\n  query?: { [key: string]: any };\n  /**\n   * If credentials (cookies) should be sent along during an XHR.\n   */\n  withCredentials: boolean;\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   */\n  timeout: number;\n  /**\n   * Proxy configuration.\n   */\n  proxySettings?: ProxySettings;\n  /**\n   * If the connection should be reused.\n   */\n  keepAlive?: boolean;\n  /**\n   * Whether or not to decompress response according to Accept-Encoding header (node-fetch only)\n   */\n  decompressResponse?: boolean;\n  /**\n   * A unique identifier for the request. Used for logging and tracing.\n   */\n  requestId: string;\n\n  /**\n   * Signal of an abort controller. Can be used to abort both sending a network request and waiting for a response.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * NODEJS ONLY\n   *\n   * A Node-only option to provide a custom `http.Agent`/`https.Agent`.\n   * NOTE: usually this should be one instance shared by multiple requests so that the underlying\n   *       connection to the service can be reused.\n   * Does nothing when running in the browser.\n   */\n  agent?: Agent;\n\n  /**\n   * Clone this request object.\n   */\n  clone(): WebResourceLike;\n\n  /**\n   * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n   * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n   * mentioned properties are not defined.\n   * Note: this a no-op for compat purposes.\n   */\n  validateRequestProperties(): void;\n\n  /**\n   * This is a no-op for compat purposes and will throw if called.\n   */\n  prepare(options: unknown): WebResourceLike;\n}\n\n/**\n * Fired in response to upload or download progress.\n */\nexport type TransferProgressEvent = {\n  /**\n   * The number of bytes loaded so far.\n   */\n  loadedBytes: number;\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { FullOperationResponse } from \"@azure/core-client\";\nimport type { PipelineResponse } from \"@azure/core-rest-pipeline\";\nimport { createHttpHeaders } from \"@azure/core-rest-pipeline\";\nimport type { HttpHeadersLike, WebResourceLike } from \"./util.js\";\nimport { toHttpHeadersLike, toPipelineRequest, toWebResourceLike } from \"./util.js\";\n/**\n * Http Response that is compatible with the core-v1(core-http).\n */\nexport interface CompatResponse extends Omit<FullOperationResponse, \"request\" | \"headers\"> {\n  /**\n   * A description of a HTTP request to be made to a remote server.\n   */\n  request: WebResourceLike;\n  /**\n   * A collection of HTTP header key/value pairs.\n   */\n  headers: HttpHeadersLike;\n}\n\nconst originalResponse = Symbol(\"Original FullOperationResponse\");\ntype ExtendedCompatResponse = CompatResponse & { [originalResponse]?: FullOperationResponse };\n\n/**\n * A helper to convert response objects from the new pipeline back to the old one.\n * @param response - A response object from core-client.\n * @returns A response compatible with `HttpOperationResponse` from core-http.\n */\nexport function toCompatResponse(\n  response: FullOperationResponse,\n  options?: { createProxy?: boolean },\n): CompatResponse {\n  let request = toWebResourceLike(response.request);\n  let headers = toHttpHeadersLike(response.headers);\n  if (options?.createProxy) {\n    return new Proxy(response, {\n      get(target, prop, receiver) {\n        if (prop === \"headers\") {\n          return headers;\n        } else if (prop === \"request\") {\n          return request;\n        } else if (prop === originalResponse) {\n          return response;\n        }\n        return Reflect.get(target, prop, receiver);\n      },\n      set(target, prop, value, receiver) {\n        if (prop === \"headers\") {\n          headers = value;\n        } else if (prop === \"request\") {\n          request = value;\n        }\n        return Reflect.set(target, prop, value, receiver);\n      },\n    }) as unknown as CompatResponse;\n  } else {\n    return {\n      ...response,\n      request,\n      headers,\n    };\n  }\n}\n\n/**\n * A helper to convert back to a PipelineResponse\n * @param compatResponse - A response compatible with `HttpOperationResponse` from core-http.\n */\nexport function toPipelineResponse(compatResponse: CompatResponse): PipelineResponse {\n  const extendedCompatResponse = compatResponse as ExtendedCompatResponse;\n  const response = extendedCompatResponse[originalResponse];\n  const headers = createHttpHeaders(compatResponse.headers.toJson({ preserveCase: true }));\n  if (response) {\n    response.headers = headers;\n    return response;\n  } else {\n    return {\n      ...compatResponse,\n      headers,\n      request: toPipelineRequest(compatResponse.request),\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { KeepAliveOptions } from \"./policies/keepAliveOptions.js\";\nimport {\n  createDisableKeepAlivePolicy,\n  pipelineContainsDisableKeepAlivePolicy,\n} from \"./policies/disableKeepAlivePolicy.js\";\nimport type { RedirectOptions } from \"./policies/redirectOptions.js\";\nimport { redirectPolicyName } from \"@azure/core-rest-pipeline\";\nimport type {\n  CommonClientOptions,\n  FullOperationResponse,\n  OperationArguments,\n  OperationSpec,\n  RawResponseCallback,\n  ServiceClientOptions,\n} from \"@azure/core-client\";\nimport { ServiceClient } from \"@azure/core-client\";\nimport { toCompatResponse } from \"./response.js\";\n\n/**\n * Options specific to Shim Clients.\n */\nexport interface ExtendedClientOptions {\n  /**\n   * Options to disable keep alive.\n   */\n  keepAliveOptions?: KeepAliveOptions;\n  /**\n   * Options to redirect requests.\n   */\n  redirectOptions?: RedirectOptions;\n}\n\n/**\n * Options that shim clients are expected to expose.\n */\nexport type ExtendedServiceClientOptions = ServiceClientOptions & ExtendedClientOptions;\n\n/**\n * The common set of options that custom shim clients are expected to expose.\n */\nexport type ExtendedCommonClientOptions = CommonClientOptions & ExtendedClientOptions;\n\n/**\n * Client to provide compatability between core V1 & V2.\n */\nexport class ExtendedServiceClient extends ServiceClient {\n  constructor(options: ExtendedServiceClientOptions) {\n    super(options);\n\n    if (\n      options.keepAliveOptions?.enable === false &&\n      !pipelineContainsDisableKeepAlivePolicy(this.pipeline)\n    ) {\n      this.pipeline.addPolicy(createDisableKeepAlivePolicy());\n    }\n\n    if (options.redirectOptions?.handleRedirects === false) {\n      this.pipeline.removePolicy({\n        name: redirectPolicyName,\n      });\n    }\n  }\n\n  /**\n   * Compatible send operation request function.\n   *\n   * @param operationArguments - Operation arguments\n   * @param operationSpec - Operation Spec\n   * @returns\n   */\n  async sendOperationRequest<T>(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<T> {\n    const userProvidedCallBack: RawResponseCallback | undefined =\n      operationArguments?.options?.onResponse;\n\n    let lastResponse: FullOperationResponse | undefined;\n\n    function onResponse(\n      rawResponse: FullOperationResponse,\n      flatResponse: unknown,\n      error?: unknown,\n    ): void {\n      lastResponse = rawResponse;\n      if (userProvidedCallBack) {\n        userProvidedCallBack(rawResponse, flatResponse, error);\n      }\n    }\n\n    operationArguments.options = {\n      ...operationArguments.options,\n      onResponse,\n    };\n\n    const result: T = await super.sendOperationRequest(operationArguments, operationSpec);\n\n    if (lastResponse) {\n      Object.defineProperty(result, \"_response\", {\n        value: toCompatResponse(lastResponse),\n      });\n    }\n\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport type { WebResourceLike } from \"../util.js\";\nimport { toPipelineRequest, toWebResourceLike } from \"../util.js\";\nimport type { CompatResponse } from \"../response.js\";\nimport { toCompatResponse, toPipelineResponse } from \"../response.js\";\n\n/**\n * A compatible interface for core-http request policies\n */\nexport interface RequestPolicy {\n  sendRequest(httpRequest: WebResourceLike): Promise<CompatResponse>;\n}\n\n/**\n * An enum for compatibility with RequestPolicy\n */\nexport enum HttpPipelineLogLevel {\n  ERROR = 1,\n  INFO = 3,\n  OFF = 0,\n  WARNING = 2,\n}\n\n/**\n * An interface for compatibility with RequestPolicy\n */\nexport interface RequestPolicyOptionsLike {\n  log(logLevel: HttpPipelineLogLevel, message: string): void;\n  shouldLog(logLevel: HttpPipelineLogLevel): boolean;\n}\n\nconst mockRequestPolicyOptions: RequestPolicyOptionsLike = {\n  log(_logLevel: HttpPipelineLogLevel, _message: string): void {\n    /* do nothing */\n  },\n  shouldLog(_logLevel: HttpPipelineLogLevel): boolean {\n    return false;\n  },\n};\n\n/**\n * An interface for compatibility with core-http's RequestPolicyFactory\n */\nexport interface RequestPolicyFactory {\n  create(nextPolicy: RequestPolicy, options: RequestPolicyOptionsLike): RequestPolicy;\n}\n\n/**\n * The name of the RequestPolicyFactoryPolicy\n */\nexport const requestPolicyFactoryPolicyName = \"RequestPolicyFactoryPolicy\";\n\n/**\n * A policy that wraps policies written for core-http.\n * @param factories - An array of `RequestPolicyFactory` objects from a core-http pipeline\n */\nexport function createRequestPolicyFactoryPolicy(\n  factories: RequestPolicyFactory[],\n): PipelinePolicy {\n  const orderedFactories = factories.slice().reverse();\n\n  return {\n    name: requestPolicyFactoryPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      let httpPipeline: RequestPolicy = {\n        async sendRequest(httpRequest) {\n          const response = await next(toPipelineRequest(httpRequest));\n          return toCompatResponse(response, { createProxy: true });\n        },\n      };\n      for (const factory of orderedFactories) {\n        httpPipeline = factory.create(httpPipeline, mockRequestPolicyOptions);\n      }\n\n      const webResourceLike = toWebResourceLike(request, { createProxy: true });\n      const response = await httpPipeline.sendRequest(webResourceLike);\n      return toPipelineResponse(response);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Default key used to access the XML attributes.\n */\nexport const XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nexport const XML_CHARKEY = \"_\";\n\n/**\n * Options to govern behavior of xml parser and builder.\n */\nexport interface XmlOptions {\n  /**\n   * indicates the name of the root element in the resulting XML when building XML.\n   */\n  rootName?: string;\n  /**\n   * indicates whether the root element is to be included or not in the output when parsing XML.\n   */\n  includeRoot?: boolean;\n  /**\n   * key used to access the XML value content when parsing XML.\n   */\n  xmlCharKey?: string;\n\n  /**\n   * property name for a CDATA section.\n   */\n  cdataPropName?: string;\n\n  /**\n   * XML nodes to exclude from parsing.\n   */\n  stopNodes?: string[];\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/// <reference lib=\"dom\"/>\nimport { XML_ATTRKEY, XML_CHARKEY, XmlOptions } from \"./xml.common.js\";\n\nif (!document || !DOMParser || !Node || !XMLSerializer) {\n  throw new Error(\n    `This library depends on the following DOM objects: [\"document\", \"DOMParser\", \"Node\", \"XMLSerializer\"] to parse XML, but some of these are undefined. You may provide a polyfill to make these globally available in order to support your environment. For more information, please refer to https://aka.ms/azsdk/js/web-workers. `,\n  );\n}\n\n// Policy to make our code Trusted Types compliant at running time.\n//   https://github.com/w3c/webappsec-trusted-types\n// We are calling DOMParser.parseFromString() to parse XML payload from Azure services.\n// The parsed DOM object is not exposed to outside. Scripts are disabled when parsing\n// according to the spec.  There are no HTML/XSS security concerns on the usage of\n// parseFromString() here.\nlet ttPolicy: Pick<TrustedTypePolicy, \"createHTML\"> | undefined;\ntry {\n  if (typeof self.trustedTypes !== \"undefined\") {\n    ttPolicy = self.trustedTypes.createPolicy(\"@azure/core-xml#xml.browser\", {\n      createHTML: (s: string) => s,\n    });\n  }\n} catch (e: any) {\n  console.warn('Could not create trusted types policy \"@azure/core-xml#xml.browser\"');\n}\n\nconst doc = document.implementation.createDocument(null, null, null);\n\nconst parser = new DOMParser();\nexport function parseXML(str: string, opts: XmlOptions = {}): Promise<any> {\n  try {\n    const updatedOptions: Required<XmlOptions> = {\n      rootName: opts.rootName ?? \"\",\n      includeRoot: opts.includeRoot ?? false,\n      xmlCharKey: opts.xmlCharKey ?? XML_CHARKEY,\n      cdataPropName: opts.cdataPropName ?? \"__cdata\",\n      stopNodes: opts.stopNodes ?? [],\n    };\n    const dom = parser.parseFromString(\n      (ttPolicy?.createHTML(str) ?? str) as string,\n      \"application/xml\",\n    );\n    throwIfError(dom);\n\n    let obj;\n    if (updatedOptions.includeRoot) {\n      obj = domToObject(dom, updatedOptions);\n    } else {\n      obj = domToObject(dom.childNodes[0], updatedOptions);\n    }\n\n    return Promise.resolve(obj);\n  } catch (err: any) {\n    return Promise.reject(err);\n  }\n}\n\nlet errorNS: string | undefined;\n\nfunction getErrorNamespace(): string {\n  if (errorNS === undefined) {\n    try {\n      const invalidXML = (ttPolicy?.createHTML(\"INVALID\") ?? \"INVALID\") as string;\n      errorNS =\n        parser.parseFromString(invalidXML, \"text/xml\").getElementsByTagName(\"parsererror\")[0]\n          .namespaceURI! ?? \"\";\n    } catch (ignored: any) {\n      // Most browsers will return a document containing <parsererror>, but IE will throw.\n      errorNS = \"\";\n    }\n  }\n\n  return errorNS;\n}\n\nfunction throwIfError(dom: Document): void {\n  const parserErrors = dom.getElementsByTagName(\"parsererror\");\n  if (parserErrors.length > 0 && getErrorNamespace()) {\n    for (let i = 0; i < parserErrors.length; i++) {\n      if (parserErrors[i].namespaceURI === errorNS) {\n        throw new Error(parserErrors[i].innerHTML);\n      }\n    }\n  }\n}\n\nfunction isElement(node: Node): node is Element {\n  return !!(node as Element).attributes;\n}\n\n/**\n * Get the Element-typed version of the provided Node if the provided node is an element with\n * attributes. If it isn't, then undefined is returned.\n */\nfunction asElementWithAttributes(node: Node): Element | undefined {\n  return isElement(node) && node.hasAttributes() ? node : undefined;\n}\n\nfunction domToObject(node: Node, options: Required<XmlOptions>): any {\n  let result: any = {};\n\n  const childNodeCount: number = node.childNodes.length;\n\n  const firstChildNode: Node = node.childNodes[0];\n  const onlyChildTextValue: string | undefined =\n    (firstChildNode &&\n      childNodeCount === 1 &&\n      firstChildNode.nodeType === Node.TEXT_NODE &&\n      firstChildNode.nodeValue) ||\n    undefined;\n\n  const elementWithAttributes: Element | undefined = asElementWithAttributes(node);\n  if (elementWithAttributes) {\n    result[XML_ATTRKEY] = {};\n\n    for (let i = 0; i < elementWithAttributes.attributes.length; i++) {\n      const attr = elementWithAttributes.attributes[i];\n      result[XML_ATTRKEY][attr.nodeName] = attr.nodeValue;\n    }\n\n    if (onlyChildTextValue) {\n      result[options.xmlCharKey] = onlyChildTextValue;\n    }\n  } else if (childNodeCount === 0) {\n    result = \"\";\n  } else if (onlyChildTextValue) {\n    result = onlyChildTextValue;\n  }\n\n  if (!onlyChildTextValue) {\n    for (let i = 0; i < childNodeCount; i++) {\n      const child = node.childNodes[i];\n\n      // Check if CData\n      if (child?.nodeType === Node.CDATA_SECTION_NODE) {\n        // Already in the CDATA\n        result = child.textContent;\n      } else if (child?.firstChild?.nodeType === Node.CDATA_SECTION_NODE) {\n        // Look if child is CDATA\n        result[child.nodeName] = child.textContent;\n      } else if (child.nodeType !== Node.TEXT_NODE) {\n        // Ignore leading/trailing whitespace nodes\n        const childObject: any = domToObject(child, options);\n\n        if (!result[child.nodeName]) {\n          result[child.nodeName] = childObject;\n        } else if (Array.isArray(result[child.nodeName])) {\n          result[child.nodeName].push(childObject);\n        } else {\n          result[child.nodeName] = [result[child.nodeName], childObject];\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nconst serializer = new XMLSerializer();\n\nexport function stringifyXML(content: unknown, opts: XmlOptions = {}): string {\n  const updatedOptions: Required<XmlOptions> = {\n    rootName: opts.rootName ?? \"root\",\n    includeRoot: opts.includeRoot ?? false,\n    xmlCharKey: opts.xmlCharKey ?? XML_CHARKEY,\n    cdataPropName: opts.cdataPropName ?? \"__cdata\",\n    stopNodes: opts.stopNodes ?? [],\n  };\n  const dom = buildNode(content, updatedOptions.rootName, updatedOptions)[0];\n  return (\n    '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>' +\n    serializer.serializeToString(dom).replace(/ xmlns=\"\"/g, \"\")\n  );\n}\n\nfunction buildAttributes(attrs: { [key: string]: { toString(): string } }): Attr[] {\n  const result = [];\n  for (const key of Object.keys(attrs)) {\n    const attr = doc.createAttribute(key);\n    attr.value = attrs[key].toString();\n    result.push(attr);\n  }\n  return result;\n}\n\nfunction buildNode(obj: any, elementName: string, options: Required<XmlOptions>): Node[] {\n  if (\n    obj === undefined ||\n    obj === null ||\n    typeof obj === \"string\" ||\n    typeof obj === \"number\" ||\n    typeof obj === \"boolean\"\n  ) {\n    const elem = doc.createElement(elementName);\n    elem.textContent = obj === undefined || obj === null ? \"\" : obj.toString();\n    return [elem];\n  } else if (Array.isArray(obj)) {\n    const result = [];\n    for (const arrayElem of obj) {\n      for (const child of buildNode(arrayElem, elementName, options)) {\n        result.push(child);\n      }\n    }\n    return result;\n  } else if (typeof obj === \"object\") {\n    let elem: HTMLElement;\n    if (obj[XML_ATTRKEY]?.[\"xmlns\"]) {\n      elem = doc.createElementNS(obj[XML_ATTRKEY][\"xmlns\"], elementName);\n    } else {\n      elem = doc.createElement(elementName);\n    }\n    for (const key of Object.keys(obj)) {\n      if (key === XML_ATTRKEY) {\n        for (const attr of buildAttributes(obj[key])) {\n          elem.attributes.setNamedItem(attr);\n        }\n      } else if (key === options.xmlCharKey) {\n        elem.textContent = obj[key].toString();\n      } else if (key === options.cdataPropName) {\n        const cdataElement = doc.createCDATASection(obj[key].toString());\n        elem.appendChild(cdataElement);\n      } else {\n        for (const child of buildNode(obj[key], key, options)) {\n          elem.appendChild(child);\n        }\n      }\n    }\n    return [elem];\n  } else {\n    throw new Error(`Illegal value passed to buildObject: ${obj}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The `@azure/logger` configuration for this package.\n */\nexport const logger = createClientLogger(\"storage-blob\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  HttpPipelineLogLevel,\n  RequestPolicy,\n  RequestPolicyOptionsLike,\n  WebResourceLike,\n  CompatResponse as HttpOperationResponse,\n} from \"@azure/core-http-compat\";\n\n/**\n * The base class from which all request policies derive.\n */\nexport abstract class BaseRequestPolicy implements RequestPolicy {\n  /**\n   * The main method to implement that manipulates a request/response.\n   */\n  protected constructor(\n    /**\n     * The next policy in the pipeline. Each policy is responsible for executing the next one if the request is to continue through the pipeline.\n     */\n    readonly _nextPolicy: RequestPolicy,\n    /**\n     * The options that can be passed to a given request policy.\n     */\n    readonly _options: RequestPolicyOptionsLike,\n  ) {}\n\n  /**\n   * Sends a network request based on the given web resource.\n   * @param webResource - A {@link WebResourceLike} that describes a HTTP request to be made.\n   */\n  public abstract sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse>;\n\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  public shouldLog(logLevel: HttpPipelineLogLevel): boolean {\n    return this._options.shouldLog(logLevel);\n  }\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meat the logger's threshold, then nothing will be logged.\n   * @param logLevel - The log level of this log.\n   * @param message - The message of this log.\n   */\n  public log(logLevel: HttpPipelineLogLevel, message: string): void {\n    this._options.log(logLevel, message);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport const SDK_VERSION: string = \"12.26.0\";\nexport const SERVICE_VERSION: string = \"2025-01-05\";\n\nexport const BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES: number = 256 * 1024 * 1024; // 256MB\nexport const BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES: number = 4000 * 1024 * 1024; // 4000MB\nexport const BLOCK_BLOB_MAX_BLOCKS: number = 50000;\nexport const DEFAULT_BLOCK_BUFFER_SIZE_BYTES: number = 8 * 1024 * 1024; // 8MB\nexport const DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES: number = 4 * 1024 * 1024; // 4MB\nexport const DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS: number = 5;\n\nexport const REQUEST_TIMEOUT: number = 100 * 1000; // In ms\n/**\n * The OAuth scope to use with Azure Storage.\n */\nexport const StorageOAuthScopes: string | string[] = \"https://storage.azure.com/.default\";\n\nexport const URLConstants = {\n  Parameters: {\n    FORCE_BROWSER_NO_CACHE: \"_\",\n    SIGNATURE: \"sig\",\n    SNAPSHOT: \"snapshot\",\n    VERSIONID: \"versionid\",\n    TIMEOUT: \"timeout\",\n  },\n};\n\nexport const HTTPURLConnection = {\n  HTTP_ACCEPTED: 202,\n  HTTP_CONFLICT: 409,\n  HTTP_NOT_FOUND: 404,\n  HTTP_PRECON_FAILED: 412,\n  HTTP_RANGE_NOT_SATISFIABLE: 416,\n};\n\nexport const HeaderConstants = {\n  AUTHORIZATION: \"Authorization\",\n  AUTHORIZATION_SCHEME: \"Bearer\",\n  CONTENT_ENCODING: \"Content-Encoding\",\n  CONTENT_ID: \"Content-ID\",\n  CONTENT_LANGUAGE: \"Content-Language\",\n  CONTENT_LENGTH: \"Content-Length\",\n  CONTENT_MD5: \"Content-Md5\",\n  CONTENT_TRANSFER_ENCODING: \"Content-Transfer-Encoding\",\n  CONTENT_TYPE: \"Content-Type\",\n  COOKIE: \"Cookie\",\n  DATE: \"date\",\n  IF_MATCH: \"if-match\",\n  IF_MODIFIED_SINCE: \"if-modified-since\",\n  IF_NONE_MATCH: \"if-none-match\",\n  IF_UNMODIFIED_SINCE: \"if-unmodified-since\",\n  PREFIX_FOR_STORAGE: \"x-ms-\",\n  RANGE: \"Range\",\n  USER_AGENT: \"User-Agent\",\n  X_MS_CLIENT_REQUEST_ID: \"x-ms-client-request-id\",\n  X_MS_COPY_SOURCE: \"x-ms-copy-source\",\n  X_MS_DATE: \"x-ms-date\",\n  X_MS_ERROR_CODE: \"x-ms-error-code\",\n  X_MS_VERSION: \"x-ms-version\",\n  X_MS_CopySourceErrorCode: \"x-ms-copy-source-error-code\",\n};\n\nexport const ETagNone = \"\";\nexport const ETagAny = \"*\";\n\nexport const SIZE_1_MB = 1 * 1024 * 1024;\nexport const BATCH_MAX_REQUEST = 256;\nexport const BATCH_MAX_PAYLOAD_IN_BYTES = 4 * SIZE_1_MB;\nexport const HTTP_LINE_ENDING = \"\\r\\n\";\nexport const HTTP_VERSION_1_1 = \"HTTP/1.1\";\n\nexport const EncryptionAlgorithmAES25 = \"AES256\";\n\nexport const DevelopmentConnectionString = `DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;`;\n\nexport const StorageBlobLoggingAllowedHeaderNames = [\n  \"Access-Control-Allow-Origin\",\n  \"Cache-Control\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"Request-Id\",\n  \"traceparent\",\n  \"Transfer-Encoding\",\n  \"User-Agent\",\n  \"x-ms-client-request-id\",\n  \"x-ms-date\",\n  \"x-ms-error-code\",\n  \"x-ms-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-version\",\n  \"Accept-Ranges\",\n  \"Content-Disposition\",\n  \"Content-Encoding\",\n  \"Content-Language\",\n  \"Content-MD5\",\n  \"Content-Range\",\n  \"ETag\",\n  \"Last-Modified\",\n  \"Server\",\n  \"Vary\",\n  \"x-ms-content-crc64\",\n  \"x-ms-copy-action\",\n  \"x-ms-copy-completion-time\",\n  \"x-ms-copy-id\",\n  \"x-ms-copy-progress\",\n  \"x-ms-copy-status\",\n  \"x-ms-has-immutability-policy\",\n  \"x-ms-has-legal-hold\",\n  \"x-ms-lease-state\",\n  \"x-ms-lease-status\",\n  \"x-ms-range\",\n  \"x-ms-request-server-encrypted\",\n  \"x-ms-server-encrypted\",\n  \"x-ms-snapshot\",\n  \"x-ms-source-range\",\n  \"If-Match\",\n  \"If-Modified-Since\",\n  \"If-None-Match\",\n  \"If-Unmodified-Since\",\n  \"x-ms-access-tier\",\n  \"x-ms-access-tier-change-time\",\n  \"x-ms-access-tier-inferred\",\n  \"x-ms-account-kind\",\n  \"x-ms-archive-status\",\n  \"x-ms-blob-append-offset\",\n  \"x-ms-blob-cache-control\",\n  \"x-ms-blob-committed-block-count\",\n  \"x-ms-blob-condition-appendpos\",\n  \"x-ms-blob-condition-maxsize\",\n  \"x-ms-blob-content-disposition\",\n  \"x-ms-blob-content-encoding\",\n  \"x-ms-blob-content-language\",\n  \"x-ms-blob-content-length\",\n  \"x-ms-blob-content-md5\",\n  \"x-ms-blob-content-type\",\n  \"x-ms-blob-public-access\",\n  \"x-ms-blob-sequence-number\",\n  \"x-ms-blob-type\",\n  \"x-ms-copy-destination-snapshot\",\n  \"x-ms-creation-time\",\n  \"x-ms-default-encryption-scope\",\n  \"x-ms-delete-snapshots\",\n  \"x-ms-delete-type-permanent\",\n  \"x-ms-deny-encryption-scope-override\",\n  \"x-ms-encryption-algorithm\",\n  \"x-ms-if-sequence-number-eq\",\n  \"x-ms-if-sequence-number-le\",\n  \"x-ms-if-sequence-number-lt\",\n  \"x-ms-incremental-copy\",\n  \"x-ms-lease-action\",\n  \"x-ms-lease-break-period\",\n  \"x-ms-lease-duration\",\n  \"x-ms-lease-id\",\n  \"x-ms-lease-time\",\n  \"x-ms-page-write\",\n  \"x-ms-proposed-lease-id\",\n  \"x-ms-range-get-content-md5\",\n  \"x-ms-rehydrate-priority\",\n  \"x-ms-sequence-number-action\",\n  \"x-ms-sku-name\",\n  \"x-ms-source-content-md5\",\n  \"x-ms-source-if-match\",\n  \"x-ms-source-if-modified-since\",\n  \"x-ms-source-if-none-match\",\n  \"x-ms-source-if-unmodified-since\",\n  \"x-ms-tag-count\",\n  \"x-ms-encryption-key-sha256\",\n  \"x-ms-copy-source-error-code\",\n  \"x-ms-copy-source-status-code\",\n  \"x-ms-if-tags\",\n  \"x-ms-source-if-tags\",\n];\n\nexport const StorageBlobLoggingAllowedQueryParameters = [\n  \"comp\",\n  \"maxresults\",\n  \"rscc\",\n  \"rscd\",\n  \"rsce\",\n  \"rscl\",\n  \"rsct\",\n  \"se\",\n  \"si\",\n  \"sip\",\n  \"sp\",\n  \"spr\",\n  \"sr\",\n  \"srt\",\n  \"ss\",\n  \"st\",\n  \"sv\",\n  \"include\",\n  \"marker\",\n  \"prefix\",\n  \"copyid\",\n  \"restype\",\n  \"blockid\",\n  \"blocklisttype\",\n  \"delimiter\",\n  \"prevsnapshot\",\n  \"ske\",\n  \"skoid\",\n  \"sks\",\n  \"skt\",\n  \"sktid\",\n  \"skv\",\n  \"snapshot\",\n];\n\nexport const BlobUsesCustomerSpecifiedEncryptionMsg = \"BlobUsesCustomerSpecifiedEncryption\";\nexport const BlobDoesNotUseCustomerSpecifiedEncryption =\n  \"BlobDoesNotUseCustomerSpecifiedEncryption\";\n\n/// List of ports used for path style addressing.\n/// Path style addressing means that storage account is put in URI's Path segment in instead of in host.\nexport const PathStylePorts = [\n  \"10000\",\n  \"10001\",\n  \"10002\",\n  \"10003\",\n  \"10004\",\n  \"10100\",\n  \"10101\",\n  \"10102\",\n  \"10103\",\n  \"10104\",\n  \"11000\",\n  \"11001\",\n  \"11002\",\n  \"11003\",\n  \"11004\",\n  \"11100\",\n  \"11101\",\n  \"11102\",\n  \"11103\",\n  \"11104\",\n];\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport type { HttpHeaders } from \"@azure/core-rest-pipeline\";\nimport { createHttpHeaders } from \"@azure/core-rest-pipeline\";\nimport { isNode } from \"@azure/core-util\";\n\nimport type {\n  BlobQueryArrowConfiguration,\n  BlobQueryCsvTextConfiguration,\n  BlobQueryJsonTextConfiguration,\n  BlobQueryParquetConfiguration,\n} from \"../Clients\";\nimport type {\n  QuerySerialization,\n  BlobTags,\n  BlobName,\n  ListBlobsFlatSegmentResponse,\n  ListBlobsHierarchySegmentResponse,\n  PageRange,\n  ClearRange,\n} from \"../generated/src/models\";\nimport {\n  DevelopmentConnectionString,\n  HeaderConstants,\n  PathStylePorts,\n  URLConstants,\n} from \"./constants\";\nimport type {\n  Tags,\n  ObjectReplicationPolicy,\n  ObjectReplicationRule,\n  ObjectReplicationStatus,\n  HttpAuthorization,\n} from \"../models\";\nimport type {\n  ListBlobsFlatSegmentResponseModel,\n  BlobItemInternal as BlobItemInternalModel,\n  ListBlobsHierarchySegmentResponseModel,\n  BlobPrefix as BlobPrefixModel,\n  PageBlobGetPageRangesDiffResponseModel,\n  PageRangeInfo,\n} from \"../generatedModels\";\nimport type { HttpHeadersLike, WebResourceLike } from \"@azure/core-http-compat\";\n\n/**\n * Reserved URL characters must be properly escaped for Storage services like Blob or File.\n *\n * ## URL encode and escape strategy for JS SDKs\n *\n * When customers pass a URL string into XxxClient classes constructor, the URL string may already be URL encoded or not.\n * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL\n * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XxxClient constructors.\n *\n * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.\n *\n * This is what legacy V2 SDK does, simple and works for most of the cases.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%253A\" and send to server. A blob named \"b%3A\" will be created.\n *\n * But this strategy will make it not possible to create a blob with \"?\" in it's name. Because when customer URL string is\n * \"http://account.blob.core.windows.net/con/blob?name\", the \"?name\" will be treated as URL paramter instead of blob name.\n * If customer URL string is \"http://account.blob.core.windows.net/con/blob%3Fname\", a blob named \"blob%3Fname\" will be created.\n * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.\n * We cannot accept a SDK cannot create a blob name with \"?\". So we implement strategy two:\n *\n * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.\n *\n * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will escape \":\" like \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%3A\" to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%253A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%253A\" to server. A blob named \"b%3A\" will be created.\n *\n * This strategy gives us flexibility to create with any special characters. But \"%\" will be treated as a special characters, if the URL string\n * is not encoded, there shouldn't a \"%\" in the URL string, otherwise the URL is not a valid URL.\n * If customer needs to create a blob with \"%\" in it's blob name, use \"%25\" instead of \"%\". Just like above 3rd sample.\n * And following URL strings are invalid:\n * - \"http://account.blob.core.windows.net/con/b%\"\n * - \"http://account.blob.core.windows.net/con/b%2\"\n * - \"http://account.blob.core.windows.net/con/b%G\"\n *\n * Another special character is \"?\", use \"%2F\" to represent a blob name with \"?\" in a URL string.\n *\n * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `containerClient.getBlobClient(blobName)`\n *\n * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\n *\n * @param url -\n */\nexport function escapeURLPath(url: string): string {\n  const urlParsed = new URL(url);\n\n  let path = urlParsed.pathname;\n  path = path || \"/\";\n\n  path = escape(path);\n  urlParsed.pathname = path;\n\n  return urlParsed.toString();\n}\n\nexport interface ConnectionString {\n  kind: \"AccountConnString\" | \"SASConnString\";\n  url: string;\n  accountName: string;\n  accountKey?: any;\n  accountSas?: string;\n  proxyUri?: string; // Development Connection String may contain proxyUri\n}\n\nfunction getProxyUriFromDevConnString(connectionString: string): string {\n  // Development Connection String\n  // https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string#connect-to-the-emulator-account-using-the-well-known-account-name-and-key\n  let proxyUri = \"\";\n  if (connectionString.search(\"DevelopmentStorageProxyUri=\") !== -1) {\n    // CONNECTION_STRING=UseDevelopmentStorage=true;DevelopmentStorageProxyUri=http://myProxyUri\n    const matchCredentials = connectionString.split(\";\");\n    for (const element of matchCredentials) {\n      if (element.trim().startsWith(\"DevelopmentStorageProxyUri=\")) {\n        proxyUri = element.trim().match(\"DevelopmentStorageProxyUri=(.*)\")![1];\n      }\n    }\n  }\n  return proxyUri;\n}\n\nexport function getValueInConnString(\n  connectionString: string,\n  argument:\n    | \"BlobEndpoint\"\n    | \"AccountName\"\n    | \"AccountKey\"\n    | \"DefaultEndpointsProtocol\"\n    | \"EndpointSuffix\"\n    | \"SharedAccessSignature\",\n): string {\n  const elements = connectionString.split(\";\");\n  for (const element of elements) {\n    if (element.trim().startsWith(argument)) {\n      return element.trim().match(argument + \"=(.*)\")![1];\n    }\n  }\n  return \"\";\n}\n\n/**\n * Extracts the parts of an Azure Storage account connection string.\n *\n * @param connectionString - Connection string.\n * @returns String key value pairs of the storage account's url and credentials.\n */\nexport function extractConnectionStringParts(connectionString: string): ConnectionString {\n  let proxyUri = \"\";\n\n  if (connectionString.startsWith(\"UseDevelopmentStorage=true\")) {\n    // Development connection string\n    proxyUri = getProxyUriFromDevConnString(connectionString);\n    connectionString = DevelopmentConnectionString;\n  }\n\n  // Matching BlobEndpoint in the Account connection string\n  let blobEndpoint = getValueInConnString(connectionString, \"BlobEndpoint\");\n  // Slicing off '/' at the end if exists\n  // (The methods that use `extractConnectionStringParts` expect the url to not have `/` at the end)\n  blobEndpoint = blobEndpoint.endsWith(\"/\") ? blobEndpoint.slice(0, -1) : blobEndpoint;\n\n  if (\n    connectionString.search(\"DefaultEndpointsProtocol=\") !== -1 &&\n    connectionString.search(\"AccountKey=\") !== -1\n  ) {\n    // Account connection string\n\n    let defaultEndpointsProtocol = \"\";\n    let accountName = \"\";\n    let accountKey = Buffer.from(\"accountKey\", \"base64\");\n    let endpointSuffix = \"\";\n\n    // Get account name and key\n    accountName = getValueInConnString(connectionString, \"AccountName\");\n    accountKey = Buffer.from(getValueInConnString(connectionString, \"AccountKey\"), \"base64\");\n\n    if (!blobEndpoint) {\n      // BlobEndpoint is not present in the Account connection string\n      // Can be obtained from `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`\n\n      defaultEndpointsProtocol = getValueInConnString(connectionString, \"DefaultEndpointsProtocol\");\n      const protocol = defaultEndpointsProtocol!.toLowerCase();\n      if (protocol !== \"https\" && protocol !== \"http\") {\n        throw new Error(\n          \"Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'\",\n        );\n      }\n\n      endpointSuffix = getValueInConnString(connectionString, \"EndpointSuffix\");\n      if (!endpointSuffix) {\n        throw new Error(\"Invalid EndpointSuffix in the provided Connection String\");\n      }\n      blobEndpoint = `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;\n    }\n\n    if (!accountName) {\n      throw new Error(\"Invalid AccountName in the provided Connection String\");\n    } else if (accountKey.length === 0) {\n      throw new Error(\"Invalid AccountKey in the provided Connection String\");\n    }\n\n    return {\n      kind: \"AccountConnString\",\n      url: blobEndpoint,\n      accountName,\n      accountKey,\n      proxyUri,\n    };\n  } else {\n    // SAS connection string\n\n    let accountSas = getValueInConnString(connectionString, \"SharedAccessSignature\");\n    let accountName = getValueInConnString(connectionString, \"AccountName\");\n    // if accountName is empty, try to read it from BlobEndpoint\n    if (!accountName) {\n      accountName = getAccountNameFromUrl(blobEndpoint);\n    }\n    if (!blobEndpoint) {\n      throw new Error(\"Invalid BlobEndpoint in the provided SAS Connection String\");\n    } else if (!accountSas) {\n      throw new Error(\"Invalid SharedAccessSignature in the provided SAS Connection String\");\n    }\n\n    // client constructors assume accountSas does *not* start with ?\n    if (accountSas.startsWith(\"?\")) {\n      accountSas = accountSas.substring(1);\n    }\n\n    return { kind: \"SASConnString\", url: blobEndpoint, accountName, accountSas };\n  }\n}\n\n/**\n * Internal escape method implemented Strategy Two mentioned in escapeURL() description.\n *\n * @param text -\n */\nfunction escape(text: string): string {\n  return encodeURIComponent(text)\n    .replace(/%2F/g, \"/\") // Don't escape for \"/\"\n    .replace(/'/g, \"%27\") // Escape for \"'\"\n    .replace(/\\+/g, \"%20\")\n    .replace(/%25/g, \"%\"); // Revert encoded \"%\"\n}\n\n/**\n * Append a string to URL path. Will remove duplicated \"/\" in front of the string\n * when URL path ends with a \"/\".\n *\n * @param url - Source URL string\n * @param name - String to be appended to URL\n * @returns An updated URL string\n */\nexport function appendToURLPath(url: string, name: string): string {\n  const urlParsed = new URL(url);\n\n  let path = urlParsed.pathname;\n  path = path ? (path.endsWith(\"/\") ? `${path}${name}` : `${path}/${name}`) : name;\n  urlParsed.pathname = path;\n\n  return urlParsed.toString();\n}\n\n/**\n * Set URL parameter name and value. If name exists in URL parameters, old value\n * will be replaced by name key. If not provide value, the parameter will be deleted.\n *\n * @param url - Source URL string\n * @param name - Parameter name\n * @param value - Parameter value\n * @returns An updated URL string\n */\nexport function setURLParameter(url: string, name: string, value?: string): string {\n  const urlParsed = new URL(url);\n  const encodedName = encodeURIComponent(name);\n  const encodedValue = value ? encodeURIComponent(value) : undefined;\n  // mutating searchParams will change the encoding, so we have to do this ourselves\n  const searchString = urlParsed.search === \"\" ? \"?\" : urlParsed.search;\n\n  const searchPieces: string[] = [];\n\n  for (const pair of searchString.slice(1).split(\"&\")) {\n    if (pair) {\n      const [key] = pair.split(\"=\", 2);\n      if (key !== encodedName) {\n        searchPieces.push(pair);\n      }\n    }\n  }\n  if (encodedValue) {\n    searchPieces.push(`${encodedName}=${encodedValue}`);\n  }\n\n  urlParsed.search = searchPieces.length ? `?${searchPieces.join(\"&\")}` : \"\";\n\n  return urlParsed.toString();\n}\n\n/**\n * Get URL parameter by name.\n *\n * @param url -\n * @param name -\n */\nexport function getURLParameter(url: string, name: string): string | string[] | undefined {\n  const urlParsed = new URL(url);\n  return urlParsed.searchParams.get(name) ?? undefined;\n}\n\n/**\n * Set URL host.\n *\n * @param url - Source URL string\n * @param host - New host string\n * @returns An updated URL string\n */\nexport function setURLHost(url: string, host: string): string {\n  const urlParsed = new URL(url);\n  urlParsed.hostname = host;\n  return urlParsed.toString();\n}\n\n/**\n * Get URL path from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLPath(url: string): string | undefined {\n  try {\n    const urlParsed = new URL(url);\n    return urlParsed.pathname;\n  } catch (e) {\n    return undefined;\n  }\n}\n\n/**\n * Get URL scheme from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLScheme(url: string): string | undefined {\n  try {\n    const urlParsed = new URL(url);\n    return urlParsed.protocol.endsWith(\":\") ? urlParsed.protocol.slice(0, -1) : urlParsed.protocol;\n  } catch (e) {\n    return undefined;\n  }\n}\n\n/**\n * Get URL path and query from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLPathAndQuery(url: string): string | undefined {\n  const urlParsed = new URL(url);\n  const pathString = urlParsed.pathname;\n  if (!pathString) {\n    throw new RangeError(\"Invalid url without valid path.\");\n  }\n\n  let queryString = urlParsed.search || \"\";\n  queryString = queryString.trim();\n  if (queryString !== \"\") {\n    queryString = queryString.startsWith(\"?\") ? queryString : `?${queryString}`; // Ensure query string start with '?'\n  }\n\n  return `${pathString}${queryString}`;\n}\n\n/**\n * Get URL query key value pairs from an URL string.\n *\n * @param url -\n */\nexport function getURLQueries(url: string): { [key: string]: string } {\n  let queryString = new URL(url).search;\n  if (!queryString) {\n    return {};\n  }\n\n  queryString = queryString.trim();\n  queryString = queryString.startsWith(\"?\") ? queryString.substring(1) : queryString;\n\n  let querySubStrings: string[] = queryString.split(\"&\");\n  querySubStrings = querySubStrings.filter((value: string) => {\n    const indexOfEqual = value.indexOf(\"=\");\n    const lastIndexOfEqual = value.lastIndexOf(\"=\");\n    return (\n      indexOfEqual > 0 && indexOfEqual === lastIndexOfEqual && lastIndexOfEqual < value.length - 1\n    );\n  });\n\n  const queries: { [key: string]: string } = {};\n  for (const querySubString of querySubStrings) {\n    const splitResults = querySubString.split(\"=\");\n    const key: string = splitResults[0];\n    const value: string = splitResults[1];\n    queries[key] = value;\n  }\n\n  return queries;\n}\n\n/**\n * Append a string to URL query.\n *\n * @param url - Source URL string.\n * @param queryParts - String to be appended to the URL query.\n * @returns An updated URL string.\n */\nexport function appendToURLQuery(url: string, queryParts: string): string {\n  const urlParsed = new URL(url);\n\n  let query = urlParsed.search;\n  if (query) {\n    query += \"&\" + queryParts;\n  } else {\n    query = queryParts;\n  }\n\n  urlParsed.search = query;\n  return urlParsed.toString();\n}\n\n/**\n * Rounds a date off to seconds.\n *\n * @param date -\n * @param withMilliseconds - If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;\n *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.\n * @returns Date string in ISO8061 format, with or without 7 milliseconds component\n */\nexport function truncatedISO8061Date(date: Date, withMilliseconds: boolean = true): string {\n  // Date.toISOString() will return like \"2018-10-29T06:34:36.139Z\"\n  const dateString = date.toISOString();\n\n  return withMilliseconds\n    ? dateString.substring(0, dateString.length - 1) + \"0000\" + \"Z\"\n    : dateString.substring(0, dateString.length - 5) + \"Z\";\n}\n\n/**\n * Base64 encode.\n *\n * @param content -\n */\nexport function base64encode(content: string): string {\n  return !isNode ? btoa(content) : Buffer.from(content).toString(\"base64\");\n}\n\n/**\n * Base64 decode.\n *\n * @param encodedString -\n */\nexport function base64decode(encodedString: string): string {\n  return !isNode ? atob(encodedString) : Buffer.from(encodedString, \"base64\").toString();\n}\n\n/**\n * Generate a 64 bytes base64 block ID string.\n *\n * @param blockIndex -\n */\nexport function generateBlockID(blockIDPrefix: string, blockIndex: number): string {\n  // To generate a 64 bytes base64 string, source string should be 48\n  const maxSourceStringLength = 48;\n\n  // A blob can have a maximum of 100,000 uncommitted blocks at any given time\n  const maxBlockIndexLength = 6;\n\n  const maxAllowedBlockIDPrefixLength = maxSourceStringLength - maxBlockIndexLength;\n\n  if (blockIDPrefix.length > maxAllowedBlockIDPrefixLength) {\n    blockIDPrefix = blockIDPrefix.slice(0, maxAllowedBlockIDPrefixLength);\n  }\n  const res =\n    blockIDPrefix +\n    padStart(blockIndex.toString(), maxSourceStringLength - blockIDPrefix.length, \"0\");\n  return base64encode(res);\n}\n\n/**\n * Delay specified time interval.\n *\n * @param timeInMs -\n * @param aborter -\n * @param abortError -\n */\nexport async function delay(\n  timeInMs: number,\n  aborter?: AbortSignalLike,\n  abortError?: Error,\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    /* eslint-disable-next-line prefer-const */\n    let timeout: any;\n\n    const abortHandler = () => {\n      if (timeout !== undefined) {\n        clearTimeout(timeout);\n      }\n      reject(abortError);\n    };\n\n    const resolveHandler = () => {\n      if (aborter !== undefined) {\n        aborter.removeEventListener(\"abort\", abortHandler);\n      }\n      resolve();\n    };\n\n    timeout = setTimeout(resolveHandler, timeInMs);\n\n    if (aborter !== undefined) {\n      aborter.addEventListener(\"abort\", abortHandler);\n    }\n  });\n}\n\n/**\n * String.prototype.padStart()\n *\n * @param currentString -\n * @param targetLength -\n * @param padString -\n */\nexport function padStart(\n  currentString: string,\n  targetLength: number,\n  padString: string = \" \",\n): string {\n  // @ts-expect-error: TS doesn't know this code needs to run downlevel sometimes\n  if (String.prototype.padStart) {\n    return currentString.padStart(targetLength, padString);\n  }\n\n  padString = padString || \" \";\n  if (currentString.length > targetLength) {\n    return currentString;\n  } else {\n    targetLength = targetLength - currentString.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + currentString;\n  }\n}\n\nexport function sanitizeURL(url: string): string {\n  let safeURL: string = url;\n  if (getURLParameter(safeURL, URLConstants.Parameters.SIGNATURE)) {\n    safeURL = setURLParameter(safeURL, URLConstants.Parameters.SIGNATURE, \"*****\");\n  }\n\n  return safeURL;\n}\n\nexport function sanitizeHeaders(originalHeader: HttpHeaders): HttpHeaders {\n  const headers: HttpHeaders = createHttpHeaders();\n  for (const [name, value] of originalHeader) {\n    if (name.toLowerCase() === HeaderConstants.AUTHORIZATION.toLowerCase()) {\n      headers.set(name, \"*****\");\n    } else if (name.toLowerCase() === HeaderConstants.X_MS_COPY_SOURCE) {\n      headers.set(name, sanitizeURL(value));\n    } else {\n      headers.set(name, value);\n    }\n  }\n\n  return headers;\n}\n/**\n * If two strings are equal when compared case insensitive.\n *\n * @param str1 -\n * @param str2 -\n */\nexport function iEqual(str1: string, str2: string): boolean {\n  return str1.toLocaleLowerCase() === str2.toLocaleLowerCase();\n}\n\n/**\n * Extracts account name from the url\n * @param url - url to extract the account name from\n * @returns with the account name\n */\nexport function getAccountNameFromUrl(url: string): string {\n  const parsedUrl = new URL(url);\n  let accountName;\n  try {\n    if (parsedUrl.hostname.split(\".\")[1] === \"blob\") {\n      // `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;\n      accountName = parsedUrl.hostname.split(\".\")[0];\n    } else if (isIpEndpointStyle(parsedUrl)) {\n      // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/\n      // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/\n      // .getPath() -> /devstoreaccount1/\n      accountName = parsedUrl.pathname.split(\"/\")[1];\n    } else {\n      // Custom domain case: \"https://customdomain.com/containername/blob\".\n      accountName = \"\";\n    }\n    return accountName;\n  } catch (error: any) {\n    throw new Error(\"Unable to extract accountName with provided information.\");\n  }\n}\n\nexport function isIpEndpointStyle(parsedUrl: URL): boolean {\n  const host = parsedUrl.host;\n\n  // Case 1: Ipv6, use a broad regex to find out candidates whose host contains two ':'.\n  // Case 2: localhost(:port) or host.docker.internal, use broad regex to match port part.\n  // Case 3: Ipv4, use broad regex which just check if host contains Ipv4.\n  // For valid host please refer to https://man7.org/linux/man-pages/man7/hostname.7.html.\n  return (\n    /^.*:.*:.*$|^(localhost|host.docker.internal)(:[0-9]+)?$|^(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])(\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])){3}(:[0-9]+)?$/.test(\n      host,\n    ) ||\n    (Boolean(parsedUrl.port) && PathStylePorts.includes(parsedUrl.port))\n  );\n}\n\n/**\n * Convert Tags to encoded string.\n *\n * @param tags -\n */\nexport function toBlobTagsString(tags?: Tags): string | undefined {\n  if (tags === undefined) {\n    return undefined;\n  }\n\n  const tagPairs = [];\n  for (const key in tags) {\n    if (Object.prototype.hasOwnProperty.call(tags, key)) {\n      const value = tags[key];\n      tagPairs.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n    }\n  }\n\n  return tagPairs.join(\"&\");\n}\n\n/**\n * Convert Tags type to BlobTags.\n *\n * @param tags -\n */\nexport function toBlobTags(tags?: Tags): BlobTags | undefined {\n  if (tags === undefined) {\n    return undefined;\n  }\n\n  const res: BlobTags = {\n    blobTagSet: [],\n  };\n\n  for (const key in tags) {\n    if (Object.prototype.hasOwnProperty.call(tags, key)) {\n      const value = tags[key];\n      res.blobTagSet.push({\n        key,\n        value,\n      });\n    }\n  }\n  return res;\n}\n\n/**\n * Covert BlobTags to Tags type.\n *\n * @param tags -\n */\nexport function toTags(tags?: BlobTags): Tags | undefined {\n  if (tags === undefined) {\n    return undefined;\n  }\n\n  const res: Tags = {};\n  for (const blobTag of tags.blobTagSet) {\n    res[blobTag.key] = blobTag.value;\n  }\n  return res;\n}\n\n/**\n * Convert BlobQueryTextConfiguration to QuerySerialization type.\n *\n * @param textConfiguration -\n */\nexport function toQuerySerialization(\n  textConfiguration?:\n    | BlobQueryJsonTextConfiguration\n    | BlobQueryCsvTextConfiguration\n    | BlobQueryArrowConfiguration\n    | BlobQueryParquetConfiguration,\n): QuerySerialization | undefined {\n  if (textConfiguration === undefined) {\n    return undefined;\n  }\n\n  switch (textConfiguration.kind) {\n    case \"csv\":\n      return {\n        format: {\n          type: \"delimited\",\n          delimitedTextConfiguration: {\n            columnSeparator: textConfiguration.columnSeparator || \",\",\n            fieldQuote: textConfiguration.fieldQuote || \"\",\n            recordSeparator: textConfiguration.recordSeparator,\n            escapeChar: textConfiguration.escapeCharacter || \"\",\n            headersPresent: textConfiguration.hasHeaders || false,\n          },\n        },\n      };\n    case \"json\":\n      return {\n        format: {\n          type: \"json\",\n          jsonTextConfiguration: {\n            recordSeparator: textConfiguration.recordSeparator,\n          },\n        },\n      };\n    case \"arrow\":\n      return {\n        format: {\n          type: \"arrow\",\n          arrowConfiguration: {\n            schema: textConfiguration.schema,\n          },\n        },\n      };\n    case \"parquet\":\n      return {\n        format: {\n          type: \"parquet\",\n        },\n      };\n\n    default:\n      throw Error(\"Invalid BlobQueryTextConfiguration.\");\n  }\n}\n\nexport function parseObjectReplicationRecord(\n  objectReplicationRecord?: Record<string, string>,\n): ObjectReplicationPolicy[] | undefined {\n  if (!objectReplicationRecord) {\n    return undefined;\n  }\n\n  if (\"policy-id\" in objectReplicationRecord) {\n    // If the dictionary contains a key with policy id, we are not required to do any parsing since\n    // the policy id should already be stored in the ObjectReplicationDestinationPolicyId.\n    return undefined;\n  }\n\n  const orProperties: ObjectReplicationPolicy[] = [];\n  for (const key in objectReplicationRecord) {\n    const ids = key.split(\"_\");\n    const policyPrefix = \"or-\";\n    if (ids[0].startsWith(policyPrefix)) {\n      ids[0] = ids[0].substring(policyPrefix.length);\n    }\n    const rule: ObjectReplicationRule = {\n      ruleId: ids[1],\n      replicationStatus: objectReplicationRecord[key] as ObjectReplicationStatus,\n    };\n    const policyIndex = orProperties.findIndex((policy) => policy.policyId === ids[0]);\n    if (policyIndex > -1) {\n      orProperties[policyIndex].rules.push(rule);\n    } else {\n      orProperties.push({\n        policyId: ids[0],\n        rules: [rule],\n      });\n    }\n  }\n  return orProperties;\n}\n\n/**\n * Attach a TokenCredential to an object.\n *\n * @param thing -\n * @param credential -\n */\nexport function attachCredential<T>(thing: T, credential: TokenCredential): T {\n  (thing as any).credential = credential;\n  return thing;\n}\n\nexport function httpAuthorizationToString(\n  httpAuthorization?: HttpAuthorization,\n): string | undefined {\n  return httpAuthorization ? httpAuthorization.scheme + \" \" + httpAuthorization.value : undefined;\n}\n\nexport function BlobNameToString(name: BlobName): string {\n  if (name.encoded) {\n    return decodeURIComponent(name.content!);\n  } else {\n    return name.content!;\n  }\n}\n\nexport function ConvertInternalResponseOfListBlobFlat(\n  internalResponse: ListBlobsFlatSegmentResponse,\n): ListBlobsFlatSegmentResponseModel {\n  return {\n    ...internalResponse,\n    segment: {\n      blobItems: internalResponse.segment.blobItems.map((blobItemInteral) => {\n        const blobItem: BlobItemInternalModel = {\n          ...blobItemInteral,\n          name: BlobNameToString(blobItemInteral.name),\n        };\n        return blobItem;\n      }),\n    },\n  };\n}\n\nexport function ConvertInternalResponseOfListBlobHierarchy(\n  internalResponse: ListBlobsHierarchySegmentResponse,\n): ListBlobsHierarchySegmentResponseModel {\n  return {\n    ...internalResponse,\n    segment: {\n      blobPrefixes: internalResponse.segment.blobPrefixes?.map((blobPrefixInternal) => {\n        const blobPrefix: BlobPrefixModel = {\n          ...blobPrefixInternal,\n          name: BlobNameToString(blobPrefixInternal.name),\n        };\n        return blobPrefix;\n      }),\n      blobItems: internalResponse.segment.blobItems.map((blobItemInteral) => {\n        const blobItem: BlobItemInternalModel = {\n          ...blobItemInteral,\n          name: BlobNameToString(blobItemInteral.name),\n        };\n        return blobItem;\n      }),\n    },\n  };\n}\n\nexport function* ExtractPageRangeInfoItems(\n  getPageRangesSegment: PageBlobGetPageRangesDiffResponseModel,\n): IterableIterator<PageRangeInfo> {\n  let pageRange: PageRange[] = [];\n  let clearRange: ClearRange[] = [];\n\n  if (getPageRangesSegment.pageRange) pageRange = getPageRangesSegment.pageRange;\n  if (getPageRangesSegment.clearRange) clearRange = getPageRangesSegment.clearRange;\n\n  let pageRangeIndex = 0;\n  let clearRangeIndex = 0;\n\n  while (pageRangeIndex < pageRange.length && clearRangeIndex < clearRange.length) {\n    if (pageRange[pageRangeIndex].start < clearRange[clearRangeIndex].start) {\n      yield {\n        start: pageRange[pageRangeIndex].start,\n        end: pageRange[pageRangeIndex].end,\n        isClear: false,\n      };\n      ++pageRangeIndex;\n    } else {\n      yield {\n        start: clearRange[clearRangeIndex].start,\n        end: clearRange[clearRangeIndex].end,\n        isClear: true,\n      };\n      ++clearRangeIndex;\n    }\n  }\n\n  for (; pageRangeIndex < pageRange.length; ++pageRangeIndex) {\n    yield {\n      start: pageRange[pageRangeIndex].start,\n      end: pageRange[pageRangeIndex].end,\n      isClear: false,\n    };\n  }\n\n  for (; clearRangeIndex < clearRange.length; ++clearRangeIndex) {\n    yield {\n      start: clearRange[clearRangeIndex].start,\n      end: clearRange[clearRangeIndex].end,\n      isClear: true,\n    };\n  }\n}\n\n/**\n * Escape the blobName but keep path separator ('/').\n */\nexport function EscapePath(blobName: string): string {\n  const split = blobName.split(\"/\");\n  for (let i = 0; i < split.length; i++) {\n    split[i] = encodeURIComponent(split[i]);\n  }\n  return split.join(\"/\");\n}\n\n/**\n * A representation of an HTTP response that\n * includes a reference to the request that\n * originated it.\n */\nexport interface HttpResponse {\n  /**\n   * The headers from the response.\n   */\n  headers: HttpHeadersLike;\n  /**\n   * The original request that resulted in this response.\n   */\n  request: WebResourceLike;\n  /**\n   * The HTTP status code returned from the service.\n   */\n  status: number;\n}\n\n/**\n * An object with a _response property that has\n * headers already parsed into a typed object.\n */\nexport interface ResponseWithHeaders<Headers> {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: Headers;\n  };\n}\n\n/**\n * An object with a _response property that has body\n * and headers already parsed into known types.\n */\nexport interface ResponseWithBody<Headers, Body> {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: Headers;\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: Body;\n  };\n}\n\n/**\n * An object with a simple _response property.\n */\nexport interface ResponseLike {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse;\n}\n\n/**\n * A type that represents an operation result with a known _response property.\n */\nexport type WithResponse<T, Headers = undefined, Body = undefined> = T &\n  (Body extends object\n    ? ResponseWithBody<Headers, Body>\n    : Headers extends object\n      ? ResponseWithHeaders<Headers>\n      : ResponseLike);\n\n/**\n * A typesafe helper for ensuring that a given response object has\n * the original _response attached.\n * @param response - A response object from calling a client operation\n * @returns The same object, but with known _response property\n */\nexport function assertResponse<T extends object, Headers = undefined, Body = undefined>(\n  response: T,\n): WithResponse<T, Headers, Body> {\n  if (`_response` in response) {\n    return response as WithResponse<T, Headers, Body>;\n  }\n\n  throw new TypeError(`Unexpected response object ${response}`);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport { AbortError } from \"@azure/abort-controller\";\n\nimport type {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  RequestPolicyFactory,\n  WebResourceLike as WebResource,\n  CompatResponse as HttpOperationResponse,\n} from \"@azure/core-http-compat\";\nimport { BaseRequestPolicy } from \"./RequestPolicy\";\nimport type { RestError } from \"@azure/core-rest-pipeline\";\n\nimport type { StorageRetryOptions } from \"../StorageRetryPolicyFactory\";\nimport { URLConstants } from \"../utils/constants\";\nimport { delay, setURLHost, setURLParameter } from \"../utils/utils.common\";\nimport { logger } from \"../log\";\n\n/**\n * A factory method used to generated a RetryPolicy factory.\n *\n * @param retryOptions -\n */\nexport function NewRetryPolicyFactory(retryOptions?: StorageRetryOptions): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy => {\n      return new StorageRetryPolicy(nextPolicy, options, retryOptions);\n    },\n  };\n}\n\n/**\n * RetryPolicy types.\n */\nexport enum StorageRetryPolicyType {\n  /**\n   * Exponential retry. Retry time delay grows exponentially.\n   */\n  EXPONENTIAL,\n  /**\n   * Linear retry. Retry time delay grows linearly.\n   */\n  FIXED,\n}\n\n// Default values of StorageRetryOptions\nconst DEFAULT_RETRY_OPTIONS: StorageRetryOptions = {\n  maxRetryDelayInMs: 120 * 1000,\n  maxTries: 4,\n  retryDelayInMs: 4 * 1000,\n  retryPolicyType: StorageRetryPolicyType.EXPONENTIAL,\n  secondaryHost: \"\",\n  tryTimeoutInMs: undefined, // Use server side default timeout strategy\n};\n\nconst RETRY_ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * Retry policy with exponential retry and linear retry implemented.\n */\nexport class StorageRetryPolicy extends BaseRequestPolicy {\n  /**\n   * RetryOptions.\n   */\n  private readonly retryOptions: StorageRetryOptions;\n\n  /**\n   * Creates an instance of RetryPolicy.\n   *\n   * @param nextPolicy -\n   * @param options -\n   * @param retryOptions -\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryOptions: StorageRetryOptions = DEFAULT_RETRY_OPTIONS,\n  ) {\n    super(nextPolicy, options);\n\n    // Initialize retry options\n    this.retryOptions = {\n      retryPolicyType: retryOptions.retryPolicyType\n        ? retryOptions.retryPolicyType\n        : DEFAULT_RETRY_OPTIONS.retryPolicyType,\n\n      maxTries:\n        retryOptions.maxTries && retryOptions.maxTries >= 1\n          ? Math.floor(retryOptions.maxTries)\n          : DEFAULT_RETRY_OPTIONS.maxTries,\n\n      tryTimeoutInMs:\n        retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0\n          ? retryOptions.tryTimeoutInMs\n          : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,\n\n      retryDelayInMs:\n        retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0\n          ? Math.min(\n              retryOptions.retryDelayInMs,\n              retryOptions.maxRetryDelayInMs\n                ? retryOptions.maxRetryDelayInMs\n                : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs!,\n            )\n          : DEFAULT_RETRY_OPTIONS.retryDelayInMs,\n\n      maxRetryDelayInMs:\n        retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0\n          ? retryOptions.maxRetryDelayInMs\n          : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs,\n\n      secondaryHost: retryOptions.secondaryHost\n        ? retryOptions.secondaryHost\n        : DEFAULT_RETRY_OPTIONS.secondaryHost,\n    };\n  }\n\n  /**\n   * Sends request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this.attemptSendRequest(request, false, 1);\n  }\n\n  /**\n   * Decide and perform next retry. Won't mutate request parameter.\n   *\n   * @param request -\n   * @param secondaryHas404 -  If attempt was against the secondary & it returned a StatusNotFound (404), then\n   *                                   the resource was not found. This may be due to replication delay. So, in this\n   *                                   case, we'll never try the secondary again for this operation.\n   * @param attempt -           How many retries has been attempted to performed, starting from 1, which includes\n   *                                   the attempt will be performed by this method call.\n   */\n  protected async attemptSendRequest(\n    request: WebResource,\n    secondaryHas404: boolean,\n    attempt: number,\n  ): Promise<HttpOperationResponse> {\n    const newRequest: WebResource = request.clone();\n\n    const isPrimaryRetry =\n      secondaryHas404 ||\n      !this.retryOptions.secondaryHost ||\n      !(request.method === \"GET\" || request.method === \"HEAD\" || request.method === \"OPTIONS\") ||\n      attempt % 2 === 1;\n\n    if (!isPrimaryRetry) {\n      newRequest.url = setURLHost(newRequest.url, this.retryOptions.secondaryHost!);\n    }\n\n    // Set the server-side timeout query parameter \"timeout=[seconds]\"\n    if (this.retryOptions.tryTimeoutInMs) {\n      newRequest.url = setURLParameter(\n        newRequest.url,\n        URLConstants.Parameters.TIMEOUT,\n        Math.floor(this.retryOptions.tryTimeoutInMs! / 1000).toString(),\n      );\n    }\n\n    let response: HttpOperationResponse | undefined;\n    try {\n      logger.info(`RetryPolicy: =====> Try=${attempt} ${isPrimaryRetry ? \"Primary\" : \"Secondary\"}`);\n      response = await this._nextPolicy.sendRequest(newRequest);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response)) {\n        return response;\n      }\n\n      secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n    } catch (err: any) {\n      logger.error(`RetryPolicy: Caught error, message: ${err.message}, code: ${err.code}`);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response, err)) {\n        throw err;\n      }\n    }\n\n    await this.delay(isPrimaryRetry, attempt, request.abortSignal);\n    return this.attemptSendRequest(request, secondaryHas404, ++attempt);\n  }\n\n  /**\n   * Decide whether to retry according to last HTTP response and retry counters.\n   *\n   * @param isPrimaryRetry -\n   * @param attempt -\n   * @param response -\n   * @param err -\n   */\n  protected shouldRetry(\n    isPrimaryRetry: boolean,\n    attempt: number,\n    response?: HttpOperationResponse,\n    err?: RestError,\n  ): boolean {\n    if (attempt >= this.retryOptions.maxTries!) {\n      logger.info(\n        `RetryPolicy: Attempt(s) ${attempt} >= maxTries ${this.retryOptions\n          .maxTries!}, no further try.`,\n      );\n      return false;\n    }\n\n    // Handle network failures, you may need to customize the list when you implement\n    // your own http client\n    const retriableErrors = [\n      \"ETIMEDOUT\",\n      \"ESOCKETTIMEDOUT\",\n      \"ECONNREFUSED\",\n      \"ECONNRESET\",\n      \"ENOENT\",\n      \"ENOTFOUND\",\n      \"TIMEOUT\",\n      \"EPIPE\",\n      \"REQUEST_SEND_ERROR\", // For default xhr based http client provided in ms-rest-js\n    ];\n    if (err) {\n      for (const retriableError of retriableErrors) {\n        if (\n          err.name.toUpperCase().includes(retriableError) ||\n          err.message.toUpperCase().includes(retriableError) ||\n          (err.code && err.code.toString().toUpperCase() === retriableError)\n        ) {\n          logger.info(`RetryPolicy: Network error ${retriableError} found, will retry.`);\n          return true;\n        }\n      }\n    }\n\n    // If attempt was against the secondary & it returned a StatusNotFound (404), then\n    // the resource was not found. This may be due to replication delay. So, in this\n    // case, we'll never try the secondary again for this operation.\n    if (response || err) {\n      const statusCode = response ? response.status : err ? err.statusCode : 0;\n      if (!isPrimaryRetry && statusCode === 404) {\n        logger.info(`RetryPolicy: Secondary access with 404, will retry.`);\n        return true;\n      }\n\n      // Server internal error or server timeout\n      if (statusCode === 503 || statusCode === 500) {\n        logger.info(`RetryPolicy: Will retry for status code ${statusCode}.`);\n        return true;\n      }\n    }\n\n    // [Copy source error code] Feature is pending on service side, skip retry on copy source error for now.\n    // if (response) {\n    //   // Retry select Copy Source Error Codes.\n    //   if (response?.status >= 400) {\n    //     const copySourceError = response.headers.get(HeaderConstants.X_MS_CopySourceErrorCode);\n    //     if (copySourceError !== undefined) {\n    //       switch (copySourceError) {\n    //         case \"InternalError\":\n    //         case \"OperationTimedOut\":\n    //         case \"ServerBusy\":\n    //           return true;\n    //       }\n    //     }\n    //   }\n    // }\n\n    if (err?.code === \"PARSE_ERROR\" && err?.message.startsWith(`Error \"Error: Unclosed root tag`)) {\n      logger.info(\n        \"RetryPolicy: Incomplete XML response likely due to service timeout, will retry.\",\n      );\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Delay a calculated time between retries.\n   *\n   * @param isPrimaryRetry -\n   * @param attempt -\n   * @param abortSignal -\n   */\n  private async delay(isPrimaryRetry: boolean, attempt: number, abortSignal?: AbortSignalLike) {\n    let delayTimeInMs: number = 0;\n\n    if (isPrimaryRetry) {\n      switch (this.retryOptions.retryPolicyType) {\n        case StorageRetryPolicyType.EXPONENTIAL:\n          delayTimeInMs = Math.min(\n            (Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs!,\n            this.retryOptions.maxRetryDelayInMs!,\n          );\n          break;\n        case StorageRetryPolicyType.FIXED:\n          delayTimeInMs = this.retryOptions.retryDelayInMs!;\n          break;\n      }\n    } else {\n      delayTimeInMs = Math.random() * 1000;\n    }\n\n    logger.info(`RetryPolicy: Delay for ${delayTimeInMs}ms`);\n    return delay(delayTimeInMs, abortSignal, RETRY_ABORT_ERROR);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  RequestPolicyFactory,\n} from \"@azure/core-http-compat\";\nimport { StorageRetryPolicy, StorageRetryPolicyType } from \"./policies/StorageRetryPolicy\";\n\nexport { StorageRetryPolicyType, StorageRetryPolicy };\n\n/**\n * Storage Blob retry options interface.\n */\nexport interface StorageRetryOptions {\n  /**\n   * Optional. StorageRetryPolicyType, default is exponential retry policy.\n   */\n  readonly retryPolicyType?: StorageRetryPolicyType;\n\n  /**\n   * Optional. Max try number of attempts, default is 4.\n   * A value of 1 means 1 try and no retries.\n   * A value smaller than 1 means default retry number of attempts.\n   */\n  readonly maxTries?: number;\n\n  /**\n   * Optional. Indicates the maximum time in ms allowed for any single try of an HTTP request.\n   * A value of zero or undefined means no default timeout on SDK client, Azure\n   * Storage server's default timeout policy will be used.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-blob-service-operations\n   */\n  readonly tryTimeoutInMs?: number;\n\n  /**\n   * Optional. Specifies the amount of delay to use before retrying an operation (default is 4s or 4 * 1000ms).\n   * The delay increases (exponentially or linearly) with each retry up to a maximum specified by\n   * maxRetryDelayInMs. If you specify 0, then you must also specify 0 for maxRetryDelayInMs.\n   */\n  readonly retryDelayInMs?: number;\n\n  /**\n   * Optional. Specifies the maximum delay allowed before retrying an operation (default is 120s or 120 * 1000ms).\n   * If you specify 0, then you must also specify 0 for retryDelayInMs.\n   */\n  readonly maxRetryDelayInMs?: number;\n\n  /**\n   * If a secondaryHost is specified, retries will be tried against this host. If secondaryHost is undefined\n   * (the default) then operations are not retried against another host.\n   *\n   * NOTE: Before setting this field, make sure you understand the issues around\n   * reading stale and potentially-inconsistent data at\n   * {@link https://docs.microsoft.com/en-us/azure/storage/common/storage-designing-ha-apps-with-ragrs}\n   */\n  readonly secondaryHost?: string;\n}\n\n/**\n * StorageRetryPolicyFactory is a factory class helping generating {@link StorageRetryPolicy} objects.\n */\nexport class StorageRetryPolicyFactory implements RequestPolicyFactory {\n  private retryOptions?: StorageRetryOptions;\n\n  /**\n   * Creates an instance of StorageRetryPolicyFactory.\n   * @param retryOptions -\n   */\n  constructor(retryOptions?: StorageRetryOptions) {\n    this.retryOptions = retryOptions;\n  }\n\n  /**\n   * Creates a StorageRetryPolicy object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy {\n    return new StorageRetryPolicy(nextPolicy, options, this.retryOptions);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport class StorageSharedKeyCredential {}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { BaseRequestPolicy } from \"./RequestPolicy\";\nimport type {\n  WebResourceLike as WebResource,\n  CompatResponse as HttpOperationResponse,\n} from \"@azure/core-http-compat\";\n\n/**\n * Credential policy used to sign HTTP(S) requests before sending. This is an\n * abstract class.\n */\nexport abstract class CredentialPolicy extends BaseRequestPolicy {\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(this.signRequest(request));\n  }\n\n  /**\n   * Child classes must implement this method with request signing. This method\n   * will be executed in {@link sendRequest}.\n   *\n   * @param request -\n   */\n  protected signRequest(request: WebResource): WebResource {\n    // Child classes must override this method with request signing. This method\n    // will be executed in sendRequest().\n    return request;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n} from \"@azure/core-http-compat\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources\n * or for use with Shared Access Signatures (SAS).\n */\nexport class AnonymousCredentialPolicy extends CredentialPolicy {\n  /**\n   * Creates an instance of AnonymousCredentialPolicy.\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n} from \"@azure/core-http-compat\";\nimport type { CredentialPolicy } from \"../policies/CredentialPolicy\";\n\n/**\n * Credential is an abstract class for Azure Storage HTTP requests signing. This\n * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n */\nexport abstract class Credential implements RequestPolicyFactory {\n  /**\n   * Creates a RequestPolicy object.\n   *\n   * @param _nextPolicy -\n   * @param _options -\n   */\n  public create(_nextPolicy: RequestPolicy, _options: RequestPolicyOptions): RequestPolicy {\n    throw new Error(\"Method should be implemented in children classes.\");\n  }\n}\n\n/**\n * A factory function that creates a new CredentialPolicy that uses the provided nextPolicy.\n */\nexport type CredentialPolicyCreator = (\n  nextPolicy: RequestPolicy,\n  options: RequestPolicyOptions,\n) => CredentialPolicy;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n} from \"@azure/core-http-compat\";\n\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * AnonymousCredentialPolicy objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n */\nexport class AnonymousCredential extends Credential {\n  /**\n   * Creates an {@link AnonymousCredentialPolicy} object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n  ): AnonymousCredentialPolicy {\n    return new AnonymousCredentialPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient } from \"@azure/core-rest-pipeline\";\nimport { createDefaultHttpClient } from \"@azure/core-rest-pipeline\";\n\nlet _defaultHttpClient: HttpClient;\n\nexport function getCachedDefaultHttpClient(): HttpClient {\n  if (!_defaultHttpClient) {\n    _defaultHttpClient = createDefaultHttpClient();\n  }\n  return _defaultHttpClient;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport type {\n  PipelinePolicy,\n  PipelineRequest,\n  SendRequest,\n  PipelineResponse,\n} from \"@azure/core-rest-pipeline\";\nimport { isRestError, RestError } from \"@azure/core-rest-pipeline\";\nimport { getErrorMessage } from \"@azure/core-util\";\nimport type { StorageRetryOptions } from \"../StorageRetryPolicyFactory\";\nimport { URLConstants } from \"../utils/constants\";\nimport { delay, setURLHost, setURLParameter } from \"../utils/utils.common\";\nimport { logger } from \"../log\";\n\n/**\n * Name of the {@link storageRetryPolicy}\n */\nexport const storageRetryPolicyName = \"storageRetryPolicy\";\n\n/**\n * RetryPolicy types.\n */\nexport enum StorageRetryPolicyType {\n  /**\n   * Exponential retry. Retry time delay grows exponentially.\n   */\n  EXPONENTIAL,\n  /**\n   * Linear retry. Retry time delay grows linearly.\n   */\n  FIXED,\n}\n\n// Default values of StorageRetryOptions\nconst DEFAULT_RETRY_OPTIONS = {\n  maxRetryDelayInMs: 120 * 1000,\n  maxTries: 4,\n  retryDelayInMs: 4 * 1000,\n  retryPolicyType: StorageRetryPolicyType.EXPONENTIAL,\n  secondaryHost: \"\",\n  tryTimeoutInMs: undefined, // Use server side default timeout strategy\n} as const;\n\nconst retriableErrors = [\n  \"ETIMEDOUT\",\n  \"ESOCKETTIMEDOUT\",\n  \"ECONNREFUSED\",\n  \"ECONNRESET\",\n  \"ENOENT\",\n  \"ENOTFOUND\",\n  \"TIMEOUT\",\n  \"EPIPE\",\n  \"REQUEST_SEND_ERROR\",\n] as const;\n\nconst RETRY_ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * Retry policy with exponential retry and linear retry implemented.\n */\nexport function storageRetryPolicy(options: StorageRetryOptions = {}): PipelinePolicy {\n  const retryPolicyType = options.retryPolicyType ?? DEFAULT_RETRY_OPTIONS.retryPolicyType;\n  const maxTries = options.maxTries ?? DEFAULT_RETRY_OPTIONS.maxTries;\n  const retryDelayInMs = options.retryDelayInMs ?? DEFAULT_RETRY_OPTIONS.retryDelayInMs;\n  const maxRetryDelayInMs = options.maxRetryDelayInMs ?? DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs;\n  const secondaryHost = options.secondaryHost ?? DEFAULT_RETRY_OPTIONS.secondaryHost;\n  const tryTimeoutInMs = options.tryTimeoutInMs ?? DEFAULT_RETRY_OPTIONS.tryTimeoutInMs;\n\n  function shouldRetry({\n    isPrimaryRetry,\n    attempt,\n    response,\n    error,\n  }: {\n    isPrimaryRetry: boolean;\n    attempt: number;\n    response?: PipelineResponse;\n    error?: RestError;\n  }): boolean {\n    if (attempt >= maxTries) {\n      logger.info(`RetryPolicy: Attempt(s) ${attempt} >= maxTries ${maxTries}, no further try.`);\n      return false;\n    }\n    if (error) {\n      for (const retriableError of retriableErrors) {\n        if (\n          error.name.toUpperCase().includes(retriableError) ||\n          error.message.toUpperCase().includes(retriableError) ||\n          (error.code && error.code.toString().toUpperCase() === retriableError)\n        ) {\n          logger.info(`RetryPolicy: Network error ${retriableError} found, will retry.`);\n          return true;\n        }\n      }\n      if (\n        error?.code === \"PARSE_ERROR\" &&\n        error?.message.startsWith(`Error \"Error: Unclosed root tag`)\n      ) {\n        logger.info(\n          \"RetryPolicy: Incomplete XML response likely due to service timeout, will retry.\",\n        );\n        return true;\n      }\n    }\n\n    // If attempt was against the secondary & it returned a StatusNotFound (404), then\n    // the resource was not found. This may be due to replication delay. So, in this\n    // case, we'll never try the secondary again for this operation.\n    if (response || error) {\n      const statusCode = response?.status ?? error?.statusCode ?? 0;\n      if (!isPrimaryRetry && statusCode === 404) {\n        logger.info(`RetryPolicy: Secondary access with 404, will retry.`);\n        return true;\n      }\n\n      // Server internal error or server timeout\n      if (statusCode === 503 || statusCode === 500) {\n        logger.info(`RetryPolicy: Will retry for status code ${statusCode}.`);\n        return true;\n      }\n    }\n\n    // [Copy source error code] Feature is pending on service side, skip retry on copy source error for now.\n    // if (response) {\n    //   // Retry select Copy Source Error Codes.\n    //   if (response?.status >= 400) {\n    //     const copySourceError = response.headers.get(HeaderConstants.X_MS_CopySourceErrorCode);\n    //     if (copySourceError !== undefined) {\n    //       switch (copySourceError) {\n    //         case \"InternalError\":\n    //         case \"OperationTimedOut\":\n    //         case \"ServerBusy\":\n    //           return true;\n    //       }\n    //     }\n    //   }\n    // }\n\n    return false;\n  }\n  function calculateDelay(isPrimaryRetry: boolean, attempt: number): number {\n    let delayTimeInMs = 0;\n\n    if (isPrimaryRetry) {\n      switch (retryPolicyType) {\n        case StorageRetryPolicyType.EXPONENTIAL:\n          delayTimeInMs = Math.min(\n            (Math.pow(2, attempt - 1) - 1) * retryDelayInMs,\n            maxRetryDelayInMs,\n          );\n          break;\n        case StorageRetryPolicyType.FIXED:\n          delayTimeInMs = retryDelayInMs;\n          break;\n      }\n    } else {\n      delayTimeInMs = Math.random() * 1000;\n    }\n\n    logger.info(`RetryPolicy: Delay for ${delayTimeInMs}ms`);\n    return delayTimeInMs;\n  }\n  return {\n    name: storageRetryPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      // Set the server-side timeout query parameter \"timeout=[seconds]\"\n      if (tryTimeoutInMs) {\n        request.url = setURLParameter(\n          request.url,\n          URLConstants.Parameters.TIMEOUT,\n          String(Math.floor(tryTimeoutInMs / 1000)),\n        );\n      }\n      const primaryUrl = request.url;\n      const secondaryUrl = secondaryHost ? setURLHost(request.url, secondaryHost) : undefined;\n      let secondaryHas404 = false;\n      let attempt = 1;\n      let retryAgain = true;\n      let response: PipelineResponse | undefined;\n      let error: RestError | undefined;\n      while (retryAgain) {\n        const isPrimaryRetry: boolean =\n          secondaryHas404 ||\n          !secondaryUrl ||\n          ![\"GET\", \"HEAD\", \"OPTIONS\"].includes(request.method) ||\n          attempt % 2 === 1;\n        request.url = isPrimaryRetry ? primaryUrl : secondaryUrl!;\n        response = undefined;\n        error = undefined;\n        try {\n          logger.info(\n            `RetryPolicy: =====> Try=${attempt} ${isPrimaryRetry ? \"Primary\" : \"Secondary\"}`,\n          );\n          response = await next(request);\n          secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n        } catch (e: unknown) {\n          if (isRestError(e)) {\n            logger.error(`RetryPolicy: Caught error, message: ${e.message}, code: ${e.code}`);\n            error = e;\n          } else {\n            logger.error(`RetryPolicy: Caught error, message: ${getErrorMessage(e)}`);\n            throw e;\n          }\n        }\n        retryAgain = shouldRetry({ isPrimaryRetry, attempt, response, error });\n        if (retryAgain) {\n          await delay(\n            calculateDelay(isPrimaryRetry, attempt),\n            request.abortSignal,\n            RETRY_ABORT_ERROR,\n          );\n        }\n        attempt++;\n      }\n      if (response) {\n        return response;\n      }\n      throw error ?? new RestError(\"RetryPolicy failed without known error.\");\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  WebResourceLike as WebResource,\n  CompatResponse as HttpOperationResponse,\n} from \"@azure/core-http-compat\";\nimport { BaseRequestPolicy } from \"./RequestPolicy\";\nimport { isNode } from \"@azure/core-util\";\n\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n\n/**\n * StorageBrowserPolicy will handle differences between Node.js and browser runtime, including:\n *\n * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n * StorageBrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n * thus avoid the browser cache.\n *\n * 2. Remove cookie header for security\n *\n * 3. Remove content-length header to avoid browsers warning\n */\nexport class StorageBrowserPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of StorageBrowserPolicy.\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    if (request.method.toUpperCase() === \"GET\" || request.method.toUpperCase() === \"HEAD\") {\n      request.url = setURLParameter(\n        request.url,\n        URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,\n        new Date().getTime().toString(),\n      );\n    }\n\n    request.headers.remove(HeaderConstants.COOKIE);\n\n    // According to XHR standards, content-length should be fully controlled by browsers\n    request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  RequestPolicy,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  RequestPolicyFactory,\n} from \"@azure/core-http-compat\";\nimport { StorageBrowserPolicy } from \"./policies/StorageBrowserPolicy\";\nexport { StorageBrowserPolicy };\n\n/**\n * StorageBrowserPolicyFactory is a factory class helping generating StorageBrowserPolicy objects.\n */\nexport class StorageBrowserPolicyFactory implements RequestPolicyFactory {\n  /**\n   * Creates a StorageBrowserPolicyFactory object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageBrowserPolicy {\n    return new StorageBrowserPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  KeepAliveOptions,\n  ExtendedServiceClientOptions,\n  HttpPipelineLogLevel,\n} from \"@azure/core-http-compat\";\nimport {\n  CompatResponse as HttpOperationResponse,\n  RequestPolicy as IHttpClient,\n  HttpHeadersLike as HttpHeaders,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptionsLike as RequestPolicyOptions,\n  WebResourceLike as WebResource,\n  convertHttpClient,\n  createRequestPolicyFactoryPolicy,\n} from \"@azure/core-http-compat\";\nimport type {\n  ProxySettings as ProxyOptions,\n  UserAgentPolicyOptions as UserAgentOptions,\n  Pipeline as CorePipeline,\n  PipelinePolicy,\n  HttpClient,\n} from \"@azure/core-rest-pipeline\";\nimport {\n  RequestBodyType as HttpRequestBody,\n  bearerTokenAuthenticationPolicy,\n  decompressResponsePolicyName,\n} from \"@azure/core-rest-pipeline\";\nimport { authorizeRequestOnTenantChallenge, createClientPipeline } from \"@azure/core-client\";\nimport { parseXML, stringifyXML } from \"@azure/core-xml\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport { isTokenCredential } from \"@azure/core-auth\";\n\nimport { logger } from \"./log\";\nimport type { StorageRetryOptions } from \"./StorageRetryPolicyFactory\";\nimport { StorageRetryPolicyFactory } from \"./StorageRetryPolicyFactory\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport {\n  StorageOAuthScopes,\n  StorageBlobLoggingAllowedHeaderNames,\n  StorageBlobLoggingAllowedQueryParameters,\n  SDK_VERSION,\n} from \"./utils/constants\";\nimport { getCachedDefaultHttpClient } from \"./utils/cache\";\nimport { storageBrowserPolicy } from \"./policies/StorageBrowserPolicyV2\";\nimport { storageRetryPolicy } from \"./policies/StorageRetryPolicyV2\";\nimport { storageSharedKeyCredentialPolicy } from \"./policies/StorageSharedKeyCredentialPolicyV2\";\nimport { StorageBrowserPolicyFactory } from \"./StorageBrowserPolicyFactory\";\nimport { storageCorrectContentLengthPolicy } from \"./policies/StorageCorrectContentLengthPolicy\";\n\n// Export following interfaces and types for customers who want to implement their\n// own RequestPolicy or HTTPClient\nexport {\n  StorageOAuthScopes,\n  IHttpClient,\n  HttpHeaders,\n  HttpRequestBody,\n  HttpOperationResponse,\n  WebResource,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions,\n};\n\n/**\n * A subset of `@azure/core-http` ServiceClientOptions\n */\nexport interface ServiceClientOptions {\n  /**\n   * Optional. Configures the HTTP client to send requests and receive responses.\n   */\n  httpClient?: IHttpClient;\n  /**\n   * Optional. Overrides the default policy factories.\n   */\n  requestPolicyFactories?:\n    | RequestPolicyFactory[]\n    | ((defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | RequestPolicyFactory[]);\n}\n\n/**\n * Option interface for Pipeline constructor.\n */\nexport interface PipelineOptions {\n  /**\n   * Optional. Configures the HTTP client to send requests and receive responses.\n   */\n  httpClient?: IHttpClient;\n}\n\n/**\n * An interface for the {@link Pipeline} class containing HTTP request policies.\n * You can create a default Pipeline by calling {@link newPipeline}.\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n *\n * Refer to {@link newPipeline} and provided policies before implementing your\n * customized Pipeline.\n */\nexport interface PipelineLike {\n  /**\n   * A list of chained request policy factories.\n   */\n  readonly factories: RequestPolicyFactory[];\n  /**\n   * Configures pipeline logger and HTTP client.\n   */\n  readonly options: PipelineOptions;\n  /**\n   * Transfer Pipeline object to ServiceClientOptions object which is required by\n   * ServiceClient constructor.\n   *\n   * @returns The ServiceClientOptions object from this Pipeline.\n   */\n  toServiceClientOptions(): ServiceClientOptions;\n}\n\n/**\n * A helper to decide if a given argument satisfies the Pipeline contract\n * @param pipeline - An argument that may be a Pipeline\n * @returns true when the argument satisfies the Pipeline contract\n */\nexport function isPipelineLike(pipeline: unknown): pipeline is PipelineLike {\n  if (!pipeline || typeof pipeline !== \"object\") {\n    return false;\n  }\n\n  const castPipeline = pipeline as PipelineLike;\n\n  return (\n    Array.isArray(castPipeline.factories) &&\n    typeof castPipeline.options === \"object\" &&\n    typeof castPipeline.toServiceClientOptions === \"function\"\n  );\n}\n\n/**\n * A Pipeline class containing HTTP request policies.\n * You can create a default Pipeline by calling {@link newPipeline}.\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n *\n * Refer to {@link newPipeline} and provided policies before implementing your\n * customized Pipeline.\n */\nexport class Pipeline implements PipelineLike {\n  /**\n   * A list of chained request policy factories.\n   */\n  public readonly factories: RequestPolicyFactory[];\n  /**\n   * Configures pipeline logger and HTTP client.\n   */\n  public readonly options: PipelineOptions;\n\n  /**\n   * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.\n   *\n   * @param factories -\n   * @param options -\n   */\n  constructor(factories: RequestPolicyFactory[], options: PipelineOptions = {}) {\n    this.factories = factories;\n    this.options = options;\n  }\n\n  /**\n   * Transfer Pipeline object to ServiceClientOptions object which is required by\n   * ServiceClient constructor.\n   *\n   * @returns The ServiceClientOptions object from this Pipeline.\n   */\n  public toServiceClientOptions(): ServiceClientOptions {\n    return {\n      httpClient: this.options.httpClient,\n      requestPolicyFactories: this.factories,\n    };\n  }\n}\n\n/**\n * Options interface for the {@link newPipeline} function.\n */\nexport interface StoragePipelineOptions {\n  /**\n   * Options to configure a proxy for outgoing requests.\n   */\n  proxyOptions?: ProxyOptions;\n  /**\n   * Options for adding user agent details to outgoing requests.\n   */\n  userAgentOptions?: UserAgentOptions;\n  /**\n   * Configures the built-in retry policy behavior.\n   */\n  retryOptions?: StorageRetryOptions;\n  /**\n   * Keep alive configurations. Default keep-alive is enabled.\n   */\n  keepAliveOptions?: KeepAliveOptions;\n  /**\n   * Configures the HTTP client to send requests and receive responses.\n   */\n  httpClient?: IHttpClient;\n  /**\n   * The audience used to retrieve an AAD token.\n   * By default, audience 'https://storage.azure.com/.default' will be used.\n   */\n  audience?: string | string[];\n}\n\n/**\n * Creates a new Pipeline object with Credential provided.\n *\n * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n * @param pipelineOptions - Optional. Options.\n * @returns A new Pipeline object.\n */\nexport function newPipeline(\n  credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n  pipelineOptions: StoragePipelineOptions = {},\n): Pipeline {\n  if (!credential) {\n    credential = new AnonymousCredential();\n  }\n  const pipeline = new Pipeline([], pipelineOptions);\n  (pipeline as any)._credential = credential;\n  return pipeline;\n}\n\nfunction processDownlevelPipeline(\n  pipeline: PipelineLike,\n): { wrappedPolicies: PipelinePolicy; afterRetry: boolean } | undefined {\n  const knownFactoryFunctions = [\n    isAnonymousCredential,\n    isStorageSharedKeyCredential,\n    isCoreHttpBearerTokenFactory,\n    isStorageBrowserPolicyFactory,\n    isStorageRetryPolicyFactory,\n    isStorageTelemetryPolicyFactory,\n    isCoreHttpPolicyFactory,\n  ];\n  if (pipeline.factories.length) {\n    const novelFactories = pipeline.factories.filter((factory) => {\n      return !knownFactoryFunctions.some((knownFactory) => knownFactory(factory));\n    });\n    if (novelFactories.length) {\n      const hasInjector = novelFactories.some((factory) => isInjectorPolicyFactory(factory));\n      // if there are any left over, wrap in a requestPolicyFactoryPolicy\n      return {\n        wrappedPolicies: createRequestPolicyFactoryPolicy(novelFactories),\n        afterRetry: hasInjector,\n      };\n    }\n  }\n  return undefined;\n}\n\nexport function getCoreClientOptions(pipeline: PipelineLike): ExtendedServiceClientOptions {\n  const { httpClient: v1Client, ...restOptions } = pipeline.options as StoragePipelineOptions;\n\n  let httpClient: HttpClient = (pipeline as any)._coreHttpClient;\n  if (!httpClient) {\n    httpClient = v1Client ? convertHttpClient(v1Client) : getCachedDefaultHttpClient();\n    (pipeline as any)._coreHttpClient = httpClient;\n  }\n\n  let corePipeline: CorePipeline = (pipeline as any)._corePipeline;\n  if (!corePipeline) {\n    const packageDetails = `azsdk-js-azure-storage-blob/${SDK_VERSION}`;\n    const userAgentPrefix =\n      restOptions.userAgentOptions && restOptions.userAgentOptions.userAgentPrefix\n        ? `${restOptions.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n    corePipeline = createClientPipeline({\n      ...restOptions,\n      loggingOptions: {\n        additionalAllowedHeaderNames: StorageBlobLoggingAllowedHeaderNames,\n        additionalAllowedQueryParameters: StorageBlobLoggingAllowedQueryParameters,\n        logger: logger.info,\n      },\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      serializationOptions: {\n        stringifyXML,\n        serializerOptions: {\n          xml: {\n            // Use customized XML char key of \"#\" so we can deserialize metadata\n            // with \"_\" key\n            xmlCharKey: \"#\",\n          },\n        },\n      },\n      deserializationOptions: {\n        parseXML,\n        serializerOptions: {\n          xml: {\n            // Use customized XML char key of \"#\" so we can deserialize metadata\n            // with \"_\" key\n            xmlCharKey: \"#\",\n          },\n        },\n      },\n    });\n    corePipeline.removePolicy({ phase: \"Retry\" });\n    corePipeline.removePolicy({ name: decompressResponsePolicyName });\n    corePipeline.addPolicy(storageCorrectContentLengthPolicy());\n    corePipeline.addPolicy(storageRetryPolicy(restOptions.retryOptions), { phase: \"Retry\" });\n    corePipeline.addPolicy(storageBrowserPolicy());\n    const downlevelResults = processDownlevelPipeline(pipeline);\n    if (downlevelResults) {\n      corePipeline.addPolicy(\n        downlevelResults.wrappedPolicies,\n        downlevelResults.afterRetry ? { afterPhase: \"Retry\" } : undefined,\n      );\n    }\n    const credential = getCredentialFromPipeline(pipeline);\n    if (isTokenCredential(credential)) {\n      corePipeline.addPolicy(\n        bearerTokenAuthenticationPolicy({\n          credential,\n          scopes: restOptions.audience ?? StorageOAuthScopes,\n          challengeCallbacks: { authorizeRequestOnChallenge: authorizeRequestOnTenantChallenge },\n        }),\n        { phase: \"Sign\" },\n      );\n    } else if (credential instanceof StorageSharedKeyCredential) {\n      corePipeline.addPolicy(\n        storageSharedKeyCredentialPolicy({\n          accountName: credential.accountName,\n          accountKey: (credential as any).accountKey,\n        }),\n        { phase: \"Sign\" },\n      );\n    }\n    (pipeline as any)._corePipeline = corePipeline;\n  }\n  return {\n    ...restOptions,\n    allowInsecureConnection: true,\n    httpClient,\n    pipeline: corePipeline,\n  };\n}\n\nexport function getCredentialFromPipeline(\n  pipeline: PipelineLike,\n): StorageSharedKeyCredential | AnonymousCredential | TokenCredential {\n  // see if we squirreled one away on the type itself\n  if ((pipeline as any)._credential) {\n    return (pipeline as any)._credential;\n  }\n  // if it came from another package, loop over the factories and look for one like before\n  let credential = new AnonymousCredential();\n  for (const factory of pipeline.factories) {\n    if (isTokenCredential((factory as any).credential)) {\n      // Only works if the factory has been attached a \"credential\" property.\n      // We do that in newPipeline() when using TokenCredential.\n      credential = (factory as any).credential;\n    } else if (isStorageSharedKeyCredential(factory)) {\n      return factory;\n    }\n  }\n  return credential;\n}\n\nfunction isStorageSharedKeyCredential(\n  factory: RequestPolicyFactory,\n): factory is StorageSharedKeyCredential {\n  if (factory instanceof StorageSharedKeyCredential) {\n    return true;\n  }\n  return factory.constructor.name === \"StorageSharedKeyCredential\";\n}\n\nfunction isAnonymousCredential(factory: RequestPolicyFactory): factory is AnonymousCredential {\n  if (factory instanceof AnonymousCredential) {\n    return true;\n  }\n  return factory.constructor.name === \"AnonymousCredential\";\n}\n\nfunction isCoreHttpBearerTokenFactory(factory: RequestPolicyFactory): boolean {\n  return isTokenCredential((factory as any).credential);\n}\n\nfunction isStorageBrowserPolicyFactory(\n  factory: RequestPolicyFactory,\n): factory is StorageBrowserPolicyFactory {\n  if (factory instanceof StorageBrowserPolicyFactory) {\n    return true;\n  }\n  return factory.constructor.name === \"StorageBrowserPolicyFactory\";\n}\n\nfunction isStorageRetryPolicyFactory(\n  factory: RequestPolicyFactory,\n): factory is StorageRetryPolicyFactory {\n  if (factory instanceof StorageRetryPolicyFactory) {\n    return true;\n  }\n  return factory.constructor.name === \"StorageRetryPolicyFactory\";\n}\n\nfunction isStorageTelemetryPolicyFactory(factory: RequestPolicyFactory): boolean {\n  return factory.constructor.name === \"TelemetryPolicyFactory\";\n}\n\nfunction isInjectorPolicyFactory(factory: RequestPolicyFactory): boolean {\n  return factory.constructor.name === \"InjectorPolicyFactory\";\n}\n\nfunction isCoreHttpPolicyFactory(factory: RequestPolicyFactory): boolean {\n  const knownPolicies = [\n    \"GenerateClientRequestIdPolicy\",\n    \"TracingPolicy\",\n    \"LogPolicy\",\n    \"ProxyPolicy\",\n    \"DisableResponseDecompressionPolicy\",\n    \"KeepAlivePolicy\",\n    \"DeserializationPolicy\",\n  ];\n\n  const mockHttpClient: IHttpClient = {\n    sendRequest: async (request: WebResource) => {\n      return {\n        request,\n        headers: request.headers.clone(),\n        status: 500,\n      };\n    },\n  };\n  const mockRequestPolicyOptions: RequestPolicyOptions = {\n    log(_logLevel: HttpPipelineLogLevel, _message: string): void {\n      /* do nothing */\n    },\n    shouldLog(_logLevel: HttpPipelineLogLevel): boolean {\n      return false;\n    },\n  };\n  const policyInstance = factory.create(mockHttpClient, mockRequestPolicyOptions);\n  const policyName = policyInstance.constructor.name;\n  // bundlers sometimes add a custom suffix to the class name to make it unique\n  return knownPolicies.some((knownPolicyName) => {\n    return policyName.startsWith(knownPolicyName);\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { HttpClient, PipelineRequest, PipelineResponse } from \"@azure/core-rest-pipeline\";\nimport type { RequestPolicy } from \"./policies/requestPolicyFactoryPolicy.js\";\nimport { toPipelineResponse } from \"./response.js\";\nimport { toWebResourceLike } from \"./util.js\";\n\n/**\n * Converts a RequestPolicy based HttpClient to a PipelineRequest based HttpClient.\n * @param requestPolicyClient - A HttpClient compatible with core-http\n * @returns A HttpClient compatible with core-rest-pipeline\n */\nexport function convertHttpClient(requestPolicyClient: RequestPolicy): HttpClient {\n  return {\n    sendRequest: async (request: PipelineRequest): Promise<PipelineResponse> => {\n      const response = await requestPolicyClient.sendRequest(\n        toWebResourceLike(request, { createProxy: true }),\n      );\n      return toPipelineResponse(response);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n  PipelinePolicy,\n} from \"@azure/core-rest-pipeline\";\n\n/**\n * The programmatic identifier of the storageCorrectContentLengthPolicy.\n */\nexport const storageCorrectContentLengthPolicyName = \"StorageCorrectContentLengthPolicy\";\n\n/**\n * storageCorrectContentLengthPolicy to correctly set Content-Length header with request body length.\n */\nexport function storageCorrectContentLengthPolicy(): PipelinePolicy {\n  return {\n    name: storageCorrectContentLengthPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n  PipelinePolicy,\n} from \"@azure/core-rest-pipeline\";\nimport { isNode } from \"@azure/core-util\";\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n\n/**\n * The programmatic identifier of the StorageBrowserPolicy.\n */\nexport const storageBrowserPolicyName = \"storageBrowserPolicy\";\n\n/**\n * storageBrowserPolicy is a policy used to prevent browsers from caching requests\n * and to remove cookies and explicit content-length headers.\n */\nexport function storageBrowserPolicy(): PipelinePolicy {\n  return {\n    name: storageBrowserPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      if (isNode) {\n        return next(request);\n      }\n\n      if (request.method === \"GET\" || request.method === \"HEAD\") {\n        request.url = setURLParameter(\n          request.url,\n          URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,\n          new Date().getTime().toString(),\n        );\n      }\n\n      request.headers.delete(HeaderConstants.COOKIE);\n\n      // According to XHR standards, content-length should be fully controlled by browsers\n      request.headers.delete(HeaderConstants.CONTENT_LENGTH);\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n  PipelinePolicy,\n} from \"@azure/core-rest-pipeline\";\n/**\n * The programmatic identifier of the storageSharedKeyCredentialPolicy.\n */\nexport const storageSharedKeyCredentialPolicyName = \"storageSharedKeyCredentialPolicy\";\n\n/**\n * Options used to configure StorageSharedKeyCredentialPolicy.\n */\nexport interface StorageSharedKeyCredentialPolicyOptions {\n  accountName: string;\n  accountKey: Buffer;\n}\n\n/**\n * storageSharedKeyCredentialPolicy handles signing requests using storage account keys.\n */\nexport function storageSharedKeyCredentialPolicy(\n  _options: StorageSharedKeyCredentialPolicyOptions,\n): PipelinePolicy {\n  return {\n    name: storageSharedKeyCredentialPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      return next(request);\n    },\n  };\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const BlobServiceProperties: coreClient.CompositeMapper = {\n  serializedName: \"BlobServiceProperties\",\n  xmlName: \"StorageServiceProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobServiceProperties\",\n    modelProperties: {\n      blobAnalyticsLogging: {\n        serializedName: \"Logging\",\n        xmlName: \"Logging\",\n        type: {\n          name: \"Composite\",\n          className: \"Logging\",\n        },\n      },\n      hourMetrics: {\n        serializedName: \"HourMetrics\",\n        xmlName: \"HourMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\",\n        },\n      },\n      minuteMetrics: {\n        serializedName: \"MinuteMetrics\",\n        xmlName: \"MinuteMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\",\n        },\n      },\n      cors: {\n        serializedName: \"Cors\",\n        xmlName: \"Cors\",\n        xmlIsWrapped: true,\n        xmlElementName: \"CorsRule\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CorsRule\",\n            },\n          },\n        },\n      },\n      defaultServiceVersion: {\n        serializedName: \"DefaultServiceVersion\",\n        xmlName: \"DefaultServiceVersion\",\n        type: {\n          name: \"String\",\n        },\n      },\n      deleteRetentionPolicy: {\n        serializedName: \"DeleteRetentionPolicy\",\n        xmlName: \"DeleteRetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\",\n        },\n      },\n      staticWebsite: {\n        serializedName: \"StaticWebsite\",\n        xmlName: \"StaticWebsite\",\n        type: {\n          name: \"Composite\",\n          className: \"StaticWebsite\",\n        },\n      },\n    },\n  },\n};\n\nexport const Logging: coreClient.CompositeMapper = {\n  serializedName: \"Logging\",\n  type: {\n    name: \"Composite\",\n    className: \"Logging\",\n    modelProperties: {\n      version: {\n        serializedName: \"Version\",\n        required: true,\n        xmlName: \"Version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      deleteProperty: {\n        serializedName: \"Delete\",\n        required: true,\n        xmlName: \"Delete\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      read: {\n        serializedName: \"Read\",\n        required: true,\n        xmlName: \"Read\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      write: {\n        serializedName: \"Write\",\n        required: true,\n        xmlName: \"Write\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      retentionPolicy: {\n        serializedName: \"RetentionPolicy\",\n        xmlName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\",\n        },\n      },\n    },\n  },\n};\n\nexport const RetentionPolicy: coreClient.CompositeMapper = {\n  serializedName: \"RetentionPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"RetentionPolicy\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      days: {\n        constraints: {\n          InclusiveMinimum: 1,\n        },\n        serializedName: \"Days\",\n        xmlName: \"Days\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Metrics: coreClient.CompositeMapper = {\n  serializedName: \"Metrics\",\n  type: {\n    name: \"Composite\",\n    className: \"Metrics\",\n    modelProperties: {\n      version: {\n        serializedName: \"Version\",\n        xmlName: \"Version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      includeAPIs: {\n        serializedName: \"IncludeAPIs\",\n        xmlName: \"IncludeAPIs\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      retentionPolicy: {\n        serializedName: \"RetentionPolicy\",\n        xmlName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\",\n        },\n      },\n    },\n  },\n};\n\nexport const CorsRule: coreClient.CompositeMapper = {\n  serializedName: \"CorsRule\",\n  type: {\n    name: \"Composite\",\n    className: \"CorsRule\",\n    modelProperties: {\n      allowedOrigins: {\n        serializedName: \"AllowedOrigins\",\n        required: true,\n        xmlName: \"AllowedOrigins\",\n        type: {\n          name: \"String\",\n        },\n      },\n      allowedMethods: {\n        serializedName: \"AllowedMethods\",\n        required: true,\n        xmlName: \"AllowedMethods\",\n        type: {\n          name: \"String\",\n        },\n      },\n      allowedHeaders: {\n        serializedName: \"AllowedHeaders\",\n        required: true,\n        xmlName: \"AllowedHeaders\",\n        type: {\n          name: \"String\",\n        },\n      },\n      exposedHeaders: {\n        serializedName: \"ExposedHeaders\",\n        required: true,\n        xmlName: \"ExposedHeaders\",\n        type: {\n          name: \"String\",\n        },\n      },\n      maxAgeInSeconds: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"MaxAgeInSeconds\",\n        required: true,\n        xmlName: \"MaxAgeInSeconds\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const StaticWebsite: coreClient.CompositeMapper = {\n  serializedName: \"StaticWebsite\",\n  type: {\n    name: \"Composite\",\n    className: \"StaticWebsite\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      indexDocument: {\n        serializedName: \"IndexDocument\",\n        xmlName: \"IndexDocument\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorDocument404Path: {\n        serializedName: \"ErrorDocument404Path\",\n        xmlName: \"ErrorDocument404Path\",\n        type: {\n          name: \"String\",\n        },\n      },\n      defaultIndexDocumentPath: {\n        serializedName: \"DefaultIndexDocumentPath\",\n        xmlName: \"DefaultIndexDocumentPath\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const StorageError: coreClient.CompositeMapper = {\n  serializedName: \"StorageError\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageError\",\n    modelProperties: {\n      message: {\n        serializedName: \"Message\",\n        xmlName: \"Message\",\n        type: {\n          name: \"String\",\n        },\n      },\n      code: {\n        serializedName: \"Code\",\n        xmlName: \"Code\",\n        type: {\n          name: \"String\",\n        },\n      },\n      authenticationErrorDetail: {\n        serializedName: \"AuthenticationErrorDetail\",\n        xmlName: \"AuthenticationErrorDetail\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobServiceStatistics: coreClient.CompositeMapper = {\n  serializedName: \"BlobServiceStatistics\",\n  xmlName: \"StorageServiceStats\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobServiceStatistics\",\n    modelProperties: {\n      geoReplication: {\n        serializedName: \"GeoReplication\",\n        xmlName: \"GeoReplication\",\n        type: {\n          name: \"Composite\",\n          className: \"GeoReplication\",\n        },\n      },\n    },\n  },\n};\n\nexport const GeoReplication: coreClient.CompositeMapper = {\n  serializedName: \"GeoReplication\",\n  type: {\n    name: \"Composite\",\n    className: \"GeoReplication\",\n    modelProperties: {\n      status: {\n        serializedName: \"Status\",\n        required: true,\n        xmlName: \"Status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"live\", \"bootstrap\", \"unavailable\"],\n        },\n      },\n      lastSyncOn: {\n        serializedName: \"LastSyncTime\",\n        required: true,\n        xmlName: \"LastSyncTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ListContainersSegmentResponse: coreClient.CompositeMapper = {\n  serializedName: \"ListContainersSegmentResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListContainersSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\",\n        },\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\",\n        },\n      },\n      maxPageSize: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      containerItems: {\n        serializedName: \"ContainerItems\",\n        required: true,\n        xmlName: \"Containers\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Container\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerItem\",\n            },\n          },\n        },\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerItem: coreClient.CompositeMapper = {\n  serializedName: \"ContainerItem\",\n  xmlName: \"Container\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      deleted: {\n        serializedName: \"Deleted\",\n        xmlName: \"Deleted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      version: {\n        serializedName: \"Version\",\n        xmlName: \"Version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      properties: {\n        serializedName: \"Properties\",\n        xmlName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerProperties\",\n        },\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        xmlName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerProperties: coreClient.CompositeMapper = {\n  serializedName: \"ContainerProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerProperties\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"Last-Modified\",\n        required: true,\n        xmlName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      etag: {\n        serializedName: \"Etag\",\n        required: true,\n        xmlName: \"Etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      leaseStatus: {\n        serializedName: \"LeaseStatus\",\n        xmlName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"LeaseState\",\n        xmlName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseDuration: {\n        serializedName: \"LeaseDuration\",\n        xmlName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      publicAccess: {\n        serializedName: \"PublicAccess\",\n        xmlName: \"PublicAccess\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"container\", \"blob\"],\n        },\n      },\n      hasImmutabilityPolicy: {\n        serializedName: \"HasImmutabilityPolicy\",\n        xmlName: \"HasImmutabilityPolicy\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      hasLegalHold: {\n        serializedName: \"HasLegalHold\",\n        xmlName: \"HasLegalHold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      defaultEncryptionScope: {\n        serializedName: \"DefaultEncryptionScope\",\n        xmlName: \"DefaultEncryptionScope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      preventEncryptionScopeOverride: {\n        serializedName: \"DenyEncryptionScopeOverride\",\n        xmlName: \"DenyEncryptionScopeOverride\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      deletedOn: {\n        serializedName: \"DeletedTime\",\n        xmlName: \"DeletedTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      remainingRetentionDays: {\n        serializedName: \"RemainingRetentionDays\",\n        xmlName: \"RemainingRetentionDays\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isImmutableStorageWithVersioningEnabled: {\n        serializedName: \"ImmutableStorageWithVersioningEnabled\",\n        xmlName: \"ImmutableStorageWithVersioningEnabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const KeyInfo: coreClient.CompositeMapper = {\n  serializedName: \"KeyInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"KeyInfo\",\n    modelProperties: {\n      startsOn: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"String\",\n        },\n      },\n      expiresOn: {\n        serializedName: \"Expiry\",\n        required: true,\n        xmlName: \"Expiry\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const UserDelegationKey: coreClient.CompositeMapper = {\n  serializedName: \"UserDelegationKey\",\n  type: {\n    name: \"Composite\",\n    className: \"UserDelegationKey\",\n    modelProperties: {\n      signedObjectId: {\n        serializedName: \"SignedOid\",\n        required: true,\n        xmlName: \"SignedOid\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signedTenantId: {\n        serializedName: \"SignedTid\",\n        required: true,\n        xmlName: \"SignedTid\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signedStartsOn: {\n        serializedName: \"SignedStart\",\n        required: true,\n        xmlName: \"SignedStart\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signedExpiresOn: {\n        serializedName: \"SignedExpiry\",\n        required: true,\n        xmlName: \"SignedExpiry\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signedService: {\n        serializedName: \"SignedService\",\n        required: true,\n        xmlName: \"SignedService\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signedVersion: {\n        serializedName: \"SignedVersion\",\n        required: true,\n        xmlName: \"SignedVersion\",\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        serializedName: \"Value\",\n        required: true,\n        xmlName: \"Value\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const FilterBlobSegment: coreClient.CompositeMapper = {\n  serializedName: \"FilterBlobSegment\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"FilterBlobSegment\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      where: {\n        serializedName: \"Where\",\n        required: true,\n        xmlName: \"Where\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobs: {\n        serializedName: \"Blobs\",\n        required: true,\n        xmlName: \"Blobs\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Blob\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FilterBlobItem\",\n            },\n          },\n        },\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const FilterBlobItem: coreClient.CompositeMapper = {\n  serializedName: \"FilterBlobItem\",\n  xmlName: \"Blob\",\n  type: {\n    name: \"Composite\",\n    className: \"FilterBlobItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      containerName: {\n        serializedName: \"ContainerName\",\n        required: true,\n        xmlName: \"ContainerName\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tags: {\n        serializedName: \"Tags\",\n        xmlName: \"Tags\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobTags\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobTags: coreClient.CompositeMapper = {\n  serializedName: \"BlobTags\",\n  xmlName: \"Tags\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobTags\",\n    modelProperties: {\n      blobTagSet: {\n        serializedName: \"BlobTagSet\",\n        required: true,\n        xmlName: \"TagSet\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Tag\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobTag\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const BlobTag: coreClient.CompositeMapper = {\n  serializedName: \"BlobTag\",\n  xmlName: \"Tag\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobTag\",\n    modelProperties: {\n      key: {\n        serializedName: \"Key\",\n        required: true,\n        xmlName: \"Key\",\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        serializedName: \"Value\",\n        required: true,\n        xmlName: \"Value\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SignedIdentifier: coreClient.CompositeMapper = {\n  serializedName: \"SignedIdentifier\",\n  xmlName: \"SignedIdentifier\",\n  type: {\n    name: \"Composite\",\n    className: \"SignedIdentifier\",\n    modelProperties: {\n      id: {\n        serializedName: \"Id\",\n        required: true,\n        xmlName: \"Id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accessPolicy: {\n        serializedName: \"AccessPolicy\",\n        xmlName: \"AccessPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AccessPolicy\",\n        },\n      },\n    },\n  },\n};\n\nexport const AccessPolicy: coreClient.CompositeMapper = {\n  serializedName: \"AccessPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"AccessPolicy\",\n    modelProperties: {\n      startsOn: {\n        serializedName: \"Start\",\n        xmlName: \"Start\",\n        type: {\n          name: \"String\",\n        },\n      },\n      expiresOn: {\n        serializedName: \"Expiry\",\n        xmlName: \"Expiry\",\n        type: {\n          name: \"String\",\n        },\n      },\n      permissions: {\n        serializedName: \"Permission\",\n        xmlName: \"Permission\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ListBlobsFlatSegmentResponse: coreClient.CompositeMapper = {\n  serializedName: \"ListBlobsFlatSegmentResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListBlobsFlatSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      containerName: {\n        serializedName: \"ContainerName\",\n        required: true,\n        xmlName: \"ContainerName\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\",\n        },\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\",\n        },\n      },\n      maxPageSize: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      segment: {\n        serializedName: \"Segment\",\n        xmlName: \"Blobs\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobFlatListSegment\",\n        },\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobFlatListSegment: coreClient.CompositeMapper = {\n  serializedName: \"BlobFlatListSegment\",\n  xmlName: \"Blobs\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobFlatListSegment\",\n    modelProperties: {\n      blobItems: {\n        serializedName: \"BlobItems\",\n        required: true,\n        xmlName: \"BlobItems\",\n        xmlElementName: \"Blob\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobItemInternal\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const BlobItemInternal: coreClient.CompositeMapper = {\n  serializedName: \"BlobItemInternal\",\n  xmlName: \"Blob\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobItemInternal\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        xmlName: \"Name\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobName\",\n        },\n      },\n      deleted: {\n        serializedName: \"Deleted\",\n        required: true,\n        xmlName: \"Deleted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      snapshot: {\n        serializedName: \"Snapshot\",\n        required: true,\n        xmlName: \"Snapshot\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"VersionId\",\n        xmlName: \"VersionId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      isCurrentVersion: {\n        serializedName: \"IsCurrentVersion\",\n        xmlName: \"IsCurrentVersion\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      properties: {\n        serializedName: \"Properties\",\n        xmlName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobPropertiesInternal\",\n        },\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        xmlName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      blobTags: {\n        serializedName: \"BlobTags\",\n        xmlName: \"Tags\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobTags\",\n        },\n      },\n      objectReplicationMetadata: {\n        serializedName: \"ObjectReplicationMetadata\",\n        xmlName: \"OrMetadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      hasVersionsOnly: {\n        serializedName: \"HasVersionsOnly\",\n        xmlName: \"HasVersionsOnly\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobName: coreClient.CompositeMapper = {\n  serializedName: \"BlobName\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobName\",\n    modelProperties: {\n      encoded: {\n        serializedName: \"Encoded\",\n        xmlName: \"Encoded\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      content: {\n        serializedName: \"content\",\n        xmlName: \"content\",\n        xmlIsMsText: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobPropertiesInternal: coreClient.CompositeMapper = {\n  serializedName: \"BlobPropertiesInternal\",\n  xmlName: \"Properties\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobPropertiesInternal\",\n    modelProperties: {\n      createdOn: {\n        serializedName: \"Creation-Time\",\n        xmlName: \"Creation-Time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      lastModified: {\n        serializedName: \"Last-Modified\",\n        required: true,\n        xmlName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      etag: {\n        serializedName: \"Etag\",\n        required: true,\n        xmlName: \"Etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentLength: {\n        serializedName: \"Content-Length\",\n        xmlName: \"Content-Length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contentType: {\n        serializedName: \"Content-Type\",\n        xmlName: \"Content-Type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentEncoding: {\n        serializedName: \"Content-Encoding\",\n        xmlName: \"Content-Encoding\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentLanguage: {\n        serializedName: \"Content-Language\",\n        xmlName: \"Content-Language\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"Content-MD5\",\n        xmlName: \"Content-MD5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      contentDisposition: {\n        serializedName: \"Content-Disposition\",\n        xmlName: \"Content-Disposition\",\n        type: {\n          name: \"String\",\n        },\n      },\n      cacheControl: {\n        serializedName: \"Cache-Control\",\n        xmlName: \"Cache-Control\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      blobType: {\n        serializedName: \"BlobType\",\n        xmlName: \"BlobType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"],\n        },\n      },\n      leaseStatus: {\n        serializedName: \"LeaseStatus\",\n        xmlName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"LeaseState\",\n        xmlName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseDuration: {\n        serializedName: \"LeaseDuration\",\n        xmlName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      copyId: {\n        serializedName: \"CopyId\",\n        xmlName: \"CopyId\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"CopyStatus\",\n        xmlName: \"CopyStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      copySource: {\n        serializedName: \"CopySource\",\n        xmlName: \"CopySource\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyProgress: {\n        serializedName: \"CopyProgress\",\n        xmlName: \"CopyProgress\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyCompletedOn: {\n        serializedName: \"CopyCompletionTime\",\n        xmlName: \"CopyCompletionTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyStatusDescription: {\n        serializedName: \"CopyStatusDescription\",\n        xmlName: \"CopyStatusDescription\",\n        type: {\n          name: \"String\",\n        },\n      },\n      serverEncrypted: {\n        serializedName: \"ServerEncrypted\",\n        xmlName: \"ServerEncrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      incrementalCopy: {\n        serializedName: \"IncrementalCopy\",\n        xmlName: \"IncrementalCopy\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      destinationSnapshot: {\n        serializedName: \"DestinationSnapshot\",\n        xmlName: \"DestinationSnapshot\",\n        type: {\n          name: \"String\",\n        },\n      },\n      deletedOn: {\n        serializedName: \"DeletedTime\",\n        xmlName: \"DeletedTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      remainingRetentionDays: {\n        serializedName: \"RemainingRetentionDays\",\n        xmlName: \"RemainingRetentionDays\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accessTier: {\n        serializedName: \"AccessTier\",\n        xmlName: \"AccessTier\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"P4\",\n            \"P6\",\n            \"P10\",\n            \"P15\",\n            \"P20\",\n            \"P30\",\n            \"P40\",\n            \"P50\",\n            \"P60\",\n            \"P70\",\n            \"P80\",\n            \"Hot\",\n            \"Cool\",\n            \"Archive\",\n            \"Cold\",\n          ],\n        },\n      },\n      accessTierInferred: {\n        serializedName: \"AccessTierInferred\",\n        xmlName: \"AccessTierInferred\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      archiveStatus: {\n        serializedName: \"ArchiveStatus\",\n        xmlName: \"ArchiveStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"rehydrate-pending-to-hot\",\n            \"rehydrate-pending-to-cool\",\n            \"rehydrate-pending-to-cold\",\n          ],\n        },\n      },\n      customerProvidedKeySha256: {\n        serializedName: \"CustomerProvidedKeySha256\",\n        xmlName: \"CustomerProvidedKeySha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"EncryptionScope\",\n        xmlName: \"EncryptionScope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accessTierChangedOn: {\n        serializedName: \"AccessTierChangeTime\",\n        xmlName: \"AccessTierChangeTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      tagCount: {\n        serializedName: \"TagCount\",\n        xmlName: \"TagCount\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      expiresOn: {\n        serializedName: \"Expiry-Time\",\n        xmlName: \"Expiry-Time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isSealed: {\n        serializedName: \"Sealed\",\n        xmlName: \"Sealed\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      rehydratePriority: {\n        serializedName: \"RehydratePriority\",\n        xmlName: \"RehydratePriority\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"High\", \"Standard\"],\n        },\n      },\n      lastAccessedOn: {\n        serializedName: \"LastAccessTime\",\n        xmlName: \"LastAccessTime\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyExpiresOn: {\n        serializedName: \"ImmutabilityPolicyUntilDate\",\n        xmlName: \"ImmutabilityPolicyUntilDate\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"ImmutabilityPolicyMode\",\n        xmlName: \"ImmutabilityPolicyMode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"],\n        },\n      },\n      legalHold: {\n        serializedName: \"LegalHold\",\n        xmlName: \"LegalHold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const ListBlobsHierarchySegmentResponse: coreClient.CompositeMapper = {\n  serializedName: \"ListBlobsHierarchySegmentResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListBlobsHierarchySegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      containerName: {\n        serializedName: \"ContainerName\",\n        required: true,\n        xmlName: \"ContainerName\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\",\n        },\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\",\n        },\n      },\n      maxPageSize: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      delimiter: {\n        serializedName: \"Delimiter\",\n        xmlName: \"Delimiter\",\n        type: {\n          name: \"String\",\n        },\n      },\n      segment: {\n        serializedName: \"Segment\",\n        xmlName: \"Blobs\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobHierarchyListSegment\",\n        },\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobHierarchyListSegment: coreClient.CompositeMapper = {\n  serializedName: \"BlobHierarchyListSegment\",\n  xmlName: \"Blobs\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobHierarchyListSegment\",\n    modelProperties: {\n      blobPrefixes: {\n        serializedName: \"BlobPrefixes\",\n        xmlName: \"BlobPrefixes\",\n        xmlElementName: \"BlobPrefix\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobPrefix\",\n            },\n          },\n        },\n      },\n      blobItems: {\n        serializedName: \"BlobItems\",\n        required: true,\n        xmlName: \"BlobItems\",\n        xmlElementName: \"Blob\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobItemInternal\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const BlobPrefix: coreClient.CompositeMapper = {\n  serializedName: \"BlobPrefix\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobPrefix\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        xmlName: \"Name\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobName\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockLookupList: coreClient.CompositeMapper = {\n  serializedName: \"BlockLookupList\",\n  xmlName: \"BlockList\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockLookupList\",\n    modelProperties: {\n      committed: {\n        serializedName: \"Committed\",\n        xmlName: \"Committed\",\n        xmlElementName: \"Committed\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      uncommitted: {\n        serializedName: \"Uncommitted\",\n        xmlName: \"Uncommitted\",\n        xmlElementName: \"Uncommitted\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      latest: {\n        serializedName: \"Latest\",\n        xmlName: \"Latest\",\n        xmlElementName: \"Latest\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const BlockList: coreClient.CompositeMapper = {\n  serializedName: \"BlockList\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockList\",\n    modelProperties: {\n      committedBlocks: {\n        serializedName: \"CommittedBlocks\",\n        xmlName: \"CommittedBlocks\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Block\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\",\n            },\n          },\n        },\n      },\n      uncommittedBlocks: {\n        serializedName: \"UncommittedBlocks\",\n        xmlName: \"UncommittedBlocks\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Block\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const Block: coreClient.CompositeMapper = {\n  serializedName: \"Block\",\n  type: {\n    name: \"Composite\",\n    className: \"Block\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      size: {\n        serializedName: \"Size\",\n        required: true,\n        xmlName: \"Size\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageList: coreClient.CompositeMapper = {\n  serializedName: \"PageList\",\n  type: {\n    name: \"Composite\",\n    className: \"PageList\",\n    modelProperties: {\n      pageRange: {\n        serializedName: \"PageRange\",\n        xmlName: \"PageRange\",\n        xmlElementName: \"PageRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PageRange\",\n            },\n          },\n        },\n      },\n      clearRange: {\n        serializedName: \"ClearRange\",\n        xmlName: \"ClearRange\",\n        xmlElementName: \"ClearRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClearRange\",\n            },\n          },\n        },\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageRange: coreClient.CompositeMapper = {\n  serializedName: \"PageRange\",\n  xmlName: \"PageRange\",\n  type: {\n    name: \"Composite\",\n    className: \"PageRange\",\n    modelProperties: {\n      start: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      end: {\n        serializedName: \"End\",\n        required: true,\n        xmlName: \"End\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ClearRange: coreClient.CompositeMapper = {\n  serializedName: \"ClearRange\",\n  xmlName: \"ClearRange\",\n  type: {\n    name: \"Composite\",\n    className: \"ClearRange\",\n    modelProperties: {\n      start: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      end: {\n        serializedName: \"End\",\n        required: true,\n        xmlName: \"End\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const QueryRequest: coreClient.CompositeMapper = {\n  serializedName: \"QueryRequest\",\n  xmlName: \"QueryRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryRequest\",\n    modelProperties: {\n      queryType: {\n        serializedName: \"QueryType\",\n        required: true,\n        xmlName: \"QueryType\",\n        type: {\n          name: \"String\",\n        },\n      },\n      expression: {\n        serializedName: \"Expression\",\n        required: true,\n        xmlName: \"Expression\",\n        type: {\n          name: \"String\",\n        },\n      },\n      inputSerialization: {\n        serializedName: \"InputSerialization\",\n        xmlName: \"InputSerialization\",\n        type: {\n          name: \"Composite\",\n          className: \"QuerySerialization\",\n        },\n      },\n      outputSerialization: {\n        serializedName: \"OutputSerialization\",\n        xmlName: \"OutputSerialization\",\n        type: {\n          name: \"Composite\",\n          className: \"QuerySerialization\",\n        },\n      },\n    },\n  },\n};\n\nexport const QuerySerialization: coreClient.CompositeMapper = {\n  serializedName: \"QuerySerialization\",\n  type: {\n    name: \"Composite\",\n    className: \"QuerySerialization\",\n    modelProperties: {\n      format: {\n        serializedName: \"Format\",\n        xmlName: \"Format\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryFormat\",\n        },\n      },\n    },\n  },\n};\n\nexport const QueryFormat: coreClient.CompositeMapper = {\n  serializedName: \"QueryFormat\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryFormat\",\n    modelProperties: {\n      type: {\n        serializedName: \"Type\",\n        required: true,\n        xmlName: \"Type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"delimited\", \"json\", \"arrow\", \"parquet\"],\n        },\n      },\n      delimitedTextConfiguration: {\n        serializedName: \"DelimitedTextConfiguration\",\n        xmlName: \"DelimitedTextConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"DelimitedTextConfiguration\",\n        },\n      },\n      jsonTextConfiguration: {\n        serializedName: \"JsonTextConfiguration\",\n        xmlName: \"JsonTextConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"JsonTextConfiguration\",\n        },\n      },\n      arrowConfiguration: {\n        serializedName: \"ArrowConfiguration\",\n        xmlName: \"ArrowConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"ArrowConfiguration\",\n        },\n      },\n      parquetTextConfiguration: {\n        serializedName: \"ParquetTextConfiguration\",\n        xmlName: \"ParquetTextConfiguration\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const DelimitedTextConfiguration: coreClient.CompositeMapper = {\n  serializedName: \"DelimitedTextConfiguration\",\n  xmlName: \"DelimitedTextConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"DelimitedTextConfiguration\",\n    modelProperties: {\n      columnSeparator: {\n        serializedName: \"ColumnSeparator\",\n        xmlName: \"ColumnSeparator\",\n        type: {\n          name: \"String\",\n        },\n      },\n      fieldQuote: {\n        serializedName: \"FieldQuote\",\n        xmlName: \"FieldQuote\",\n        type: {\n          name: \"String\",\n        },\n      },\n      recordSeparator: {\n        serializedName: \"RecordSeparator\",\n        xmlName: \"RecordSeparator\",\n        type: {\n          name: \"String\",\n        },\n      },\n      escapeChar: {\n        serializedName: \"EscapeChar\",\n        xmlName: \"EscapeChar\",\n        type: {\n          name: \"String\",\n        },\n      },\n      headersPresent: {\n        serializedName: \"HeadersPresent\",\n        xmlName: \"HasHeaders\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const JsonTextConfiguration: coreClient.CompositeMapper = {\n  serializedName: \"JsonTextConfiguration\",\n  xmlName: \"JsonTextConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"JsonTextConfiguration\",\n    modelProperties: {\n      recordSeparator: {\n        serializedName: \"RecordSeparator\",\n        xmlName: \"RecordSeparator\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ArrowConfiguration: coreClient.CompositeMapper = {\n  serializedName: \"ArrowConfiguration\",\n  xmlName: \"ArrowConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"ArrowConfiguration\",\n    modelProperties: {\n      schema: {\n        serializedName: \"Schema\",\n        required: true,\n        xmlName: \"Schema\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Field\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ArrowField\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const ArrowField: coreClient.CompositeMapper = {\n  serializedName: \"ArrowField\",\n  xmlName: \"Field\",\n  type: {\n    name: \"Composite\",\n    className: \"ArrowField\",\n    modelProperties: {\n      type: {\n        serializedName: \"Type\",\n        required: true,\n        xmlName: \"Type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"Name\",\n        xmlName: \"Name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      precision: {\n        serializedName: \"Precision\",\n        xmlName: \"Precision\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      scale: {\n        serializedName: \"Scale\",\n        xmlName: \"Scale\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceSetPropertiesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_setPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSetPropertiesHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceSetPropertiesExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_setPropertiesExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceSetPropertiesExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceGetPropertiesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetPropertiesHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceGetPropertiesExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_getPropertiesExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceGetPropertiesExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceGetStatisticsHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_getStatisticsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetStatisticsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceGetStatisticsExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_getStatisticsExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceGetStatisticsExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceListContainersSegmentHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_listContainersSegmentHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceListContainersSegmentHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceListContainersSegmentExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_listContainersSegmentExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceListContainersSegmentExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceGetUserDelegationKeyHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_getUserDelegationKeyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetUserDelegationKeyHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceGetUserDelegationKeyExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_getUserDelegationKeyExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceGetUserDelegationKeyExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceGetAccountInfoHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_getAccountInfoHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetAccountInfoHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        xmlName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\",\n          ],\n        },\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        xmlName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\",\n            \"FileStorage\",\n            \"BlockBlobStorage\",\n          ],\n        },\n      },\n      isHierarchicalNamespaceEnabled: {\n        serializedName: \"x-ms-is-hns-enabled\",\n        xmlName: \"x-ms-is-hns-enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceGetAccountInfoExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Service_getAccountInfoExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ServiceGetAccountInfoExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ServiceSubmitBatchHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_submitBatchHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSubmitBatchHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceSubmitBatchExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_submitBatchExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSubmitBatchExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceFilterBlobsHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_filterBlobsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceFilterBlobsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ServiceFilterBlobsExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Service_filterBlobsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceFilterBlobsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerCreateHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerCreateExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerGetPropertiesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetPropertiesHeaders\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        headerCollectionPrefix: \"x-ms-meta-\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobPublicAccess: {\n        serializedName: \"x-ms-blob-public-access\",\n        xmlName: \"x-ms-blob-public-access\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"container\", \"blob\"],\n        },\n      },\n      hasImmutabilityPolicy: {\n        serializedName: \"x-ms-has-immutability-policy\",\n        xmlName: \"x-ms-has-immutability-policy\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      hasLegalHold: {\n        serializedName: \"x-ms-has-legal-hold\",\n        xmlName: \"x-ms-has-legal-hold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      defaultEncryptionScope: {\n        serializedName: \"x-ms-default-encryption-scope\",\n        xmlName: \"x-ms-default-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      denyEncryptionScopeOverride: {\n        serializedName: \"x-ms-deny-encryption-scope-override\",\n        xmlName: \"x-ms-deny-encryption-scope-override\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      isImmutableStorageWithVersioningEnabled: {\n        serializedName: \"x-ms-immutable-storage-with-versioning-enabled\",\n        xmlName: \"x-ms-immutable-storage-with-versioning-enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerGetPropertiesExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_getPropertiesExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerGetPropertiesExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerDeleteHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_deleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerDeleteHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerDeleteExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_deleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerDeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerSetMetadataHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_setMetadataHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerSetMetadataExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_setMetadataExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerSetMetadataExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerGetAccessPolicyHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_getAccessPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccessPolicyHeaders\",\n    modelProperties: {\n      blobPublicAccess: {\n        serializedName: \"x-ms-blob-public-access\",\n        xmlName: \"x-ms-blob-public-access\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"container\", \"blob\"],\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerGetAccessPolicyExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_getAccessPolicyExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerGetAccessPolicyExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerSetAccessPolicyHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_setAccessPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetAccessPolicyHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerSetAccessPolicyExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_setAccessPolicyExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerSetAccessPolicyExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerRestoreHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_restoreHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRestoreHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerRestoreExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_restoreExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRestoreExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerRenameHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_renameHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenameHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerRenameExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_renameExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenameExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerSubmitBatchHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_submitBatchHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSubmitBatchHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerSubmitBatchExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_submitBatchExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerSubmitBatchExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerFilterBlobsHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_filterBlobsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerFilterBlobsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerFilterBlobsExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_filterBlobsExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerFilterBlobsExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerAcquireLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_acquireLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAcquireLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerAcquireLeaseExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_acquireLeaseExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerAcquireLeaseExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerReleaseLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_releaseLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerReleaseLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerReleaseLeaseExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_releaseLeaseExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerReleaseLeaseExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerRenewLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_renewLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenewLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerRenewLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_renewLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenewLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerBreakLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_breakLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerBreakLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseTime: {\n        serializedName: \"x-ms-lease-time\",\n        xmlName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerBreakLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_breakLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerBreakLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerChangeLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_changeLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerChangeLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerChangeLeaseExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_changeLeaseExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerChangeLeaseExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerListBlobFlatSegmentHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_listBlobFlatSegmentHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerListBlobFlatSegmentHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerListBlobFlatSegmentExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_listBlobFlatSegmentExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerListBlobFlatSegmentExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerListBlobHierarchySegmentHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_listBlobHierarchySegmentHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerListBlobHierarchySegmentHeaders\",\n      modelProperties: {\n        contentType: {\n          serializedName: \"content-type\",\n          xmlName: \"content-type\",\n          type: {\n            name: \"String\",\n          },\n        },\n        clientRequestId: {\n          serializedName: \"x-ms-client-request-id\",\n          xmlName: \"x-ms-client-request-id\",\n          type: {\n            name: \"String\",\n          },\n        },\n        requestId: {\n          serializedName: \"x-ms-request-id\",\n          xmlName: \"x-ms-request-id\",\n          type: {\n            name: \"String\",\n          },\n        },\n        version: {\n          serializedName: \"x-ms-version\",\n          xmlName: \"x-ms-version\",\n          type: {\n            name: \"String\",\n          },\n        },\n        date: {\n          serializedName: \"date\",\n          xmlName: \"date\",\n          type: {\n            name: \"DateTimeRfc1123\",\n          },\n        },\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerListBlobHierarchySegmentExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_listBlobHierarchySegmentExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerListBlobHierarchySegmentExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const ContainerGetAccountInfoHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Container_getAccountInfoHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccountInfoHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        xmlName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\",\n          ],\n        },\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        xmlName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\",\n            \"FileStorage\",\n            \"BlockBlobStorage\",\n          ],\n        },\n      },\n      isHierarchicalNamespaceEnabled: {\n        serializedName: \"x-ms-is-hns-enabled\",\n        xmlName: \"x-ms-is-hns-enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContainerGetAccountInfoExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Container_getAccountInfoExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"ContainerGetAccountInfoExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlobDownloadHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_downloadHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDownloadHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      createdOn: {\n        serializedName: \"x-ms-creation-time\",\n        xmlName: \"x-ms-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        headerCollectionPrefix: \"x-ms-meta-\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      objectReplicationPolicyId: {\n        serializedName: \"x-ms-or-policy-id\",\n        xmlName: \"x-ms-or-policy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      objectReplicationRules: {\n        serializedName: \"x-ms-or\",\n        headerCollectionPrefix: \"x-ms-or-\",\n        xmlName: \"x-ms-or\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        xmlName: \"content-range\",\n        type: {\n          name: \"String\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\",\n        },\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        xmlName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"],\n        },\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      isCurrentVersion: {\n        serializedName: \"x-ms-is-current-version\",\n        xmlName: \"x-ms-is-current-version\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        xmlName: \"accept-ranges\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobContentMD5: {\n        serializedName: \"x-ms-blob-content-md5\",\n        xmlName: \"x-ms-blob-content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      tagCount: {\n        serializedName: \"x-ms-tag-count\",\n        xmlName: \"x-ms-tag-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isSealed: {\n        serializedName: \"x-ms-blob-sealed\",\n        xmlName: \"x-ms-blob-sealed\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      lastAccessed: {\n        serializedName: \"x-ms-last-access-time\",\n        xmlName: \"x-ms-last-access-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyExpiresOn: {\n        serializedName: \"x-ms-immutability-policy-until-date\",\n        xmlName: \"x-ms-immutability-policy-until-date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"x-ms-immutability-policy-mode\",\n        xmlName: \"x-ms-immutability-policy-mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"],\n        },\n      },\n      legalHold: {\n        serializedName: \"x-ms-legal-hold\",\n        xmlName: \"x-ms-legal-hold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobDownloadExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_downloadExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDownloadExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetPropertiesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetPropertiesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      createdOn: {\n        serializedName: \"x-ms-creation-time\",\n        xmlName: \"x-ms-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        headerCollectionPrefix: \"x-ms-meta-\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      objectReplicationPolicyId: {\n        serializedName: \"x-ms-or-policy-id\",\n        xmlName: \"x-ms-or-policy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      objectReplicationRules: {\n        serializedName: \"x-ms-or\",\n        headerCollectionPrefix: \"x-ms-or-\",\n        xmlName: \"x-ms-or\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        xmlName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"],\n        },\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      isIncrementalCopy: {\n        serializedName: \"x-ms-incremental-copy\",\n        xmlName: \"x-ms-incremental-copy\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      destinationSnapshot: {\n        serializedName: \"x-ms-copy-destination-snapshot\",\n        xmlName: \"x-ms-copy-destination-snapshot\",\n        type: {\n          name: \"String\",\n        },\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\",\n        },\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        xmlName: \"accept-ranges\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accessTier: {\n        serializedName: \"x-ms-access-tier\",\n        xmlName: \"x-ms-access-tier\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accessTierInferred: {\n        serializedName: \"x-ms-access-tier-inferred\",\n        xmlName: \"x-ms-access-tier-inferred\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      archiveStatus: {\n        serializedName: \"x-ms-archive-status\",\n        xmlName: \"x-ms-archive-status\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accessTierChangedOn: {\n        serializedName: \"x-ms-access-tier-change-time\",\n        xmlName: \"x-ms-access-tier-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      isCurrentVersion: {\n        serializedName: \"x-ms-is-current-version\",\n        xmlName: \"x-ms-is-current-version\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      tagCount: {\n        serializedName: \"x-ms-tag-count\",\n        xmlName: \"x-ms-tag-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      expiresOn: {\n        serializedName: \"x-ms-expiry-time\",\n        xmlName: \"x-ms-expiry-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isSealed: {\n        serializedName: \"x-ms-blob-sealed\",\n        xmlName: \"x-ms-blob-sealed\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      rehydratePriority: {\n        serializedName: \"x-ms-rehydrate-priority\",\n        xmlName: \"x-ms-rehydrate-priority\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"High\", \"Standard\"],\n        },\n      },\n      lastAccessed: {\n        serializedName: \"x-ms-last-access-time\",\n        xmlName: \"x-ms-last-access-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyExpiresOn: {\n        serializedName: \"x-ms-immutability-policy-until-date\",\n        xmlName: \"x-ms-immutability-policy-until-date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"x-ms-immutability-policy-mode\",\n        xmlName: \"x-ms-immutability-policy-mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"],\n        },\n      },\n      legalHold: {\n        serializedName: \"x-ms-legal-hold\",\n        xmlName: \"x-ms-legal-hold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetPropertiesExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobDeleteHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_deleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobDeleteExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_deleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobUndeleteHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_undeleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobUndeleteHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobUndeleteExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_undeleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobUndeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetExpiryHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setExpiryHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetExpiryHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetExpiryExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setExpiryExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetExpiryExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetHttpHeadersHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setHttpHeadersHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetHttpHeadersHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetHttpHeadersExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setHttpHeadersExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetHttpHeadersExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetImmutabilityPolicyHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setImmutabilityPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetImmutabilityPolicyHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyExpiry: {\n        serializedName: \"x-ms-immutability-policy-until-date\",\n        xmlName: \"x-ms-immutability-policy-until-date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"x-ms-immutability-policy-mode\",\n        xmlName: \"x-ms-immutability-policy-mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"],\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetImmutabilityPolicyExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Blob_setImmutabilityPolicyExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlobSetImmutabilityPolicyExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlobDeleteImmutabilityPolicyHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_deleteImmutabilityPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteImmutabilityPolicyHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobDeleteImmutabilityPolicyExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Blob_deleteImmutabilityPolicyExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlobDeleteImmutabilityPolicyExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlobSetLegalHoldHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setLegalHoldHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetLegalHoldHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      legalHold: {\n        serializedName: \"x-ms-legal-hold\",\n        xmlName: \"x-ms-legal-hold\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetLegalHoldExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setLegalHoldExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetLegalHoldExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetMetadataHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setMetadataHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetMetadataExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setMetadataExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetMetadataExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobAcquireLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_acquireLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAcquireLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobAcquireLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_acquireLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAcquireLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobReleaseLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_releaseLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobReleaseLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobReleaseLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_releaseLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobReleaseLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobRenewLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_renewLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobRenewLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobRenewLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_renewLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobRenewLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobChangeLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_changeLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobChangeLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobChangeLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_changeLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobChangeLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobBreakLeaseHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_breakLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobBreakLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      leaseTime: {\n        serializedName: \"x-ms-lease-time\",\n        xmlName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobBreakLeaseExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_breakLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobBreakLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobCreateSnapshotHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_createSnapshotHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCreateSnapshotHeaders\",\n    modelProperties: {\n      snapshot: {\n        serializedName: \"x-ms-snapshot\",\n        xmlName: \"x-ms-snapshot\",\n        type: {\n          name: \"String\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobCreateSnapshotExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_createSnapshotExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCreateSnapshotExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobStartCopyFromURLHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_startCopyFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobStartCopyFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobStartCopyFromURLExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Blob_startCopyFromURLExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlobStartCopyFromURLExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlobCopyFromURLHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_copyFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCopyFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        defaultValue: \"success\",\n        isConstant: true,\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobCopyFromURLExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_copyFromURLExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCopyFromURLExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobAbortCopyFromURLHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_abortCopyFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAbortCopyFromURLHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobAbortCopyFromURLExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"Blob_abortCopyFromURLExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlobAbortCopyFromURLExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlobSetTierHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setTierHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTierHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetTierExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setTierExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTierExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetAccountInfoHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getAccountInfoHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetAccountInfoHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        xmlName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\",\n          ],\n        },\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        xmlName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\",\n            \"FileStorage\",\n            \"BlockBlobStorage\",\n          ],\n        },\n      },\n      isHierarchicalNamespaceEnabled: {\n        serializedName: \"x-ms-is-hns-enabled\",\n        xmlName: \"x-ms-is-hns-enabled\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetAccountInfoExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getAccountInfoExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetAccountInfoExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobQueryHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_queryHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobQueryHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        headerCollectionPrefix: \"x-ms-meta-\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } },\n        },\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        xmlName: \"content-range\",\n        type: {\n          name: \"String\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\",\n        },\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        xmlName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"],\n        },\n      },\n      copyCompletionTime: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"],\n        },\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\",\n          ],\n        },\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"],\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        xmlName: \"accept-ranges\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobContentMD5: {\n        serializedName: \"x-ms-blob-content-md5\",\n        xmlName: \"x-ms-blob-content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobQueryExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_queryExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobQueryExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetTagsHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getTagsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetTagsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobGetTagsExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_getTagsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetTagsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetTagsHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setTagsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTagsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlobSetTagsExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"Blob_setTagsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTagsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobCreateHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobCreateExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUploadPagesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_uploadPagesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUploadPagesExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_uploadPagesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobClearPagesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_clearPagesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobClearPagesHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobClearPagesExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_clearPagesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobClearPagesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUploadPagesFromURLHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_uploadPagesFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUploadPagesFromURLExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"PageBlob_uploadPagesFromURLExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"PageBlobUploadPagesFromURLExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PageBlobGetPageRangesHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_getPageRangesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        xmlName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobGetPageRangesExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"PageBlob_getPageRangesExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"PageBlobGetPageRangesExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PageBlobGetPageRangesDiffHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_getPageRangesDiffHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesDiffHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        xmlName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobGetPageRangesDiffExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"PageBlob_getPageRangesDiffExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"PageBlobGetPageRangesDiffExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PageBlobResizeHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_resizeHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobResizeHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobResizeExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_resizeExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobResizeExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUpdateSequenceNumberHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_updateSequenceNumberHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUpdateSequenceNumberHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobUpdateSequenceNumberExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"PageBlob_updateSequenceNumberExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"PageBlobUpdateSequenceNumberExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PageBlobCopyIncrementalHeaders: coreClient.CompositeMapper = {\n  serializedName: \"PageBlob_copyIncrementalHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCopyIncrementalHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"],\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PageBlobCopyIncrementalExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"PageBlob_copyIncrementalExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"PageBlobCopyIncrementalExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppendBlobCreateHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppendBlobCreateExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppendBlobAppendBlockHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_appendBlockHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobAppendBlockHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobAppendOffset: {\n        serializedName: \"x-ms-blob-append-offset\",\n        xmlName: \"x-ms-blob-append-offset\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppendBlobAppendBlockExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"AppendBlob_appendBlockExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"AppendBlobAppendBlockExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppendBlobAppendBlockFromUrlHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_appendBlockFromUrlHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobAppendBlockFromUrlHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      blobAppendOffset: {\n        serializedName: \"x-ms-blob-append-offset\",\n        xmlName: \"x-ms-blob-append-offset\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppendBlobAppendBlockFromUrlExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"AppendBlob_appendBlockFromUrlExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"AppendBlobAppendBlockFromUrlExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const AppendBlobSealHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_sealHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobSealHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isSealed: {\n        serializedName: \"x-ms-blob-sealed\",\n        xmlName: \"x-ms-blob-sealed\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const AppendBlobSealExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"AppendBlob_sealExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobSealExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobUploadHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_uploadHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobUploadHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobUploadExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_uploadExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobUploadExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobPutBlobFromUrlHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_putBlobFromUrlHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobPutBlobFromUrlHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobPutBlobFromUrlExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"BlockBlob_putBlobFromUrlExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlockBlobPutBlobFromUrlExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlockBlobStageBlockHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_stageBlockHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockHeaders\",\n    modelProperties: {\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobStageBlockExceptionHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_stageBlockExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobStageBlockFromURLHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_stageBlockFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockFromURLHeaders\",\n    modelProperties: {\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobStageBlockFromURLExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"BlockBlob_stageBlockFromURLExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlockBlobStageBlockFromURLExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlockBlobCommitBlockListHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_commitBlockListHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobCommitBlockListHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobCommitBlockListExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"BlockBlob_commitBlockListExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlockBlobCommitBlockListExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const BlockBlobGetBlockListHeaders: coreClient.CompositeMapper = {\n  serializedName: \"BlockBlob_getBlockListHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobGetBlockListHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        xmlName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\",\n        },\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BlockBlobGetBlockListExceptionHeaders: coreClient.CompositeMapper =\n  {\n    serializedName: \"BlockBlob_getBlockListExceptionHeaders\",\n    type: {\n      name: \"Composite\",\n      className: \"BlockBlobGetBlockListExceptionHeaders\",\n      modelProperties: {\n        errorCode: {\n          serializedName: \"x-ms-error-code\",\n          xmlName: \"x-ms-error-code\",\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\nimport {\n  BlobServiceProperties as BlobServicePropertiesMapper,\n  KeyInfo as KeyInfoMapper,\n  QueryRequest as QueryRequestMapper,\n  BlobTags as BlobTagsMapper,\n  BlockLookupList as BlockLookupListMapper,\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobServiceProperties: OperationParameter = {\n  parameterPath: \"blobServiceProperties\",\n  mapper: BlobServicePropertiesMapper,\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const url: OperationURLParameter = {\n  parameterPath: \"url\",\n  mapper: {\n    serializedName: \"url\",\n    required: true,\n    xmlName: \"url\",\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const restype: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"service\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"properties\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const timeoutInSeconds: OperationQueryParameter = {\n  parameterPath: [\"options\", \"timeoutInSeconds\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 0,\n    },\n    serializedName: \"timeout\",\n    xmlName: \"timeout\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const version: OperationParameter = {\n  parameterPath: \"version\",\n  mapper: {\n    defaultValue: \"2025-01-05\",\n    isConstant: true,\n    serializedName: \"x-ms-version\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const requestId: OperationParameter = {\n  parameterPath: [\"options\", \"requestId\"],\n  mapper: {\n    serializedName: \"x-ms-client-request-id\",\n    xmlName: \"x-ms-client-request-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const accept1: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp1: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"stats\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp2: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"list\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const prefix: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prefix\"],\n  mapper: {\n    serializedName: \"prefix\",\n    xmlName: \"prefix\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const marker: OperationQueryParameter = {\n  parameterPath: [\"options\", \"marker\"],\n  mapper: {\n    serializedName: \"marker\",\n    xmlName: \"marker\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const maxPageSize: OperationQueryParameter = {\n  parameterPath: [\"options\", \"maxPageSize\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1,\n    },\n    serializedName: \"maxresults\",\n    xmlName: \"maxresults\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const include: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"include\",\n    xmlName: \"include\",\n    xmlElementName: \"ListContainersIncludeType\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"metadata\", \"deleted\", \"system\"],\n        },\n      },\n    },\n  },\n  collectionFormat: \"CSV\",\n};\n\nexport const keyInfo: OperationParameter = {\n  parameterPath: \"keyInfo\",\n  mapper: KeyInfoMapper,\n};\n\nexport const comp3: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"userdelegationkey\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const restype1: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"account\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: {\n    serializedName: \"body\",\n    required: true,\n    xmlName: \"body\",\n    type: {\n      name: \"Stream\",\n    },\n  },\n};\n\nexport const comp4: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"batch\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contentLength: OperationParameter = {\n  parameterPath: \"contentLength\",\n  mapper: {\n    serializedName: \"Content-Length\",\n    required: true,\n    xmlName: \"Content-Length\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const multipartContentType: OperationParameter = {\n  parameterPath: \"multipartContentType\",\n  mapper: {\n    serializedName: \"Content-Type\",\n    required: true,\n    xmlName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp5: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"blobs\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const where: OperationQueryParameter = {\n  parameterPath: [\"options\", \"where\"],\n  mapper: {\n    serializedName: \"where\",\n    xmlName: \"where\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const restype2: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"container\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const metadata: OperationParameter = {\n  parameterPath: [\"options\", \"metadata\"],\n  mapper: {\n    serializedName: \"x-ms-meta\",\n    xmlName: \"x-ms-meta\",\n    headerCollectionPrefix: \"x-ms-meta-\",\n    type: {\n      name: \"Dictionary\",\n      value: { type: { name: \"String\" } },\n    },\n  },\n};\n\nexport const access: OperationParameter = {\n  parameterPath: [\"options\", \"access\"],\n  mapper: {\n    serializedName: \"x-ms-blob-public-access\",\n    xmlName: \"x-ms-blob-public-access\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"container\", \"blob\"],\n    },\n  },\n};\n\nexport const defaultEncryptionScope: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"containerEncryptionScope\",\n    \"defaultEncryptionScope\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-default-encryption-scope\",\n    xmlName: \"x-ms-default-encryption-scope\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const preventEncryptionScopeOverride: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"containerEncryptionScope\",\n    \"preventEncryptionScopeOverride\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-deny-encryption-scope-override\",\n    xmlName: \"x-ms-deny-encryption-scope-override\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const leaseId: OperationParameter = {\n  parameterPath: [\"options\", \"leaseAccessConditions\", \"leaseId\"],\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    xmlName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifModifiedSince: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifModifiedSince\"],\n  mapper: {\n    serializedName: \"If-Modified-Since\",\n    xmlName: \"If-Modified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const ifUnmodifiedSince: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifUnmodifiedSince\"],\n  mapper: {\n    serializedName: \"If-Unmodified-Since\",\n    xmlName: \"If-Unmodified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const comp6: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"metadata\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp7: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"acl\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const containerAcl: OperationParameter = {\n  parameterPath: [\"options\", \"containerAcl\"],\n  mapper: {\n    serializedName: \"containerAcl\",\n    xmlName: \"SignedIdentifiers\",\n    xmlIsWrapped: true,\n    xmlElementName: \"SignedIdentifier\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Composite\",\n          className: \"SignedIdentifier\",\n        },\n      },\n    },\n  },\n};\n\nexport const comp8: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"undelete\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const deletedContainerName: OperationParameter = {\n  parameterPath: [\"options\", \"deletedContainerName\"],\n  mapper: {\n    serializedName: \"x-ms-deleted-container-name\",\n    xmlName: \"x-ms-deleted-container-name\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const deletedContainerVersion: OperationParameter = {\n  parameterPath: [\"options\", \"deletedContainerVersion\"],\n  mapper: {\n    serializedName: \"x-ms-deleted-container-version\",\n    xmlName: \"x-ms-deleted-container-version\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp9: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"rename\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceContainerName: OperationParameter = {\n  parameterPath: \"sourceContainerName\",\n  mapper: {\n    serializedName: \"x-ms-source-container-name\",\n    required: true,\n    xmlName: \"x-ms-source-container-name\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceLeaseId: OperationParameter = {\n  parameterPath: [\"options\", \"sourceLeaseId\"],\n  mapper: {\n    serializedName: \"x-ms-source-lease-id\",\n    xmlName: \"x-ms-source-lease-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp10: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"lease\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const action: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"acquire\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const duration: OperationParameter = {\n  parameterPath: [\"options\", \"duration\"],\n  mapper: {\n    serializedName: \"x-ms-lease-duration\",\n    xmlName: \"x-ms-lease-duration\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const proposedLeaseId: OperationParameter = {\n  parameterPath: [\"options\", \"proposedLeaseId\"],\n  mapper: {\n    serializedName: \"x-ms-proposed-lease-id\",\n    xmlName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const action1: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"release\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const leaseId1: OperationParameter = {\n  parameterPath: \"leaseId\",\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    required: true,\n    xmlName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const action2: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"renew\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const action3: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"break\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const breakPeriod: OperationParameter = {\n  parameterPath: [\"options\", \"breakPeriod\"],\n  mapper: {\n    serializedName: \"x-ms-lease-break-period\",\n    xmlName: \"x-ms-lease-break-period\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const action4: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"change\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const proposedLeaseId1: OperationParameter = {\n  parameterPath: \"proposedLeaseId\",\n  mapper: {\n    serializedName: \"x-ms-proposed-lease-id\",\n    required: true,\n    xmlName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const include1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"include\",\n    xmlName: \"include\",\n    xmlElementName: \"ListBlobsIncludeItem\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"copy\",\n            \"deleted\",\n            \"metadata\",\n            \"snapshots\",\n            \"uncommittedblobs\",\n            \"versions\",\n            \"tags\",\n            \"immutabilitypolicy\",\n            \"legalhold\",\n            \"deletedwithversions\",\n          ],\n        },\n      },\n    },\n  },\n  collectionFormat: \"CSV\",\n};\n\nexport const delimiter: OperationQueryParameter = {\n  parameterPath: \"delimiter\",\n  mapper: {\n    serializedName: \"delimiter\",\n    required: true,\n    xmlName: \"delimiter\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const snapshot: OperationQueryParameter = {\n  parameterPath: [\"options\", \"snapshot\"],\n  mapper: {\n    serializedName: \"snapshot\",\n    xmlName: \"snapshot\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const versionId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"versionId\"],\n  mapper: {\n    serializedName: \"versionid\",\n    xmlName: \"versionid\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const range: OperationParameter = {\n  parameterPath: [\"options\", \"range\"],\n  mapper: {\n    serializedName: \"x-ms-range\",\n    xmlName: \"x-ms-range\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const rangeGetContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"rangeGetContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-md5\",\n    xmlName: \"x-ms-range-get-content-md5\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const rangeGetContentCRC64: OperationParameter = {\n  parameterPath: [\"options\", \"rangeGetContentCRC64\"],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-crc64\",\n    xmlName: \"x-ms-range-get-content-crc64\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const encryptionKey: OperationParameter = {\n  parameterPath: [\"options\", \"cpkInfo\", \"encryptionKey\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-key\",\n    xmlName: \"x-ms-encryption-key\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const encryptionKeySha256: OperationParameter = {\n  parameterPath: [\"options\", \"cpkInfo\", \"encryptionKeySha256\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-key-sha256\",\n    xmlName: \"x-ms-encryption-key-sha256\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const encryptionAlgorithm: OperationParameter = {\n  parameterPath: [\"options\", \"cpkInfo\", \"encryptionAlgorithm\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-algorithm\",\n    xmlName: \"x-ms-encryption-algorithm\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifMatch: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    xmlName: \"If-Match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifNoneMatch: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifNoneMatch\"],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    xmlName: \"If-None-Match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifTags: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifTags\"],\n  mapper: {\n    serializedName: \"x-ms-if-tags\",\n    xmlName: \"x-ms-if-tags\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const deleteSnapshots: OperationParameter = {\n  parameterPath: [\"options\", \"deleteSnapshots\"],\n  mapper: {\n    serializedName: \"x-ms-delete-snapshots\",\n    xmlName: \"x-ms-delete-snapshots\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"include\", \"only\"],\n    },\n  },\n};\n\nexport const blobDeleteType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"blobDeleteType\"],\n  mapper: {\n    serializedName: \"deletetype\",\n    xmlName: \"deletetype\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp11: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"expiry\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const expiryOptions: OperationParameter = {\n  parameterPath: \"expiryOptions\",\n  mapper: {\n    serializedName: \"x-ms-expiry-option\",\n    required: true,\n    xmlName: \"x-ms-expiry-option\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const expiresOn: OperationParameter = {\n  parameterPath: [\"options\", \"expiresOn\"],\n  mapper: {\n    serializedName: \"x-ms-expiry-time\",\n    xmlName: \"x-ms-expiry-time\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobCacheControl: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobCacheControl\"],\n  mapper: {\n    serializedName: \"x-ms-blob-cache-control\",\n    xmlName: \"x-ms-blob-cache-control\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContentType: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentType\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-type\",\n    xmlName: \"x-ms-blob-content-type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-md5\",\n    xmlName: \"x-ms-blob-content-md5\",\n    type: {\n      name: \"ByteArray\",\n    },\n  },\n};\n\nexport const blobContentEncoding: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentEncoding\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-encoding\",\n    xmlName: \"x-ms-blob-content-encoding\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContentLanguage: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentLanguage\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-language\",\n    xmlName: \"x-ms-blob-content-language\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContentDisposition: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentDisposition\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-disposition\",\n    xmlName: \"x-ms-blob-content-disposition\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp12: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"immutabilityPolicies\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const immutabilityPolicyExpiry: OperationParameter = {\n  parameterPath: [\"options\", \"immutabilityPolicyExpiry\"],\n  mapper: {\n    serializedName: \"x-ms-immutability-policy-until-date\",\n    xmlName: \"x-ms-immutability-policy-until-date\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const immutabilityPolicyMode: OperationParameter = {\n  parameterPath: [\"options\", \"immutabilityPolicyMode\"],\n  mapper: {\n    serializedName: \"x-ms-immutability-policy-mode\",\n    xmlName: \"x-ms-immutability-policy-mode\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"],\n    },\n  },\n};\n\nexport const comp13: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"legalhold\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const legalHold: OperationParameter = {\n  parameterPath: \"legalHold\",\n  mapper: {\n    serializedName: \"x-ms-legal-hold\",\n    required: true,\n    xmlName: \"x-ms-legal-hold\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const encryptionScope: OperationParameter = {\n  parameterPath: [\"options\", \"encryptionScope\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-scope\",\n    xmlName: \"x-ms-encryption-scope\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp14: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"snapshot\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const tier: OperationParameter = {\n  parameterPath: [\"options\", \"tier\"],\n  mapper: {\n    serializedName: \"x-ms-access-tier\",\n    xmlName: \"x-ms-access-tier\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"P4\",\n        \"P6\",\n        \"P10\",\n        \"P15\",\n        \"P20\",\n        \"P30\",\n        \"P40\",\n        \"P50\",\n        \"P60\",\n        \"P70\",\n        \"P80\",\n        \"Hot\",\n        \"Cool\",\n        \"Archive\",\n        \"Cold\",\n      ],\n    },\n  },\n};\n\nexport const rehydratePriority: OperationParameter = {\n  parameterPath: [\"options\", \"rehydratePriority\"],\n  mapper: {\n    serializedName: \"x-ms-rehydrate-priority\",\n    xmlName: \"x-ms-rehydrate-priority\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"High\", \"Standard\"],\n    },\n  },\n};\n\nexport const sourceIfModifiedSince: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfModifiedSince\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-modified-since\",\n    xmlName: \"x-ms-source-if-modified-since\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const sourceIfUnmodifiedSince: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfUnmodifiedSince\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-unmodified-since\",\n    xmlName: \"x-ms-source-if-unmodified-since\",\n    type: {\n      name: \"DateTimeRfc1123\",\n    },\n  },\n};\n\nexport const sourceIfMatch: OperationParameter = {\n  parameterPath: [\"options\", \"sourceModifiedAccessConditions\", \"sourceIfMatch\"],\n  mapper: {\n    serializedName: \"x-ms-source-if-match\",\n    xmlName: \"x-ms-source-if-match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceIfNoneMatch: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfNoneMatch\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-none-match\",\n    xmlName: \"x-ms-source-if-none-match\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceIfTags: OperationParameter = {\n  parameterPath: [\"options\", \"sourceModifiedAccessConditions\", \"sourceIfTags\"],\n  mapper: {\n    serializedName: \"x-ms-source-if-tags\",\n    xmlName: \"x-ms-source-if-tags\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const copySource: OperationParameter = {\n  parameterPath: \"copySource\",\n  mapper: {\n    serializedName: \"x-ms-copy-source\",\n    required: true,\n    xmlName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobTagsString: OperationParameter = {\n  parameterPath: [\"options\", \"blobTagsString\"],\n  mapper: {\n    serializedName: \"x-ms-tags\",\n    xmlName: \"x-ms-tags\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sealBlob: OperationParameter = {\n  parameterPath: [\"options\", \"sealBlob\"],\n  mapper: {\n    serializedName: \"x-ms-seal-blob\",\n    xmlName: \"x-ms-seal-blob\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const legalHold1: OperationParameter = {\n  parameterPath: [\"options\", \"legalHold\"],\n  mapper: {\n    serializedName: \"x-ms-legal-hold\",\n    xmlName: \"x-ms-legal-hold\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const xMsRequiresSync: OperationParameter = {\n  parameterPath: \"xMsRequiresSync\",\n  mapper: {\n    defaultValue: \"true\",\n    isConstant: true,\n    serializedName: \"x-ms-requires-sync\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"sourceContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-source-content-md5\",\n    xmlName: \"x-ms-source-content-md5\",\n    type: {\n      name: \"ByteArray\",\n    },\n  },\n};\n\nexport const copySourceAuthorization: OperationParameter = {\n  parameterPath: [\"options\", \"copySourceAuthorization\"],\n  mapper: {\n    serializedName: \"x-ms-copy-source-authorization\",\n    xmlName: \"x-ms-copy-source-authorization\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const copySourceTags: OperationParameter = {\n  parameterPath: [\"options\", \"copySourceTags\"],\n  mapper: {\n    serializedName: \"x-ms-copy-source-tag-option\",\n    xmlName: \"x-ms-copy-source-tag-option\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"REPLACE\", \"COPY\"],\n    },\n  },\n};\n\nexport const comp15: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"copy\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const copyActionAbortConstant: OperationParameter = {\n  parameterPath: \"copyActionAbortConstant\",\n  mapper: {\n    defaultValue: \"abort\",\n    isConstant: true,\n    serializedName: \"x-ms-copy-action\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const copyId: OperationQueryParameter = {\n  parameterPath: \"copyId\",\n  mapper: {\n    serializedName: \"copyid\",\n    required: true,\n    xmlName: \"copyid\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp16: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"tier\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const tier1: OperationParameter = {\n  parameterPath: \"tier\",\n  mapper: {\n    serializedName: \"x-ms-access-tier\",\n    required: true,\n    xmlName: \"x-ms-access-tier\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"P4\",\n        \"P6\",\n        \"P10\",\n        \"P15\",\n        \"P20\",\n        \"P30\",\n        \"P40\",\n        \"P50\",\n        \"P60\",\n        \"P70\",\n        \"P80\",\n        \"Hot\",\n        \"Cool\",\n        \"Archive\",\n        \"Cold\",\n      ],\n    },\n  },\n};\n\nexport const queryRequest: OperationParameter = {\n  parameterPath: [\"options\", \"queryRequest\"],\n  mapper: QueryRequestMapper,\n};\n\nexport const comp17: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"query\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp18: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"tags\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const tags: OperationParameter = {\n  parameterPath: [\"options\", \"tags\"],\n  mapper: BlobTagsMapper,\n};\n\nexport const transactionalContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"transactionalContentMD5\"],\n  mapper: {\n    serializedName: \"Content-MD5\",\n    xmlName: \"Content-MD5\",\n    type: {\n      name: \"ByteArray\",\n    },\n  },\n};\n\nexport const transactionalContentCrc64: OperationParameter = {\n  parameterPath: [\"options\", \"transactionalContentCrc64\"],\n  mapper: {\n    serializedName: \"x-ms-content-crc64\",\n    xmlName: \"x-ms-content-crc64\",\n    type: {\n      name: \"ByteArray\",\n    },\n  },\n};\n\nexport const blobType: OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    defaultValue: \"PageBlob\",\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobContentLength: OperationParameter = {\n  parameterPath: \"blobContentLength\",\n  mapper: {\n    serializedName: \"x-ms-blob-content-length\",\n    required: true,\n    xmlName: \"x-ms-blob-content-length\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const blobSequenceNumber: OperationParameter = {\n  parameterPath: [\"options\", \"blobSequenceNumber\"],\n  mapper: {\n    defaultValue: 0,\n    serializedName: \"x-ms-blob-sequence-number\",\n    xmlName: \"x-ms-blob-sequence-number\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const contentType1: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/octet-stream\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: {\n    serializedName: \"body\",\n    required: true,\n    xmlName: \"body\",\n    type: {\n      name: \"Stream\",\n    },\n  },\n};\n\nexport const accept2: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp19: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"page\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const pageWrite: OperationParameter = {\n  parameterPath: \"pageWrite\",\n  mapper: {\n    defaultValue: \"update\",\n    isConstant: true,\n    serializedName: \"x-ms-page-write\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ifSequenceNumberLessThanOrEqualTo: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberLessThanOrEqualTo\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-le\",\n    xmlName: \"x-ms-if-sequence-number-le\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const ifSequenceNumberLessThan: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberLessThan\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-lt\",\n    xmlName: \"x-ms-if-sequence-number-lt\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const ifSequenceNumberEqualTo: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberEqualTo\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-eq\",\n    xmlName: \"x-ms-if-sequence-number-eq\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const pageWrite1: OperationParameter = {\n  parameterPath: \"pageWrite\",\n  mapper: {\n    defaultValue: \"clear\",\n    isConstant: true,\n    serializedName: \"x-ms-page-write\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceUrl: OperationParameter = {\n  parameterPath: \"sourceUrl\",\n  mapper: {\n    serializedName: \"x-ms-copy-source\",\n    required: true,\n    xmlName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceRange: OperationParameter = {\n  parameterPath: \"sourceRange\",\n  mapper: {\n    serializedName: \"x-ms-source-range\",\n    required: true,\n    xmlName: \"x-ms-source-range\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sourceContentCrc64: OperationParameter = {\n  parameterPath: [\"options\", \"sourceContentCrc64\"],\n  mapper: {\n    serializedName: \"x-ms-source-content-crc64\",\n    xmlName: \"x-ms-source-content-crc64\",\n    type: {\n      name: \"ByteArray\",\n    },\n  },\n};\n\nexport const range1: OperationParameter = {\n  parameterPath: \"range\",\n  mapper: {\n    serializedName: \"x-ms-range\",\n    required: true,\n    xmlName: \"x-ms-range\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp20: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"pagelist\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const prevsnapshot: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prevsnapshot\"],\n  mapper: {\n    serializedName: \"prevsnapshot\",\n    xmlName: \"prevsnapshot\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const prevSnapshotUrl: OperationParameter = {\n  parameterPath: [\"options\", \"prevSnapshotUrl\"],\n  mapper: {\n    serializedName: \"x-ms-previous-snapshot-url\",\n    xmlName: \"x-ms-previous-snapshot-url\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const sequenceNumberAction: OperationParameter = {\n  parameterPath: \"sequenceNumberAction\",\n  mapper: {\n    serializedName: \"x-ms-sequence-number-action\",\n    required: true,\n    xmlName: \"x-ms-sequence-number-action\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"max\", \"update\", \"increment\"],\n    },\n  },\n};\n\nexport const comp21: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"incrementalcopy\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobType1: OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    defaultValue: \"AppendBlob\",\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp22: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"appendblock\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const maxSize: OperationParameter = {\n  parameterPath: [\"options\", \"appendPositionAccessConditions\", \"maxSize\"],\n  mapper: {\n    serializedName: \"x-ms-blob-condition-maxsize\",\n    xmlName: \"x-ms-blob-condition-maxsize\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const appendPosition: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"appendPositionAccessConditions\",\n    \"appendPosition\",\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-condition-appendpos\",\n    xmlName: \"x-ms-blob-condition-appendpos\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const sourceRange1: OperationParameter = {\n  parameterPath: [\"options\", \"sourceRange\"],\n  mapper: {\n    serializedName: \"x-ms-source-range\",\n    xmlName: \"x-ms-source-range\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const comp23: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"seal\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blobType2: OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    defaultValue: \"BlockBlob\",\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const copySourceBlobProperties: OperationParameter = {\n  parameterPath: [\"options\", \"copySourceBlobProperties\"],\n  mapper: {\n    serializedName: \"x-ms-copy-source-blob-properties\",\n    xmlName: \"x-ms-copy-source-blob-properties\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const comp24: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"block\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blockId: OperationQueryParameter = {\n  parameterPath: \"blockId\",\n  mapper: {\n    serializedName: \"blockid\",\n    required: true,\n    xmlName: \"blockid\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blocks: OperationParameter = {\n  parameterPath: \"blocks\",\n  mapper: BlockLookupListMapper,\n};\n\nexport const comp25: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"blocklist\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const listType: OperationQueryParameter = {\n  parameterPath: \"listType\",\n  mapper: {\n    defaultValue: \"committed\",\n    serializedName: \"blocklisttype\",\n    required: true,\n    xmlName: \"blocklisttype\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"committed\", \"uncommitted\", \"all\"],\n    },\n  },\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Service } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  BlobServiceProperties,\n  ServiceSetPropertiesOptionalParams,\n  ServiceSetPropertiesResponse,\n  ServiceGetPropertiesOptionalParams,\n  ServiceGetPropertiesResponse,\n  ServiceGetStatisticsOptionalParams,\n  ServiceGetStatisticsResponse,\n  ServiceListContainersSegmentOptionalParams,\n  ServiceListContainersSegmentResponse,\n  KeyInfo,\n  ServiceGetUserDelegationKeyOptionalParams,\n  ServiceGetUserDelegationKeyResponse,\n  ServiceGetAccountInfoOptionalParams,\n  ServiceGetAccountInfoResponse,\n  ServiceSubmitBatchOptionalParams,\n  ServiceSubmitBatchResponse,\n  ServiceFilterBlobsOptionalParams,\n  ServiceFilterBlobsResponse,\n} from \"../models\";\n\n/** Class containing Service operations. */\nexport class ServiceImpl implements Service {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class Service class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * Sets properties for a storage account's Blob service endpoint, including properties for Storage\n   * Analytics and CORS (Cross-Origin Resource Sharing) rules\n   * @param blobServiceProperties The StorageService properties.\n   * @param options The options parameters.\n   */\n  setProperties(\n    blobServiceProperties: BlobServiceProperties,\n    options?: ServiceSetPropertiesOptionalParams,\n  ): Promise<ServiceSetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { blobServiceProperties, options },\n      setPropertiesOperationSpec,\n    );\n  }\n\n  /**\n   * gets the properties of a storage account's Blob service, including properties for Storage Analytics\n   * and CORS (Cross-Origin Resource Sharing) rules.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: ServiceGetPropertiesOptionalParams,\n  ): Promise<ServiceGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPropertiesOperationSpec,\n    );\n  }\n\n  /**\n   * Retrieves statistics related to replication for the Blob service. It is only available on the\n   * secondary location endpoint when read-access geo-redundant replication is enabled for the storage\n   * account.\n   * @param options The options parameters.\n   */\n  getStatistics(\n    options?: ServiceGetStatisticsOptionalParams,\n  ): Promise<ServiceGetStatisticsResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getStatisticsOperationSpec,\n    );\n  }\n\n  /**\n   * The List Containers Segment operation returns a list of the containers under the specified account\n   * @param options The options parameters.\n   */\n  listContainersSegment(\n    options?: ServiceListContainersSegmentOptionalParams,\n  ): Promise<ServiceListContainersSegmentResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listContainersSegmentOperationSpec,\n    );\n  }\n\n  /**\n   * Retrieves a user delegation key for the Blob service. This is only a valid operation when using\n   * bearer token authentication.\n   * @param keyInfo Key information\n   * @param options The options parameters.\n   */\n  getUserDelegationKey(\n    keyInfo: KeyInfo,\n    options?: ServiceGetUserDelegationKeyOptionalParams,\n  ): Promise<ServiceGetUserDelegationKeyResponse> {\n    return this.client.sendOperationRequest(\n      { keyInfo, options },\n      getUserDelegationKeyOperationSpec,\n    );\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param options The options parameters.\n   */\n  getAccountInfo(\n    options?: ServiceGetAccountInfoOptionalParams,\n  ): Promise<ServiceGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getAccountInfoOperationSpec,\n    );\n  }\n\n  /**\n   * The Batch operation allows multiple API calls to be embedded into a single HTTP request.\n   * @param contentLength The length of the request.\n   * @param multipartContentType Required. The value of this header must be multipart/mixed with a batch\n   *                             boundary. Example header value: multipart/mixed; boundary=batch_<GUID>\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  submitBatch(\n    contentLength: number,\n    multipartContentType: string,\n    body: coreRestPipeline.RequestBodyType,\n    options?: ServiceSubmitBatchOptionalParams,\n  ): Promise<ServiceSubmitBatchResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, multipartContentType, body, options },\n      submitBatchOperationSpec,\n    );\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs across all containers whose tags match a\n   * given search expression.  Filter blobs searches across all containers within a storage account but\n   * can be scoped within the expression to a single container.\n   * @param options The options parameters.\n   */\n  filterBlobs(\n    options?: ServiceFilterBlobsOptionalParams,\n  ): Promise<ServiceFilterBlobsResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      filterBlobsOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst setPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ServiceSetPropertiesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceSetPropertiesExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.blobServiceProperties,\n  queryParameters: [\n    Parameters.restype,\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst getPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceProperties,\n      headersMapper: Mappers.ServiceGetPropertiesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetPropertiesExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.restype,\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getStatisticsOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceStatistics,\n      headersMapper: Mappers.ServiceGetStatisticsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetStatisticsExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.restype,\n    Parameters.timeoutInSeconds,\n    Parameters.comp1,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst listContainersSegmentOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListContainersSegmentResponse,\n      headersMapper: Mappers.ServiceListContainersSegmentHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceListContainersSegmentExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp2,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.include,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getUserDelegationKeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UserDelegationKey,\n      headersMapper: Mappers.ServiceGetUserDelegationKeyHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetUserDelegationKeyExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.keyInfo,\n  queryParameters: [\n    Parameters.restype,\n    Parameters.timeoutInSeconds,\n    Parameters.comp3,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst getAccountInfoOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ServiceGetAccountInfoHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetAccountInfoExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst submitBatchOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.ServiceSubmitBatchHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceSubmitBatchExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp4],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.multipartContentType,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst filterBlobsOperationSpec: coreClient.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FilterBlobSegment,\n      headersMapper: Mappers.ServiceFilterBlobsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceFilterBlobsExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.comp5,\n    Parameters.where,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Container } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  ContainerCreateOptionalParams,\n  ContainerCreateResponse,\n  ContainerGetPropertiesOptionalParams,\n  ContainerGetPropertiesResponse,\n  ContainerDeleteOptionalParams,\n  ContainerDeleteResponse,\n  ContainerSetMetadataOptionalParams,\n  ContainerSetMetadataResponse,\n  ContainerGetAccessPolicyOptionalParams,\n  ContainerGetAccessPolicyResponse,\n  ContainerSetAccessPolicyOptionalParams,\n  ContainerSetAccessPolicyResponse,\n  ContainerRestoreOptionalParams,\n  ContainerRestoreResponse,\n  ContainerRenameOptionalParams,\n  ContainerRenameResponse,\n  ContainerSubmitBatchOptionalParams,\n  ContainerSubmitBatchResponse,\n  ContainerFilterBlobsOptionalParams,\n  ContainerFilterBlobsResponse,\n  ContainerAcquireLeaseOptionalParams,\n  ContainerAcquireLeaseResponse,\n  ContainerReleaseLeaseOptionalParams,\n  ContainerReleaseLeaseResponse,\n  ContainerRenewLeaseOptionalParams,\n  ContainerRenewLeaseResponse,\n  ContainerBreakLeaseOptionalParams,\n  ContainerBreakLeaseResponse,\n  ContainerChangeLeaseOptionalParams,\n  ContainerChangeLeaseResponse,\n  ContainerListBlobFlatSegmentOptionalParams,\n  ContainerListBlobFlatSegmentResponse,\n  ContainerListBlobHierarchySegmentOptionalParams,\n  ContainerListBlobHierarchySegmentResponse,\n  ContainerGetAccountInfoOptionalParams,\n  ContainerGetAccountInfoResponse,\n} from \"../models\";\n\n/** Class containing Container operations. */\nexport class ContainerImpl implements Container {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class Container class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * creates a new container under the specified account. If the container with the same name already\n   * exists, the operation fails\n   * @param options The options parameters.\n   */\n  create(\n    options?: ContainerCreateOptionalParams,\n  ): Promise<ContainerCreateResponse> {\n    return this.client.sendOperationRequest({ options }, createOperationSpec);\n  }\n\n  /**\n   * returns all user-defined metadata and system properties for the specified container. The data\n   * returned does not include the container's list of blobs\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: ContainerGetPropertiesOptionalParams,\n  ): Promise<ContainerGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPropertiesOperationSpec,\n    );\n  }\n\n  /**\n   * operation marks the specified container for deletion. The container and any blobs contained within\n   * it are later deleted during garbage collection\n   * @param options The options parameters.\n   */\n  delete(\n    options?: ContainerDeleteOptionalParams,\n  ): Promise<ContainerDeleteResponse> {\n    return this.client.sendOperationRequest({ options }, deleteOperationSpec);\n  }\n\n  /**\n   * operation sets one or more user-defined name-value pairs for the specified container.\n   * @param options The options parameters.\n   */\n  setMetadata(\n    options?: ContainerSetMetadataOptionalParams,\n  ): Promise<ContainerSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      setMetadataOperationSpec,\n    );\n  }\n\n  /**\n   * gets the permissions for the specified container. The permissions indicate whether container data\n   * may be accessed publicly.\n   * @param options The options parameters.\n   */\n  getAccessPolicy(\n    options?: ContainerGetAccessPolicyOptionalParams,\n  ): Promise<ContainerGetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getAccessPolicyOperationSpec,\n    );\n  }\n\n  /**\n   * sets the permissions for the specified container. The permissions indicate whether blobs in a\n   * container may be accessed publicly.\n   * @param options The options parameters.\n   */\n  setAccessPolicy(\n    options?: ContainerSetAccessPolicyOptionalParams,\n  ): Promise<ContainerSetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      setAccessPolicyOperationSpec,\n    );\n  }\n\n  /**\n   * Restores a previously-deleted container.\n   * @param options The options parameters.\n   */\n  restore(\n    options?: ContainerRestoreOptionalParams,\n  ): Promise<ContainerRestoreResponse> {\n    return this.client.sendOperationRequest({ options }, restoreOperationSpec);\n  }\n\n  /**\n   * Renames an existing container.\n   * @param sourceContainerName Required.  Specifies the name of the container to rename.\n   * @param options The options parameters.\n   */\n  rename(\n    sourceContainerName: string,\n    options?: ContainerRenameOptionalParams,\n  ): Promise<ContainerRenameResponse> {\n    return this.client.sendOperationRequest(\n      { sourceContainerName, options },\n      renameOperationSpec,\n    );\n  }\n\n  /**\n   * The Batch operation allows multiple API calls to be embedded into a single HTTP request.\n   * @param contentLength The length of the request.\n   * @param multipartContentType Required. The value of this header must be multipart/mixed with a batch\n   *                             boundary. Example header value: multipart/mixed; boundary=batch_<GUID>\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  submitBatch(\n    contentLength: number,\n    multipartContentType: string,\n    body: coreRestPipeline.RequestBodyType,\n    options?: ContainerSubmitBatchOptionalParams,\n  ): Promise<ContainerSubmitBatchResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, multipartContentType, body, options },\n      submitBatchOperationSpec,\n    );\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs in a container whose tags match a given\n   * search expression.  Filter blobs searches within the given container.\n   * @param options The options parameters.\n   */\n  filterBlobs(\n    options?: ContainerFilterBlobsOptionalParams,\n  ): Promise<ContainerFilterBlobsResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      filterBlobsOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param options The options parameters.\n   */\n  acquireLease(\n    options?: ContainerAcquireLeaseOptionalParams,\n  ): Promise<ContainerAcquireLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      acquireLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  releaseLease(\n    leaseId: string,\n    options?: ContainerReleaseLeaseOptionalParams,\n  ): Promise<ContainerReleaseLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, options },\n      releaseLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  renewLease(\n    leaseId: string,\n    options?: ContainerRenewLeaseOptionalParams,\n  ): Promise<ContainerRenewLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, options },\n      renewLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param options The options parameters.\n   */\n  breakLease(\n    options?: ContainerBreakLeaseOptionalParams,\n  ): Promise<ContainerBreakLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      breakLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   *                        (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   *                        (String) for a list of valid GUID string formats.\n   * @param options The options parameters.\n   */\n  changeLease(\n    leaseId: string,\n    proposedLeaseId: string,\n    options?: ContainerChangeLeaseOptionalParams,\n  ): Promise<ContainerChangeLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, proposedLeaseId, options },\n      changeLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param options The options parameters.\n   */\n  listBlobFlatSegment(\n    options?: ContainerListBlobFlatSegmentOptionalParams,\n  ): Promise<ContainerListBlobFlatSegmentResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBlobFlatSegmentOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param delimiter When the request includes this parameter, the operation returns a BlobPrefix\n   *                  element in the response body that acts as a placeholder for all blobs whose names begin with the\n   *                  same substring up to the appearance of the delimiter character. The delimiter may be a single\n   *                  character or a string.\n   * @param options The options parameters.\n   */\n  listBlobHierarchySegment(\n    delimiter: string,\n    options?: ContainerListBlobHierarchySegmentOptionalParams,\n  ): Promise<ContainerListBlobHierarchySegmentResponse> {\n    return this.client.sendOperationRequest(\n      { delimiter, options },\n      listBlobHierarchySegmentOperationSpec,\n    );\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param options The options parameters.\n   */\n  getAccountInfo(\n    options?: ContainerGetAccountInfoOptionalParams,\n  ): Promise<ContainerGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getAccountInfoOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerCreateHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerCreateExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.access,\n    Parameters.defaultEncryptionScope,\n    Parameters.preventEncryptionScopeOverride,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerGetPropertiesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerGetPropertiesExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ContainerDeleteHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerDeleteExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setMetadataOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerSetMetadataHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerSetMetadataExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp6,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getAccessPolicyOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"SignedIdentifier\" },\n          },\n        },\n        serializedName: \"SignedIdentifiers\",\n        xmlName: \"SignedIdentifiers\",\n        xmlIsWrapped: true,\n        xmlElementName: \"SignedIdentifier\",\n      },\n      headersMapper: Mappers.ContainerGetAccessPolicyHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerGetAccessPolicyExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp7,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setAccessPolicyOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerSetAccessPolicyHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerSetAccessPolicyExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.containerAcl,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp7,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.access,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst restoreOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerRestoreHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerRestoreExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp8,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.deletedContainerName,\n    Parameters.deletedContainerVersion,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst renameOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerRenameHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerRenameExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp9,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.sourceContainerName,\n    Parameters.sourceLeaseId,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst submitBatchOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.ContainerSubmitBatchHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerSubmitBatchExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp4,\n    Parameters.restype2,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.multipartContentType,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst filterBlobsOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FilterBlobSegment,\n      headersMapper: Mappers.ContainerFilterBlobsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerFilterBlobsExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.comp5,\n    Parameters.where,\n    Parameters.restype2,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst acquireLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerAcquireLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerAcquireLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action,\n    Parameters.duration,\n    Parameters.proposedLeaseId,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst releaseLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerReleaseLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerReleaseLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action1,\n    Parameters.leaseId1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst renewLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerRenewLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerRenewLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action2,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst breakLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ContainerBreakLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerBreakLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action3,\n    Parameters.breakPeriod,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst changeLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerChangeLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerChangeLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action4,\n    Parameters.proposedLeaseId1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst listBlobFlatSegmentOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsFlatSegmentResponse,\n      headersMapper: Mappers.ContainerListBlobFlatSegmentHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerListBlobFlatSegmentExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp2,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.restype2,\n    Parameters.include1,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst listBlobHierarchySegmentOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsHierarchySegmentResponse,\n      headersMapper: Mappers.ContainerListBlobHierarchySegmentHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerListBlobHierarchySegmentExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp2,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.restype2,\n    Parameters.include1,\n    Parameters.delimiter,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getAccountInfoOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerGetAccountInfoHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerGetAccountInfoExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Blob } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  BlobDownloadOptionalParams,\n  BlobDownloadResponse,\n  BlobGetPropertiesOptionalParams,\n  BlobGetPropertiesResponse,\n  BlobDeleteOptionalParams,\n  BlobDeleteResponse,\n  BlobUndeleteOptionalParams,\n  BlobUndeleteResponse,\n  BlobExpiryOptions,\n  BlobSetExpiryOptionalParams,\n  BlobSetExpiryResponse,\n  BlobSetHttpHeadersOptionalParams,\n  BlobSetHttpHeadersResponse,\n  BlobSetImmutabilityPolicyOptionalParams,\n  BlobSetImmutabilityPolicyResponse,\n  BlobDeleteImmutabilityPolicyOptionalParams,\n  BlobDeleteImmutabilityPolicyResponse,\n  BlobSetLegalHoldOptionalParams,\n  BlobSetLegalHoldResponse,\n  BlobSetMetadataOptionalParams,\n  BlobSetMetadataResponse,\n  BlobAcquireLeaseOptionalParams,\n  BlobAcquireLeaseResponse,\n  BlobReleaseLeaseOptionalParams,\n  BlobReleaseLeaseResponse,\n  BlobRenewLeaseOptionalParams,\n  BlobRenewLeaseResponse,\n  BlobChangeLeaseOptionalParams,\n  BlobChangeLeaseResponse,\n  BlobBreakLeaseOptionalParams,\n  BlobBreakLeaseResponse,\n  BlobCreateSnapshotOptionalParams,\n  BlobCreateSnapshotResponse,\n  BlobStartCopyFromURLOptionalParams,\n  BlobStartCopyFromURLResponse,\n  BlobCopyFromURLOptionalParams,\n  BlobCopyFromURLResponse,\n  BlobAbortCopyFromURLOptionalParams,\n  BlobAbortCopyFromURLResponse,\n  AccessTier,\n  BlobSetTierOptionalParams,\n  BlobSetTierResponse,\n  BlobGetAccountInfoOptionalParams,\n  BlobGetAccountInfoResponse,\n  BlobQueryOptionalParams,\n  BlobQueryResponse,\n  BlobGetTagsOptionalParams,\n  BlobGetTagsResponse,\n  BlobSetTagsOptionalParams,\n  BlobSetTagsResponse,\n} from \"../models\";\n\n/** Class containing Blob operations. */\nexport class BlobImpl implements Blob {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class Blob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * The Download operation reads or downloads a blob from the system, including its metadata and\n   * properties. You can also call Download to read a snapshot.\n   * @param options The options parameters.\n   */\n  download(\n    options?: BlobDownloadOptionalParams,\n  ): Promise<BlobDownloadResponse> {\n    return this.client.sendOperationRequest({ options }, downloadOperationSpec);\n  }\n\n  /**\n   * The Get Properties operation returns all user-defined metadata, standard HTTP properties, and system\n   * properties for the blob. It does not return the content of the blob.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: BlobGetPropertiesOptionalParams,\n  ): Promise<BlobGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPropertiesOperationSpec,\n    );\n  }\n\n  /**\n   * If the storage account's soft delete feature is disabled then, when a blob is deleted, it is\n   * permanently removed from the storage account. If the storage account's soft delete feature is\n   * enabled, then, when a blob is deleted, it is marked for deletion and becomes inaccessible\n   * immediately. However, the blob service retains the blob or snapshot for the number of days specified\n   * by the DeleteRetentionPolicy section of [Storage service properties]\n   * (Set-Blob-Service-Properties.md). After the specified number of days has passed, the blob's data is\n   * permanently removed from the storage account. Note that you continue to be charged for the\n   * soft-deleted blob's storage until it is permanently removed. Use the List Blobs API and specify the\n   * \"include=deleted\" query parameter to discover which blobs and snapshots have been soft deleted. You\n   * can then use the Undelete Blob API to restore a soft-deleted blob. All other operations on a\n   * soft-deleted blob or snapshot causes the service to return an HTTP status code of 404\n   * (ResourceNotFound).\n   * @param options The options parameters.\n   */\n  delete(options?: BlobDeleteOptionalParams): Promise<BlobDeleteResponse> {\n    return this.client.sendOperationRequest({ options }, deleteOperationSpec);\n  }\n\n  /**\n   * Undelete a blob that was previously soft deleted\n   * @param options The options parameters.\n   */\n  undelete(\n    options?: BlobUndeleteOptionalParams,\n  ): Promise<BlobUndeleteResponse> {\n    return this.client.sendOperationRequest({ options }, undeleteOperationSpec);\n  }\n\n  /**\n   * Sets the time a blob will expire and be deleted.\n   * @param expiryOptions Required. Indicates mode of the expiry time\n   * @param options The options parameters.\n   */\n  setExpiry(\n    expiryOptions: BlobExpiryOptions,\n    options?: BlobSetExpiryOptionalParams,\n  ): Promise<BlobSetExpiryResponse> {\n    return this.client.sendOperationRequest(\n      { expiryOptions, options },\n      setExpiryOperationSpec,\n    );\n  }\n\n  /**\n   * The Set HTTP Headers operation sets system properties on the blob\n   * @param options The options parameters.\n   */\n  setHttpHeaders(\n    options?: BlobSetHttpHeadersOptionalParams,\n  ): Promise<BlobSetHttpHeadersResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      setHttpHeadersOperationSpec,\n    );\n  }\n\n  /**\n   * The Set Immutability Policy operation sets the immutability policy on the blob\n   * @param options The options parameters.\n   */\n  setImmutabilityPolicy(\n    options?: BlobSetImmutabilityPolicyOptionalParams,\n  ): Promise<BlobSetImmutabilityPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      setImmutabilityPolicyOperationSpec,\n    );\n  }\n\n  /**\n   * The Delete Immutability Policy operation deletes the immutability policy on the blob\n   * @param options The options parameters.\n   */\n  deleteImmutabilityPolicy(\n    options?: BlobDeleteImmutabilityPolicyOptionalParams,\n  ): Promise<BlobDeleteImmutabilityPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      deleteImmutabilityPolicyOperationSpec,\n    );\n  }\n\n  /**\n   * The Set Legal Hold operation sets a legal hold on the blob.\n   * @param legalHold Specified if a legal hold should be set on the blob.\n   * @param options The options parameters.\n   */\n  setLegalHold(\n    legalHold: boolean,\n    options?: BlobSetLegalHoldOptionalParams,\n  ): Promise<BlobSetLegalHoldResponse> {\n    return this.client.sendOperationRequest(\n      { legalHold, options },\n      setLegalHoldOperationSpec,\n    );\n  }\n\n  /**\n   * The Set Blob Metadata operation sets user-defined metadata for the specified blob as one or more\n   * name-value pairs\n   * @param options The options parameters.\n   */\n  setMetadata(\n    options?: BlobSetMetadataOptionalParams,\n  ): Promise<BlobSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      setMetadataOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param options The options parameters.\n   */\n  acquireLease(\n    options?: BlobAcquireLeaseOptionalParams,\n  ): Promise<BlobAcquireLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      acquireLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  releaseLease(\n    leaseId: string,\n    options?: BlobReleaseLeaseOptionalParams,\n  ): Promise<BlobReleaseLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, options },\n      releaseLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  renewLease(\n    leaseId: string,\n    options?: BlobRenewLeaseOptionalParams,\n  ): Promise<BlobRenewLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, options },\n      renewLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   *                        (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   *                        (String) for a list of valid GUID string formats.\n   * @param options The options parameters.\n   */\n  changeLease(\n    leaseId: string,\n    proposedLeaseId: string,\n    options?: BlobChangeLeaseOptionalParams,\n  ): Promise<BlobChangeLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { leaseId, proposedLeaseId, options },\n      changeLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param options The options parameters.\n   */\n  breakLease(\n    options?: BlobBreakLeaseOptionalParams,\n  ): Promise<BlobBreakLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      breakLeaseOperationSpec,\n    );\n  }\n\n  /**\n   * The Create Snapshot operation creates a read-only snapshot of a blob\n   * @param options The options parameters.\n   */\n  createSnapshot(\n    options?: BlobCreateSnapshotOptionalParams,\n  ): Promise<BlobCreateSnapshotResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      createSnapshotOperationSpec,\n    );\n  }\n\n  /**\n   * The Start Copy From URL operation copies a blob or an internet resource to a new blob.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  startCopyFromURL(\n    copySource: string,\n    options?: BlobStartCopyFromURLOptionalParams,\n  ): Promise<BlobStartCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      { copySource, options },\n      startCopyFromURLOperationSpec,\n    );\n  }\n\n  /**\n   * The Copy From URL operation copies a blob or an internet resource to a new blob. It will not return\n   * a response until the copy is complete.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  copyFromURL(\n    copySource: string,\n    options?: BlobCopyFromURLOptionalParams,\n  ): Promise<BlobCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      { copySource, options },\n      copyFromURLOperationSpec,\n    );\n  }\n\n  /**\n   * The Abort Copy From URL operation aborts a pending Copy From URL operation, and leaves a destination\n   * blob with zero length and full metadata.\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy Blob\n   *               operation.\n   * @param options The options parameters.\n   */\n  abortCopyFromURL(\n    copyId: string,\n    options?: BlobAbortCopyFromURLOptionalParams,\n  ): Promise<BlobAbortCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      { copyId, options },\n      abortCopyFromURLOperationSpec,\n    );\n  }\n\n  /**\n   * The Set Tier operation sets the tier on a blob. The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant storage only). A\n   * premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block\n   * blob's tier determines Hot/Cool/Archive storage type. This operation does not update the blob's\n   * ETag.\n   * @param tier Indicates the tier to be set on the blob.\n   * @param options The options parameters.\n   */\n  setTier(\n    tier: AccessTier,\n    options?: BlobSetTierOptionalParams,\n  ): Promise<BlobSetTierResponse> {\n    return this.client.sendOperationRequest(\n      { tier, options },\n      setTierOperationSpec,\n    );\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param options The options parameters.\n   */\n  getAccountInfo(\n    options?: BlobGetAccountInfoOptionalParams,\n  ): Promise<BlobGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getAccountInfoOperationSpec,\n    );\n  }\n\n  /**\n   * The Query operation enables users to select/project on blob data by providing simple query\n   * expressions.\n   * @param options The options parameters.\n   */\n  query(options?: BlobQueryOptionalParams): Promise<BlobQueryResponse> {\n    return this.client.sendOperationRequest({ options }, queryOperationSpec);\n  }\n\n  /**\n   * The Get Tags operation enables users to get the tags associated with a blob.\n   * @param options The options parameters.\n   */\n  getTags(options?: BlobGetTagsOptionalParams): Promise<BlobGetTagsResponse> {\n    return this.client.sendOperationRequest({ options }, getTagsOperationSpec);\n  }\n\n  /**\n   * The Set Tags operation enables users to set tags on a blob.\n   * @param options The options parameters.\n   */\n  setTags(options?: BlobSetTagsOptionalParams): Promise<BlobSetTagsResponse> {\n    return this.client.sendOperationRequest({ options }, setTagsOperationSpec);\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst downloadOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.BlobDownloadHeaders,\n    },\n    206: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.BlobDownloadHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobDownloadExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.rangeGetContentMD5,\n    Parameters.rangeGetContentCRC64,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getPropertiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobGetPropertiesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobGetPropertiesExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobDeleteHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobDeleteExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.blobDeleteType,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.deleteSnapshots,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst undeleteOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobUndeleteHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobUndeleteExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp8],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setExpiryOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetExpiryHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetExpiryExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp11],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.expiryOptions,\n    Parameters.expiresOn,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setHttpHeadersOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetHttpHeadersHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetHttpHeadersExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setImmutabilityPolicyOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetImmutabilityPolicyHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetImmutabilityPolicyExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.comp12,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifUnmodifiedSince,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst deleteImmutabilityPolicyOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobDeleteImmutabilityPolicyHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobDeleteImmutabilityPolicyExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.comp12,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setLegalHoldOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetLegalHoldHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetLegalHoldExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.comp13,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.legalHold,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setMetadataOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetMetadataHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetMetadataExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp6],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst acquireLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlobAcquireLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobAcquireLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action,\n    Parameters.duration,\n    Parameters.proposedLeaseId,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst releaseLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobReleaseLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobReleaseLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action1,\n    Parameters.leaseId1,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst renewLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobRenewLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobRenewLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action2,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst changeLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobChangeLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobChangeLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action4,\n    Parameters.proposedLeaseId1,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst breakLeaseOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobBreakLeaseHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobBreakLeaseExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action3,\n    Parameters.breakPeriod,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst createSnapshotOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlobCreateSnapshotHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobCreateSnapshotExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp14],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst startCopyFromURLOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobStartCopyFromURLHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobStartCopyFromURLExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.tier,\n    Parameters.rehydratePriority,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceIfTags,\n    Parameters.copySource,\n    Parameters.blobTagsString,\n    Parameters.sealBlob,\n    Parameters.legalHold1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst copyFromURLOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobCopyFromURLHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobCopyFromURLExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.copySource,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.xMsRequiresSync,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.copySourceTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst abortCopyFromURLOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    204: {\n      headersMapper: Mappers.BlobAbortCopyFromURLHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobAbortCopyFromURLExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp15,\n    Parameters.copyId,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.copyActionAbortConstant,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setTierOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetTierHeaders,\n    },\n    202: {\n      headersMapper: Mappers.BlobSetTierHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetTierExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.comp16,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifTags,\n    Parameters.rehydratePriority,\n    Parameters.tier1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getAccountInfoOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobGetAccountInfoHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobGetAccountInfoExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst queryOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.BlobQueryHeaders,\n    },\n    206: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\",\n      },\n      headersMapper: Mappers.BlobQueryHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobQueryExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.queryRequest,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.comp17,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst getTagsOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobTags,\n      headersMapper: Mappers.BlobGetTagsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobGetTagsExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.comp18,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst setTagsOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    204: {\n      headersMapper: Mappers.BlobSetTagsHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetTagsExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.tags,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.versionId,\n    Parameters.comp18,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId,\n    Parameters.ifTags,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PageBlob } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  PageBlobCreateOptionalParams,\n  PageBlobCreateResponse,\n  PageBlobUploadPagesOptionalParams,\n  PageBlobUploadPagesResponse,\n  PageBlobClearPagesOptionalParams,\n  PageBlobClearPagesResponse,\n  PageBlobUploadPagesFromURLOptionalParams,\n  PageBlobUploadPagesFromURLResponse,\n  PageBlobGetPageRangesOptionalParams,\n  PageBlobGetPageRangesResponse,\n  PageBlobGetPageRangesDiffOptionalParams,\n  PageBlobGetPageRangesDiffResponse,\n  PageBlobResizeOptionalParams,\n  PageBlobResizeResponse,\n  SequenceNumberActionType,\n  PageBlobUpdateSequenceNumberOptionalParams,\n  PageBlobUpdateSequenceNumberResponse,\n  PageBlobCopyIncrementalOptionalParams,\n  PageBlobCopyIncrementalResponse,\n} from \"../models\";\n\n/** Class containing PageBlob operations. */\nexport class PageBlobImpl implements PageBlob {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class PageBlob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * The Create operation creates a new page blob.\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The\n   *                          page blob size must be aligned to a 512-byte boundary.\n   * @param options The options parameters.\n   */\n  create(\n    contentLength: number,\n    blobContentLength: number,\n    options?: PageBlobCreateOptionalParams,\n  ): Promise<PageBlobCreateResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, blobContentLength, options },\n      createOperationSpec,\n    );\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  uploadPages(\n    contentLength: number,\n    body: coreRestPipeline.RequestBodyType,\n    options?: PageBlobUploadPagesOptionalParams,\n  ): Promise<PageBlobUploadPagesResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, body, options },\n      uploadPagesOperationSpec,\n    );\n  }\n\n  /**\n   * The Clear Pages operation clears a set of pages from a page blob\n   * @param contentLength The length of the request.\n   * @param options The options parameters.\n   */\n  clearPages(\n    contentLength: number,\n    options?: PageBlobClearPagesOptionalParams,\n  ): Promise<PageBlobClearPagesResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, options },\n      clearPagesOperationSpec,\n    );\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob where the contents are read from a\n   * URL\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param sourceRange Bytes of source data in the specified range. The length of this range should\n   *                    match the ContentLength header and x-ms-range/Range destination range header.\n   * @param contentLength The length of the request.\n   * @param range The range of bytes to which the source range would be written. The range should be 512\n   *              aligned and range-end is required.\n   * @param options The options parameters.\n   */\n  uploadPagesFromURL(\n    sourceUrl: string,\n    sourceRange: string,\n    contentLength: number,\n    range: string,\n    options?: PageBlobUploadPagesFromURLOptionalParams,\n  ): Promise<PageBlobUploadPagesFromURLResponse> {\n    return this.client.sendOperationRequest(\n      { sourceUrl, sourceRange, contentLength, range, options },\n      uploadPagesFromURLOperationSpec,\n    );\n  }\n\n  /**\n   * The Get Page Ranges operation returns the list of valid page ranges for a page blob or snapshot of a\n   * page blob\n   * @param options The options parameters.\n   */\n  getPageRanges(\n    options?: PageBlobGetPageRangesOptionalParams,\n  ): Promise<PageBlobGetPageRangesResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPageRangesOperationSpec,\n    );\n  }\n\n  /**\n   * The Get Page Ranges Diff operation returns the list of valid page ranges for a page blob that were\n   * changed between target blob and previous snapshot.\n   * @param options The options parameters.\n   */\n  getPageRangesDiff(\n    options?: PageBlobGetPageRangesDiffOptionalParams,\n  ): Promise<PageBlobGetPageRangesDiffResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      getPageRangesDiffOperationSpec,\n    );\n  }\n\n  /**\n   * Resize the Blob\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The\n   *                          page blob size must be aligned to a 512-byte boundary.\n   * @param options The options parameters.\n   */\n  resize(\n    blobContentLength: number,\n    options?: PageBlobResizeOptionalParams,\n  ): Promise<PageBlobResizeResponse> {\n    return this.client.sendOperationRequest(\n      { blobContentLength, options },\n      resizeOperationSpec,\n    );\n  }\n\n  /**\n   * Update the sequence number of the blob\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the request.\n   *                             This property applies to page blobs only. This property indicates how the service should modify the\n   *                             blob's sequence number\n   * @param options The options parameters.\n   */\n  updateSequenceNumber(\n    sequenceNumberAction: SequenceNumberActionType,\n    options?: PageBlobUpdateSequenceNumberOptionalParams,\n  ): Promise<PageBlobUpdateSequenceNumberResponse> {\n    return this.client.sendOperationRequest(\n      { sequenceNumberAction, options },\n      updateSequenceNumberOperationSpec,\n    );\n  }\n\n  /**\n   * The Copy Incremental operation copies a snapshot of the source page blob to a destination page blob.\n   * The snapshot is copied such that only the differential changes between the previously copied\n   * snapshot are transferred to the destination. The copied snapshots are complete copies of the\n   * original snapshot and can be read or copied from as usual. This API is supported since REST version\n   * 2016-05-31.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  copyIncremental(\n    copySource: string,\n    options?: PageBlobCopyIncrementalOptionalParams,\n  ): Promise<PageBlobCopyIncrementalResponse> {\n    return this.client.sendOperationRequest(\n      { copySource, options },\n      copyIncrementalOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobCreateHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobCreateExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.blobType,\n    Parameters.blobContentLength,\n    Parameters.blobSequenceNumber,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst uploadPagesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobUploadPagesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUploadPagesExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp19],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.contentType1,\n    Parameters.accept2,\n    Parameters.pageWrite,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"binary\",\n  serializer: xmlSerializer,\n};\nconst clearPagesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobClearPagesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobClearPagesExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp19],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.pageWrite1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst uploadPagesFromURLOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobUploadPagesFromURLHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUploadPagesFromURLExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp19],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.pageWrite,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.sourceUrl,\n    Parameters.sourceRange,\n    Parameters.sourceContentCrc64,\n    Parameters.range1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getPageRangesOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobGetPageRangesExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.snapshot,\n    Parameters.comp20,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst getPageRangesDiffOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesDiffHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobGetPageRangesDiffExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.snapshot,\n    Parameters.comp20,\n    Parameters.prevsnapshot,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.prevSnapshotUrl,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst resizeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobResizeHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobResizeExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.blobContentLength,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst updateSequenceNumberOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobUpdateSequenceNumberHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUpdateSequenceNumberExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobSequenceNumber,\n    Parameters.sequenceNumberAction,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst copyIncrementalOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.PageBlobCopyIncrementalHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobCopyIncrementalExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp21],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.copySource,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { AppendBlob } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  AppendBlobCreateOptionalParams,\n  AppendBlobCreateResponse,\n  AppendBlobAppendBlockOptionalParams,\n  AppendBlobAppendBlockResponse,\n  AppendBlobAppendBlockFromUrlOptionalParams,\n  AppendBlobAppendBlockFromUrlResponse,\n  AppendBlobSealOptionalParams,\n  AppendBlobSealResponse,\n} from \"../models\";\n\n/** Class containing AppendBlob operations. */\nexport class AppendBlobImpl implements AppendBlob {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class AppendBlob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * The Create Append Blob operation creates a new append blob.\n   * @param contentLength The length of the request.\n   * @param options The options parameters.\n   */\n  create(\n    contentLength: number,\n    options?: AppendBlobCreateOptionalParams,\n  ): Promise<AppendBlobCreateResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, options },\n      createOperationSpec,\n    );\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob. The\n   * Append Block operation is permitted only if the blob was created with x-ms-blob-type set to\n   * AppendBlob. Append Block is supported only on version 2015-02-21 version or later.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  appendBlock(\n    contentLength: number,\n    body: coreRestPipeline.RequestBodyType,\n    options?: AppendBlobAppendBlockOptionalParams,\n  ): Promise<AppendBlobAppendBlockResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, body, options },\n      appendBlockOperationSpec,\n    );\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob where\n   * the contents are read from a source url. The Append Block operation is permitted only if the blob\n   * was created with x-ms-blob-type set to AppendBlob. Append Block is supported only on version\n   * 2015-02-21 version or later.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param contentLength The length of the request.\n   * @param options The options parameters.\n   */\n  appendBlockFromUrl(\n    sourceUrl: string,\n    contentLength: number,\n    options?: AppendBlobAppendBlockFromUrlOptionalParams,\n  ): Promise<AppendBlobAppendBlockFromUrlResponse> {\n    return this.client.sendOperationRequest(\n      { sourceUrl, contentLength, options },\n      appendBlockFromUrlOperationSpec,\n    );\n  }\n\n  /**\n   * The Seal operation seals the Append Blob to make it read-only. Seal is supported only on version\n   * 2019-12-12 version or later.\n   * @param options The options parameters.\n   */\n  seal(\n    options?: AppendBlobSealOptionalParams,\n  ): Promise<AppendBlobSealResponse> {\n    return this.client.sendOperationRequest({ options }, sealOperationSpec);\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobCreateHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobCreateExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.blobType1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst appendBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobAppendBlockHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobAppendBlockExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp22],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.contentType1,\n    Parameters.accept2,\n    Parameters.maxSize,\n    Parameters.appendPosition,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"binary\",\n  serializer: xmlSerializer,\n};\nconst appendBlockFromUrlOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobAppendBlockFromUrlHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobAppendBlockFromUrlExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp22],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.transactionalContentMD5,\n    Parameters.sourceUrl,\n    Parameters.sourceContentCrc64,\n    Parameters.maxSize,\n    Parameters.appendPosition,\n    Parameters.sourceRange1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst sealOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.AppendBlobSealHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobSealExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp23],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.appendPosition,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { BlockBlob } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClient } from \"../storageClient\";\nimport {\n  BlockBlobUploadOptionalParams,\n  BlockBlobUploadResponse,\n  BlockBlobPutBlobFromUrlOptionalParams,\n  BlockBlobPutBlobFromUrlResponse,\n  BlockBlobStageBlockOptionalParams,\n  BlockBlobStageBlockResponse,\n  BlockBlobStageBlockFromURLOptionalParams,\n  BlockBlobStageBlockFromURLResponse,\n  BlockLookupList,\n  BlockBlobCommitBlockListOptionalParams,\n  BlockBlobCommitBlockListResponse,\n  BlockListType,\n  BlockBlobGetBlockListOptionalParams,\n  BlockBlobGetBlockListResponse,\n} from \"../models\";\n\n/** Class containing BlockBlob operations. */\nexport class BlockBlobImpl implements BlockBlob {\n  private readonly client: StorageClient;\n\n  /**\n   * Initialize a new instance of the class BlockBlob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClient) {\n    this.client = client;\n  }\n\n  /**\n   * The Upload Block Blob operation updates the content of an existing block blob. Updating an existing\n   * block blob overwrites any existing metadata on the blob. Partial updates are not supported with Put\n   * Blob; the content of the existing blob is overwritten with the content of the new blob. To perform a\n   * partial update of the content of a block blob, use the Put Block List operation.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  upload(\n    contentLength: number,\n    body: coreRestPipeline.RequestBodyType,\n    options?: BlockBlobUploadOptionalParams,\n  ): Promise<BlockBlobUploadResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, body, options },\n      uploadOperationSpec,\n    );\n  }\n\n  /**\n   * The Put Blob from URL operation creates a new Block Blob where the contents of the blob are read\n   * from a given URL.  This API is supported beginning with the 2020-04-08 version. Partial updates are\n   * not supported with Put Blob from URL; the content of an existing blob is overwritten with the\n   * content of the new blob.  To perform partial updates to a block blob’s contents using a source URL,\n   * use the Put Block from URL API in conjunction with Put Block List.\n   * @param contentLength The length of the request.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  putBlobFromUrl(\n    contentLength: number,\n    copySource: string,\n    options?: BlockBlobPutBlobFromUrlOptionalParams,\n  ): Promise<BlockBlobPutBlobFromUrlResponse> {\n    return this.client.sendOperationRequest(\n      { contentLength, copySource, options },\n      putBlobFromUrlOperationSpec,\n    );\n  }\n\n  /**\n   * The Stage Block operation creates a new block to be committed as part of a blob\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the string\n   *                must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n   *                for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  stageBlock(\n    blockId: string,\n    contentLength: number,\n    body: coreRestPipeline.RequestBodyType,\n    options?: BlockBlobStageBlockOptionalParams,\n  ): Promise<BlockBlobStageBlockResponse> {\n    return this.client.sendOperationRequest(\n      { blockId, contentLength, body, options },\n      stageBlockOperationSpec,\n    );\n  }\n\n  /**\n   * The Stage Block operation creates a new block to be committed as part of a blob where the contents\n   * are read from a URL.\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the string\n   *                must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n   *                for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param options The options parameters.\n   */\n  stageBlockFromURL(\n    blockId: string,\n    contentLength: number,\n    sourceUrl: string,\n    options?: BlockBlobStageBlockFromURLOptionalParams,\n  ): Promise<BlockBlobStageBlockFromURLResponse> {\n    return this.client.sendOperationRequest(\n      { blockId, contentLength, sourceUrl, options },\n      stageBlockFromURLOperationSpec,\n    );\n  }\n\n  /**\n   * The Commit Block List operation writes a blob by specifying the list of block IDs that make up the\n   * blob. In order to be written as part of a blob, a block must have been successfully written to the\n   * server in a prior Put Block operation. You can call Put Block List to update a blob by uploading\n   * only those blocks that have changed, then committing the new and existing blocks together. You can\n   * do this by specifying whether to commit a block from the committed block list or from the\n   * uncommitted block list, or to commit the most recently uploaded version of the block, whichever list\n   * it may belong to.\n   * @param blocks Blob Blocks.\n   * @param options The options parameters.\n   */\n  commitBlockList(\n    blocks: BlockLookupList,\n    options?: BlockBlobCommitBlockListOptionalParams,\n  ): Promise<BlockBlobCommitBlockListResponse> {\n    return this.client.sendOperationRequest(\n      { blocks, options },\n      commitBlockListOperationSpec,\n    );\n  }\n\n  /**\n   * The Get Block List operation retrieves the list of blocks that have been uploaded as part of a block\n   * blob\n   * @param listType Specifies whether to return the list of committed blocks, the list of uncommitted\n   *                 blocks, or both lists together.\n   * @param options The options parameters.\n   */\n  getBlockList(\n    listType: BlockListType,\n    options?: BlockBlobGetBlockListOptionalParams,\n  ): Promise<BlockBlobGetBlockListResponse> {\n    return this.client.sendOperationRequest(\n      { listType, options },\n      getBlockListOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst xmlSerializer = coreClient.createSerializer(Mappers, /* isXml */ true);\n\nconst uploadOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobUploadHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobUploadExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.contentType1,\n    Parameters.accept2,\n    Parameters.blobType2,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"binary\",\n  serializer: xmlSerializer,\n};\nconst putBlobFromUrlOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobPutBlobFromUrlHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobPutBlobFromUrlExceptionHeaders,\n    },\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceIfTags,\n    Parameters.copySource,\n    Parameters.blobTagsString,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.copySourceTags,\n    Parameters.transactionalContentMD5,\n    Parameters.blobType2,\n    Parameters.copySourceBlobProperties,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst stageBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobStageBlockHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobStageBlockExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp24,\n    Parameters.blockId,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.encryptionScope,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.contentType1,\n    Parameters.accept2,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"binary\",\n  serializer: xmlSerializer,\n};\nconst stageBlockFromURLOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobStageBlockFromURLHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobStageBlockFromURLExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp24,\n    Parameters.blockId,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.encryptionScope,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.sourceUrl,\n    Parameters.sourceContentCrc64,\n    Parameters.sourceRange1,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\nconst commitBlockListOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobCommitBlockListHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobCommitBlockListExceptionHeaders,\n    },\n  },\n  requestBody: Parameters.blocks,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp25],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer,\n};\nconst getBlockListOperationSpec: coreClient.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlockList,\n      headersMapper: Mappers.BlockBlobGetBlockListHeaders,\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobGetBlockListExceptionHeaders,\n    },\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.comp25,\n    Parameters.listType,\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifTags,\n  ],\n  isXML: true,\n  serializer: xmlSerializer,\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttpCompat from \"@azure/core-http-compat\";\nimport {\n  ServiceImpl,\n  ContainerImpl,\n  BlobImpl,\n  PageBlobImpl,\n  AppendBlobImpl,\n  BlockBlobImpl,\n} from \"./operations\";\nimport {\n  Service,\n  Container,\n  Blob,\n  PageBlob,\n  AppendBlob,\n  BlockBlob,\n} from \"./operationsInterfaces\";\nimport { StorageClientOptionalParams } from \"./models\";\n\nexport class StorageClient extends coreHttpCompat.ExtendedServiceClient {\n  url: string;\n  version: string;\n\n  /**\n   * Initializes a new instance of the StorageClient class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  constructor(url: string, options?: StorageClientOptionalParams) {\n    if (url === undefined) {\n      throw new Error(\"'url' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: StorageClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n    };\n\n    const packageDetails = `azsdk-js-azure-storage-blob/12.26.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{url}\",\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.url = url;\n\n    // Assigning values to Constant parameters\n    this.version = options.version || \"2025-01-05\";\n    this.service = new ServiceImpl(this);\n    this.container = new ContainerImpl(this);\n    this.blob = new BlobImpl(this);\n    this.pageBlob = new PageBlobImpl(this);\n    this.appendBlob = new AppendBlobImpl(this);\n    this.blockBlob = new BlockBlobImpl(this);\n  }\n\n  service: Service;\n  container: Container;\n  blob: Blob;\n  pageBlob: PageBlob;\n  appendBlob: AppendBlob;\n  blockBlob: BlockBlob;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { OperationArguments, OperationSpec } from \"@azure/core-client\";\nimport { StorageClient } from \"./generated/src\";\n\n/**\n * @internal\n */\nexport class StorageContextClient extends StorageClient {\n  async sendOperationRequest<T>(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<T> {\n    const operationSpecToSend = { ...operationSpec };\n\n    if (\n      operationSpecToSend.path === \"/{containerName}\" ||\n      operationSpecToSend.path === \"/{containerName}/{blob}\"\n    ) {\n      operationSpecToSend.path = \"\";\n    }\n    return super.sendOperationRequest(operationArguments, operationSpecToSend);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { StorageClient as StorageClientContext } from \"./generated/src/\";\nimport { StorageContextClient } from \"./StorageContextClient\";\nimport type { PipelineLike } from \"./Pipeline\";\nimport { getCoreClientOptions, getCredentialFromPipeline } from \"./Pipeline\";\nimport { escapeURLPath, getURLScheme, iEqual, getAccountNameFromUrl } from \"./utils/utils.common\";\nimport type { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport type { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport type { OperationTracingOptions } from \"@azure/core-tracing\";\n\n/**\n * An interface for options common to every remote operation.\n */\nexport interface CommonOptions {\n  /**\n   * Options to configure spans created when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n}\n\n/**\n * A StorageClient represents a based URL class for {@link BlobServiceClient}, {@link ContainerClient}\n * and etc.\n */\nexport abstract class StorageClient {\n  /**\n   * Encoded URL string value.\n   */\n  public readonly url: string;\n  public readonly accountName: string;\n  /**\n   * Request policy pipeline.\n   *\n   * @internal\n   */\n  protected readonly pipeline: PipelineLike;\n  /**\n   * Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   */\n  public readonly credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n  /**\n   * StorageClient is a reference to protocol layer operations entry, which is\n   * generated by AutoRest generator.\n   */\n  protected readonly storageClientContext: StorageClientContext;\n  /**\n   */\n  protected readonly isHttps: boolean;\n\n  /**\n   * Creates an instance of StorageClient.\n   * @param url - url to resource\n   * @param pipeline - request policy pipeline.\n   */\n  protected constructor(url: string, pipeline: PipelineLike) {\n    // URL should be encoded and only once, protocol layer shouldn't encode URL again\n    this.url = escapeURLPath(url);\n    this.accountName = getAccountNameFromUrl(url);\n    this.pipeline = pipeline;\n    this.storageClientContext = new StorageContextClient(this.url, getCoreClientOptions(pipeline));\n\n    this.isHttps = iEqual(getURLScheme(this.url) || \"\", \"https\");\n\n    this.credential = getCredentialFromPipeline(pipeline);\n\n    // Override protocol layer's default content-type\n    const storageClientContext = this.storageClientContext as any;\n    storageClientContext.requestContentType = undefined;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createTracingClient } from \"@azure/core-tracing\";\nimport { SDK_VERSION } from \"./constants\";\n\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nexport const tracingClient = createTracingClient({\n  packageName: \"@azure/storage-blob\",\n  packageVersion: SDK_VERSION,\n  namespace: \"Microsoft.Storage\",\n});\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a blob. Setting\n * a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all\n * the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class BlobSASPermissions {\n  /**\n   * Creates a {@link BlobSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): BlobSASPermissions {\n    const blobSASPermissions = new BlobSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          blobSASPermissions.read = true;\n          break;\n        case \"a\":\n          blobSASPermissions.add = true;\n          break;\n        case \"c\":\n          blobSASPermissions.create = true;\n          break;\n        case \"w\":\n          blobSASPermissions.write = true;\n          break;\n        case \"d\":\n          blobSASPermissions.delete = true;\n          break;\n        case \"x\":\n          blobSASPermissions.deleteVersion = true;\n          break;\n        case \"t\":\n          blobSASPermissions.tag = true;\n          break;\n        case \"m\":\n          blobSASPermissions.move = true;\n          break;\n        case \"e\":\n          blobSASPermissions.execute = true;\n          break;\n        case \"i\":\n          blobSASPermissions.setImmutabilityPolicy = true;\n          break;\n        case \"y\":\n          blobSASPermissions.permanentDelete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission: ${char}`);\n      }\n    }\n\n    return blobSASPermissions;\n  }\n\n  /**\n   * Creates a {@link BlobSASPermissions} from a raw object which contains same keys as it\n   * and boolean values for them.\n   *\n   * @param permissionLike -\n   */\n  public static from(permissionLike: BlobSASPermissionsLike): BlobSASPermissions {\n    const blobSASPermissions = new BlobSASPermissions();\n    if (permissionLike.read) {\n      blobSASPermissions.read = true;\n    }\n    if (permissionLike.add) {\n      blobSASPermissions.add = true;\n    }\n    if (permissionLike.create) {\n      blobSASPermissions.create = true;\n    }\n    if (permissionLike.write) {\n      blobSASPermissions.write = true;\n    }\n    if (permissionLike.delete) {\n      blobSASPermissions.delete = true;\n    }\n    if (permissionLike.deleteVersion) {\n      blobSASPermissions.deleteVersion = true;\n    }\n    if (permissionLike.tag) {\n      blobSASPermissions.tag = true;\n    }\n    if (permissionLike.move) {\n      blobSASPermissions.move = true;\n    }\n    if (permissionLike.execute) {\n      blobSASPermissions.execute = true;\n    }\n    if (permissionLike.setImmutabilityPolicy) {\n      blobSASPermissions.setImmutabilityPolicy = true;\n    }\n    if (permissionLike.permanentDelete) {\n      blobSASPermissions.permanentDelete = true;\n    }\n    return blobSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  public deleteVersion: boolean = false;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  public tag: boolean = false;\n\n  /**\n   * Specifies Move access granted.\n   */\n  public move: boolean = false;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  public execute: boolean = false;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  public setImmutabilityPolicy: boolean = false;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  public permanentDelete: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * @returns A string which represents the BlobSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.deleteVersion) {\n      permissions.push(\"x\");\n    }\n    if (this.tag) {\n      permissions.push(\"t\");\n    }\n    if (this.move) {\n      permissions.push(\"m\");\n    }\n    if (this.execute) {\n      permissions.push(\"e\");\n    }\n    if (this.setImmutabilityPolicy) {\n      permissions.push(\"i\");\n    }\n    if (this.permanentDelete) {\n      permissions.push(\"y\");\n    }\n    return permissions.join(\"\");\n  }\n}\n\n/**\n * A type that looks like a Blob SAS permission.\n * Used in {@link BlobSASPermissions} to parse SAS permissions from raw objects.\n */\nexport interface BlobSASPermissionsLike {\n  /**\n   * Specifies Read access granted.\n   */\n  read?: boolean;\n\n  /**\n   * Specifies Add access granted.\n   */\n  add?: boolean;\n\n  /**\n   * Specifies Create access granted.\n   */\n  create?: boolean;\n\n  /**\n   * Specifies Write access granted.\n   */\n  write?: boolean;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  delete?: boolean;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  deleteVersion?: boolean;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  tag?: boolean;\n\n  /**\n   * Specifies Move access granted.\n   */\n  move?: boolean;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  execute?: boolean;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  setImmutabilityPolicy?: boolean;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  permanentDelete?: boolean;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a container.\n * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.\n * Once all the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class ContainerSASPermissions {\n  /**\n   * Creates an {@link ContainerSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): ContainerSASPermissions {\n    const containerSASPermissions = new ContainerSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          containerSASPermissions.read = true;\n          break;\n        case \"a\":\n          containerSASPermissions.add = true;\n          break;\n        case \"c\":\n          containerSASPermissions.create = true;\n          break;\n        case \"w\":\n          containerSASPermissions.write = true;\n          break;\n        case \"d\":\n          containerSASPermissions.delete = true;\n          break;\n        case \"l\":\n          containerSASPermissions.list = true;\n          break;\n        case \"t\":\n          containerSASPermissions.tag = true;\n          break;\n        case \"x\":\n          containerSASPermissions.deleteVersion = true;\n          break;\n        case \"m\":\n          containerSASPermissions.move = true;\n          break;\n        case \"e\":\n          containerSASPermissions.execute = true;\n          break;\n        case \"i\":\n          containerSASPermissions.setImmutabilityPolicy = true;\n          break;\n        case \"y\":\n          containerSASPermissions.permanentDelete = true;\n          break;\n        case \"f\":\n          containerSASPermissions.filterByTags = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission ${char}`);\n      }\n    }\n\n    return containerSASPermissions;\n  }\n\n  /**\n   * Creates a {@link ContainerSASPermissions} from a raw object which contains same keys as it\n   * and boolean values for them.\n   *\n   * @param permissionLike -\n   */\n  public static from(permissionLike: ContainerSASPermissionsLike): ContainerSASPermissions {\n    const containerSASPermissions = new ContainerSASPermissions();\n    if (permissionLike.read) {\n      containerSASPermissions.read = true;\n    }\n    if (permissionLike.add) {\n      containerSASPermissions.add = true;\n    }\n    if (permissionLike.create) {\n      containerSASPermissions.create = true;\n    }\n    if (permissionLike.write) {\n      containerSASPermissions.write = true;\n    }\n    if (permissionLike.delete) {\n      containerSASPermissions.delete = true;\n    }\n    if (permissionLike.list) {\n      containerSASPermissions.list = true;\n    }\n    if (permissionLike.deleteVersion) {\n      containerSASPermissions.deleteVersion = true;\n    }\n    if (permissionLike.tag) {\n      containerSASPermissions.tag = true;\n    }\n    if (permissionLike.move) {\n      containerSASPermissions.move = true;\n    }\n    if (permissionLike.execute) {\n      containerSASPermissions.execute = true;\n    }\n    if (permissionLike.setImmutabilityPolicy) {\n      containerSASPermissions.setImmutabilityPolicy = true;\n    }\n    if (permissionLike.permanentDelete) {\n      containerSASPermissions.permanentDelete = true;\n    }\n    if (permissionLike.filterByTags) {\n      containerSASPermissions.filterByTags = true;\n    }\n    return containerSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  public deleteVersion: boolean = false;\n\n  /**\n   * Specifies List access granted.\n   */\n  public list: boolean = false;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  public tag: boolean = false;\n\n  /**\n   * Specifies Move access granted.\n   */\n  public move: boolean = false;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  public execute: boolean = false;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  public setImmutabilityPolicy: boolean = false;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  public permanentDelete: boolean = false;\n\n  /**\n   * Specifies that Filter Blobs by Tags is permitted.\n   */\n  public filterByTags: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * The order of the characters should be as specified here to ensure correctness.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.deleteVersion) {\n      permissions.push(\"x\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.tag) {\n      permissions.push(\"t\");\n    }\n    if (this.move) {\n      permissions.push(\"m\");\n    }\n    if (this.execute) {\n      permissions.push(\"e\");\n    }\n    if (this.setImmutabilityPolicy) {\n      permissions.push(\"i\");\n    }\n    if (this.permanentDelete) {\n      permissions.push(\"y\");\n    }\n    if (this.filterByTags) {\n      permissions.push(\"f\");\n    }\n    return permissions.join(\"\");\n  }\n}\n\n/**\n * A type that looks like a Container SAS permission.\n * Used in {@link ContainerSASPermissions} to parse SAS permissions from raw objects.\n */\nexport interface ContainerSASPermissionsLike {\n  /**\n   * Specifies Read access granted.\n   */\n  read?: boolean;\n\n  /**\n   * Specifies Add access granted.\n   */\n  add?: boolean;\n\n  /**\n   * Specifies Create access granted.\n   */\n  create?: boolean;\n\n  /**\n   * Specifies Write access granted.\n   */\n  write?: boolean;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  delete?: boolean;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  deleteVersion?: boolean;\n\n  /**\n   * Specifies List access granted.\n   */\n  list?: boolean;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  tag?: boolean;\n\n  /**\n   * Specifies Move access granted.\n   */\n  move?: boolean;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  execute?: boolean;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  setImmutabilityPolicy?: boolean;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  permanentDelete?: boolean;\n\n  /**\n   * Specifies that Filter Blobs by Tags is permitted.\n   */\n  filterByTags?: boolean;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport class UserDelegationKeyCredential {}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Allowed IP range for a SAS.\n */\nexport interface SasIPRange {\n  /**\n   * Starting IP address in the IP range.\n   * If end IP doesn't provide, start IP will the only IP allowed.\n   */\n  start: string;\n  /**\n   * Optional. IP address that ends the IP range.\n   * If not provided, start IP will the only IP allowed.\n   */\n  end?: string;\n}\n\n/**\n * Generate SasIPRange format string. For example:\n *\n * \"8.8.8.8\" or \"1.1.1.1-255.255.255.255\"\n *\n * @param ipRange -\n */\nexport function ipRangeToString(ipRange: SasIPRange): string {\n  return ipRange.end ? `${ipRange.start}-${ipRange.end}` : ipRange.start;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { SasIPRange } from \"./SasIPRange\";\nimport { ipRangeToString } from \"./SasIPRange\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\nimport type { UserDelegationKey } from \"../BlobServiceClient\";\n\n/**\n * Protocols for generated SAS.\n */\nexport enum SASProtocol {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  Https = \"https\",\n\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  HttpsAndHttp = \"https,http\",\n}\n\n/**\n * Options to construct {@link SASQueryParameters}.\n */\nexport interface SASQueryParametersOptions {\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   */\n  permissions?: string;\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   */\n  services?: string;\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   */\n  resourceTypes?: string;\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   */\n  protocol?: SASProtocol;\n  /**\n   * Optional. The start time for this SAS token.\n   */\n  startsOn?: Date;\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   */\n  expiresOn?: Date;\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies which resources are accessible via the SAS (only for {@link BlobSASSignatureValues}).\n   * @see https://docs.microsoft.com/rest/api/storageservices/create-service-sas#specifying-the-signed-resource-blob-service-only\n   */\n  resource?: string;\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   */\n  cacheControl?: string;\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   */\n  contentDisposition?: string;\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   */\n  contentEncoding?: string;\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   */\n  contentLanguage?: string;\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   */\n  contentType?: string;\n  /**\n   * User delegation key properties.\n   */\n  userDelegationKey?: UserDelegationKey;\n  /**\n   * Authorized AAD Object ID in GUID format. The AAD Object ID of a user authorized by the owner of the User Delegation Key\n   * to perform the action granted by the SAS. The Azure Storage service will ensure that the owner of the user delegation key\n   * has the required permissions before granting access but no additional permission check for the user specified in\n   * this value will be performed. This cannot be used in conjuction with {@link signedUnauthorizedUserObjectId}.\n   * This is only used for User Delegation SAS.\n   */\n  preauthorizedAgentObjectId?: string;\n  /**\n   * A GUID value that will be logged in the storage diagnostic logs and can be used to correlate SAS generation with storage resource access.\n   * This is only used for User Delegation SAS.\n   */\n  correlationId?: string;\n}\n\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link BlobSASSignatureValues}\n * types. Once generated, it can be encoded into a {@link String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n */\nexport class SASQueryParameters {\n  /**\n   * The storage API version.\n   */\n  public readonly version: string;\n\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   */\n  public readonly protocol?: SASProtocol;\n\n  /**\n   * Optional. The start time for this SAS token.\n   */\n  public readonly startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   */\n  public readonly expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   */\n  public readonly permissions?: string;\n\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   */\n  public readonly services?: string;\n\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   */\n  public readonly resourceTypes?: string;\n\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  public readonly identifier?: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  public readonly encryptionScope?: string;\n\n  /**\n   * Optional. Specifies which resources are accessible via the SAS (only for {@link BlobSASSignatureValues}).\n   * @see https://docs.microsoft.com/rest/api/storageservices/create-service-sas#specifying-the-signed-resource-blob-service-only\n   */\n  public readonly resource?: string;\n\n  /**\n   * The signature for the SAS token.\n   */\n  public readonly signature: string;\n\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   */\n  public readonly cacheControl?: string;\n\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   */\n  public readonly contentDisposition?: string;\n\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   */\n  public readonly contentEncoding?: string;\n\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   */\n  public readonly contentLanguage?: string;\n\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   */\n  public readonly contentType?: string;\n\n  /**\n   * Inner value of getter ipRange.\n   */\n  private readonly ipRangeInner?: SasIPRange;\n\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   * Property of user delegation key.\n   */\n  private readonly signedOid?: string;\n\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   * Property of user delegation key.\n   */\n  private readonly signedTenantId?: string;\n\n  /**\n   * The date-time the key is active.\n   * Property of user delegation key.\n   */\n  private readonly signedStartsOn?: Date;\n\n  /**\n   * The date-time the key expires.\n   * Property of user delegation key.\n   */\n  private readonly signedExpiresOn?: Date;\n\n  /**\n   * Abbreviation of the Azure Storage service that accepts the user delegation key.\n   * Property of user delegation key.\n   */\n  private readonly signedService?: string;\n\n  /**\n   * The service version that created the user delegation key.\n   * Property of user delegation key.\n   */\n  private readonly signedVersion?: string;\n\n  /**\n   * Authorized AAD Object ID in GUID format. The AAD Object ID of a user authorized by the owner of the User Delegation Key\n   * to perform the action granted by the SAS. The Azure Storage service will ensure that the owner of the user delegation key\n   * has the required permissions before granting access but no additional permission check for the user specified in\n   * this value will be performed. This is only used for User Delegation SAS.\n   */\n  public readonly preauthorizedAgentObjectId?: string;\n\n  /**\n   * A GUID value that will be logged in the storage diagnostic logs and can be used to correlate SAS generation with storage resource access.\n   * This is only used for User Delegation SAS.\n   */\n  public readonly correlationId?: string;\n\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   */\n  public get ipRange(): SasIPRange | undefined {\n    if (this.ipRangeInner) {\n      return {\n        end: this.ipRangeInner.end,\n        start: this.ipRangeInner.start,\n      };\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param version - Representing the storage version\n   * @param signature - Representing the signature for the SAS token\n   * @param permissions - Representing the storage permissions\n   * @param services - Representing the storage services being accessed (only for Account SAS)\n   * @param resourceTypes - Representing the storage resource types being accessed (only for Account SAS)\n   * @param protocol - Representing the allowed HTTP protocol(s)\n   * @param startsOn - Representing the start time for this SAS token\n   * @param expiresOn - Representing the expiry time for this SAS token\n   * @param ipRange - Representing the range of valid IP addresses for this SAS token\n   * @param identifier - Representing the signed identifier (only for Service SAS)\n   * @param resource - Representing the storage container or blob (only for Service SAS)\n   * @param cacheControl - Representing the cache-control header (only for Blob/File Service SAS)\n   * @param contentDisposition - Representing the content-disposition header (only for Blob/File Service SAS)\n   * @param contentEncoding - Representing the content-encoding header (only for Blob/File Service SAS)\n   * @param contentLanguage - Representing the content-language header (only for Blob/File Service SAS)\n   * @param contentType - Representing the content-type header (only for Blob/File Service SAS)\n   * @param userDelegationKey - Representing the user delegation key properties\n   * @param preauthorizedAgentObjectId - Representing the authorized AAD Object ID (only for User Delegation SAS)\n   * @param correlationId - Representing the correlation ID (only for User Delegation SAS)\n   * @param encryptionScope -\n   */\n  constructor(\n    version: string,\n    signature: string,\n    permissions?: string,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey,\n    preauthorizedAgentObjectId?: string,\n    correlationId?: string,\n    encryptionScope?: string,\n  );\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param version - Representing the storage version\n   * @param signature - Representing the signature for the SAS token\n   * @param options - Optional. Options to construct the SASQueryParameters.\n   */\n  constructor(version: string, signature: string, options?: SASQueryParametersOptions);\n\n  constructor(\n    version: string,\n    signature: string,\n    permissionsOrOptions?: string | SASQueryParametersOptions,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey,\n    preauthorizedAgentObjectId?: string,\n    correlationId?: string,\n    encryptionScope?: string,\n  ) {\n    this.version = version;\n    this.signature = signature;\n\n    if (permissionsOrOptions !== undefined && typeof permissionsOrOptions !== \"string\") {\n      // SASQueryParametersOptions\n      this.permissions = permissionsOrOptions.permissions;\n      this.services = permissionsOrOptions.services;\n      this.resourceTypes = permissionsOrOptions.resourceTypes;\n      this.protocol = permissionsOrOptions.protocol;\n      this.startsOn = permissionsOrOptions.startsOn;\n      this.expiresOn = permissionsOrOptions.expiresOn;\n      this.ipRangeInner = permissionsOrOptions.ipRange;\n      this.identifier = permissionsOrOptions.identifier;\n      this.encryptionScope = permissionsOrOptions.encryptionScope;\n      this.resource = permissionsOrOptions.resource;\n      this.cacheControl = permissionsOrOptions.cacheControl;\n      this.contentDisposition = permissionsOrOptions.contentDisposition;\n      this.contentEncoding = permissionsOrOptions.contentEncoding;\n      this.contentLanguage = permissionsOrOptions.contentLanguage;\n      this.contentType = permissionsOrOptions.contentType;\n\n      if (permissionsOrOptions.userDelegationKey) {\n        this.signedOid = permissionsOrOptions.userDelegationKey.signedObjectId;\n        this.signedTenantId = permissionsOrOptions.userDelegationKey.signedTenantId;\n        this.signedStartsOn = permissionsOrOptions.userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = permissionsOrOptions.userDelegationKey.signedExpiresOn;\n        this.signedService = permissionsOrOptions.userDelegationKey.signedService;\n        this.signedVersion = permissionsOrOptions.userDelegationKey.signedVersion;\n\n        this.preauthorizedAgentObjectId = permissionsOrOptions.preauthorizedAgentObjectId;\n        this.correlationId = permissionsOrOptions.correlationId;\n      }\n    } else {\n      this.services = services;\n      this.resourceTypes = resourceTypes;\n      this.expiresOn = expiresOn;\n      this.permissions = permissionsOrOptions;\n      this.protocol = protocol;\n      this.startsOn = startsOn;\n      this.ipRangeInner = ipRange;\n      this.encryptionScope = encryptionScope;\n      this.identifier = identifier;\n      this.resource = resource;\n      this.cacheControl = cacheControl;\n      this.contentDisposition = contentDisposition;\n      this.contentEncoding = contentEncoding;\n      this.contentLanguage = contentLanguage;\n      this.contentType = contentType;\n\n      if (userDelegationKey) {\n        this.signedOid = userDelegationKey.signedObjectId;\n        this.signedTenantId = userDelegationKey.signedTenantId;\n        this.signedStartsOn = userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = userDelegationKey.signedExpiresOn;\n        this.signedService = userDelegationKey.signedService;\n        this.signedVersion = userDelegationKey.signedVersion;\n\n        this.preauthorizedAgentObjectId = preauthorizedAgentObjectId;\n        this.correlationId = correlationId;\n      }\n    }\n  }\n\n  /**\n   * Encodes all SAS query parameters into a string that can be appended to a URL.\n   *\n   */\n  public toString(): string {\n    const params: string[] = [\n      \"sv\",\n      \"ss\",\n      \"srt\",\n      \"spr\",\n      \"st\",\n      \"se\",\n      \"sip\",\n      \"si\",\n      \"ses\",\n      \"skoid\", // Signed object ID\n      \"sktid\", // Signed tenant ID\n      \"skt\", // Signed key start time\n      \"ske\", // Signed key expiry time\n      \"sks\", // Signed key service\n      \"skv\", // Signed key version\n      \"sr\",\n      \"sp\",\n      \"sig\",\n      \"rscc\",\n      \"rscd\",\n      \"rsce\",\n      \"rscl\",\n      \"rsct\",\n      \"saoid\",\n      \"scid\",\n    ];\n    const queries: string[] = [];\n\n    for (const param of params) {\n      switch (param) {\n        case \"sv\":\n          this.tryAppendQueryParameter(queries, param, this.version);\n          break;\n        case \"ss\":\n          this.tryAppendQueryParameter(queries, param, this.services);\n          break;\n        case \"srt\":\n          this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n          break;\n        case \"spr\":\n          this.tryAppendQueryParameter(queries, param, this.protocol);\n          break;\n        case \"st\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.startsOn ? truncatedISO8061Date(this.startsOn, false) : undefined,\n          );\n          break;\n        case \"se\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.expiresOn ? truncatedISO8061Date(this.expiresOn, false) : undefined,\n          );\n          break;\n        case \"sip\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.ipRange ? ipRangeToString(this.ipRange) : undefined,\n          );\n          break;\n        case \"si\":\n          this.tryAppendQueryParameter(queries, param, this.identifier);\n          break;\n        case \"ses\":\n          this.tryAppendQueryParameter(queries, param, this.encryptionScope);\n          break;\n        case \"skoid\": // Signed object ID\n          this.tryAppendQueryParameter(queries, param, this.signedOid);\n          break;\n        case \"sktid\": // Signed tenant ID\n          this.tryAppendQueryParameter(queries, param, this.signedTenantId);\n          break;\n        case \"skt\": // Signed key start time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedStartsOn ? truncatedISO8061Date(this.signedStartsOn, false) : undefined,\n          );\n          break;\n        case \"ske\": // Signed key expiry time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedExpiresOn ? truncatedISO8061Date(this.signedExpiresOn, false) : undefined,\n          );\n          break;\n        case \"sks\": // Signed key service\n          this.tryAppendQueryParameter(queries, param, this.signedService);\n          break;\n        case \"skv\": // Signed key version\n          this.tryAppendQueryParameter(queries, param, this.signedVersion);\n          break;\n        case \"sr\":\n          this.tryAppendQueryParameter(queries, param, this.resource);\n          break;\n        case \"sp\":\n          this.tryAppendQueryParameter(queries, param, this.permissions);\n          break;\n        case \"sig\":\n          this.tryAppendQueryParameter(queries, param, this.signature);\n          break;\n        case \"rscc\":\n          this.tryAppendQueryParameter(queries, param, this.cacheControl);\n          break;\n        case \"rscd\":\n          this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n          break;\n        case \"rsce\":\n          this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n          break;\n        case \"rscl\":\n          this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n          break;\n        case \"rsct\":\n          this.tryAppendQueryParameter(queries, param, this.contentType);\n          break;\n        case \"saoid\":\n          this.tryAppendQueryParameter(queries, param, this.preauthorizedAgentObjectId);\n          break;\n        case \"scid\":\n          this.tryAppendQueryParameter(queries, param, this.correlationId);\n          break;\n      }\n    }\n    return queries.join(\"&\");\n  }\n\n  /**\n   * A private helper method used to filter and append query key/value pairs into an array.\n   *\n   * @param queries -\n   * @param key -\n   * @param value -\n   */\n  private tryAppendQueryParameter(queries: string[], key: string, value?: string): void {\n    if (!value) {\n      return;\n    }\n\n    key = encodeURIComponent(key);\n    value = encodeURIComponent(value);\n    if (key.length > 0 && value.length > 0) {\n      queries.push(`${key}=${value}`);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { BlobSASPermissions } from \"./BlobSASPermissions\";\nimport type { UserDelegationKey } from \"../BlobServiceClient\";\nimport { ContainerSASPermissions } from \"./ContainerSASPermissions\";\nimport { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport { UserDelegationKeyCredential } from \"../credentials/UserDelegationKeyCredential\";\nimport type { SasIPRange } from \"./SasIPRange\";\nimport { ipRangeToString } from \"./SasIPRange\";\nimport type { SASProtocol } from \"./SASQueryParameters\";\nimport { SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"../utils/constants\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * BlobSASSignatureValues is used to help generating Blob service SAS tokens for containers or blobs.\n */\nexport interface BlobSASSignatureValues {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   */\n  expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to either {@link ContainerSASPermissions} or {@link BlobSASPermissions} depending on the resource\n   * being accessed for help constructing the permissions string.\n   */\n  permissions?: BlobSASPermissions | ContainerSASPermissions;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The name of the container the SAS user may access.\n   */\n  containerName: string;\n\n  /**\n   * Optional. The blob name of the SAS user may access. Required if snapshotTime or versionId is provided.\n   */\n  blobName?: string;\n\n  /**\n   * Optional. Snapshot timestamp string the SAS user may access. Only supported from API version 2018-11-09.\n   */\n  snapshotTime?: string;\n\n  /**\n   * Optional. VersionId of the blob version the SAS user may access. Only supported from API version 2019-10-10.\n   */\n  versionId?: string;\n\n  /**\n   * Optional. The name of the access policy on the container this SAS references if any.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   */\n  contentType?: string;\n\n  /**\n   * Optional. Beginning in version 2020-02-10, specifies the Authorized AAD Object ID in GUID format. The AAD Object ID of a user\n   * authorized by the owner of the user delegation key to perform the action granted by the SAS. The Azure Storage service will\n   * ensure that the owner of the user delegation key has the required permissions before granting access but no additional permission\n   * check for the user specified in this value will be performed. This is only used for User Delegation SAS.\n   */\n  preauthorizedAgentObjectId?: string;\n\n  /**\n   * Optional. Beginning in version 2020-02-10, this is a GUID value that will be logged in the storage diagnostic logs and can be used to\n   * correlate SAS generation with storage resource access. This is only used for User Delegation SAS.\n   */\n  correlationId?: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * Fill in the required details before running the following snippets.\n *\n * Example usage:\n *\n * ```js\n * // Generate service level SAS for a container\n * const containerSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     permissions: ContainerSASPermissions.parse(\"racwdl\"), // Required\n *     startsOn: new Date(), // Optional\n *     expiresOn: new Date(new Date().valueOf() + 86400 * 1000), // Required. Date type\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2016-05-31\" // Optional\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * Example using an identifier:\n *\n * ```js\n * // Generate service level SAS for a container with identifier\n * // startsOn & permissions are optional when identifier is provided\n * const identifier = \"unique-id\";\n * await containerClient.setAccessPolicy(undefined, [\n *   {\n *     accessPolicy: {\n *       expiresOn: new Date(new Date().valueOf() + 86400 * 1000), // Date type\n *       permissions: ContainerSASPermissions.parse(\"racwdl\").toString(),\n *       startsOn: new Date() // Date type\n *     },\n *     id: identifier\n *   }\n * ]);\n *\n * const containerSAS = generateBlobSASQueryParameters(\n *   {\n *     containerName, // Required\n *     identifier // Required\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * Example using a blob name:\n *\n * ```js\n * // Generate service level SAS for a blob\n * const blobSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     blobName, // Required\n *     permissions: BlobSASPermissions.parse(\"racwd\"), // Required\n *     startsOn: new Date(), // Optional\n *     expiresOn: new Date(new Date().valueOf() + 86400 * 1000), // Required. Date type\n *     cacheControl: \"cache-control-override\", // Optional\n *     contentDisposition: \"content-disposition-override\", // Optional\n *     contentEncoding: \"content-encoding-override\", // Optional\n *     contentLanguage: \"content-language-override\", // Optional\n *     contentType: \"content-type-override\", // Optional\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2016-05-31\" // Optional\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): SASQueryParameters;\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n * WARNING: identifier will be ignored when generating user delegation SAS, permissions and expiresOn are required.\n *\n * Example usage:\n *\n * ```js\n * // Generate user delegation SAS for a container\n * const userDelegationKey = await blobServiceClient.getUserDelegationKey(startsOn, expiresOn);\n * const containerSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     permissions: ContainerSASPermissions.parse(\"racwdl\"), // Required\n *     startsOn, // Optional. Date type\n *     expiresOn, // Required. Date type\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2018-11-09\" // Must greater than or equal to 2018-11-09 to generate user delegation SAS\n *   },\n *   userDelegationKey, // UserDelegationKey\n *   accountName\n * ).toString();\n * ```\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKey - Return value of `blobServiceClient.getUserDelegationKey()`\n * @param accountName -\n */\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKey: UserDelegationKey,\n  accountName: string,\n): SASQueryParameters;\n\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredentialOrUserDelegationKey: StorageSharedKeyCredential | UserDelegationKey,\n  accountName?: string,\n): SASQueryParameters {\n  return generateBlobSASQueryParametersInternal(\n    blobSASSignatureValues,\n    sharedKeyCredentialOrUserDelegationKey,\n    accountName,\n  ).sasQueryParameters;\n}\n\nexport function generateBlobSASQueryParametersInternal(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredentialOrUserDelegationKey: StorageSharedKeyCredential | UserDelegationKey,\n  accountName?: string,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n\n  const sharedKeyCredential =\n    sharedKeyCredentialOrUserDelegationKey instanceof StorageSharedKeyCredential\n      ? sharedKeyCredentialOrUserDelegationKey\n      : undefined;\n  let userDelegationKeyCredential: UserDelegationKeyCredential | undefined;\n\n  if (sharedKeyCredential === undefined && accountName !== undefined) {\n    userDelegationKeyCredential = new UserDelegationKeyCredential(\n      accountName,\n      sharedKeyCredentialOrUserDelegationKey as UserDelegationKey,\n    );\n  }\n\n  if (sharedKeyCredential === undefined && userDelegationKeyCredential === undefined) {\n    throw TypeError(\"Invalid sharedKeyCredential, userDelegationKey or accountName.\");\n  }\n\n  // Version 2020-12-06 adds support for encryptionscope in SAS.\n  if (version >= \"2020-12-06\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20201206(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      return generateBlobSASQueryParametersUDK20201206(\n        blobSASSignatureValues,\n        userDelegationKeyCredential!,\n      );\n    }\n  }\n\n  // Version 2019-12-12 adds support for the blob tags permission.\n  // Version 2018-11-09 adds support for the signed resource and signed blob snapshot time fields.\n  // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas#constructing-the-signature-string\n  if (version >= \"2018-11-09\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20181109(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      // Version 2020-02-10 delegation SAS signature construction includes preauthorizedAgentObjectId, agentObjectId, correlationId.\n      if (version >= \"2020-02-10\") {\n        return generateBlobSASQueryParametersUDK20200210(\n          blobSASSignatureValues,\n          userDelegationKeyCredential!,\n        );\n      } else {\n        return generateBlobSASQueryParametersUDK20181109(\n          blobSASSignatureValues,\n          userDelegationKeyCredential!,\n        );\n      }\n    }\n  }\n\n  if (version >= \"2015-04-05\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20150405(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      throw new RangeError(\n        \"'version' must be >= '2018-11-09' when generating user delegation SAS using user delegation key.\",\n      );\n    }\n  }\n\n  throw new RangeError(\"'version' must be >= '2015-04-05'.\");\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2015-04-05 AND BEFORE 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nfunction generateBlobSASQueryParameters20150405(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  if (\n    !blobSASSignatureValues.identifier &&\n    !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\",\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return {\n    sasQueryParameters: new SASQueryParameters(\n      blobSASSignatureValues.version!,\n      signature,\n      verifiedPermissions,\n      undefined,\n      undefined,\n      blobSASSignatureValues.protocol,\n      blobSASSignatureValues.startsOn,\n      blobSASSignatureValues.expiresOn,\n      blobSASSignatureValues.ipRange,\n      blobSASSignatureValues.identifier,\n      resource,\n      blobSASSignatureValues.cacheControl,\n      blobSASSignatureValues.contentDisposition,\n      blobSASSignatureValues.contentEncoding,\n      blobSASSignatureValues.contentLanguage,\n      blobSASSignatureValues.contentType,\n    ),\n    stringToSign: stringToSign,\n  };\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nfunction generateBlobSASQueryParameters20181109(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  if (\n    !blobSASSignatureValues.identifier &&\n    !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\",\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return {\n    sasQueryParameters: new SASQueryParameters(\n      blobSASSignatureValues.version!,\n      signature,\n      verifiedPermissions,\n      undefined,\n      undefined,\n      blobSASSignatureValues.protocol,\n      blobSASSignatureValues.startsOn,\n      blobSASSignatureValues.expiresOn,\n      blobSASSignatureValues.ipRange,\n      blobSASSignatureValues.identifier,\n      resource,\n      blobSASSignatureValues.cacheControl,\n      blobSASSignatureValues.contentDisposition,\n      blobSASSignatureValues.contentEncoding,\n      blobSASSignatureValues.contentLanguage,\n      blobSASSignatureValues.contentType,\n    ),\n    stringToSign: stringToSign,\n  };\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2020-12-06.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nfunction generateBlobSASQueryParameters20201206(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  if (\n    !blobSASSignatureValues.identifier &&\n    !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.encryptionScope,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\",\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return {\n    sasQueryParameters: new SASQueryParameters(\n      blobSASSignatureValues.version!,\n      signature,\n      verifiedPermissions,\n      undefined,\n      undefined,\n      blobSASSignatureValues.protocol,\n      blobSASSignatureValues.startsOn,\n      blobSASSignatureValues.expiresOn,\n      blobSASSignatureValues.ipRange,\n      blobSASSignatureValues.identifier,\n      resource,\n      blobSASSignatureValues.cacheControl,\n      blobSASSignatureValues.contentDisposition,\n      blobSASSignatureValues.contentEncoding,\n      blobSASSignatureValues.contentLanguage,\n      blobSASSignatureValues.contentType,\n      undefined,\n      undefined,\n      undefined,\n      blobSASSignatureValues.encryptionScope,\n    ),\n    stringToSign: stringToSign,\n  };\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKeyCredential -\n */\nfunction generateBlobSASQueryParametersUDK20181109(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKeyCredential: UserDelegationKeyCredential,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  // Stored access policies are not supported for a user delegation SAS.\n  if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      userDelegationKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    userDelegationKeyCredential.userDelegationKey.signedObjectId,\n    userDelegationKeyCredential.userDelegationKey.signedTenantId,\n    userDelegationKeyCredential.userDelegationKey.signedStartsOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedService,\n    userDelegationKeyCredential.userDelegationKey.signedVersion,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n  ].join(\"\\n\");\n\n  const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n  return {\n    sasQueryParameters: new SASQueryParameters(\n      blobSASSignatureValues.version!,\n      signature,\n      verifiedPermissions,\n      undefined,\n      undefined,\n      blobSASSignatureValues.protocol,\n      blobSASSignatureValues.startsOn,\n      blobSASSignatureValues.expiresOn,\n      blobSASSignatureValues.ipRange,\n      blobSASSignatureValues.identifier,\n      resource,\n      blobSASSignatureValues.cacheControl,\n      blobSASSignatureValues.contentDisposition,\n      blobSASSignatureValues.contentEncoding,\n      blobSASSignatureValues.contentLanguage,\n      blobSASSignatureValues.contentType,\n      userDelegationKeyCredential.userDelegationKey,\n    ),\n    stringToSign: stringToSign,\n  };\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2020-02-10.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKeyCredential -\n */\nfunction generateBlobSASQueryParametersUDK20200210(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKeyCredential: UserDelegationKeyCredential,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  // Stored access policies are not supported for a user delegation SAS.\n  if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      userDelegationKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    userDelegationKeyCredential.userDelegationKey.signedObjectId,\n    userDelegationKeyCredential.userDelegationKey.signedTenantId,\n    userDelegationKeyCredential.userDelegationKey.signedStartsOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedService,\n    userDelegationKeyCredential.userDelegationKey.signedVersion,\n    blobSASSignatureValues.preauthorizedAgentObjectId,\n    undefined, // agentObjectId\n    blobSASSignatureValues.correlationId,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n  ].join(\"\\n\");\n\n  const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n  return {\n    sasQueryParameters: new SASQueryParameters(\n      blobSASSignatureValues.version!,\n      signature,\n      verifiedPermissions,\n      undefined,\n      undefined,\n      blobSASSignatureValues.protocol,\n      blobSASSignatureValues.startsOn,\n      blobSASSignatureValues.expiresOn,\n      blobSASSignatureValues.ipRange,\n      blobSASSignatureValues.identifier,\n      resource,\n      blobSASSignatureValues.cacheControl,\n      blobSASSignatureValues.contentDisposition,\n      blobSASSignatureValues.contentEncoding,\n      blobSASSignatureValues.contentLanguage,\n      blobSASSignatureValues.contentType,\n      userDelegationKeyCredential.userDelegationKey,\n      blobSASSignatureValues.preauthorizedAgentObjectId,\n      blobSASSignatureValues.correlationId,\n    ),\n    stringToSign: stringToSign,\n  };\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2020-12-06.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKeyCredential -\n */\nfunction generateBlobSASQueryParametersUDK20201206(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKeyCredential: UserDelegationKeyCredential,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  // Stored access policies are not supported for a user delegation SAS.\n  if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\",\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString(),\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      userDelegationKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName,\n    ),\n    userDelegationKeyCredential.userDelegationKey.signedObjectId,\n    userDelegationKeyCredential.userDelegationKey.signedTenantId,\n    userDelegationKeyCredential.userDelegationKey.signedStartsOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedService,\n    userDelegationKeyCredential.userDelegationKey.signedVersion,\n    blobSASSignatureValues.preauthorizedAgentObjectId,\n    undefined, // agentObjectId\n    blobSASSignatureValues.correlationId,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.encryptionScope,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n  ].join(\"\\n\");\n\n  const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n  return {\n    sasQueryParameters: new SASQueryParameters(\n      blobSASSignatureValues.version!,\n      signature,\n      verifiedPermissions,\n      undefined,\n      undefined,\n      blobSASSignatureValues.protocol,\n      blobSASSignatureValues.startsOn,\n      blobSASSignatureValues.expiresOn,\n      blobSASSignatureValues.ipRange,\n      blobSASSignatureValues.identifier,\n      resource,\n      blobSASSignatureValues.cacheControl,\n      blobSASSignatureValues.contentDisposition,\n      blobSASSignatureValues.contentEncoding,\n      blobSASSignatureValues.contentLanguage,\n      blobSASSignatureValues.contentType,\n      userDelegationKeyCredential.userDelegationKey,\n      blobSASSignatureValues.preauthorizedAgentObjectId,\n      blobSASSignatureValues.correlationId,\n      blobSASSignatureValues.encryptionScope,\n    ),\n    stringToSign: stringToSign,\n  };\n}\n\nfunction getCanonicalName(accountName: string, containerName: string, blobName?: string): string {\n  // Container: \"/blob/account/containerName\"\n  // Blob:      \"/blob/account/containerName/blobName\"\n  const elements: string[] = [`/blob/${accountName}/${containerName}`];\n  if (blobName) {\n    elements.push(`/${blobName}`);\n  }\n  return elements.join(\"\");\n}\n\nfunction SASSignatureValuesSanityCheckAndAutofill(\n  blobSASSignatureValues: BlobSASSignatureValues,\n): BlobSASSignatureValues {\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n  if (blobSASSignatureValues.snapshotTime && version < \"2018-11-09\") {\n    throw RangeError(\"'version' must be >= '2018-11-09' when providing 'snapshotTime'.\");\n  }\n  if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.snapshotTime) {\n    throw RangeError(\"Must provide 'blobName' when providing 'snapshotTime'.\");\n  }\n\n  if (blobSASSignatureValues.versionId && version < \"2019-10-10\") {\n    throw RangeError(\"'version' must be >= '2019-10-10' when providing 'versionId'.\");\n  }\n  if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.versionId) {\n    throw RangeError(\"Must provide 'blobName' when providing 'versionId'.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.setImmutabilityPolicy &&\n    version < \"2020-08-04\"\n  ) {\n    throw RangeError(\"'version' must be >= '2020-08-04' when provided 'i' permission.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.deleteVersion &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when providing 'x' permission.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.permanentDelete &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when providing 'y' permission.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.tag &&\n    version < \"2019-12-12\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-12-12' when providing 't' permission.\");\n  }\n\n  if (\n    version < \"2020-02-10\" &&\n    blobSASSignatureValues.permissions &&\n    (blobSASSignatureValues.permissions.move || blobSASSignatureValues.permissions.execute)\n  ) {\n    throw RangeError(\"'version' must be >= '2020-02-10' when providing the 'm' or 'e' permission.\");\n  }\n\n  if (\n    version < \"2021-04-10\" &&\n    blobSASSignatureValues.permissions &&\n    (blobSASSignatureValues.permissions as ContainerSASPermissions).filterByTags\n  ) {\n    throw RangeError(\"'version' must be >= '2021-04-10' when providing the 'f' permission.\");\n  }\n\n  if (\n    version < \"2020-02-10\" &&\n    (blobSASSignatureValues.preauthorizedAgentObjectId || blobSASSignatureValues.correlationId)\n  ) {\n    throw RangeError(\n      \"'version' must be >= '2020-02-10' when providing 'preauthorizedAgentObjectId' or 'correlationId'.\",\n    );\n  }\n\n  if (blobSASSignatureValues.encryptionScope && version < \"2020-12-06\") {\n    throw RangeError(\"'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.\");\n  }\n\n  blobSASSignatureValues.version = version;\n  return blobSASSignatureValues;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { randomUUID } from \"@azure/core-util\";\nimport type { ContainerBreakLeaseOptionalParams } from \"./generatedModels\";\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { Blob as StorageBlob, Container } from \"./generated/src/operationsInterfaces\";\nimport type { ModifiedAccessConditions } from \"./models\";\nimport type { CommonOptions } from \"./StorageClient\";\nimport { ETagNone } from \"./utils/constants\";\nimport { tracingClient } from \"./utils/tracing\";\nimport type { BlobClient } from \"./Clients\";\nimport type { ContainerClient } from \"./ContainerClient\";\nimport type { WithResponse } from \"./utils/utils.common\";\nimport { assertResponse } from \"./utils/utils.common\";\nimport type {\n  ContainerAcquireLeaseHeaders,\n  ContainerBreakLeaseHeaders,\n  ContainerReleaseLeaseHeaders,\n} from \"./generated/src\";\n\n/**\n * The details for a specific lease.\n */\nexport interface Lease {\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally. If the request version is 2011-08-18 or\n   * newer, the ETag value will be in quotes.\n   */\n  etag?: string;\n  /**\n   * Returns the date and time the container was\n   * last modified. Any operation that modifies the blob, including an update\n   * of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a container's lease\n   */\n  leaseId?: string;\n  /**\n   * Approximate time remaining in the lease\n   * period, in seconds.\n   */\n  leaseTime?: number;\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used\n   * to execute the request. This header is returned for requests made against\n   * version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated\n   */\n  date?: Date;\n  /**\n   * Error code if any associated with the response that returned\n   * the Lease information.\n   */\n  errorCode?: string;\n}\n\n/**\n * Contains the response data for operations that create, modify, or delete a lease.\n *\n * See {@link BlobLeaseClient}.\n */\nexport type LeaseOperationResponse = WithResponse<Lease, Lease>;\n\n/**\n * Configures lease operations.\n */\nexport interface LeaseOperationOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when changing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * A client that manages leases for a {@link ContainerClient} or a {@link BlobClient}.\n */\nexport class BlobLeaseClient {\n  private _leaseId: string;\n  private _url: string;\n  private _containerOrBlobOperation: Container | StorageBlob;\n  private _isContainer: boolean;\n\n  /**\n   * Gets the lease Id.\n   *\n   * @readonly\n   */\n  public get leaseId(): string {\n    return this._leaseId;\n  }\n\n  /**\n   * Gets the url.\n   *\n   * @readonly\n   */\n  public get url(): string {\n    return this._url;\n  }\n\n  /**\n   * Creates an instance of BlobLeaseClient.\n   * @param client - The client to make the lease operation requests.\n   * @param leaseId - Initial proposed lease id.\n   */\n  constructor(client: ContainerClient | BlobClient, leaseId?: string) {\n    const clientContext = (client as any).storageClientContext;\n    this._url = client.url;\n\n    if ((client as BlobClient).name === undefined) {\n      this._isContainer = true;\n      this._containerOrBlobOperation = clientContext.container;\n    } else {\n      this._isContainer = false;\n      this._containerOrBlobOperation = clientContext.blob;\n    }\n\n    if (!leaseId) {\n      leaseId = randomUUID();\n    }\n    this._leaseId = leaseId;\n  }\n\n  /**\n   * Establishes and manages a lock on a container for delete operations, or on a blob\n   * for write and delete operations.\n   * The lock duration can be 15 to 60 seconds, or can be infinite.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param duration - Must be between 15 to 60 seconds, or infinite (-1)\n   * @param options - option to configure lease management operations.\n   * @returns Response data for acquire lease operation.\n   */\n  public async acquireLease(\n    duration: number,\n    options: LeaseOperationOptions = {},\n  ): Promise<LeaseOperationResponse> {\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\",\n      );\n    }\n    return tracingClient.withSpan(\n      \"BlobLeaseClient-acquireLease\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ContainerAcquireLeaseHeaders, ContainerAcquireLeaseHeaders>(\n          await this._containerOrBlobOperation.acquireLease({\n            abortSignal: options.abortSignal,\n            duration,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            proposedLeaseId: this._leaseId,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * To change the ID of the lease.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param proposedLeaseId - the proposed new lease Id.\n   * @param options - option to configure lease management operations.\n   * @returns Response data for change lease operation.\n   */\n  public async changeLease(\n    proposedLeaseId: string,\n    options: LeaseOperationOptions = {},\n  ): Promise<LeaseOperationResponse> {\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\",\n      );\n    }\n\n    return tracingClient.withSpan(\n      \"BlobLeaseClient-changeLease\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<Lease, Lease>(\n          await this._containerOrBlobOperation.changeLease(this._leaseId, proposedLeaseId, {\n            abortSignal: options.abortSignal,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n        this._leaseId = proposedLeaseId;\n        return response;\n      },\n    );\n  }\n\n  /**\n   * To free the lease if it is no longer needed so that another client may\n   * immediately acquire a lease against the container or the blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param options - option to configure lease management operations.\n   * @returns Response data for release lease operation.\n   */\n  public async releaseLease(options: LeaseOperationOptions = {}): Promise<LeaseOperationResponse> {\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\",\n      );\n    }\n    return tracingClient.withSpan(\n      \"BlobLeaseClient-releaseLease\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ContainerReleaseLeaseHeaders, ContainerReleaseLeaseHeaders>(\n          await this._containerOrBlobOperation.releaseLease(this._leaseId, {\n            abortSignal: options.abortSignal,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * To renew the lease.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param options - Optional option to configure lease management operations.\n   * @returns Response data for renew lease operation.\n   */\n  public async renewLease(options: LeaseOperationOptions = {}): Promise<Lease> {\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\",\n      );\n    }\n    return tracingClient.withSpan(\"BlobLeaseClient-renewLease\", options, async (updatedOptions) => {\n      return this._containerOrBlobOperation.renewLease(this._leaseId, {\n        abortSignal: options.abortSignal,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        tracingOptions: updatedOptions.tracingOptions,\n      });\n    });\n  }\n\n  /**\n   * To end the lease but ensure that another client cannot acquire a new lease\n   * until the current lease period has expired.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param breakPeriod - Break period\n   * @param options - Optional options to configure lease management operations.\n   * @returns Response data for break lease operation.\n   */\n  public async breakLease(\n    breakPeriod: number,\n    options: LeaseOperationOptions = {},\n  ): Promise<LeaseOperationResponse> {\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\",\n      );\n    }\n\n    return tracingClient.withSpan(\"BlobLeaseClient-breakLease\", options, async (updatedOptions) => {\n      const operationOptions: ContainerBreakLeaseOptionalParams = {\n        abortSignal: options.abortSignal,\n        breakPeriod,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        tracingOptions: updatedOptions.tracingOptions,\n      };\n      return assertResponse<ContainerBreakLeaseHeaders, ContainerBreakLeaseHeaders>(\n        await this._containerOrBlobOperation.breakLease(operationOptions),\n      );\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  BlobDownloadResponseModel,\n  BlobType,\n  CopyStatusType,\n  LeaseDurationType,\n  LeaseStateType,\n  LeaseStatusType,\n  BlobQueryResponseModel,\n  BlobQueryHeaders,\n} from \"./generatedModels\";\nimport type { Metadata } from \"./models\";\nimport type { BlobQuickQueryStreamOptions } from \"./utils/BlobQuickQueryStream\";\nimport type { ResponseWithHeaders } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN BROWSER RUNTIME.\n *\n * BlobQueryResponse implements BlobDownloadResponseModel interface, and in browser runtime it will\n * parse avor data returned by blob query.\n */\nexport class BlobQueryResponse implements BlobDownloadResponseModel {\n  /**\n   * Indicates that the service supports\n   * requests for partial file content.\n   *\n   * @readonly\n   */\n  public get acceptRanges(): string | undefined {\n    return this.originalResponse.acceptRanges;\n  }\n\n  /**\n   * Returns if it was previously specified\n   * for the file.\n   *\n   * @readonly\n   */\n  public get cacheControl(): string | undefined {\n    return this.originalResponse.cacheControl;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the 'x-ms-content-disposition' header and specifies how to process the\n   * response.\n   *\n   * @readonly\n   */\n  public get contentDisposition(): string | undefined {\n    return this.originalResponse.contentDisposition;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Encoding request header.\n   *\n   * @readonly\n   */\n  public get contentEncoding(): string | undefined {\n    return this.originalResponse.contentEncoding;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Language request header.\n   *\n   * @readonly\n   */\n  public get contentLanguage(): string | undefined {\n    return this.originalResponse.contentLanguage;\n  }\n\n  /**\n   * The current sequence number for a\n   * page blob. This header is not returned for block blobs or append blobs.\n   *\n   * @readonly\n   */\n  public get blobSequenceNumber(): number | undefined {\n    return this.originalResponse.blobSequenceNumber;\n  }\n\n  /**\n   * The blob's type. Possible values include:\n   * 'BlockBlob', 'PageBlob', 'AppendBlob'.\n   *\n   * @readonly\n   */\n  public get blobType(): BlobType | undefined {\n    return this.originalResponse.blobType;\n  }\n\n  /**\n   * The number of bytes present in the\n   * response body.\n   *\n   * @readonly\n   */\n  public get contentLength(): number | undefined {\n    return this.originalResponse.contentLength;\n  }\n\n  /**\n   * If the file has an MD5 hash and the\n   * request is to read the full file, this response header is returned so that\n   * the client can check for message content integrity. If the request is to\n   * read a specified range and the 'x-ms-range-get-content-md5' is set to\n   * true, then the request returns an MD5 hash for the range, as long as the\n   * range size is less than or equal to 4 MB. If neither of these sets of\n   * conditions is true, then no value is returned for the 'Content-MD5'\n   * header.\n   *\n   * @readonly\n   */\n  public get contentMD5(): Uint8Array | undefined {\n    return this.originalResponse.contentMD5;\n  }\n\n  /**\n   * Indicates the range of bytes returned if\n   * the client requested a subset of the file by setting the Range request\n   * header.\n   *\n   * @readonly\n   */\n  public get contentRange(): string | undefined {\n    return this.originalResponse.contentRange;\n  }\n\n  /**\n   * The content type specified for the file.\n   * The default content type is 'application/octet-stream'\n   *\n   * @readonly\n   */\n  public get contentType(): string | undefined {\n    return this.originalResponse.contentType;\n  }\n\n  /**\n   * Conclusion time of the last attempted\n   * Copy File operation where this file was the destination file. This value\n   * can specify the time of a completed, aborted, or failed copy attempt.\n   *\n   * @readonly\n   */\n  public get copyCompletedOn(): Date | undefined {\n    return undefined;\n  }\n\n  /**\n   * String identifier for the last attempted Copy\n   * File operation where this file was the destination file.\n   *\n   * @readonly\n   */\n  public get copyId(): string | undefined {\n    return this.originalResponse.copyId;\n  }\n\n  /**\n   * Contains the number of bytes copied and\n   * the total bytes in the source in the last attempted Copy File operation\n   * where this file was the destination file. Can show between 0 and\n   * Content-Length bytes copied.\n   *\n   * @readonly\n   */\n  public get copyProgress(): string | undefined {\n    return this.originalResponse.copyProgress;\n  }\n\n  /**\n   * URL up to 2KB in length that specifies the\n   * source file used in the last attempted Copy File operation where this file\n   * was the destination file.\n   *\n   * @readonly\n   */\n  public get copySource(): string | undefined {\n    return this.originalResponse.copySource;\n  }\n\n  /**\n   * State of the copy operation\n   * identified by 'x-ms-copy-id'. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   *\n   * @readonly\n   */\n  public get copyStatus(): CopyStatusType | undefined {\n    return this.originalResponse.copyStatus;\n  }\n\n  /**\n   * Only appears when\n   * x-ms-copy-status is failed or pending. Describes cause of fatal or\n   * non-fatal copy operation failure.\n   *\n   * @readonly\n   */\n  public get copyStatusDescription(): string | undefined {\n    return this.originalResponse.copyStatusDescription;\n  }\n\n  /**\n   * When a blob is leased,\n   * specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'.\n   *\n   * @readonly\n   */\n  public get leaseDuration(): LeaseDurationType | undefined {\n    return this.originalResponse.leaseDuration;\n  }\n\n  /**\n   * Lease state of the blob. Possible\n   * values include: 'available', 'leased', 'expired', 'breaking', 'broken'.\n   *\n   * @readonly\n   */\n  public get leaseState(): LeaseStateType | undefined {\n    return this.originalResponse.leaseState;\n  }\n\n  /**\n   * The current lease status of the\n   * blob. Possible values include: 'locked', 'unlocked'.\n   *\n   * @readonly\n   */\n  public get leaseStatus(): LeaseStatusType | undefined {\n    return this.originalResponse.leaseStatus;\n  }\n\n  /**\n   * A UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated.\n   *\n   * @readonly\n   */\n  public get date(): Date | undefined {\n    return this.originalResponse.date;\n  }\n\n  /**\n   * The number of committed blocks\n   * present in the blob. This header is returned only for append blobs.\n   *\n   * @readonly\n   */\n  public get blobCommittedBlockCount(): number | undefined {\n    return this.originalResponse.blobCommittedBlockCount;\n  }\n\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally, in quotes.\n   *\n   * @readonly\n   */\n  public get etag(): string | undefined {\n    return this.originalResponse.etag;\n  }\n\n  /**\n   * The error code.\n   *\n   * @readonly\n   */\n  public get errorCode(): string | undefined {\n    return this.originalResponse.errorCode;\n  }\n\n  /**\n   * The value of this header is set to\n   * true if the file data and application metadata are completely encrypted\n   * using the specified algorithm. Otherwise, the value is set to false (when\n   * the file is unencrypted, or if only parts of the file/application metadata\n   * are encrypted).\n   *\n   * @readonly\n   */\n  public get isServerEncrypted(): boolean | undefined {\n    return this.originalResponse.isServerEncrypted;\n  }\n\n  /**\n   * If the blob has a MD5 hash, and if\n   * request contains range header (Range or x-ms-range), this response header\n   * is returned with the value of the whole blob's MD5 value. This value may\n   * or may not be equal to the value returned in Content-MD5 header, with the\n   * latter calculated from the requested range.\n   *\n   * @readonly\n   */\n  public get blobContentMD5(): Uint8Array | undefined {\n    return this.originalResponse.blobContentMD5;\n  }\n\n  /**\n   * Returns the date and time the file was last\n   * modified. Any operation that modifies the file or its properties updates\n   * the last modified time.\n   *\n   * @readonly\n   */\n  public get lastModified(): Date | undefined {\n    return this.originalResponse.lastModified;\n  }\n\n  /**\n   * A name-value pair\n   * to associate with a file storage object.\n   *\n   * @readonly\n   */\n  public get metadata(): Metadata | undefined {\n    return this.originalResponse.metadata;\n  }\n\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   *\n   * @readonly\n   */\n  public get requestId(): string | undefined {\n    return this.originalResponse.requestId;\n  }\n\n  /**\n   * If a client request id header is sent in the request, this header will be present in the\n   * response with the same value.\n   *\n   * @readonly\n   */\n  public get clientRequestId(): string | undefined {\n    return this.originalResponse.clientRequestId;\n  }\n\n  /**\n   * Indicates the version of the File service used\n   * to execute the request.\n   *\n   * @readonly\n   */\n  public get version(): string | undefined {\n    return this.originalResponse.version;\n  }\n\n  /**\n   * The SHA-256 hash of the encryption key used to encrypt the blob. This value is only returned\n   * when the blob was encrypted with a customer-provided key.\n   *\n   * @readonly\n   */\n  public get encryptionKeySha256(): string | undefined {\n    return this.originalResponse.encryptionKeySha256;\n  }\n\n  /**\n   * If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to\n   * true, then the request returns a crc64 for the range, as long as the range size is less than\n   * or equal to 4 MB. If both x-ms-range-get-content-crc64 & x-ms-range-get-content-md5 is\n   * specified in the same request, it will fail with 400(Bad Request)\n   */\n  public get contentCrc64(): Uint8Array | undefined {\n    return this.originalResponse.contentCrc64;\n  }\n\n  /**\n   * The response body as a browser Blob.\n   * Always undefined in node.js.\n   *\n   * @readonly\n   */\n  public get blobBody(): Promise<Blob> | undefined {\n    throw Error(`Quick query in browser is not supported yet.`);\n  }\n\n  /**\n   * The response body as a node.js Readable stream.\n   * Always undefined in the browser.\n   *\n   * @readonly\n   */\n  public get readableStreamBody(): NodeJS.ReadableStream | undefined {\n    return undefined;\n  }\n\n  /**\n   * The HTTP response.\n   */\n  public get _response(): ResponseWithHeaders<BlobQueryHeaders>[\"_response\"] {\n    return this.originalResponse._response;\n  }\n\n  private originalResponse: BlobQueryResponseModel;\n\n  /**\n   * Creates an instance of BlobQueryResponse.\n   *\n   * @param originalResponse -\n   * @param options -\n   */\n  public constructor(\n    originalResponse: BlobQueryResponseModel,\n    _options: BlobQuickQueryStreamOptions = {},\n  ) {\n    this.originalResponse = originalResponse;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { CancelOnProgress, PollOperationState } from \"@azure/core-lro\";\nimport type { BlobImmutabilityPolicyMode } from \"./generatedModels\";\nimport type {\n  LeaseAccessConditions,\n  SequenceNumberAccessConditions,\n  AppendPositionAccessConditions,\n  AccessTier,\n  CpkInfo,\n  BlobDownloadResponseModel,\n} from \"./generatedModels\";\nimport { EncryptionAlgorithmAES25 } from \"./utils/constants\";\n\n/**\n * Blob tags.\n */\nexport type Tags = Record<string, string>;\n\n/**\n * A map of name-value pairs to associate with the resource.\n */\nexport interface Metadata {\n  /**\n   * A name-value pair.\n   */\n  [propertyName: string]: string;\n}\n\n/**\n * standard HTTP conditional headers and tags condition.\n */\nexport interface ModifiedAccessConditions\n  extends MatchConditions,\n    ModificationConditions,\n    TagConditions {}\n\n/**\n * standard HTTP conditional headers, tags condition and lease condition\n */\nexport interface BlobRequestConditions extends ModifiedAccessConditions, LeaseAccessConditions {}\n\n/**\n * Conditions to add to the creation of this page blob.\n */\nexport interface PageBlobRequestConditions\n  extends BlobRequestConditions,\n    SequenceNumberAccessConditions {}\n\n/**\n * Conditions to add to the creation of this append blob.\n */\nexport interface AppendBlobRequestConditions\n  extends BlobRequestConditions,\n    AppendPositionAccessConditions {}\n\n/**\n * Specifies HTTP options for conditional requests based on modification time.\n */\nexport interface ModificationConditions {\n  /**\n   * Specify this header value to operate only on a blob if it has been modified since the\n   * specified date/time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * Specify this header value to operate only on a blob if it has not been modified since the\n   * specified date/time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * Specifies HTTP options for conditional requests based on ETag matching.\n */\nexport interface MatchConditions {\n  /**\n   * Specify an ETag value to operate only on blobs with a matching value.\n   */\n  ifMatch?: string;\n  /**\n   * Specify an ETag value to operate only on blobs without a matching value.\n   */\n  ifNoneMatch?: string;\n}\n\n/**\n * Specifies HTTP options for conditional requests based on blob tags.\n */\nexport interface TagConditions {\n  /**\n   * Optional SQL statement to apply to the tags of the blob.\n   */\n  tagConditions?: string;\n}\n\n/**\n * Conditions to meet for the container.\n */\nexport interface ContainerRequestConditions extends LeaseAccessConditions, ModificationConditions {}\n\n/**\n * Represents the access tier on a blob.\n * For detailed information about block blob level tiering see {@link https://docs.microsoft.com/azure/storage/blobs/storage-blob-storage-tiers|Hot, cool and archive storage tiers.}\n */\nexport enum BlockBlobTier {\n  /**\n   * Optimized for storing data that is accessed frequently.\n   */\n  Hot = \"Hot\",\n  /**\n   * Optimized for storing data that is infrequently accessed and stored for at least 30 days.\n   */\n  Cool = \"Cool\",\n  /**\n   * Optimized for storing data that is rarely accessed.\n   */\n  Cold = \"Cold\",\n  /**\n   * Optimized for storing data that is rarely accessed and stored for at least 180 days\n   * with flexible latency requirements (on the order of hours).\n   */\n  Archive = \"Archive\",\n}\n\n/**\n * Specifies the page blob tier to set the blob to. This is only applicable to page blobs on premium storage accounts.\n * Please see {@link https://docs.microsoft.com/azure/storage/storage-premium-storage#scalability-and-performance-targets|here}\n * for detailed information on the corresponding IOPS and throughput per PageBlobTier.\n */\nexport enum PremiumPageBlobTier {\n  /**\n   * P4 Tier.\n   */\n  P4 = \"P4\",\n  /**\n   * P6 Tier.\n   */\n  P6 = \"P6\",\n  /**\n   * P10 Tier.\n   */\n  P10 = \"P10\",\n  /**\n   * P15 Tier.\n   */\n  P15 = \"P15\",\n  /**\n   * P20 Tier.\n   */\n  P20 = \"P20\",\n  /**\n   * P30 Tier.\n   */\n  P30 = \"P30\",\n  /**\n   * P40 Tier.\n   */\n  P40 = \"P40\",\n  /**\n   * P50 Tier.\n   */\n  P50 = \"P50\",\n  /**\n   * P60 Tier.\n   */\n  P60 = \"P60\",\n  /**\n   * P70 Tier.\n   */\n  P70 = \"P70\",\n  /**\n   * P80 Tier.\n   */\n  P80 = \"P80\",\n}\n\nexport function toAccessTier(\n  tier: BlockBlobTier | PremiumPageBlobTier | string | undefined,\n): AccessTier | undefined {\n  if (tier === undefined) {\n    return undefined;\n  }\n\n  return tier as AccessTier; // No more check if string is a valid AccessTier, and left this to underlay logic to decide(service).\n}\n\nexport function ensureCpkIfSpecified(cpk: CpkInfo | undefined, isHttps: boolean): void {\n  if (cpk && !isHttps) {\n    throw new RangeError(\"Customer-provided encryption key must be used over HTTPS.\");\n  }\n\n  if (cpk && !cpk.encryptionAlgorithm) {\n    cpk.encryptionAlgorithm = EncryptionAlgorithmAES25;\n  }\n}\n\n/**\n * Specifies the Replication Status of a blob. This is used when a storage account has\n * Object Replication Policy(s) applied. See {@link ObjectReplicationPolicy} and {@link ObjectReplicationRule}.\n */\nexport type ObjectReplicationStatus = \"complete\" | \"failed\";\n\n/**\n * Contains the Object Replication Rule ID and {@link ObjectReplicationStatus} of a blob.\n * There can be more than one {@link ObjectReplicationRule} under a {@link ObjectReplicationPolicy}.\n */\nexport interface ObjectReplicationRule {\n  /**\n   * The Object Replication Rule ID.\n   */\n  ruleId: string;\n\n  /**\n   * The Replication Status\n   */\n  replicationStatus: ObjectReplicationStatus;\n}\n\n/**\n * Contains Object Replication Policy ID and the respective list of {@link ObjectReplicationRule}.\n * This is used when retrieving the Object Replication Properties on the source blob. The policy id for the\n * destination blob is set in ObjectReplicationDestinationPolicyId of the respective method responses\n * (e.g. {@link BlobProperties.ObjectReplicationDestinationPolicyId}.\n */\nexport interface ObjectReplicationPolicy {\n  /**\n   * The Object Replication Policy ID.\n   */\n  policyId: string;\n\n  /**\n   * The Rule ID(s) and respective Replication Status(s) that are under the Policy ID.\n   */\n  rules: ObjectReplicationRule[];\n}\n\n/**\n * Contains response data for the {@link BlobClient.download} operation.\n */\nexport interface BlobDownloadResponseParsed extends BlobDownloadResponseModel {\n  /**\n   * Parsed Object Replication Policy Id, Rule Id(s) and status of the source blob.\n   */\n  objectReplicationSourceProperties?: ObjectReplicationPolicy[];\n\n  /**\n   * Object Replication Policy Id of the destination blob.\n   */\n  objectReplicationDestinationPolicyId?: string;\n}\n\n/**\n * The type of a {@link BlobQueryArrowField}.\n */\nexport type BlobQueryArrowFieldType =\n  | \"int64\"\n  | \"bool\"\n  | \"timestamp[ms]\"\n  | \"string\"\n  | \"double\"\n  | \"decimal\";\n\n/**\n * Describe a field in {@link BlobQueryArrowConfiguration}.\n */\nexport interface BlobQueryArrowField {\n  /**\n   * The type of the field.\n   */\n  type: BlobQueryArrowFieldType;\n\n  /**\n   * The name of the field.\n   */\n  name?: string;\n\n  /**\n   * The precision of the field. Required if type is \"decimal\".\n   */\n  precision?: number;\n\n  /**\n   * The scale of the field.  Required if type is is \"decimal\".\n   */\n  scale?: number;\n}\n\n/**\n * Describe immutable policy for blob.\n */\nexport interface BlobImmutabilityPolicy {\n  /**\n   * Specifies the date time when the blobs immutability policy is set to expire.\n   */\n  expiriesOn?: Date;\n  /**\n   * Specifies the immutability policy mode to set on the blob.\n   */\n  policyMode?: BlobImmutabilityPolicyMode;\n}\n\n/**\n * Represents authentication information in Authorization, ProxyAuthorization,\n * WWW-Authenticate, and Proxy-Authenticate header values.\n */\nexport interface HttpAuthorization {\n  /**\n   * The scheme to use for authorization.\n   */\n  scheme: string;\n\n  /**\n   * the credentials containing the authentication information of the user agent for the resource being requested.\n   */\n  value: string;\n}\n\n/**\n * Defines the known cloud audiences for Storage.\n */\nexport enum StorageBlobAudience {\n  /**\n   * The OAuth scope to use to retrieve an AAD token for Azure Storage.\n   */\n  StorageOAuthScopes = \"https://storage.azure.com/.default\",\n  /**\n   * The OAuth scope to use to retrieve an AAD token for Azure Disk.\n   */\n  DiskComputeOAuthScopes = \"https://disk.compute.azure.com/.default\",\n}\n\n/**\n *\n * To get OAuth audience for a storage account for blob service.\n */\nexport function getBlobServiceAccountAudience(storageAccountName: string): string {\n  return `https://${storageAccountName}.blob.core.windows.net/.default`;\n}\n\n/**\n * Abstract representation of a poller, intended to expose just the minimal API that the user needs to work with.\n */\nexport interface PollerLikeWithCancellation<TState extends PollOperationState<TResult>, TResult> {\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   */\n  poll(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  pollUntilDone(): Promise<TResult>;\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  onProgress(callback: (state: TState) => void): CancelOnProgress;\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  isDone(): boolean;\n  /**\n   * Stops the poller. After this, no manual or automated requests can be sent.\n   */\n  stopPolling(): void;\n  /**\n   * Returns true if the poller is stopped.\n   */\n  isStopped(): boolean;\n  /**\n   * Attempts to cancel the underlying operation.\n   */\n  cancelOperation(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns the state of the operation.\n   * The TState defined in PollerLike can be a subset of the TState defined in\n   * the Poller implementation.\n   */\n  getOperationState(): TState;\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  getResult(): TResult | undefined;\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  toString(): string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  PageBlobGetPageRangesHeaders,\n  PageBlobGetPageRangesDiffHeaders,\n  PageBlobGetPageRangesResponseModel,\n  PageBlobGetPageRangesDiffResponseModel,\n} from \"./generatedModels\";\nimport type { Range } from \"./Range\";\nimport type { ResponseWithBody } from \"./utils/utils.common\";\n\n/**\n * List of page ranges for a blob.\n */\nexport interface PageList {\n  /**\n   * Valid non-overlapping page ranges.\n   */\n  pageRange?: Range[];\n  /**\n   * Present if the prevSnapshot parameter was specified and there were cleared\n   * pages between the previous snapshot and the target snapshot.\n   */\n  clearRange?: Range[];\n}\n\n/**\n * Contains response data for the {@link BlobClient.getPageRanges} operation.\n */\nexport interface PageBlobGetPageRangesResponse\n  extends PageList,\n    PageBlobGetPageRangesHeaders,\n    ResponseWithBody<PageBlobGetPageRangesHeaders, PageList> {}\n\n/**\n * Contains response data for the {@link BlobClient.getPageRangesDiff} operation.\n */\nexport interface PageBlobGetPageRangesDiffResponse\n  extends PageList,\n    PageBlobGetPageRangesDiffHeaders,\n    ResponseWithBody<PageBlobGetPageRangesDiffHeaders, PageList> {}\n\n/**\n * Function that converts PageRange and ClearRange to a common Range object.\n * PageRange and ClearRange have start and end while Range offset and count\n * this function normalizes to Range.\n * @param response - Model PageBlob Range response\n */\nexport function rangeResponseFromModel(\n  response: PageBlobGetPageRangesResponseModel | PageBlobGetPageRangesDiffResponseModel,\n): PageBlobGetPageRangesResponse | PageBlobGetPageRangesDiffResponse {\n  const pageRange = (response._response.parsedBody.pageRange || []).map((x) => ({\n    offset: x.start,\n    count: x.end - x.start,\n  }));\n\n  const clearRange = (response._response.parsedBody.clearRange || []).map((x) => ({\n    offset: x.start,\n    count: x.end - x.start,\n  }));\n\n  return {\n    ...response,\n    pageRange,\n    clearRange,\n    _response: {\n      ...response._response,\n      parsedBody: {\n        pageRange,\n        clearRange,\n      },\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The `@azure/logger` configuration for this package.\n * @internal\n */\nexport const logger = createClientLogger(\"core-lro\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PollOperation, PollOperationState } from \"./pollOperation.js\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { CancelOnProgress } from \"../poller/models.js\";\nimport { PollerLike } from \"./models.js\";\n\n/**\n * PollProgressCallback<TState> is the type of the callback functions sent to onProgress.\n * These functions will receive a TState that is defined by your implementation of\n * the Poller class.\n */\nexport type PollProgressCallback<TState> = (state: TState) => void;\n\n/**\n * When a poller is manually stopped through the `stopPolling` method,\n * the poller will be rejected with an instance of the PollerStoppedError.\n */\nexport class PollerStoppedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerStoppedError\";\n    Object.setPrototypeOf(this, PollerStoppedError.prototype);\n  }\n}\n\n/**\n * When the operation is cancelled, the poller will be rejected with an instance\n * of the PollerCancelledError.\n */\nexport class PollerCancelledError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerCancelledError\";\n    Object.setPrototypeOf(this, PollerCancelledError.prototype);\n  }\n}\n\n/**\n * A class that represents the definition of a program that polls through consecutive requests\n * until it reaches a state of completion.\n *\n * A poller can be executed manually, by polling request by request by calling to the `poll()` method repeatedly, until its operation is completed.\n * It also provides a way to wait until the operation completes, by calling `pollUntilDone()` and waiting until the operation finishes.\n * Pollers can also request the cancellation of the ongoing process to whom is providing the underlying long running operation.\n *\n * ```ts\n * const poller = new MyPoller();\n *\n * // Polling just once:\n * await poller.poll();\n *\n * // We can try to cancel the request here, by calling:\n * //\n * //     await poller.cancelOperation();\n * //\n *\n * // Getting the final result:\n * const result = await poller.pollUntilDone();\n * ```\n *\n * The Poller is defined by two types, a type representing the state of the poller, which\n * must include a basic set of properties from `PollOperationState<TResult>`,\n * and a return type defined by `TResult`, which can be anything.\n *\n * The Poller class implements the `PollerLike` interface, which allows poller implementations to avoid having\n * to export the Poller's class directly, and instead only export the already instantiated poller with the PollerLike type.\n *\n * ```ts\n * class Client {\n *   public async makePoller: PollerLike<MyOperationState, MyResult> {\n *     const poller = new MyPoller({});\n *     // It might be preferred to return the poller after the first request is made,\n *     // so that some information can be obtained right away.\n *     await poller.poll();\n *     return poller;\n *   }\n * }\n *\n * const poller: PollerLike<MyOperationState, MyResult> = myClient.makePoller();\n * ```\n *\n * A poller can be created through its constructor, then it can be polled until it's completed.\n * At any point in time, the state of the poller can be obtained without delay through the getOperationState method.\n * At any point in time, the intermediate forms of the result type can be requested without delay.\n * Once the underlying operation is marked as completed, the poller will stop and the final value will be returned.\n *\n * ```ts\n * const poller = myClient.makePoller();\n * const state: MyOperationState = poller.getOperationState();\n *\n * // The intermediate result can be obtained at any time.\n * const result: MyResult | undefined = poller.getResult();\n *\n * // The final result can only be obtained after the poller finishes.\n * const result: MyResult = await poller.pollUntilDone();\n * ```\n *\n */\n// eslint-disable-next-line no-use-before-define\nexport abstract class Poller<TState extends PollOperationState<TResult>, TResult>\n  implements PollerLike<TState, TResult>\n{\n  /** controls whether to throw an error if the operation failed or was canceled. */\n  protected resolveOnUnsuccessful: boolean = false;\n  private stopped: boolean = true;\n  private resolve?: (value: TResult) => void;\n  private reject?: (error: PollerStoppedError | PollerCancelledError | Error) => void;\n  private pollOncePromise?: Promise<void>;\n  private cancelPromise?: Promise<void>;\n  private promise: Promise<TResult>;\n  private pollProgressCallbacks: PollProgressCallback<TState>[] = [];\n\n  /**\n   * The poller's operation is available in full to any of the methods of the Poller class\n   * and any class extending the Poller class.\n   */\n  protected operation: PollOperation<TState, TResult>;\n\n  /**\n   * A poller needs to be initialized by passing in at least the basic properties of the `PollOperation<TState, TResult>`.\n   *\n   * When writing an implementation of a Poller, this implementation needs to deal with the initialization\n   * of any custom state beyond the basic definition of the poller. The basic poller assumes that the poller's\n   * operation has already been defined, at least its basic properties. The code below shows how to approach\n   * the definition of the constructor of a new custom poller.\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor({\n   *     // Anything you might need outside of the basics\n   *   }) {\n   *     let state: MyOperationState = {\n   *       privateProperty: private,\n   *       publicProperty: public,\n   *     };\n   *\n   *     const operation = {\n   *       state,\n   *       update,\n   *       cancel,\n   *       toString\n   *     }\n   *\n   *     // Sending the operation to the parent's constructor.\n   *     super(operation);\n   *\n   *     // You can assign more local properties here.\n   *   }\n   * }\n   * ```\n   *\n   * Inside of this constructor, a new promise is created. This will be used to\n   * tell the user when the poller finishes (see `pollUntilDone()`). The promise's\n   * resolve and reject methods are also used internally to control when to resolve\n   * or reject anyone waiting for the poller to finish.\n   *\n   * The constructor of a custom implementation of a poller is where any serialized version of\n   * a previous poller's operation should be deserialized into the operation sent to the\n   * base constructor. For example:\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor(\n   *     baseOperation: string | undefined\n   *   ) {\n   *     let state: MyOperationState = {};\n   *     if (baseOperation) {\n   *       state = {\n   *         ...JSON.parse(baseOperation).state,\n   *         ...state\n   *       };\n   *     }\n   *     const operation = {\n   *       state,\n   *       // ...\n   *     }\n   *     super(operation);\n   *   }\n   * }\n   * ```\n   *\n   * @param operation - Must contain the basic properties of `PollOperation<State, TResult>`.\n   */\n  constructor(operation: PollOperation<TState, TResult>) {\n    this.operation = operation;\n    this.promise = new Promise<TResult>(\n      (\n        resolve: (result: TResult) => void,\n        reject: (error: PollerStoppedError | PollerCancelledError | Error) => void,\n      ) => {\n        this.resolve = resolve;\n        this.reject = reject;\n      },\n    );\n    // This prevents the UnhandledPromiseRejectionWarning in node.js from being thrown.\n    // The above warning would get thrown if `poller.poll` is called, it returns an error,\n    // and pullUntilDone did not have a .catch or await try/catch on it's return value.\n    this.promise.catch(() => {\n      /* intentionally blank */\n    });\n  }\n\n  /**\n   * Defines how much to wait between each poll request.\n   * This has to be implemented by your custom poller.\n   *\n   * \\@azure/core-util has a simple implementation of a delay function that waits as many milliseconds as specified.\n   * This can be used as follows:\n   *\n   * ```ts\n   * import { delay } from \"@azure/core-util\";\n   *\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   // The other necessary definitions.\n   *\n   *   async delay(): Promise<void> {\n   *     const milliseconds = 1000;\n   *     return delay(milliseconds);\n   *   }\n   * }\n   * ```\n   *\n   */\n  protected abstract delay(): Promise<void>;\n\n  /**\n   * Starts a loop that will break only if the poller is done\n   * or if the poller is stopped.\n   */\n  private async startPolling(pollOptions: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (this.stopped) {\n      this.stopped = false;\n    }\n    while (!this.isStopped() && !this.isDone()) {\n      await this.poll(pollOptions);\n      await this.delay();\n    }\n  }\n\n  /**\n   * pollOnce does one polling, by calling to the update method of the underlying\n   * poll operation to make any relevant change effective.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  private async pollOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.isDone()) {\n      this.operation = await this.operation.update({\n        abortSignal: options.abortSignal,\n        fireProgress: this.fireProgress.bind(this),\n      });\n    }\n    this.processUpdatedState();\n  }\n\n  /**\n   * fireProgress calls the functions passed in via onProgress the method of the poller.\n   *\n   * It loops over all of the callbacks received from onProgress, and executes them, sending them\n   * the current operation state.\n   *\n   * @param state - The current operation state.\n   */\n  private fireProgress(state: TState): void {\n    for (const callback of this.pollProgressCallbacks) {\n      callback(state);\n    }\n  }\n\n  /**\n   * Invokes the underlying operation's cancel method.\n   */\n  private async cancelOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    this.operation = await this.operation.cancel(options);\n  }\n\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public poll(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.pollOncePromise) {\n      this.pollOncePromise = this.pollOnce(options);\n      const clearPollOncePromise = (): void => {\n        this.pollOncePromise = undefined;\n      };\n      this.pollOncePromise.then(clearPollOncePromise, clearPollOncePromise).catch(this.reject);\n    }\n    return this.pollOncePromise;\n  }\n\n  private processUpdatedState(): void {\n    if (this.operation.state.error) {\n      this.stopped = true;\n      if (!this.resolveOnUnsuccessful) {\n        this.reject!(this.operation.state.error);\n        throw this.operation.state.error;\n      }\n    }\n    if (this.operation.state.isCancelled) {\n      this.stopped = true;\n      if (!this.resolveOnUnsuccessful) {\n        const error = new PollerCancelledError(\"Operation was canceled\");\n        this.reject!(error);\n        throw error;\n      }\n    }\n    if (this.isDone() && this.resolve) {\n      // If the poller has finished polling, this means we now have a result.\n      // However, it can be the case that TResult is instantiated to void, so\n      // we are not expecting a result anyway. To assert that we might not\n      // have a result eventually after finishing polling, we cast the result\n      // to TResult.\n      this.resolve(this.getResult() as TResult);\n    }\n  }\n\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  public async pollUntilDone(\n    pollOptions: { abortSignal?: AbortSignalLike } = {},\n  ): Promise<TResult> {\n    if (this.stopped) {\n      this.startPolling(pollOptions).catch(this.reject);\n    }\n    // This is needed because the state could have been updated by\n    // `cancelOperation`, e.g. the operation is canceled or an error occurred.\n    this.processUpdatedState();\n    return this.promise;\n  }\n\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  public onProgress(callback: (state: TState) => void): CancelOnProgress {\n    this.pollProgressCallbacks.push(callback);\n    return (): void => {\n      this.pollProgressCallbacks = this.pollProgressCallbacks.filter((c) => c !== callback);\n    };\n  }\n\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  public isDone(): boolean {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return Boolean(state.isCompleted || state.isCancelled || state.error);\n  }\n\n  /**\n   * Stops the poller from continuing to poll.\n   */\n  public stopPolling(): void {\n    if (!this.stopped) {\n      this.stopped = true;\n      if (this.reject) {\n        this.reject(new PollerStoppedError(\"This poller is already stopped\"));\n      }\n    }\n  }\n\n  /**\n   * Returns true if the poller is stopped.\n   */\n  public isStopped(): boolean {\n    return this.stopped;\n  }\n\n  /**\n   * Attempts to cancel the underlying operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * If it's called again before it finishes, it will throw an error.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public cancelOperation(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.cancelPromise) {\n      this.cancelPromise = this.cancelOnce(options);\n    } else if (options.abortSignal) {\n      throw new Error(\"A cancel request is currently pending\");\n    }\n    return this.cancelPromise;\n  }\n\n  /**\n   * Returns the state of the operation.\n   *\n   * Even though TState will be the same type inside any of the methods of any extension of the Poller class,\n   * implementations of the pollers can customize what's shared with the public by writing their own\n   * version of the `getOperationState` method, and by defining two types, one representing the internal state of the poller\n   * and a public type representing a safe to share subset of the properties of the internal state.\n   * Their definition of getOperationState can then return their public type.\n   *\n   * Example:\n   *\n   * ```ts\n   * // Let's say we have our poller's operation state defined as:\n   * interface MyOperationState extends PollOperationState<ResultType> {\n   *   privateProperty?: string;\n   *   publicProperty?: string;\n   * }\n   *\n   * // To allow us to have a true separation of public and private state, we have to define another interface:\n   * interface PublicState extends PollOperationState<ResultType> {\n   *   publicProperty?: string;\n   * }\n   *\n   * // Then, we define our Poller as follows:\n   * export class MyPoller extends Poller<MyOperationState, ResultType> {\n   *   // ... More content is needed here ...\n   *\n   *   public getOperationState(): PublicState {\n   *     const state: PublicState = this.operation.state;\n   *     return {\n   *       // Properties from PollOperationState<TResult>\n   *       isStarted: state.isStarted,\n   *       isCompleted: state.isCompleted,\n   *       isCancelled: state.isCancelled,\n   *       error: state.error,\n   *       result: state.result,\n   *\n   *       // The only other property needed by PublicState.\n   *       publicProperty: state.publicProperty\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * You can see this in the tests of this repository, go to the file:\n   * `../test/utils/testPoller.ts`\n   * and look for the getOperationState implementation.\n   */\n  public getOperationState(): TState {\n    return this.operation.state;\n  }\n\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  public getResult(): TResult | undefined {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return state.result;\n  }\n\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  public toString(): string {\n    return this.operation.toString();\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { delay } from \"@azure/core-util\";\nimport type { PollOperation, PollOperationState } from \"@azure/core-lro\";\nimport { Poller } from \"@azure/core-lro\";\nimport type {\n  BlobClient,\n  BlobStartCopyFromURLOptions,\n  BlobBeginCopyFromURLResponse,\n} from \"../Clients\";\n\n/**\n * Defines the operations from a {@link BlobClient} that are needed for the poller\n * returned by {@link BlobClient.beginCopyFromURL} to work.\n */\nexport type CopyPollerBlobClient = Pick<BlobClient, \"abortCopyFromURL\" | \"getProperties\"> & {\n  startCopyFromURL(\n    copySource: string,\n    options?: BlobStartCopyFromURLOptions,\n  ): Promise<BlobBeginCopyFromURLResponse>;\n};\n\n/**\n * The state used by the poller returned from {@link BlobClient.beginCopyFromURL}.\n *\n * This state is passed into the user-specified `onProgress` callback\n * whenever copy progress is detected.\n */\nexport interface BlobBeginCopyFromUrlPollState\n  extends PollOperationState<BlobBeginCopyFromURLResponse> {\n  /**\n   * The instance of {@link BlobClient} that was used when calling {@link BlobClient.beginCopyFromURL}.\n   */\n  readonly blobClient: CopyPollerBlobClient;\n  /**\n   * The copyId that identifies the in-progress blob copy.\n   */\n  copyId?: string;\n  /**\n   * the progress of the blob copy as reported by the service.\n   */\n  copyProgress?: string;\n  /**\n   * The source URL provided in {@link BlobClient.beginCopyFromURL}.\n   */\n  copySource: string;\n  /**\n   * The options that were passed to the initial {@link BlobClient.beginCopyFromURL} call.\n   * This is exposed for the poller and should not be modified directly.\n   */\n  readonly startCopyFromURLOptions?: BlobStartCopyFromURLOptions;\n}\n\n/**\n * The PollOperation responsible for:\n *  - performing the initial startCopyFromURL\n *  - checking the copy status via getProperties\n *  - cancellation via abortCopyFromURL\n * @hidden\n */\nexport interface BlobBeginCopyFromURLPollOperation\n  extends PollOperation<BlobBeginCopyFromUrlPollState, BlobBeginCopyFromURLResponse> {}\n\n/**\n * The set of options used to configure the poller.\n * This is an internal interface populated by {@link BlobClient.beginCopyFromURL}.\n *\n * @hidden\n */\nexport interface BlobBeginCopyFromUrlPollerOptions {\n  blobClient: CopyPollerBlobClient;\n  copySource: string;\n  intervalInMs?: number;\n  onProgress?: (state: BlobBeginCopyFromUrlPollState) => void;\n  resumeFrom?: string;\n  startCopyFromURLOptions?: BlobStartCopyFromURLOptions;\n}\n\n/**\n * This is the poller returned by {@link BlobClient.beginCopyFromURL}.\n * This can not be instantiated directly outside of this package.\n *\n * @hidden\n */\nexport class BlobBeginCopyFromUrlPoller extends Poller<\n  BlobBeginCopyFromUrlPollState,\n  BlobBeginCopyFromURLResponse\n> {\n  public intervalInMs: number;\n\n  constructor(options: BlobBeginCopyFromUrlPollerOptions) {\n    const {\n      blobClient,\n      copySource,\n      intervalInMs = 15000,\n      onProgress,\n      resumeFrom,\n      startCopyFromURLOptions,\n    } = options;\n\n    let state: BlobBeginCopyFromUrlPollState | undefined;\n\n    if (resumeFrom) {\n      state = JSON.parse(resumeFrom).state;\n    }\n\n    const operation = makeBlobBeginCopyFromURLPollOperation({\n      ...state,\n      blobClient,\n      copySource,\n      startCopyFromURLOptions,\n    });\n\n    super(operation);\n\n    if (typeof onProgress === \"function\") {\n      this.onProgress(onProgress);\n    }\n\n    this.intervalInMs = intervalInMs;\n  }\n\n  public delay(): Promise<void> {\n    return delay(this.intervalInMs);\n  }\n}\n\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @hidden\n */\nconst cancel: BlobBeginCopyFromURLPollOperation[\"cancel\"] = async function cancel(\n  this: BlobBeginCopyFromURLPollOperation,\n  options = {},\n) {\n  const state = this.state;\n  const { copyId } = state;\n  if (state.isCompleted) {\n    return makeBlobBeginCopyFromURLPollOperation(state);\n  }\n\n  if (!copyId) {\n    state.isCancelled = true;\n    return makeBlobBeginCopyFromURLPollOperation(state);\n  }\n\n  // if abortCopyFromURL throws, it will bubble up to user's poller.cancelOperation call\n  await state.blobClient.abortCopyFromURL(copyId, {\n    abortSignal: options.abortSignal,\n  });\n  state.isCancelled = true;\n\n  return makeBlobBeginCopyFromURLPollOperation(state);\n};\n\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @hidden\n */\nconst update: BlobBeginCopyFromURLPollOperation[\"update\"] = async function update(\n  this: BlobBeginCopyFromURLPollOperation,\n  options = {},\n): Promise<BlobBeginCopyFromURLPollOperation> {\n  const state = this.state;\n  const { blobClient, copySource, startCopyFromURLOptions } = state;\n\n  if (!state.isStarted) {\n    state.isStarted = true;\n    const result = await blobClient.startCopyFromURL(copySource, startCopyFromURLOptions);\n\n    // copyId is needed to abort\n    state.copyId = result.copyId;\n    if (result.copyStatus === \"success\") {\n      state.result = result;\n      state.isCompleted = true;\n    }\n  } else if (!state.isCompleted) {\n    try {\n      const result = await state.blobClient.getProperties({ abortSignal: options.abortSignal });\n      const { copyStatus, copyProgress } = result;\n      const prevCopyProgress = state.copyProgress;\n      if (copyProgress) {\n        state.copyProgress = copyProgress;\n      }\n      if (\n        copyStatus === \"pending\" &&\n        copyProgress !== prevCopyProgress &&\n        typeof options.fireProgress === \"function\"\n      ) {\n        // trigger in setTimeout, or swallow error?\n        options.fireProgress(state);\n      } else if (copyStatus === \"success\") {\n        state.result = result;\n        state.isCompleted = true;\n      } else if (copyStatus === \"failed\") {\n        state.error = new Error(\n          `Blob copy failed with reason: \"${result.copyStatusDescription || \"unknown\"}\"`,\n        );\n        state.isCompleted = true;\n      }\n    } catch (err: any) {\n      state.error = err;\n      state.isCompleted = true;\n    }\n  }\n\n  return makeBlobBeginCopyFromURLPollOperation(state);\n};\n\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @hidden\n */\nconst toString: BlobBeginCopyFromURLPollOperation[\"toString\"] = function toString(\n  this: BlobBeginCopyFromURLPollOperation,\n) {\n  return JSON.stringify({ state: this.state }, (key, value) => {\n    // remove blobClient from serialized state since a client can't be hydrated from this info.\n    if (key === \"blobClient\") {\n      return undefined;\n    }\n    return value;\n  });\n};\n\n/**\n * Creates a poll operation given the provided state.\n * @hidden\n */\nfunction makeBlobBeginCopyFromURLPollOperation(\n  state: BlobBeginCopyFromUrlPollState,\n): BlobBeginCopyFromURLPollOperation {\n  return {\n    state: { ...state },\n    cancel,\n    toString,\n    update,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Range for Blob Service Operations.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-the-range-header-for-blob-service-operations\n */\nexport interface Range {\n  /**\n   * StartByte, larger than or equal 0.\n   */\n  offset: number;\n  /**\n   * Optional. Count of bytes, larger than 0.\n   * If not provided, will return bytes from offset to the end.\n   */\n  count?: number;\n}\n\n/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @param iRange -\n */\nexport function rangeToString(iRange: Range): string {\n  if (iRange.offset < 0) {\n    throw new RangeError(`Range.offset cannot be smaller than 0.`);\n  }\n  if (iRange.count && iRange.count <= 0) {\n    throw new RangeError(\n      `Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.`,\n    );\n  }\n  return iRange.count\n    ? `bytes=${iRange.offset}-${iRange.offset + iRange.count - 1}`\n    : `bytes=${iRange.offset}-`;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// In browser, during webpack or browserify bundling, this module will be replaced by 'events'\n// https://github.com/Gozala/events\nimport { EventEmitter } from \"events\";\n\n/**\n * Operation is an async function to be executed and managed by Batch.\n */\nexport declare type Operation = () => Promise<any>;\n\n/**\n * States for Batch.\n */\nenum BatchStates {\n  Good,\n  Error,\n}\n\n/**\n * Batch provides basic parallel execution with concurrency limits.\n * Will stop execute left operations when one of the executed operation throws an error.\n * But Batch cannot cancel ongoing operations, you need to cancel them by yourself.\n */\nexport class Batch {\n  /**\n   * Concurrency. Must be lager than 0.\n   */\n  private concurrency: number;\n\n  /**\n   * Number of active operations under execution.\n   */\n  private actives: number = 0;\n\n  /**\n   * Number of completed operations under execution.\n   */\n  private completed: number = 0;\n\n  /**\n   * Offset of next operation to be executed.\n   */\n  private offset: number = 0;\n\n  /**\n   * Operation array to be executed.\n   */\n  private operations: Operation[] = [];\n\n  /**\n   * States of Batch. When an error happens, state will turn into error.\n   * Batch will stop execute left operations.\n   */\n  private state: BatchStates = BatchStates.Good;\n\n  /**\n   * A private emitter used to pass events inside this class.\n   */\n  private emitter: EventEmitter;\n\n  /**\n   * Creates an instance of Batch.\n   * @param concurrency -\n   */\n  public constructor(concurrency: number = 5) {\n    if (concurrency < 1) {\n      throw new RangeError(\"concurrency must be larger than 0\");\n    }\n    this.concurrency = concurrency;\n    this.emitter = new EventEmitter();\n  }\n\n  /**\n   * Add a operation into queue.\n   *\n   * @param operation -\n   */\n  public addOperation(operation: Operation): void {\n    this.operations.push(async () => {\n      try {\n        this.actives++;\n        await operation();\n        this.actives--;\n        this.completed++;\n        this.parallelExecute();\n      } catch (error: any) {\n        this.emitter.emit(\"error\", error);\n      }\n    });\n  }\n\n  /**\n   * Start execute operations in the queue.\n   *\n   */\n  public async do(): Promise<void> {\n    if (this.operations.length === 0) {\n      return Promise.resolve();\n    }\n\n    this.parallelExecute();\n\n    return new Promise<void>((resolve, reject) => {\n      this.emitter.on(\"finish\", resolve);\n\n      this.emitter.on(\"error\", (error) => {\n        this.state = BatchStates.Error;\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Get next operation to be executed. Return null when reaching ends.\n   *\n   */\n  private nextOperation(): Operation | null {\n    if (this.offset < this.operations.length) {\n      return this.operations[this.offset++];\n    }\n    return null;\n  }\n\n  /**\n   * Start execute operations. One one the most important difference between\n   * this method with do() is that do() wraps as an sync method.\n   *\n   */\n  private parallelExecute(): void {\n    if (this.state === BatchStates.Error) {\n      return;\n    }\n\n    if (this.completed >= this.operations.length) {\n      this.emitter.emit(\"finish\");\n      return;\n    }\n\n    while (this.actives < this.concurrency) {\n      const operation = this.nextOperation();\n      if (operation) {\n        operation();\n      } else {\n        return;\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// This file is used as a shim of \"BufferScheduler\" for some browser bundlers\n// when trying to bundle \"BufferScheduler\"\n// \"BufferScheduler\" class is only available in Node.js runtime\nexport class BufferScheduler {}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type {\n  RequestBodyType as HttpRequestBody,\n  TransferProgressEvent,\n} from \"@azure/core-rest-pipeline\";\nimport { getDefaultProxySettings } from \"@azure/core-rest-pipeline\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport { isNode } from \"@azure/core-util\";\nimport type { PollOperationState } from \"@azure/core-lro\";\nimport { randomUUID } from \"@azure/core-util\";\nimport type { Readable } from \"stream\";\n\nimport { BlobDownloadResponse } from \"./BlobDownloadResponse\";\nimport { BlobQueryResponse } from \"./BlobQueryResponse\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport type {\n  AppendBlob,\n  Blob as StorageBlob,\n  BlockBlob,\n  PageBlob,\n} from \"./generated/src/operationsInterfaces\";\nimport type {\n  AppendBlobAppendBlockFromUrlHeaders,\n  AppendBlobAppendBlockHeaders,\n  AppendBlobCreateHeaders,\n  AppendBlobSealHeaders,\n  BlobAbortCopyFromURLHeaders,\n  BlobCopyFromURLHeaders,\n  BlobCreateSnapshotHeaders,\n  BlobDeleteHeaders,\n  BlobDeleteImmutabilityPolicyHeaders,\n  BlobGetAccountInfoHeaders,\n  BlobGetPropertiesResponse as BlobGetPropertiesResponseInternal,\n  BlobGetTagsResponse as BlobGetTagsResponseInternal,\n  BlobSetHttpHeadersHeaders,\n  BlobSetImmutabilityPolicyHeaders,\n  BlobSetLegalHoldHeaders,\n  BlobSetMetadataHeaders,\n  BlobSetTagsHeaders,\n  BlobSetTierHeaders,\n  BlobStartCopyFromURLHeaders,\n  BlobUndeleteHeaders,\n  BlockBlobCommitBlockListHeaders,\n  BlockBlobPutBlobFromUrlHeaders,\n  BlockBlobStageBlockFromURLHeaders,\n  BlockBlobStageBlockHeaders,\n  PageBlobClearPagesHeaders,\n  PageBlobCopyIncrementalHeaders,\n  PageBlobCreateHeaders,\n  PageBlobResizeHeaders,\n  PageBlobUpdateSequenceNumberHeaders,\n  PageBlobUploadPagesFromURLHeaders,\n  PageBlobUploadPagesHeaders,\n} from \"./generated/src\";\nimport type {\n  AppendBlobAppendBlockFromUrlResponse,\n  AppendBlobAppendBlockResponse,\n  AppendBlobCreateResponse,\n  BlobAbortCopyFromURLResponse,\n  BlobCopyFromURLResponse,\n  BlobCreateSnapshotResponse,\n  BlobDeleteResponse,\n  BlobDownloadOptionalParams,\n  BlobDownloadResponseModel,\n  BlobGetAccountInfoResponse,\n  BlobGetPropertiesResponseModel,\n  BlobGetTagsHeaders,\n  BlobSetHTTPHeadersResponse,\n  BlobSetTagsResponse,\n  BlobSetTierResponse,\n  BlobStartCopyFromURLResponse,\n  BlobTags,\n  BlobUndeleteResponse,\n  BlockBlobCommitBlockListResponse,\n  BlockBlobGetBlockListResponse,\n  BlockBlobStageBlockFromURLResponse,\n  BlockBlobStageBlockResponse,\n  BlockBlobUploadHeaders,\n  BlockBlobUploadResponse,\n  BlockListType,\n  CpkInfo,\n  DeleteSnapshotsOptionType,\n  LeaseAccessConditions,\n  PageBlobClearPagesResponse,\n  PageBlobCopyIncrementalResponse,\n  PageBlobCreateResponse,\n  PageBlobResizeResponse,\n  PageBlobUpdateSequenceNumberResponse,\n  PageBlobUploadPagesFromURLResponse,\n  PageBlobUploadPagesResponse,\n  RehydratePriority,\n  SequenceNumberActionType,\n  BlockBlobPutBlobFromUrlResponse,\n  BlobHTTPHeaders,\n  PageBlobGetPageRangesResponseModel,\n  PageRangeInfo,\n  PageBlobGetPageRangesDiffResponseModel,\n  BlobCopySourceTags,\n  BlobDownloadResponseInternal,\n  BlobDownloadHeaders,\n  BlobGetPropertiesHeaders,\n  BlobQueryResponseInternal,\n  BlobQueryHeaders,\n  BlockBlobGetBlockListHeaders,\n  BlockBlobGetBlockListResponseInternal,\n  PageBlobGetPageRangesResponseInternal,\n  PageBlobGetPageRangesHeaders,\n  PageListInternal,\n  PageBlobGetPageRangesDiffResponseInternal,\n  PageBlobGetPageRangesDiffHeaders,\n  BlobDeleteImmutabilityPolicyResponse,\n  BlobSetImmutabilityPolicyResponse,\n  BlobSetLegalHoldResponse,\n  BlobSetMetadataResponse,\n} from \"./generatedModels\";\nimport type {\n  AppendBlobRequestConditions,\n  BlobDownloadResponseParsed,\n  BlobRequestConditions,\n  BlockBlobTier,\n  Metadata,\n  ObjectReplicationPolicy,\n  PageBlobRequestConditions,\n  PremiumPageBlobTier,\n  Tags,\n  TagConditions,\n  MatchConditions,\n  ModificationConditions,\n  ModifiedAccessConditions,\n  BlobQueryArrowField,\n  BlobImmutabilityPolicy,\n  HttpAuthorization,\n  PollerLikeWithCancellation,\n} from \"./models\";\nimport { ensureCpkIfSpecified, toAccessTier } from \"./models\";\nimport type {\n  PageBlobGetPageRangesDiffResponse,\n  PageBlobGetPageRangesResponse,\n} from \"./PageBlobRangeResponse\";\nimport { rangeResponseFromModel } from \"./PageBlobRangeResponse\";\nimport type { PipelineLike, StoragePipelineOptions } from \"./Pipeline\";\nimport { newPipeline, isPipelineLike } from \"./Pipeline\";\nimport type {\n  BlobBeginCopyFromUrlPollState,\n  CopyPollerBlobClient,\n} from \"./pollers/BlobStartCopyFromUrlPoller\";\nimport { BlobBeginCopyFromUrlPoller } from \"./pollers/BlobStartCopyFromUrlPoller\";\nimport type { Range } from \"./Range\";\nimport { rangeToString } from \"./Range\";\nimport type { CommonOptions } from \"./StorageClient\";\nimport { StorageClient } from \"./StorageClient\";\nimport { Batch } from \"./utils/Batch\";\nimport { BufferScheduler } from \"../../storage-common/src\";\nimport {\n  BlobDoesNotUseCustomerSpecifiedEncryption,\n  BlobUsesCustomerSpecifiedEncryptionMsg,\n  BLOCK_BLOB_MAX_BLOCKS,\n  BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES,\n  BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES,\n  DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES,\n  DEFAULT_BLOCK_BUFFER_SIZE_BYTES,\n  DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS,\n  ETagAny,\n  URLConstants,\n} from \"./utils/constants\";\nimport { tracingClient } from \"./utils/tracing\";\nimport type { WithResponse } from \"./utils/utils.common\";\nimport {\n  appendToURLPath,\n  appendToURLQuery,\n  assertResponse,\n  extractConnectionStringParts,\n  ExtractPageRangeInfoItems,\n  generateBlockID,\n  getURLParameter,\n  httpAuthorizationToString,\n  isIpEndpointStyle,\n  parseObjectReplicationRecord,\n  setURLParameter,\n  toBlobTags,\n  toBlobTagsString,\n  toQuerySerialization,\n  toTags,\n} from \"./utils/utils.common\";\nimport {\n  fsCreateReadStream,\n  fsStat,\n  readStreamToLocalFile,\n  streamToBuffer,\n} from \"./utils/utils.node\";\nimport type { SASProtocol } from \"./sas/SASQueryParameters\";\nimport type { SasIPRange } from \"./sas/SasIPRange\";\nimport {\n  generateBlobSASQueryParameters,\n  generateBlobSASQueryParametersInternal,\n} from \"./sas/BlobSASSignatureValues\";\nimport type { BlobSASPermissions } from \"./sas/BlobSASPermissions\";\nimport { BlobLeaseClient } from \"./BlobLeaseClient\";\nimport type { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport type { UserDelegationKey } from \"./BlobServiceClient\";\n\n/**\n * Options to configure the {@link BlobClient.beginCopyFromURL} operation.\n */\nexport interface BlobBeginCopyFromURLOptions extends BlobStartCopyFromURLOptions {\n  /**\n   * The amount of time in milliseconds the poller should wait between\n   * calls to the service to determine the status of the Blob copy.\n   * Defaults to 15 seconds.\n   */\n  intervalInMs?: number;\n  /**\n   * Callback to receive the state of the copy progress.\n   */\n  onProgress?: (state: BlobBeginCopyFromUrlPollState) => void;\n  /**\n   * Serialized poller state that can be used to resume polling from.\n   * This may be useful when starting a copy on one process or thread\n   * and you wish to continue polling on another process or thread.\n   *\n   * To get serialized poller state, call `poller.toString()` on an existing\n   * poller.\n   */\n  resumeFrom?: string;\n}\n\n/**\n * Contains response data for the {@link BlobClient.beginCopyFromURL} operation.\n */\nexport interface BlobBeginCopyFromURLResponse extends BlobStartCopyFromURLResponse {}\n\n/**\n * Options to configure the {@link BlobClient.download} operation.\n */\nexport interface BlobDownloadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * An opaque DateTime string value that, when present, specifies the blob snapshot to retrieve.\n   */\n  snapshot?: string;\n  /**\n   * When this is set to true and download range of blob, the service returns the MD5 hash for the range,\n   * as long as the range is less than or equal to 4 MB in size.\n   *\n   * rangeGetContentCrc64 and rangeGetContentMD5 cannot be set at same time.\n   */\n  rangeGetContentMD5?: boolean;\n  /**\n   * When this is set to true and download range of blob, the service returns the CRC64 hash for the range,\n   * as long as the range is less than or equal to 4 MB in size.\n   *\n   * rangeGetContentCrc64 and rangeGetContentMD5 cannot be set at same time.\n   */\n  rangeGetContentCrc64?: boolean;\n  /**\n   * Conditions to meet when downloading blobs.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Call back to receive events on the progress of download operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original body download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional `FileClient.download()` request will be made\n   * from the broken point, until the requested range has been successfully downloaded or maxRetryRequests is reached.\n   *\n   * Default value is 5, please set a larger value when loading large files in poor network.\n   */\n  maxRetryRequests?: number;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.exists} operation.\n */\nexport interface BlobExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Conditions to meet.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.getProperties} operation.\n */\nexport interface BlobGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting blob properties.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.delete} operation.\n */\nexport interface BlobDeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when deleting blobs.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Specifies options to delete blobs that have associated snapshots.\n   * - `include`: Delete the base blob and all of its snapshots.\n   * - `only`: Delete only the blob's snapshots and not the blob itself.\n   */\n  deleteSnapshots?: DeleteSnapshotsOptionType;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.undelete} operation.\n */\nexport interface BlobUndeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.setHTTPHeaders} operation.\n */\nexport interface BlobSetHTTPHeadersOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when setting blob HTTP headers.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.setMetadata} operation.\n */\nexport interface BlobSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when setting blob metadata.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link BlobClient.setTags} operation.\n */\nexport interface BlobSetTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet for the blob to perform this operation.\n   */\n  conditions?: TagConditions & LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.getTags} operation.\n */\nexport interface BlobGetTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet for the blob to perform this operation.\n   */\n  conditions?: TagConditions & LeaseAccessConditions;\n}\n\n/**\n * Contains response data for the {@link BlobClient.getTags} operation.\n */\nexport type BlobGetTagsResponse = WithResponse<\n  { tags: Tags } & BlobGetTagsHeaders,\n  BlobGetTagsHeaders,\n  BlobTags\n>;\n\n/**\n * Options to configure Blob - Acquire Lease operation.\n */\nexport interface BlobAcquireLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when acquiring the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Release Lease operation.\n */\nexport interface BlobReleaseLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when releasing the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Renew Lease operation.\n */\nexport interface BlobRenewLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when renewing the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Change Lease operation.\n */\nexport interface BlobChangeLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when changing the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Break Lease operation.\n */\nexport interface BlobBreakLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when breaking the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.createSnapshot} operation.\n */\nexport interface BlobCreateSnapshotOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the snapshot.\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet when creating blob snapshots.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link BlobClient.beginCopyFromURL} operation.\n */\nexport interface BlobStartCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the blob that are being copied.\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet for the destination blob when copying from a URL to the blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: ModifiedAccessConditions;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | PremiumPageBlobTier | string;\n  /**\n   * Rehydrate Priority - possible values include 'High', 'Standard'.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-rehydration#rehydrate-an-archived-blob-to-an-online-tier\n   */\n  rehydratePriority?: RehydratePriority;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n  /**\n   * Overrides the sealed state of the destination blob. Default true.\n   */\n  sealBlob?: boolean;\n}\n\n/**\n * Options to configure the {@link BlobClient.abortCopyFromURL} operation.\n */\nexport interface BlobAbortCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.syncCopyFromURL} operation.\n */\nexport interface BlobSyncCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the snapshot.\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet for the destination blob when copying from a URL to the blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: MatchConditions & ModificationConditions;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | PremiumPageBlobTier | string;\n  /**\n   * Specify the md5 calculated for the range of bytes that must be read from the copy source.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Default 'REPLACE'.  Indicates if source tags should be copied or replaced with the tags specified by {@link tags}.\n   */\n  copySourceTags?: BlobCopySourceTags;\n}\n\n/**\n * Options to configure the {@link BlobClient.setAccessTier} operation.\n */\nexport interface BlobSetTierOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions & TagConditions;\n  /**\n   * Rehydrate Priority - possible values include 'High', 'Standard'.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-rehydration#rehydrate-an-archived-blob-to-an-online-tier\n   */\n  rehydratePriority?: RehydratePriority;\n}\n\n/**\n * Option interface for the {@link BlobClient.downloadToBuffer} operation.\n */\nexport interface BlobDownloadToBufferOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * blockSize is the data every request trying to download.\n   * Must be greater than or equal to 0.\n   * If set to 0 or undefined, blockSize will automatically calculated according to the blob size.\n   */\n  blockSize?: number;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original block download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional FileClient.download() request will be made\n   * from the broken point, until the requested block has been successfully downloaded or\n   * maxRetryRequestsPerBlock is reached.\n   *\n   * Default value is 5, please set a larger value when in poor network.\n   */\n  maxRetryRequestsPerBlock?: number;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Access conditions headers.\n   */\n  conditions?: BlobRequestConditions;\n\n  /**\n   * Concurrency of parallel download.\n   */\n  concurrency?: number;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Contains response data for the {@link BlobClient.deleteIfExists} operation.\n */\nexport interface BlobDeleteIfExistsResponse extends BlobDeleteResponse {\n  /**\n   * Indicate whether the blob is successfully deleted. Is false if the blob does not exist in the first place.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Contains response data for the {@link BlobClient.getProperties} operation.\n */\nexport interface BlobGetPropertiesResponse extends BlobGetPropertiesResponseModel {\n  /**\n   * Parsed Object Replication Policy Id, Rule Id(s) and status of the source blob.\n   */\n  objectReplicationSourceProperties?: ObjectReplicationPolicy[];\n\n  /**\n   * Object Replication Policy Id of the destination blob.\n   */\n  objectReplicationDestinationPolicyId?: string;\n}\n\n/**\n * Common options of {@link BlobGenerateSasUrlOptions} and {@link ContainerGenerateSasUrlOptions}.\n */\nexport interface CommonGenerateSasUrlOptions {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   */\n  expiresOn?: Date;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * Optional. The name of the access policy on the container this SAS references if any.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   */\n  contentType?: string;\n}\n\n/**\n * Options to configure {@link BlobClient.generateSasUrl} operation.\n */\nexport interface BlobGenerateSasUrlOptions extends CommonGenerateSasUrlOptions {\n  /**\n   * Optional only when identifier is provided. Specifies the list of permissions to be associated with the SAS.\n   */\n  permissions?: BlobSASPermissions;\n}\n\n/**\n * Options for deleting immutability policy {@link BlobClient.deleteImmutabilityPolicy} operation.\n */\nexport interface BlobDeleteImmutabilityPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options for setting immutability policy {@link BlobClient.setImmutabilityPolicy} operation.\n */\nexport interface BlobSetImmutabilityPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  modifiedAccessCondition?: ModificationConditions;\n}\n\n/**\n * Options for setting legal hold {@link BlobClient.setLegalHold} operation.\n */\nexport interface BlobSetLegalHoldOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobClient.getAccountInfo} operation.\n */\nexport interface BlobGetAccountInfoOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * A BlobClient represents a URL to an Azure Storage blob; the blob may be a block blob,\n * append blob, or page blob.\n */\nexport class BlobClient extends StorageClient {\n  /**\n   * blobContext provided by protocol layer.\n   */\n  private blobContext: StorageBlob;\n\n  private _name: string;\n  private _containerName: string;\n\n  private _versionId?: string;\n  private _snapshot?: string;\n\n  /**\n   * The name of the blob.\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * The name of the storage container the blob is associated with.\n   */\n  public get containerName(): string {\n    return this._containerName;\n  }\n\n  /**\n   *\n   * Creates an instance of BlobClient from connection string.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of BlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of BlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob\".\n   *                     You can append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    options = options || {};\n    let pipeline: PipelineLike;\n    let url: string;\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      if (blobNameOrOptions && typeof blobNameOrOptions !== \"string\") {\n        options = blobNameOrOptions as StoragePipelineOptions;\n      }\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey,\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\",\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n\n    super(url, pipeline);\n    ({ blobName: this._name, containerName: this._containerName } =\n      this.getBlobAndContainerNamesFromUrl());\n    this.blobContext = this.storageClientContext.blob;\n\n    this._snapshot = getURLParameter(this.url, URLConstants.Parameters.SNAPSHOT) as string;\n    this._versionId = getURLParameter(this.url, URLConstants.Parameters.VERSIONID) as string;\n  }\n\n  /**\n   * Creates a new BlobClient object identical to the source but with the specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new BlobClient object identical to the source but with the specified snapshot timestamp\n   */\n  public withSnapshot(snapshot: string): BlobClient {\n    return new BlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot,\n      ),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * Creates a new BlobClient object pointing to a version of this blob.\n   * Provide \"\" will remove the versionId and return a Client to the base blob.\n   *\n   * @param versionId - The versionId.\n   * @returns A new BlobClient object pointing to the version of this blob.\n   */\n  public withVersion(versionId: string): BlobClient {\n    return new BlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.VERSIONID,\n        versionId.length === 0 ? undefined : versionId,\n      ),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * Creates a AppendBlobClient object.\n   *\n   */\n  public getAppendBlobClient(): AppendBlobClient {\n    return new AppendBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Creates a BlockBlobClient object.\n   *\n   */\n  public getBlockBlobClient(): BlockBlobClient {\n    return new BlockBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Creates a PageBlobClient object.\n   *\n   */\n  public getPageBlobClient(): PageBlobClient {\n    return new PageBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Reads or downloads a blob from the system, including its metadata and properties.\n   * You can also call Get Blob to read a snapshot.\n   *\n   * * In Node.js, data returns in a Readable stream readableStreamBody\n   * * In browsers, data returns in a promise blobBody\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob\n   *\n   * @param offset - From which position of the blob to download, greater than or equal to 0\n   * @param count - How much data to be downloaded, greater than 0. Will download to the end when undefined\n   * @param options - Optional options to Blob Download operation.\n   *\n   *\n   * Example usage (Node.js):\n   *\n   * ```js\n   * // Download and convert a blob to a string\n   * const downloadBlockBlobResponse = await blobClient.download();\n   * const downloaded = await streamToBuffer(downloadBlockBlobResponse.readableStreamBody);\n   * console.log(\"Downloaded blob content:\", downloaded.toString());\n   *\n   * async function streamToBuffer(readableStream) {\n   * return new Promise((resolve, reject) => {\n   * const chunks = [];\n   * readableStream.on(\"data\", (data) => {\n   * chunks.push(data instanceof Buffer ? data : Buffer.from(data));\n   * });\n   * readableStream.on(\"end\", () => {\n   * resolve(Buffer.concat(chunks));\n   * });\n   * readableStream.on(\"error\", reject);\n   * });\n   * }\n   * ```\n   *\n   * Example usage (browser):\n   *\n   * ```js\n   * // Download and convert a blob to a string\n   * const downloadBlockBlobResponse = await blobClient.download();\n   * const downloaded = await blobToString(await downloadBlockBlobResponse.blobBody);\n   * console.log(\n   *   \"Downloaded blob content\",\n   *   downloaded\n   * );\n   *\n   * async function blobToString(blob: Blob): Promise<string> {\n   *   const fileReader = new FileReader();\n   *   return new Promise<string>((resolve, reject) => {\n   *     fileReader.onloadend = (ev: any) => {\n   *       resolve(ev.target!.result);\n   *     };\n   *     fileReader.onerror = reject;\n   *     fileReader.readAsText(blob);\n   *   });\n   * }\n   * ```\n   */\n  public async download(\n    offset: number = 0,\n    count?: number,\n    options: BlobDownloadOptions = {},\n  ): Promise<BlobDownloadResponseParsed> {\n    options.conditions = options.conditions || {};\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n\n    return tracingClient.withSpan(\"BlobClient-download\", options, async (updatedOptions) => {\n      const res = assertResponse<BlobDownloadResponseInternal, BlobDownloadHeaders>(\n        await this.blobContext.download({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          requestOptions: {\n            onDownloadProgress: isNode ? undefined : options.onProgress, // for Node.js, progress is reported by RetriableReadableStream\n          },\n          range: offset === 0 && !count ? undefined : rangeToString({ offset, count }),\n          rangeGetContentMD5: options.rangeGetContentMD5,\n          rangeGetContentCRC64: options.rangeGetContentCrc64,\n          snapshot: options.snapshot,\n          cpkInfo: options.customerProvidedKey,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n\n      const wrappedRes: BlobDownloadResponseParsed = {\n        ...res,\n        _response: res._response, // _response is made non-enumerable\n        objectReplicationDestinationPolicyId: res.objectReplicationPolicyId,\n        objectReplicationSourceProperties: parseObjectReplicationRecord(res.objectReplicationRules),\n      };\n      // Return browser response immediately\n      if (!isNode) {\n        return wrappedRes;\n      }\n\n      // We support retrying when download stream unexpected ends in Node.js runtime\n      // Following code shouldn't be bundled into browser build, however some\n      // bundlers may try to bundle following code and \"FileReadResponse.ts\".\n      // In this case, \"FileDownloadResponse.browser.ts\" will be used as a shim of \"FileDownloadResponse.ts\"\n      // The config is in package.json \"browser\" field\n      if (options.maxRetryRequests === undefined || options.maxRetryRequests < 0) {\n        // TODO: Default value or make it a required parameter?\n        options.maxRetryRequests = DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS;\n      }\n\n      if (res.contentLength === undefined) {\n        throw new RangeError(`File download response doesn't contain valid content length header`);\n      }\n\n      if (!res.etag) {\n        throw new RangeError(`File download response doesn't contain valid etag header`);\n      }\n\n      return new BlobDownloadResponse(\n        wrappedRes,\n        async (start: number): Promise<NodeJS.ReadableStream> => {\n          const updatedDownloadOptions: BlobDownloadOptionalParams = {\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ifMatch: options.conditions!.ifMatch || res.etag,\n              ifModifiedSince: options.conditions!.ifModifiedSince,\n              ifNoneMatch: options.conditions!.ifNoneMatch,\n              ifUnmodifiedSince: options.conditions!.ifUnmodifiedSince,\n              ifTags: options.conditions?.tagConditions,\n            },\n            range: rangeToString({\n              count: offset + res.contentLength! - start,\n              offset: start,\n            }),\n            rangeGetContentMD5: options.rangeGetContentMD5,\n            rangeGetContentCRC64: options.rangeGetContentCrc64,\n            snapshot: options.snapshot,\n            cpkInfo: options.customerProvidedKey,\n          };\n\n          // Debug purpose only\n          // console.log(\n          //   `Read from internal stream, range: ${\n          //     updatedOptions.range\n          //   }, options: ${JSON.stringify(updatedOptions)}`\n          // );\n\n          return (\n            await this.blobContext.download({\n              abortSignal: options.abortSignal,\n              ...updatedDownloadOptions,\n            })\n          ).readableStreamBody!;\n        },\n        offset,\n        res.contentLength!,\n        {\n          maxRetryRequests: options.maxRetryRequests,\n          onProgress: options.onProgress,\n        },\n      );\n    });\n  }\n\n  /**\n   * Returns true if the Azure blob resource represented by this client exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing blob might be deleted by other clients or\n   * applications. Vice versa new blobs might be added by other clients or applications after this\n   * function completes.\n   *\n   * @param options - options to Exists operation.\n   */\n  public async exists(options: BlobExistsOptions = {}): Promise<boolean> {\n    return tracingClient.withSpan(\"BlobClient-exists\", options, async (updatedOptions) => {\n      try {\n        ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n        await this.getProperties({\n          abortSignal: options.abortSignal,\n          customerProvidedKey: options.customerProvidedKey,\n          conditions: options.conditions,\n          tracingOptions: updatedOptions.tracingOptions,\n        });\n        return true;\n      } catch (e: any) {\n        if (e.statusCode === 404) {\n          // Expected exception when checking blob existence\n          return false;\n        } else if (\n          e.statusCode === 409 &&\n          (e.details.errorCode === BlobUsesCustomerSpecifiedEncryptionMsg ||\n            e.details.errorCode === BlobDoesNotUseCustomerSpecifiedEncryption)\n        ) {\n          // Expected exception when checking blob existence\n          return true;\n        }\n        throw e;\n      }\n    });\n  }\n\n  /**\n   * Returns all user-defined metadata, standard HTTP properties, and system properties\n   * for the blob. It does not return the content of the blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties\n   *\n   * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n   * they originally contained uppercase characters. This differs from the metadata keys returned by\n   * the methods of {@link ContainerClient} that list blobs using the `includeMetadata` option, which\n   * will retain their original casing.\n   *\n   * @param options - Optional options to Get Properties operation.\n   */\n  public async getProperties(\n    options: BlobGetPropertiesOptions = {},\n  ): Promise<BlobGetPropertiesResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlobClient-getProperties\", options, async (updatedOptions) => {\n      const res = assertResponse<BlobGetPropertiesResponseInternal, BlobGetPropertiesHeaders>(\n        await this.blobContext.getProperties({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n\n      return {\n        ...res,\n        _response: res._response, // _response is made non-enumerable\n        objectReplicationDestinationPolicyId: res.objectReplicationPolicyId,\n        objectReplicationSourceProperties: parseObjectReplicationRecord(res.objectReplicationRules),\n      };\n    });\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param options - Optional options to Blob Delete operation.\n   */\n  public async delete(options: BlobDeleteOptions = {}): Promise<BlobDeleteResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\"BlobClient-delete\", options, async (updatedOptions) => {\n      return assertResponse<BlobDeleteHeaders, BlobDeleteHeaders>(\n        await this.blobContext.delete({\n          abortSignal: options.abortSignal,\n          deleteSnapshots: options.deleteSnapshots,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion if it exists. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param options - Optional options to Blob Delete operation.\n   */\n  public async deleteIfExists(\n    options: BlobDeleteOptions = {},\n  ): Promise<BlobDeleteIfExistsResponse> {\n    return tracingClient.withSpan(\"BlobClient-deleteIfExists\", options, async (updatedOptions) => {\n      try {\n        const res = assertResponse(await this.delete(updatedOptions));\n        return {\n          succeeded: true,\n          ...res,\n          _response: res._response, // _response is made non-enumerable\n        };\n      } catch (e: any) {\n        if (e.details?.errorCode === \"BlobNotFound\") {\n          return {\n            succeeded: false,\n            ...e.response?.parsedHeaders,\n            _response: e.response,\n          };\n        }\n        throw e;\n      }\n    });\n  }\n\n  /**\n   * Restores the contents and metadata of soft deleted blob and any associated\n   * soft deleted snapshots. Undelete Blob is supported only on version 2017-07-29\n   * or later.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/undelete-blob\n   *\n   * @param options - Optional options to Blob Undelete operation.\n   */\n  public async undelete(options: BlobUndeleteOptions = {}): Promise<BlobUndeleteResponse> {\n    return tracingClient.withSpan(\"BlobClient-undelete\", options, async (updatedOptions) => {\n      return assertResponse<BlobUndeleteHeaders, BlobUndeleteHeaders>(\n        await this.blobContext.undelete({\n          abortSignal: options.abortSignal,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Sets system properties on the blob.\n   *\n   * If no value provided, or no value provided for the specified blob HTTP headers,\n   * these blob HTTP headers without a value will be cleared.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n   *\n   * @param blobHTTPHeaders - If no value provided, or no value provided for\n   *                                                   the specified blob HTTP headers, these blob HTTP\n   *                                                   headers without a value will be cleared.\n   *                                                   A common header to set is `blobContentType`\n   *                                                   enabling the browser to provide functionality\n   *                                                   based on file type.\n   * @param options - Optional options to Blob Set HTTP Headers operation.\n   */\n  public async setHTTPHeaders(\n    blobHTTPHeaders?: BlobHTTPHeaders,\n    options: BlobSetHTTPHeadersOptions = {},\n  ): Promise<BlobSetHTTPHeadersResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlobClient-setHTTPHeaders\", options, async (updatedOptions) => {\n      return assertResponse<BlobSetHttpHeadersHeaders, BlobSetHttpHeadersHeaders>(\n        await this.blobContext.setHttpHeaders({\n          abortSignal: options.abortSignal,\n          blobHttpHeaders: blobHTTPHeaders,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          // cpkInfo: options.customerProvidedKey, // CPK is not included in Swagger, should change this back when this issue is fixed in Swagger.\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Sets user-defined metadata for the specified blob as one or more name-value pairs.\n   *\n   * If no option provided, or no metadata defined in the parameter, the blob\n   * metadata will be removed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata\n   *\n   * @param metadata - Replace existing metadata with this value.\n   *                               If no value provided the existing metadata will be removed.\n   * @param options - Optional options to Set Metadata operation.\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: BlobSetMetadataOptions = {},\n  ): Promise<BlobSetMetadataResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlobClient-setMetadata\", options, async (updatedOptions) => {\n      return assertResponse<BlobSetMetadataHeaders, BlobSetMetadataHeaders>(\n        await this.blobContext.setMetadata({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Sets tags on the underlying blob.\n   * A blob can have up to 10 tags. Tag keys must be between 1 and 128 characters.  Tag values must be between 0 and 256 characters.\n   * Valid tag key and value characters include lower and upper case letters, digits (0-9),\n   * space (' '), plus ('+'), minus ('-'), period ('.'), foward slash ('/'), colon (':'), equals ('='), and underscore ('_').\n   *\n   * @param tags -\n   * @param options -\n   */\n  public async setTags(tags: Tags, options: BlobSetTagsOptions = {}): Promise<BlobSetTagsResponse> {\n    return tracingClient.withSpan(\"BlobClient-setTags\", options, async (updatedOptions) => {\n      return assertResponse<BlobSetTagsHeaders, BlobSetTagsHeaders>(\n        await this.blobContext.setTags({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          tracingOptions: updatedOptions.tracingOptions,\n          tags: toBlobTags(tags),\n        }),\n      );\n    });\n  }\n\n  /**\n   * Gets the tags associated with the underlying blob.\n   *\n   * @param options -\n   */\n  public async getTags(options: BlobGetTagsOptions = {}): Promise<BlobGetTagsResponse> {\n    return tracingClient.withSpan(\"BlobClient-getTags\", options, async (updatedOptions) => {\n      const response = assertResponse<BlobGetTagsResponseInternal, BlobGetTagsHeaders, BlobTags>(\n        await this.blobContext.getTags({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n      const wrappedResponse: BlobGetTagsResponse = {\n        ...response,\n        _response: response._response, // _response is made non-enumerable\n        tags: toTags({ blobTagSet: response.blobTagSet }) || {},\n      };\n      return wrappedResponse;\n    });\n  }\n\n  /**\n   * Get a {@link BlobLeaseClient} that manages leases on the blob.\n   *\n   * @param proposeLeaseId - Initial proposed lease Id.\n   * @returns A new BlobLeaseClient object for managing leases on the blob.\n   */\n  public getBlobLeaseClient(proposeLeaseId?: string): BlobLeaseClient {\n    return new BlobLeaseClient(this, proposeLeaseId);\n  }\n\n  /**\n   * Creates a read-only snapshot of a blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-blob\n   *\n   * @param options - Optional options to the Blob Create Snapshot operation.\n   */\n  public async createSnapshot(\n    options: BlobCreateSnapshotOptions = {},\n  ): Promise<BlobCreateSnapshotResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlobClient-createSnapshot\", options, async (updatedOptions) => {\n      return assertResponse<BlobCreateSnapshotHeaders, BlobCreateSnapshotHeaders>(\n        await this.blobContext.createSnapshot({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          metadata: options.metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Asynchronously copies a blob to a destination within the storage account.\n   * This method returns a long running operation poller that allows you to wait\n   * indefinitely until the copy is completed.\n   * You can also cancel a copy before it is completed by calling `cancelOperation` on the poller.\n   * Note that the onProgress callback will not be invoked if the operation completes in the first\n   * request, and attempting to cancel a completed copy will result in an error being thrown.\n   *\n   * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n   * a committed blob in any Azure storage account.\n   * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n   * an Azure file in any Azure storage account.\n   * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n   * operation to copy from another storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob\n   *\n   * Example using automatic polling:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url');\n   * const result = await copyPoller.pollUntilDone();\n   * ```\n   *\n   * Example using manual polling:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url');\n   * while (!poller.isDone()) {\n   *    await poller.poll();\n   * }\n   * const result = copyPoller.getResult();\n   * ```\n   *\n   * Example using progress updates:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url', {\n   *   onProgress(state) {\n   *     console.log(`Progress: ${state.copyProgress}`);\n   *   }\n   * });\n   * const result = await copyPoller.pollUntilDone();\n   * ```\n   *\n   * Example using a changing polling interval (default 15 seconds):\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url', {\n   *   intervalInMs: 1000 // poll blob every 1 second for copy progress\n   * });\n   * const result = await copyPoller.pollUntilDone();\n   * ```\n   *\n   * Example using copy cancellation:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url');\n   * // cancel operation after starting it.\n   * try {\n   *   await copyPoller.cancelOperation();\n   *   // calls to get the result now throw PollerCancelledError\n   *   await copyPoller.getResult();\n   * } catch (err) {\n   *   if (err.name === 'PollerCancelledError') {\n   *     console.log('The copy was cancelled.');\n   *   }\n   * }\n   * ```\n   *\n   * @param copySource - url to the source Azure Blob/File.\n   * @param options - Optional options to the Blob Start Copy From URL operation.\n   */\n  public async beginCopyFromURL(\n    copySource: string,\n    options: BlobBeginCopyFromURLOptions = {},\n  ): Promise<\n    PollerLikeWithCancellation<\n      PollOperationState<BlobBeginCopyFromURLResponse>,\n      BlobBeginCopyFromURLResponse\n    >\n  > {\n    const client: CopyPollerBlobClient = {\n      abortCopyFromURL: (...args) => this.abortCopyFromURL(...args),\n      getProperties: (...args) => this.getProperties(...args),\n      startCopyFromURL: (...args) => this.startCopyFromURL(...args),\n    };\n    const poller = new BlobBeginCopyFromUrlPoller({\n      blobClient: client,\n      copySource,\n      intervalInMs: options.intervalInMs,\n      onProgress: options.onProgress,\n      resumeFrom: options.resumeFrom,\n      startCopyFromURLOptions: options,\n    });\n\n    // Trigger the startCopyFromURL call by calling poll.\n    // Any errors from this method should be surfaced to the user.\n    await poller.poll();\n\n    return poller;\n  }\n\n  /**\n   * Aborts a pending asynchronous Copy Blob operation, and leaves a destination blob with zero\n   * length and full metadata. Version 2012-02-12 and newer.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob\n   *\n   * @param copyId - Id of the Copy From URL operation.\n   * @param options - Optional options to the Blob Abort Copy From URL operation.\n   */\n  public async abortCopyFromURL(\n    copyId: string,\n    options: BlobAbortCopyFromURLOptions = {},\n  ): Promise<BlobAbortCopyFromURLResponse> {\n    return tracingClient.withSpan(\n      \"BlobClient-abortCopyFromURL\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<BlobAbortCopyFromURLHeaders, BlobAbortCopyFromURLHeaders>(\n          await this.blobContext.abortCopyFromURL(copyId, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * The synchronous Copy From URL operation copies a blob or an internet resource to a new blob. It will not\n   * return a response until the copy is complete.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob-from-url\n   *\n   * @param copySource - The source URL to copy from, Shared Access Signature(SAS) maybe needed for authentication\n   * @param options -\n   */\n  public async syncCopyFromURL(\n    copySource: string,\n    options: BlobSyncCopyFromURLOptions = {},\n  ): Promise<BlobCopyFromURLResponse> {\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n    return tracingClient.withSpan(\"BlobClient-syncCopyFromURL\", options, async (updatedOptions) => {\n      return assertResponse<BlobCopyFromURLHeaders, BlobCopyFromURLHeaders>(\n        await this.blobContext.copyFromURL(copySource, {\n          abortSignal: options.abortSignal,\n          metadata: options.metadata,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          sourceModifiedAccessConditions: {\n            sourceIfMatch: options.sourceConditions?.ifMatch,\n            sourceIfModifiedSince: options.sourceConditions?.ifModifiedSince,\n            sourceIfNoneMatch: options.sourceConditions?.ifNoneMatch,\n            sourceIfUnmodifiedSince: options.sourceConditions?.ifUnmodifiedSince,\n          },\n          sourceContentMD5: options.sourceContentMD5,\n          copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n          tier: toAccessTier(options.tier),\n          blobTagsString: toBlobTagsString(options.tags),\n          immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n          immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n          legalHold: options.legalHold,\n          encryptionScope: options.encryptionScope,\n          copySourceTags: options.copySourceTags,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Sets the tier on a blob. The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier\n   *\n   * @param tier - The tier to be set on the blob. Valid values are Hot, Cool, or Archive.\n   * @param options - Optional options to the Blob Set Tier operation.\n   */\n  public async setAccessTier(\n    tier: BlockBlobTier | PremiumPageBlobTier | string,\n    options: BlobSetTierOptions = {},\n  ): Promise<BlobSetTierResponse> {\n    return tracingClient.withSpan(\"BlobClient-setAccessTier\", options, async (updatedOptions) => {\n      return assertResponse<BlobSetTierHeaders, BlobSetTierHeaders>(\n        await this.blobContext.setTier(toAccessTier(tier)!, {\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          rehydratePriority: options.rehydratePriority,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  // High level function\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob in parallel to a buffer.\n   * Offset and count are optional, downloads the entire blob if they are not provided.\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For blobs larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @param offset - From which position of the block blob to download(in bytes)\n   * @param count - How much data(in bytes) to be downloaded. Will download to the end when passing undefined\n   * @param options - BlobDownloadToBufferOptions\n   */\n  public async downloadToBuffer(\n    offset?: number,\n    count?: number,\n    options?: BlobDownloadToBufferOptions,\n  ): Promise<Buffer>;\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob in parallel to a buffer.\n   * Offset and count are optional, downloads the entire blob if they are not provided.\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For blobs larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @param buffer - Buffer to be fill, must have length larger than count\n   * @param offset - From which position of the block blob to download(in bytes)\n   * @param count - How much data(in bytes) to be downloaded. Will download to the end when passing undefined\n   * @param options - BlobDownloadToBufferOptions\n   */\n  public async downloadToBuffer(\n    buffer: Buffer,\n    offset?: number,\n    count?: number,\n    options?: BlobDownloadToBufferOptions,\n  ): Promise<Buffer>;\n\n  public async downloadToBuffer(\n    param1?: Buffer | number,\n    param2?: number,\n    param3?: BlobDownloadToBufferOptions | number,\n    param4: BlobDownloadToBufferOptions = {},\n  ): Promise<Buffer | undefined> {\n    let buffer: Buffer | undefined;\n    let offset = 0;\n    let count = 0;\n    let options = param4;\n    if (param1 instanceof Buffer) {\n      buffer = param1;\n      offset = param2 || 0;\n      count = typeof param3 === \"number\" ? param3 : 0;\n    } else {\n      offset = typeof param1 === \"number\" ? param1 : 0;\n      count = typeof param2 === \"number\" ? param2 : 0;\n      options = (param3 as BlobDownloadToBufferOptions) || {};\n    }\n\n    let blockSize = options.blockSize ?? 0;\n\n    if (blockSize < 0) {\n      throw new RangeError(\"blockSize option must be >= 0\");\n    }\n    if (blockSize === 0) {\n      blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n    }\n\n    if (offset < 0) {\n      throw new RangeError(\"offset option must be >= 0\");\n    }\n\n    if (count && count <= 0) {\n      throw new RangeError(\"count option must be greater than 0\");\n    }\n\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\n      \"BlobClient-downloadToBuffer\",\n      options,\n      async (updatedOptions) => {\n        // Customer doesn't specify length, get it\n        if (!count) {\n          const response = await this.getProperties({\n            ...options,\n            tracingOptions: updatedOptions.tracingOptions,\n          });\n          count = response.contentLength! - offset;\n          if (count < 0) {\n            throw new RangeError(\n              `offset ${offset} shouldn't be larger than blob size ${response.contentLength!}`,\n            );\n          }\n        }\n\n        // Allocate the buffer of size = count if the buffer is not provided\n        if (!buffer) {\n          try {\n            buffer = Buffer.alloc(count);\n          } catch (error: any) {\n            throw new Error(\n              `Unable to allocate the buffer of size: ${count}(in bytes). Please try passing your own buffer to the \"downloadToBuffer\" method or try using other methods like \"download\" or \"downloadToFile\".\\t ${error.message}`,\n            );\n          }\n        }\n\n        if (buffer.length < count) {\n          throw new RangeError(\n            `The buffer's size should be equal to or larger than the request count of bytes: ${count}`,\n          );\n        }\n\n        let transferProgress: number = 0;\n        const batch = new Batch(options.concurrency);\n        for (let off = offset; off < offset + count; off = off + blockSize) {\n          batch.addOperation(async () => {\n            // Exclusive chunk end position\n            let chunkEnd = offset + count!;\n            if (off + blockSize < chunkEnd) {\n              chunkEnd = off + blockSize;\n            }\n            const response = await this.download(off, chunkEnd - off, {\n              abortSignal: options.abortSignal,\n              conditions: options.conditions,\n              maxRetryRequests: options.maxRetryRequestsPerBlock,\n              customerProvidedKey: options.customerProvidedKey,\n              tracingOptions: updatedOptions.tracingOptions,\n            });\n            const stream = response.readableStreamBody!;\n            await streamToBuffer(stream, buffer!, off - offset, chunkEnd - offset);\n            // Update progress after block is downloaded, in case of block trying\n            // Could provide finer grained progress updating inside HTTP requests,\n            // only if convenience layer download try is enabled\n            transferProgress += chunkEnd - off;\n            if (options.onProgress) {\n              options.onProgress({ loadedBytes: transferProgress });\n            }\n          });\n        }\n        await batch.do();\n        return buffer;\n      },\n    );\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob to a local file.\n   * Fails if the the given file path already exits.\n   * Offset and count are optional, pass 0 and undefined respectively to download the entire blob.\n   *\n   * @param filePath -\n   * @param offset - From which position of the block blob to download.\n   * @param count - How much data to be downloaded. Will download to the end when passing undefined.\n   * @param options - Options to Blob download options.\n   * @returns The response data for blob download operation,\n   *                                                 but with readableStreamBody set to undefined since its\n   *                                                 content is already read and written into a local file\n   *                                                 at the specified path.\n   */\n  public async downloadToFile(\n    filePath: string,\n    offset: number = 0,\n    count?: number,\n    options: BlobDownloadOptions = {},\n  ): Promise<BlobDownloadResponseParsed> {\n    return tracingClient.withSpan(\"BlobClient-downloadToFile\", options, async (updatedOptions) => {\n      const response = await this.download(offset, count, {\n        ...options,\n        tracingOptions: updatedOptions.tracingOptions,\n      });\n      if (response.readableStreamBody) {\n        await readStreamToLocalFile(response.readableStreamBody, filePath);\n      }\n\n      // The stream is no longer accessible so setting it to undefined.\n      (response as any).blobDownloadStream = undefined;\n      return response;\n    });\n  }\n\n  private getBlobAndContainerNamesFromUrl(): { blobName: string; containerName: string } {\n    let containerName;\n    let blobName;\n    try {\n      //  URL may look like the following\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob/a.txt?sasString\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob/a.txt\";\n      // IPv4/IPv6 address hosts, Endpoints - `http://127.0.0.1:10000/devstoreaccount1/containername/blob`\n      // http://localhost:10001/devstoreaccount1/containername/blob\n\n      const parsedUrl = new URL(this.url);\n\n      if (parsedUrl.host.split(\".\")[1] === \"blob\") {\n        // \"https://myaccount.blob.core.windows.net/containername/blob\".\n        // .getPath() -> /containername/blob\n        const pathComponents = parsedUrl.pathname.match(\"/([^/]*)(/(.*))?\");\n        containerName = pathComponents![1];\n        blobName = pathComponents![3];\n      } else if (isIpEndpointStyle(parsedUrl)) {\n        // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/containername/blob\n        // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/containername/blob\n        // .getPath() -> /devstoreaccount1/containername/blob\n        const pathComponents = parsedUrl.pathname.match(\"/([^/]*)/([^/]*)(/(.*))?\");\n        containerName = pathComponents![2];\n        blobName = pathComponents![4];\n      } else {\n        // \"https://customdomain.com/containername/blob\".\n        // .getPath() -> /containername/blob\n        const pathComponents = parsedUrl.pathname.match(\"/([^/]*)(/(.*))?\");\n        containerName = pathComponents![1];\n        blobName = pathComponents![3];\n      }\n\n      // decode the encoded blobName, containerName - to get all the special characters that might be present in them\n      containerName = decodeURIComponent(containerName);\n      blobName = decodeURIComponent(blobName);\n\n      // Azure Storage Server will replace \"\\\" with \"/\" in the blob names\n      //   doing the same in the SDK side so that the user doesn't have to replace \"\\\" instances in the blobName\n      blobName = blobName.replace(/\\\\/g, \"/\");\n\n      if (!containerName) {\n        throw new Error(\"Provided containerName is invalid.\");\n      }\n\n      return { blobName, containerName };\n    } catch (error: any) {\n      throw new Error(\"Unable to extract blobName and containerName with provided information.\");\n    }\n  }\n\n  /**\n   * Asynchronously copies a blob to a destination within the storage account.\n   * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n   * a committed blob in any Azure storage account.\n   * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n   * an Azure file in any Azure storage account.\n   * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n   * operation to copy from another storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob\n   *\n   * @param copySource - url to the source Azure Blob/File.\n   * @param options - Optional options to the Blob Start Copy From URL operation.\n   */\n  private async startCopyFromURL(\n    copySource: string,\n    options: BlobStartCopyFromURLOptions = {},\n  ): Promise<BlobStartCopyFromURLResponse> {\n    return tracingClient.withSpan(\n      \"BlobClient-startCopyFromURL\",\n      options,\n      async (updatedOptions) => {\n        options.conditions = options.conditions || {};\n        options.sourceConditions = options.sourceConditions || {};\n        return assertResponse<BlobStartCopyFromURLHeaders, BlobStartCopyFromURLHeaders>(\n          await this.blobContext.startCopyFromURL(copySource, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            metadata: options.metadata,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            sourceModifiedAccessConditions: {\n              sourceIfMatch: options.sourceConditions.ifMatch,\n              sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,\n              sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,\n              sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince,\n              sourceIfTags: options.sourceConditions.tagConditions,\n            },\n            immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n            immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n            legalHold: options.legalHold,\n            rehydratePriority: options.rehydratePriority,\n            tier: toAccessTier(options.tier),\n            blobTagsString: toBlobTagsString(options.tags),\n            sealBlob: options.sealBlob,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Only available for BlobClient constructed with a shared key credential.\n   *\n   * Generates a Blob Service Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateSasUrl(options: BlobGenerateSasUrlOptions): Promise<string> {\n    return new Promise((resolve) => {\n      if (!(this.credential instanceof StorageSharedKeyCredential)) {\n        throw new RangeError(\n          \"Can only generate the SAS when the client is initialized with a shared key credential\",\n        );\n      }\n\n      const sas = generateBlobSASQueryParameters(\n        {\n          containerName: this._containerName,\n          blobName: this._name,\n          snapshotTime: this._snapshot,\n          versionId: this._versionId,\n          ...options,\n        },\n        this.credential,\n      ).toString();\n\n      resolve(appendToURLQuery(this.url, sas));\n    });\n  }\n\n  /**\n   * Only available for BlobClient constructed with a shared key credential.\n   *\n   * Generates string to sign for a Blob Service Shared Access Signature (SAS) URI based on\n   * the client properties and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n  public generateSasStringToSign(options: BlobGenerateSasUrlOptions): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw new RangeError(\n        \"Can only generate the SAS when the client is initialized with a shared key credential\",\n      );\n    }\n\n    return generateBlobSASQueryParametersInternal(\n      {\n        containerName: this._containerName,\n        blobName: this._name,\n        snapshotTime: this._snapshot,\n        versionId: this._versionId,\n        ...options,\n      },\n      this.credential,\n    ).stringToSign;\n  }\n\n  /**\n   *\n   * Generates a Blob Service Shared Access Signature (SAS) URI based on\n   * the client properties and parameters passed in. The SAS is signed by the input user delegation key.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @param userDelegationKey -  Return value of `blobServiceClient.getUserDelegationKey()`\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateUserDelegationSasUrl(\n    options: BlobGenerateSasUrlOptions,\n    userDelegationKey: UserDelegationKey,\n  ): Promise<string> {\n    return new Promise((resolve) => {\n      const sas = generateBlobSASQueryParameters(\n        {\n          containerName: this._containerName,\n          blobName: this._name,\n          snapshotTime: this._snapshot,\n          versionId: this._versionId,\n          ...options,\n        },\n        userDelegationKey,\n        this.accountName,\n      ).toString();\n\n      resolve(appendToURLQuery(this.url, sas));\n    });\n  }\n\n  /**\n   * Only available for BlobClient constructed with a shared key credential.\n   *\n   * Generates string to sign for a Blob Service Shared Access Signature (SAS) URI based on\n   * the client properties and parameters passed in. The SAS is signed by the input user delegation key.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @param userDelegationKey -  Return value of `blobServiceClient.getUserDelegationKey()`\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n\n  public generateUserDelegationSasStringToSign(\n    options: BlobGenerateSasUrlOptions,\n    userDelegationKey: UserDelegationKey,\n  ): string {\n    return generateBlobSASQueryParametersInternal(\n      {\n        containerName: this._containerName,\n        blobName: this._name,\n        snapshotTime: this._snapshot,\n        versionId: this._versionId,\n        ...options,\n      },\n      userDelegationKey,\n      this.accountName,\n    ).stringToSign;\n  }\n\n  /**\n   * Delete the immutablility policy on the blob.\n   *\n   * @param options - Optional options to delete immutability policy on the blob.\n   */\n  public async deleteImmutabilityPolicy(\n    options: BlobDeleteImmutabilityPolicyOptions = {},\n  ): Promise<BlobDeleteImmutabilityPolicyResponse> {\n    return tracingClient.withSpan(\n      \"BlobClient-deleteImmutabilityPolicy\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          BlobDeleteImmutabilityPolicyHeaders,\n          BlobDeleteImmutabilityPolicyHeaders\n        >(\n          await this.blobContext.deleteImmutabilityPolicy({\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Set immutability policy on the blob.\n   *\n   * @param options - Optional options to set immutability policy on the blob.\n   */\n  public async setImmutabilityPolicy(\n    immutabilityPolicy: BlobImmutabilityPolicy,\n    options: BlobSetImmutabilityPolicyOptions = {},\n  ): Promise<BlobSetImmutabilityPolicyResponse> {\n    return tracingClient.withSpan(\n      \"BlobClient-setImmutabilityPolicy\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<BlobSetImmutabilityPolicyHeaders, BlobSetImmutabilityPolicyHeaders>(\n          await this.blobContext.setImmutabilityPolicy({\n            immutabilityPolicyExpiry: immutabilityPolicy.expiriesOn,\n            immutabilityPolicyMode: immutabilityPolicy.policyMode,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Set legal hold on the blob.\n   *\n   * @param options - Optional options to set legal hold on the blob.\n   */\n  public async setLegalHold(\n    legalHoldEnabled: boolean,\n    options: BlobSetLegalHoldOptions = {},\n  ): Promise<BlobSetLegalHoldResponse> {\n    return tracingClient.withSpan(\"BlobClient-setLegalHold\", options, async (updatedOptions) => {\n      return assertResponse<BlobSetLegalHoldHeaders, BlobSetLegalHoldHeaders>(\n        await this.blobContext.setLegalHold(legalHoldEnabled, {\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * The Get Account Information operation returns the sku name and account kind\n   * for the specified account.\n   * The Get Account Information operation is available on service versions beginning\n   * with version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\n   *\n   * @param options - Options to the Service Get Account Info operation.\n   * @returns Response data for the Service Get Account Info operation.\n   */\n  public async getAccountInfo(\n    options: BlobGetAccountInfoOptions = {},\n  ): Promise<BlobGetAccountInfoResponse> {\n    return tracingClient.withSpan(\"BlobClient-getAccountInfo\", options, async (updatedOptions) => {\n      return assertResponse<BlobGetAccountInfoHeaders, BlobGetAccountInfoHeaders>(\n        await this.blobContext.getAccountInfo({\n          abortSignal: options.abortSignal,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n}\n\n/**\n * Options to configure {@link AppendBlobClient.create} operation.\n */\nexport interface AppendBlobCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Conditions to meet when creating append blobs.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * HTTP headers to set when creating append blobs. A common header\n   * to set is `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure {@link AppendBlobClient.createIfNotExists} operation.\n */\nexport interface AppendBlobCreateIfNotExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * HTTP headers to set when creating append blobs. A common header to set is\n   * `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n}\n\n/**\n * Options to configure {@link AppendBlobClient.seal} operation.\n */\nexport interface AppendBlobSealOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet.\n   */\n  conditions?: AppendBlobRequestConditions;\n}\n\n/**\n * Options to configure the {@link AppendBlobClient.appendBlock} operation.\n */\nexport interface AppendBlobAppendBlockOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when appending append blob blocks.\n   */\n  conditions?: AppendBlobRequestConditions;\n  /**\n   * Callback to receive events on the progress of append block operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * An MD5 hash of the block content. This hash is used to verify the integrity of the block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the append block content. This hash is used to verify the integrity of the append block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link AppendBlobClient.appendBlockFromURL} operation.\n */\nexport interface AppendBlobAppendBlockFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when appending append blob blocks.\n   */\n  conditions?: AppendBlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: MatchConditions & ModificationConditions;\n  /**\n   * An MD5 hash of the append block content from the URI.\n   * This hash is used to verify the integrity of the append block during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the append block content from the URI.\n   * This hash is used to verify the integrity of the append block during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n}\n\n/**\n * Contains response data for the {@link appendBlobClient.createIfNotExists} operation.\n */\nexport interface AppendBlobCreateIfNotExistsResponse extends AppendBlobCreateResponse {\n  /**\n   * Indicate whether the blob is successfully created. Is false when the blob is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * AppendBlobClient defines a set of operations applicable to append blobs.\n */\nexport class AppendBlobClient extends BlobClient {\n  /**\n   * appendBlobsContext provided by protocol layer.\n   */\n  private appendBlobContext: AppendBlob;\n\n  /**\n   *\n   * Creates an instance of AppendBlobClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of AppendBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage append blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of AppendBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage append blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)      url = urlOrConnectionString;\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey,\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\",\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(url, pipeline);\n    this.appendBlobContext = this.storageClientContext.appendBlob;\n  }\n\n  /**\n   * Creates a new AppendBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new AppendBlobClient object identical to the source but with the specified snapshot timestamp.\n   */\n  public withSnapshot(snapshot: string): AppendBlobClient {\n    return new AppendBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot,\n      ),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param options - Options to the Append Block Create operation.\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const appendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n   * await appendBlobClient.create();\n   * ```\n   */\n  public async create(options: AppendBlobCreateOptions = {}): Promise<AppendBlobCreateResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"AppendBlobClient-create\", options, async (updatedOptions) => {\n      return assertResponse<AppendBlobCreateHeaders, AppendBlobCreateHeaders>(\n        await this.appendBlobContext.create(0, {\n          abortSignal: options.abortSignal,\n          blobHttpHeaders: options.blobHTTPHeaders,\n          leaseAccessConditions: options.conditions,\n          metadata: options.metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n          immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n          legalHold: options.legalHold,\n          blobTagsString: toBlobTagsString(options.tags),\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n   * If the blob with the same name already exists, the content of the existing blob will remain unchanged.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param options -\n   */\n  public async createIfNotExists(\n    options: AppendBlobCreateIfNotExistsOptions = {},\n  ): Promise<AppendBlobCreateIfNotExistsResponse> {\n    const conditions = { ifNoneMatch: ETagAny };\n    return tracingClient.withSpan(\n      \"AppendBlobClient-createIfNotExists\",\n      options,\n      async (updatedOptions) => {\n        try {\n          const res = assertResponse(\n            await this.create({\n              ...updatedOptions,\n              conditions,\n            }),\n          );\n          return {\n            succeeded: true,\n            ...res,\n            _response: res._response, // _response is made non-enumerable\n          };\n        } catch (e: any) {\n          if (e.details?.errorCode === \"BlobAlreadyExists\") {\n            return {\n              succeeded: false,\n              ...e.response?.parsedHeaders,\n              _response: e.response,\n            };\n          }\n          throw e;\n        }\n      },\n    );\n  }\n\n  /**\n   * Seals the append blob, making it read only.\n   *\n   * @param options -\n   */\n  public async seal(options: AppendBlobSealOptions = {}): Promise<AppendBlobAppendBlockResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\"AppendBlobClient-seal\", options, async (updatedOptions) => {\n      return assertResponse<AppendBlobSealHeaders, AppendBlobSealHeaders>(\n        await this.appendBlobContext.seal({\n          abortSignal: options.abortSignal,\n          appendPositionAccessConditions: options.conditions,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Commits a new block of data to the end of the existing append blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/append-block\n   *\n   * @param body - Data to be appended.\n   * @param contentLength - Length of the body in bytes.\n   * @param options - Options to the Append Block operation.\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello World!\";\n   *\n   * // Create a new append blob and append data to the blob.\n   * const newAppendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n   * await newAppendBlobClient.create();\n   * await newAppendBlobClient.appendBlock(content, content.length);\n   *\n   * // Append data to an existing append blob.\n   * const existingAppendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n   * await existingAppendBlobClient.appendBlock(content, content.length);\n   * ```\n   */\n  public async appendBlock(\n    body: HttpRequestBody,\n    contentLength: number,\n    options: AppendBlobAppendBlockOptions = {},\n  ): Promise<AppendBlobAppendBlockResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"AppendBlobClient-appendBlock\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<AppendBlobAppendBlockHeaders, AppendBlobAppendBlockHeaders>(\n          await this.appendBlobContext.appendBlock(contentLength, body, {\n            abortSignal: options.abortSignal,\n            appendPositionAccessConditions: options.conditions,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            requestOptions: {\n              onUploadProgress: options.onProgress,\n            },\n            transactionalContentMD5: options.transactionalContentMD5,\n            transactionalContentCrc64: options.transactionalContentCrc64,\n            cpkInfo: options.customerProvidedKey,\n            encryptionScope: options.encryptionScope,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob\n   * where the contents are read from a source url.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/append-block-from-url\n   *\n   * @param sourceURL -\n   *                 The url to the blob that will be the source of the copy. A source blob in the same storage account can\n   *                 be authenticated via Shared Key. However, if the source is a blob in another account, the source blob\n   *                 must either be public or must be authenticated via a shared access signature. If the source blob is\n   *                 public, no authentication is required to perform the operation.\n   * @param sourceOffset - Offset in source to be appended\n   * @param count - Number of bytes to be appended as a block\n   * @param options -\n   */\n  public async appendBlockFromURL(\n    sourceURL: string,\n    sourceOffset: number,\n    count: number,\n    options: AppendBlobAppendBlockFromURLOptions = {},\n  ): Promise<AppendBlobAppendBlockFromUrlResponse> {\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"AppendBlobClient-appendBlockFromURL\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          AppendBlobAppendBlockFromUrlHeaders,\n          AppendBlobAppendBlockFromUrlHeaders\n        >(\n          await this.appendBlobContext.appendBlockFromUrl(sourceURL, 0, {\n            abortSignal: options.abortSignal,\n            sourceRange: rangeToString({ offset: sourceOffset, count }),\n            sourceContentMD5: options.sourceContentMD5,\n            sourceContentCrc64: options.sourceContentCrc64,\n            leaseAccessConditions: options.conditions,\n            appendPositionAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            sourceModifiedAccessConditions: {\n              sourceIfMatch: options.sourceConditions?.ifMatch,\n              sourceIfModifiedSince: options.sourceConditions?.ifModifiedSince,\n              sourceIfNoneMatch: options.sourceConditions?.ifNoneMatch,\n              sourceIfUnmodifiedSince: options.sourceConditions?.ifUnmodifiedSince,\n            },\n            copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n            cpkInfo: options.customerProvidedKey,\n            encryptionScope: options.encryptionScope,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n}\n\n/**\n * Options to configure {@link BlockBlobClient.upload} operation.\n */\nexport interface BlockBlobUploadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when uploading to the block blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * HTTP headers to set when uploading to a block blob. A common header to set is\n   * `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when uploading to a block blob.\n   */\n  metadata?: Metadata;\n  /**\n   * Callback to receive events on the progress of upload operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.syncUploadFromURL} operation.\n */\nexport interface BlockBlobSyncUploadFromURLOptions extends CommonOptions {\n  /**\n   * Server timeout in seconds.\n   * For more information, @see https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\n   */\n  timeoutInSeconds?: number;\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: Metadata;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n  /**\n   * Specify the md5 calculated for the range of bytes that must be read from the copy source.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n  /**\n   * Optional, default is true.  Indicates if properties from the source blob should be copied.\n   */\n  copySourceBlobProperties?: boolean;\n  /**\n   * HTTP headers to set when uploading to a block blob.\n   *\n   * A common header to set is `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * Conditions to meet for the destination Azure Blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Conditions to meet for the source Azure Blob.\n   */\n  sourceConditions?: ModifiedAccessConditions;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n  /**\n   * Optional, default 'replace'.  Indicates if source tags should be copied or replaced with the tags specified by {@link tags}.\n   */\n  copySourceTags?: BlobCopySourceTags;\n}\n\n/**\n * Blob query error type.\n */\nexport interface BlobQueryError {\n  /**\n   * Whether error is fatal. Fatal error will stop query.\n   */\n  isFatal: boolean;\n  /**\n   * Error name.\n   */\n  name: string;\n  /**\n   * Position in bytes of the query.\n   */\n  position: number;\n  /**\n   * Error description.\n   */\n  description: string;\n}\n\n/**\n * Options to query blob with JSON format.\n */\nexport interface BlobQueryJsonTextConfiguration {\n  /**\n   * Record separator.\n   */\n  recordSeparator: string;\n  /**\n   * Query for a JSON format blob.\n   */\n  kind: \"json\";\n}\n\n/**\n * Options to query blob with CSV format.\n */\nexport interface BlobQueryCsvTextConfiguration {\n  /**\n   * Record separator.\n   */\n  recordSeparator: string;\n  /**\n   * Query for a CSV format blob.\n   */\n  kind: \"csv\";\n  /**\n   * Column separator. Default is \",\".\n   */\n  columnSeparator?: string;\n  /**\n   * Field quote.\n   */\n  fieldQuote?: string;\n  /**\n   * Escape character.\n   */\n  escapeCharacter?: string;\n  /**\n   * Has headers. Default is false.\n   */\n  hasHeaders?: boolean;\n}\n\n/**\n * Options to query blob with Apache Arrow format. Only valid for {@link BlockBlobQueryOptions.outputTextConfiguration}.\n */\nexport interface BlobQueryArrowConfiguration {\n  /**\n   * Kind.\n   */\n  kind: \"arrow\";\n\n  /**\n   * List of {@link BlobQueryArrowField} describing the schema of the data.\n   */\n  schema: BlobQueryArrowField[];\n}\n\n/**\n * Options to query blob with Parquet format. Only valid for {@link BlockBlobQueryOptions.inputTextConfiguration}.\n */\nexport interface BlobQueryParquetConfiguration {\n  /**\n   * Kind.\n   */\n  kind: \"parquet\";\n}\n\n/**\n * Options to configure {@link BlockBlobClient.query} operation.\n */\nexport interface BlockBlobQueryOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Configurations for the query input.\n   */\n  inputTextConfiguration?:\n    | BlobQueryJsonTextConfiguration\n    | BlobQueryCsvTextConfiguration\n    | BlobQueryParquetConfiguration;\n  /**\n   * Configurations for the query output.\n   */\n  outputTextConfiguration?:\n    | BlobQueryJsonTextConfiguration\n    | BlobQueryCsvTextConfiguration\n    | BlobQueryArrowConfiguration;\n  /**\n   * Callback to receive events on the progress of query operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Callback to receive error events during the query operaiton.\n   */\n  onError?: (error: BlobQueryError) => void;\n  /**\n   * Conditions to meet when uploading to the block blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.stageBlock} operation.\n */\nexport interface BlockBlobStageBlockOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n  /**\n   * Callback to receive events on the progress of stage block operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * An MD5 hash of the block content. This hash is used to verify the integrity of the block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentMD5?: Uint8Array;\n\n  /**\n   * A CRC64 hash of the block content. This hash is used to verify the integrity of the block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.stageBlockFromURL} operation.\n */\nexport interface BlockBlobStageBlockFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the bytes of the source Blob/File to upload.\n   * If not specified, the entire content is uploaded as a single block.\n   */\n  range?: Range;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n  /**\n   * An MD5 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.commitBlockList} operation.\n */\nexport interface BlockBlobCommitBlockListOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when committing the block list.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * HTTP headers to set when committing block list.\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when committing block list.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.getBlockList} operation.\n */\nexport interface BlockBlobGetBlockListOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions & TagConditions;\n}\n\n/**\n * Option interface for the {@link BlockBlobClient.uploadStream} operation.\n */\nexport interface BlockBlobUploadStreamOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Blob HTTP Headers.\n   *\n   * A common header to set is `blobContentType`, enabling the\n   * browser to provide functionality based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n\n  /**\n   * Metadata of block blob.\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Access conditions headers.\n   */\n  conditions?: BlobRequestConditions;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n}\n/**\n * Option interface for {@link BlockBlobClient.uploadFile} and {@link BlockBlobClient.uploadSeekableStream}.\n */\nexport interface BlockBlobParallelUploadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Destination block blob size in bytes.\n   */\n  blockSize?: number;\n\n  /**\n   * Blob size threshold in bytes to start concurrency uploading.\n   * Default value is 256MB, blob size less than this option will\n   * be uploaded via one I/O operation without concurrency.\n   * You can customize a value less equal than the default value.\n   */\n  maxSingleShotSize?: number;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Blob HTTP Headers. A common header to set is\n   * `blobContentType`, enabling the browser to provide\n   * functionality based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n\n  /**\n   * Metadata of block blob.\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Access conditions headers.\n   */\n  conditions?: BlobRequestConditions;\n\n  /**\n   * Concurrency of parallel uploading. Must be greater than or equal to 0.\n   */\n  concurrency?: number;\n\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n}\n\n/**\n * Response type for {@link BlockBlobClient.uploadFile}, {@link BlockBlobClient.uploadStream}, and\n * {@link BlockBlobClient.uploadBrowserDate}.\n */\nexport type BlobUploadCommonResponse = WithResponse<BlockBlobUploadHeaders>;\n\n/**\n * BlockBlobClient defines a set of operations applicable to block blobs.\n */\nexport class BlockBlobClient extends BlobClient {\n  /**\n   * blobContext provided by protocol layer.\n   *\n   * Note. Ideally BlobClient should set BlobClient.blobContext to protected. However, API\n   * extractor has issue blocking that. Here we redecelare _blobContext in BlockBlobClient.\n   */\n  private _blobContext: StorageBlob;\n\n  /**\n   * blockBlobContext provided by protocol layer.\n   */\n  private blockBlobContext: BlockBlob;\n\n  /**\n   *\n   * Creates an instance of BlockBlobClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of BlockBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage block blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of BlockBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage block blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      if (blobNameOrOptions && typeof blobNameOrOptions !== \"string\") {\n        options = blobNameOrOptions as StoragePipelineOptions;\n      }\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey,\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\",\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(url, pipeline);\n    this.blockBlobContext = this.storageClientContext.blockBlob;\n    this._blobContext = this.storageClientContext.blob;\n  }\n\n  /**\n   * Creates a new BlockBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a URL to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new BlockBlobClient object identical to the source but with the specified snapshot timestamp.\n   */\n  public withSnapshot(snapshot: string): BlockBlobClient {\n    return new BlockBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot,\n      ),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Quick query for a JSON or CSV formatted blob.\n   *\n   * Example usage (Node.js):\n   *\n   * ```js\n   * // Query and convert a blob to a string\n   * const queryBlockBlobResponse = await blockBlobClient.query(\"select * from BlobStorage\");\n   * const downloaded = (await streamToBuffer(queryBlockBlobResponse.readableStreamBody)).toString();\n   * console.log(\"Query blob content:\", downloaded);\n   *\n   * async function streamToBuffer(readableStream) {\n   *   return new Promise((resolve, reject) => {\n   *     const chunks = [];\n   *     readableStream.on(\"data\", (data) => {\n   *       chunks.push(data instanceof Buffer ? data : Buffer.from(data));\n   *     });\n   *     readableStream.on(\"end\", () => {\n   *       resolve(Buffer.concat(chunks));\n   *     });\n   *     readableStream.on(\"error\", reject);\n   *   });\n   * }\n   * ```\n   *\n   * @param query -\n   * @param options -\n   */\n  public async query(\n    query: string,\n    options: BlockBlobQueryOptions = {},\n  ): Promise<BlobDownloadResponseModel> {\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    if (!isNode) {\n      throw new Error(\"This operation currently is only supported in Node.js.\");\n    }\n\n    return tracingClient.withSpan(\"BlockBlobClient-query\", options, async (updatedOptions) => {\n      const response = assertResponse<BlobQueryResponseInternal, BlobQueryHeaders>(\n        await this._blobContext.query({\n          abortSignal: options.abortSignal,\n          queryRequest: {\n            queryType: \"SQL\",\n            expression: query,\n            inputSerialization: toQuerySerialization(options.inputTextConfiguration),\n            outputSerialization: toQuerySerialization(options.outputTextConfiguration),\n          },\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n      return new BlobQueryResponse(response, {\n        abortSignal: options.abortSignal,\n        onProgress: options.onProgress,\n        onError: options.onError,\n      });\n    });\n  }\n\n  /**\n   * Creates a new block blob, or updates the content of an existing block blob.\n   * Updating an existing block blob overwrites any existing metadata on the blob.\n   * Partial updates are not supported; the content of the existing blob is\n   * overwritten with the new content. To perform a partial update of a block blob's,\n   * use {@link stageBlock} and {@link commitBlockList}.\n   *\n   * This is a non-parallel uploading method, please use {@link uploadFile},\n   * {@link uploadStream} or {@link uploadBrowserData} for better performance\n   * with concurrency uploading.\n   *\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param body - Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param contentLength - Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param options - Options to the Block Blob Upload operation.\n   * @returns Response data for the Block Blob Upload operation.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   * const uploadBlobResponse = await blockBlobClient.upload(content, content.length);\n   * ```\n   */\n  public async upload(\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobUploadOptions = {},\n  ): Promise<BlockBlobUploadResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlockBlobClient-upload\", options, async (updatedOptions) => {\n      return assertResponse<BlockBlobUploadHeaders, BlockBlobUploadHeaders>(\n        await this.blockBlobContext.upload(contentLength, body, {\n          abortSignal: options.abortSignal,\n          blobHttpHeaders: options.blobHTTPHeaders,\n          leaseAccessConditions: options.conditions,\n          metadata: options.metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          requestOptions: {\n            onUploadProgress: options.onProgress,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n          immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n          legalHold: options.legalHold,\n          tier: toAccessTier(options.tier),\n          blobTagsString: toBlobTagsString(options.tags),\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Creates a new Block Blob where the contents of the blob are read from a given URL.\n   * This API is supported beginning with the 2020-04-08 version. Partial updates\n   * are not supported with Put Blob from URL; the content of an existing blob is overwritten with\n   * the content of the new blob.  To perform partial updates to a block blob’s contents using a\n   * source URL, use {@link stageBlockFromURL} and {@link commitBlockList}.\n   *\n   * @param sourceURL - Specifies the URL of the blob. The value\n   *                           may be a URL of up to 2 KB in length that specifies a blob.\n   *                           The value should be URL-encoded as it would appear\n   *                           in a request URI. The source blob must either be public\n   *                           or must be authenticated via a shared access signature.\n   *                           If the source blob is public, no authentication is required\n   *                           to perform the operation. Here are some examples of source object URLs:\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param options - Optional parameters.\n   */\n\n  public async syncUploadFromURL(\n    sourceURL: string,\n    options: BlockBlobSyncUploadFromURLOptions = {},\n  ): Promise<BlockBlobPutBlobFromUrlResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"BlockBlobClient-syncUploadFromURL\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<BlockBlobPutBlobFromUrlHeaders, BlockBlobPutBlobFromUrlHeaders>(\n          await this.blockBlobContext.putBlobFromUrl(0, sourceURL, {\n            ...options,\n            blobHttpHeaders: options.blobHTTPHeaders,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            sourceModifiedAccessConditions: {\n              sourceIfMatch: options.sourceConditions?.ifMatch,\n              sourceIfModifiedSince: options.sourceConditions?.ifModifiedSince,\n              sourceIfNoneMatch: options.sourceConditions?.ifNoneMatch,\n              sourceIfUnmodifiedSince: options.sourceConditions?.ifUnmodifiedSince,\n              sourceIfTags: options.sourceConditions?.tagConditions,\n            },\n            cpkInfo: options.customerProvidedKey,\n            copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n            tier: toAccessTier(options.tier),\n            blobTagsString: toBlobTagsString(options.tags),\n            copySourceTags: options.copySourceTags,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Uploads the specified block to the block blob's \"staging area\" to be later\n   * committed by a call to commitBlockList.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-block\n   *\n   * @param blockId - A 64-byte value that is base64-encoded\n   * @param body - Data to upload to the staging area.\n   * @param contentLength - Number of bytes to upload.\n   * @param options - Options to the Block Blob Stage Block operation.\n   * @returns Response data for the Block Blob Stage Block operation.\n   */\n  public async stageBlock(\n    blockId: string,\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobStageBlockOptions = {},\n  ): Promise<BlockBlobStageBlockResponse> {\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"BlockBlobClient-stageBlock\", options, async (updatedOptions) => {\n      return assertResponse<BlockBlobStageBlockHeaders, BlockBlobStageBlockHeaders>(\n        await this.blockBlobContext.stageBlock(blockId, contentLength, body, {\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          requestOptions: {\n            onUploadProgress: options.onProgress,\n          },\n          transactionalContentMD5: options.transactionalContentMD5,\n          transactionalContentCrc64: options.transactionalContentCrc64,\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * The Stage Block From URL operation creates a new block to be committed as part\n   * of a blob where the contents are read from a URL.\n   * This API is available starting in version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url\n   *\n   * @param blockId - A 64-byte value that is base64-encoded\n   * @param sourceURL - Specifies the URL of the blob. The value\n   *                           may be a URL of up to 2 KB in length that specifies a blob.\n   *                           The value should be URL-encoded as it would appear\n   *                           in a request URI. The source blob must either be public\n   *                           or must be authenticated via a shared access signature.\n   *                           If the source blob is public, no authentication is required\n   *                           to perform the operation. Here are some examples of source object URLs:\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param offset - From which position of the blob to download, greater than or equal to 0\n   * @param count - How much data to be downloaded, greater than 0. Will download to the end when undefined\n   * @param options - Options to the Block Blob Stage Block From URL operation.\n   * @returns Response data for the Block Blob Stage Block From URL operation.\n   */\n  public async stageBlockFromURL(\n    blockId: string,\n    sourceURL: string,\n    offset: number = 0,\n    count?: number,\n    options: BlockBlobStageBlockFromURLOptions = {},\n  ): Promise<BlockBlobStageBlockFromURLResponse> {\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"BlockBlobClient-stageBlockFromURL\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<BlockBlobStageBlockFromURLHeaders, BlockBlobStageBlockFromURLHeaders>(\n          await this.blockBlobContext.stageBlockFromURL(blockId, 0, sourceURL, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            sourceContentMD5: options.sourceContentMD5,\n            sourceContentCrc64: options.sourceContentCrc64,\n            sourceRange: offset === 0 && !count ? undefined : rangeToString({ offset, count }),\n            cpkInfo: options.customerProvidedKey,\n            encryptionScope: options.encryptionScope,\n            copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Writes a blob by specifying the list of block IDs that make up the blob.\n   * In order to be written as part of a blob, a block must have been successfully written\n   * to the server in a prior {@link stageBlock} operation. You can call {@link commitBlockList} to\n   * update a blob by uploading only those blocks that have changed, then committing the new and existing\n   * blocks together. Any blocks not specified in the block list and permanently deleted.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-block-list\n   *\n   * @param blocks -  Array of 64-byte value that is base64-encoded\n   * @param options - Options to the Block Blob Commit Block List operation.\n   * @returns Response data for the Block Blob Commit Block List operation.\n   */\n  public async commitBlockList(\n    blocks: string[],\n    options: BlockBlobCommitBlockListOptions = {},\n  ): Promise<BlockBlobCommitBlockListResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"BlockBlobClient-commitBlockList\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<BlockBlobCommitBlockListHeaders, BlockBlobCommitBlockListHeaders>(\n          await this.blockBlobContext.commitBlockList(\n            { latest: blocks },\n            {\n              abortSignal: options.abortSignal,\n              blobHttpHeaders: options.blobHTTPHeaders,\n              leaseAccessConditions: options.conditions,\n              metadata: options.metadata,\n              modifiedAccessConditions: {\n                ...options.conditions,\n                ifTags: options.conditions?.tagConditions,\n              },\n              cpkInfo: options.customerProvidedKey,\n              encryptionScope: options.encryptionScope,\n              immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n              immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n              legalHold: options.legalHold,\n              tier: toAccessTier(options.tier),\n              blobTagsString: toBlobTagsString(options.tags),\n              tracingOptions: updatedOptions.tracingOptions,\n            },\n          ),\n        );\n      },\n    );\n  }\n\n  /**\n   * Returns the list of blocks that have been uploaded as part of a block blob\n   * using the specified block list filter.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-block-list\n   *\n   * @param listType - Specifies whether to return the list of committed blocks,\n   *                                        the list of uncommitted blocks, or both lists together.\n   * @param options - Options to the Block Blob Get Block List operation.\n   * @returns Response data for the Block Blob Get Block List operation.\n   */\n  public async getBlockList(\n    listType: BlockListType,\n    options: BlockBlobGetBlockListOptions = {},\n  ): Promise<BlockBlobGetBlockListResponse> {\n    return tracingClient.withSpan(\n      \"BlockBlobClient-getBlockList\",\n      options,\n      async (updatedOptions) => {\n        const res = assertResponse<\n          BlockBlobGetBlockListResponseInternal,\n          BlockBlobGetBlockListHeaders\n        >(\n          await this.blockBlobContext.getBlockList(listType, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        if (!res.committedBlocks) {\n          res.committedBlocks = [];\n        }\n\n        if (!res.uncommittedBlocks) {\n          res.uncommittedBlocks = [];\n        }\n\n        return res;\n      },\n    );\n  }\n\n  // High level functions\n\n  /**\n   * Uploads a Buffer(Node.js)/Blob(browsers)/ArrayBuffer/ArrayBufferView object to a BlockBlob.\n   *\n   * When data length is no more than the specifiled {@link BlockBlobParallelUploadOptions.maxSingleShotSize} (default is\n   * {@link BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}), this method will use 1 {@link upload} call to finish the upload.\n   * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call {@link commitBlockList}\n   * to commit the block list.\n   *\n   * A common {@link BlockBlobParallelUploadOptions.blobHTTPHeaders} option to set is\n   * `blobContentType`, enabling the browser to provide\n   * functionality based on file type.\n   *\n   * @param data - Buffer(Node.js), Blob, ArrayBuffer or ArrayBufferView\n   * @param options -\n   */\n  public async uploadData(\n    data: Buffer | Blob | ArrayBuffer | ArrayBufferView,\n    options: BlockBlobParallelUploadOptions = {},\n  ): Promise<BlobUploadCommonResponse> {\n    return tracingClient.withSpan(\"BlockBlobClient-uploadData\", options, async (updatedOptions) => {\n      if (isNode) {\n        let buffer: Buffer;\n        if (data instanceof Buffer) {\n          buffer = data;\n        } else if (data instanceof ArrayBuffer) {\n          buffer = Buffer.from(data);\n        } else {\n          data = data as ArrayBufferView;\n          buffer = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n        }\n\n        return this.uploadSeekableInternal(\n          (offset: number, size: number): Buffer => buffer.slice(offset, offset + size),\n          buffer.byteLength,\n          updatedOptions,\n        );\n      } else {\n        const browserBlob = new Blob([data]);\n        return this.uploadSeekableInternal(\n          (offset: number, size: number): Blob => browserBlob.slice(offset, offset + size),\n          browserBlob.size,\n          updatedOptions,\n        );\n      }\n    });\n  }\n\n  /**\n   * ONLY AVAILABLE IN BROWSERS.\n   *\n   * Uploads a browser Blob/File/ArrayBuffer/ArrayBufferView object to block blob.\n   *\n   * When buffer length lesser than or equal to 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call\n   * {@link commitBlockList} to commit the block list.\n   *\n   * A common {@link BlockBlobParallelUploadOptions.blobHTTPHeaders} option to set is\n   * `blobContentType`, enabling the browser to provide\n   * functionality based on file type.\n   *\n   * @deprecated Use {@link uploadData} instead.\n   *\n   * @param browserData - Blob, File, ArrayBuffer or ArrayBufferView\n   * @param options - Options to upload browser data.\n   * @returns Response data for the Blob Upload operation.\n   */\n  public async uploadBrowserData(\n    browserData: Blob | ArrayBuffer | ArrayBufferView,\n    options: BlockBlobParallelUploadOptions = {},\n  ): Promise<BlobUploadCommonResponse> {\n    return tracingClient.withSpan(\n      \"BlockBlobClient-uploadBrowserData\",\n      options,\n      async (updatedOptions) => {\n        const browserBlob = new Blob([browserData]);\n        return this.uploadSeekableInternal(\n          (offset: number, size: number): Blob => browserBlob.slice(offset, offset + size),\n          browserBlob.size,\n          updatedOptions,\n        );\n      },\n    );\n  }\n\n  /**\n   *\n   * Uploads data to block blob. Requires a bodyFactory as the data source,\n   * which need to return a {@link HttpRequestBody} object with the offset and size provided.\n   *\n   * When data length is no more than the specified {@link BlockBlobParallelUploadOptions.maxSingleShotSize} (default is\n   * {@link BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}), this method will use 1 {@link upload} call to finish the upload.\n   * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call {@link commitBlockList}\n   * to commit the block list.\n   *\n   * @param bodyFactory -\n   * @param size - size of the data to upload.\n   * @param options - Options to Upload to Block Blob operation.\n   * @returns Response data for the Blob Upload operation.\n   */\n  private async uploadSeekableInternal(\n    bodyFactory: (offset: number, size: number) => HttpRequestBody,\n    size: number,\n    options: BlockBlobParallelUploadOptions = {},\n  ): Promise<BlobUploadCommonResponse> {\n    let blockSize = options.blockSize ?? 0;\n    if (blockSize < 0 || blockSize > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n      throw new RangeError(\n        `blockSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES}`,\n      );\n    }\n\n    const maxSingleShotSize = options.maxSingleShotSize ?? BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;\n\n    if (maxSingleShotSize < 0 || maxSingleShotSize > BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES) {\n      throw new RangeError(\n        `maxSingleShotSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}`,\n      );\n    }\n\n    if (blockSize === 0) {\n      if (size > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES * BLOCK_BLOB_MAX_BLOCKS) {\n        throw new RangeError(`${size} is too larger to upload to a block blob.`);\n      }\n      if (size > maxSingleShotSize) {\n        blockSize = Math.ceil(size / BLOCK_BLOB_MAX_BLOCKS);\n        if (blockSize < DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES) {\n          blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n        }\n      }\n    }\n    if (!options.blobHTTPHeaders) {\n      options.blobHTTPHeaders = {};\n    }\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\n      \"BlockBlobClient-uploadSeekableInternal\",\n      options,\n      async (updatedOptions) => {\n        if (size <= maxSingleShotSize) {\n          return assertResponse(await this.upload(bodyFactory(0, size), size, updatedOptions));\n        }\n\n        const numBlocks: number = Math.floor((size - 1) / blockSize) + 1;\n        if (numBlocks > BLOCK_BLOB_MAX_BLOCKS) {\n          throw new RangeError(\n            `The buffer's size is too big or the BlockSize is too small;` +\n              `the number of blocks must be <= ${BLOCK_BLOB_MAX_BLOCKS}`,\n          );\n        }\n\n        const blockList: string[] = [];\n        const blockIDPrefix = randomUUID();\n        let transferProgress: number = 0;\n\n        const batch = new Batch(options.concurrency);\n        for (let i = 0; i < numBlocks; i++) {\n          batch.addOperation(async (): Promise<any> => {\n            const blockID = generateBlockID(blockIDPrefix, i);\n            const start = blockSize * i;\n            const end = i === numBlocks - 1 ? size : start + blockSize;\n            const contentLength = end - start;\n            blockList.push(blockID);\n            await this.stageBlock(blockID, bodyFactory(start, contentLength), contentLength, {\n              abortSignal: options.abortSignal,\n              conditions: options.conditions,\n              encryptionScope: options.encryptionScope,\n              tracingOptions: updatedOptions.tracingOptions,\n            });\n            // Update progress after block is successfully uploaded to server, in case of block trying\n            // TODO: Hook with convenience layer progress event in finer level\n            transferProgress += contentLength;\n            if (options.onProgress) {\n              options.onProgress!({\n                loadedBytes: transferProgress,\n              });\n            }\n          });\n        }\n        await batch.do();\n\n        return this.commitBlockList(blockList, updatedOptions);\n      },\n    );\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Uploads a local file in blocks to a block blob.\n   *\n   * When file size lesser than or equal to 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n   * to commit the block list.\n   *\n   * @param filePath - Full path of local file\n   * @param options - Options to Upload to Block Blob operation.\n   * @returns Response data for the Blob Upload operation.\n   */\n  public async uploadFile(\n    filePath: string,\n    options: BlockBlobParallelUploadOptions = {},\n  ): Promise<BlobUploadCommonResponse> {\n    return tracingClient.withSpan(\"BlockBlobClient-uploadFile\", options, async (updatedOptions) => {\n      const size = (await fsStat(filePath)).size;\n      return this.uploadSeekableInternal(\n        (offset, count) => {\n          return () =>\n            fsCreateReadStream(filePath, {\n              autoClose: true,\n              end: count ? offset + count - 1 : Infinity,\n              start: offset,\n            });\n        },\n        size,\n        {\n          ...options,\n          tracingOptions: updatedOptions.tracingOptions,\n        },\n      );\n    });\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Uploads a Node.js Readable stream into block blob.\n   *\n   * PERFORMANCE IMPROVEMENT TIPS:\n   * * Input stream highWaterMark is better to set a same value with bufferSize\n   *    parameter, which will avoid Buffer.concat() operations.\n   *\n   * @param stream - Node.js Readable stream\n   * @param bufferSize - Size of every buffer allocated, also the block size in the uploaded block blob. Default value is 8MB\n   * @param maxConcurrency -  Max concurrency indicates the max number of buffers that can be allocated,\n   *                                 positive correlation with max uploading concurrency. Default value is 5\n   * @param options - Options to Upload Stream to Block Blob operation.\n   * @returns Response data for the Blob Upload operation.\n   */\n  public async uploadStream(\n    stream: Readable,\n    bufferSize: number = DEFAULT_BLOCK_BUFFER_SIZE_BYTES,\n    maxConcurrency: number = 5,\n    options: BlockBlobUploadStreamOptions = {},\n  ): Promise<BlobUploadCommonResponse> {\n    if (!options.blobHTTPHeaders) {\n      options.blobHTTPHeaders = {};\n    }\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\n      \"BlockBlobClient-uploadStream\",\n      options,\n      async (updatedOptions) => {\n        let blockNum = 0;\n        const blockIDPrefix = randomUUID();\n        let transferProgress: number = 0;\n        const blockList: string[] = [];\n\n        const scheduler = new BufferScheduler(\n          stream,\n          bufferSize,\n          maxConcurrency,\n          async (body, length) => {\n            const blockID = generateBlockID(blockIDPrefix, blockNum);\n            blockList.push(blockID);\n            blockNum++;\n\n            await this.stageBlock(blockID, body, length, {\n              customerProvidedKey: options.customerProvidedKey,\n              conditions: options.conditions,\n              encryptionScope: options.encryptionScope,\n              tracingOptions: updatedOptions.tracingOptions,\n            });\n\n            // Update progress after block is successfully uploaded to server, in case of block trying\n            transferProgress += length;\n            if (options.onProgress) {\n              options.onProgress({ loadedBytes: transferProgress });\n            }\n          },\n          // concurrency should set a smaller value than maxConcurrency, which is helpful to\n          // reduce the possibility when a outgoing handler waits for stream data, in\n          // this situation, outgoing handlers are blocked.\n          // Outgoing queue shouldn't be empty.\n          Math.ceil((maxConcurrency / 4) * 3),\n        );\n        await scheduler.do();\n\n        return assertResponse(\n          await this.commitBlockList(blockList, {\n            ...options,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n}\n\n/**\n * Options to configure the {@link PageBlobClient.create} operation.\n */\nexport interface PageBlobCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when creating a page blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * A user-controlled value that can be used to track requests.\n   * The value must be between 0 and 2^63 - 1. The default value is 0.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * HTTP headers to set when creating a page blob.\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: PremiumPageBlobTier | string;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.createIfNotExists} operation.\n */\nexport interface PageBlobCreateIfNotExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A user-controlled value that can be used to track requests.\n   * The value must be between 0 and 2^63 - 1. The default value is 0.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * HTTP headers to set when creating a page blob.\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: PremiumPageBlobTier | string;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.uploadPages} operation.\n */\nexport interface PageBlobUploadPagesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when uploading pages.\n   */\n  conditions?: PageBlobRequestConditions;\n  /**\n   * Callback to receive events on the progress of upload pages operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * An MD5 hash of the content. This hash is used to verify the integrity of the content during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the content. This hash is used to verify the integrity of the content during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.clearPages} operation.\n */\nexport interface PageBlobClearPagesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when clearing pages.\n   */\n  conditions?: PageBlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.getPageRanges} operation.\n */\nexport interface PageBlobGetPageRangesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure page blob - get page ranges segment operations.\n *\n * See:\n * - {@link PageBlobClient.listPageRangesSegment}\n * - {@link PageBlobClient.listPageRangeItemSegments}\n * - {@link PageBlobClient.listPageRangeItems}\n */\ninterface PageBlobListPageRangesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.listPageRanges} operation.\n */\nexport interface PageBlobListPageRangesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.getRangesDiff} operation.\n */\nexport interface PageBlobGetPageRangesDiffOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges diff.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * (unused)\n   */\n  range?: string;\n}\n\n/**\n * Options to configure page blob - get page ranges diff segment operations.\n *\n * See:\n * - {@link PageBlobClient.listPageRangesDiffSegment}\n * - {@link PageBlobClient.listPageRangeDiffItemSegments}\n * - {@link PageBlobClient.listPageRangeDiffItems}\n */\ninterface PageBlobListPageRangesDiffSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.listPageRangesDiff} operation.\n */\nexport interface PageBlobListPageRangesDiffOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges diff.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure {@link PageBlobClient.resize} operation.\n */\nexport interface PageBlobResizeOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when resizing a page blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure {@link PageBlobClient.updateSequenceNumber} operation.\n */\nexport interface PageBlobUpdateSequenceNumberOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when updating sequence number.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure {@link PageBlobClient.startCopyIncremental} operation.\n */\nexport interface PageBlobStartCopyIncrementalOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when starting a copy incremental operation.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure {@link PageBlobClient.uploadPagesFromURL} operation.\n */\nexport interface PageBlobUploadPagesFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when updating sequence number.\n   */\n  conditions?: PageBlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: MatchConditions & ModificationConditions;\n  /**\n   * An MD5 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n}\n\n/**\n * Contains response data for the {@link PageBlobClient.createIfNotExists} operation.\n */\nexport interface PageBlobCreateIfNotExistsResponse extends PageBlobCreateResponse {\n  /**\n   * Indicate whether the blob is successfully created. Is false when the blob is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * PageBlobClient defines a set of operations applicable to page blobs.\n */\nexport class PageBlobClient extends BlobClient {\n  /**\n   * pageBlobsContext provided by protocol layer.\n   */\n  private pageBlobContext: PageBlob;\n\n  /**\n   *\n   * Creates an instance of PageBlobClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of PageBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A Client string pointing to Azure Storage page blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of PageBlobClient.\n   *\n   * @param url - A URL string pointing to Azure Storage page blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\".\n   *                     You can append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey,\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName),\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\",\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(url, pipeline);\n    this.pageBlobContext = this.storageClientContext.pageBlob;\n  }\n\n  /**\n   * Creates a new PageBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new PageBlobClient object identical to the source but with the specified snapshot timestamp.\n   */\n  public withSnapshot(snapshot: string): PageBlobClient {\n    return new PageBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot,\n      ),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * Creates a page blob of the specified length. Call uploadPages to upload data\n   * data to a page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param size - size of the page blob.\n   * @param options - Options to the Page Blob Create operation.\n   * @returns Response data for the Page Blob Create operation.\n   */\n  public async create(\n    size: number,\n    options: PageBlobCreateOptions = {},\n  ): Promise<PageBlobCreateResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"PageBlobClient-create\", options, async (updatedOptions) => {\n      return assertResponse<PageBlobCreateHeaders, PageBlobCreateHeaders>(\n        await this.pageBlobContext.create(0, size, {\n          abortSignal: options.abortSignal,\n          blobHttpHeaders: options.blobHTTPHeaders,\n          blobSequenceNumber: options.blobSequenceNumber,\n          leaseAccessConditions: options.conditions,\n          metadata: options.metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n          immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n          legalHold: options.legalHold,\n          tier: toAccessTier(options.tier),\n          blobTagsString: toBlobTagsString(options.tags),\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Creates a page blob of the specified length. Call uploadPages to upload data\n   * data to a page blob. If the blob with the same name already exists, the content\n   * of the existing blob will remain unchanged.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param size - size of the page blob.\n   * @param options -\n   */\n  public async createIfNotExists(\n    size: number,\n    options: PageBlobCreateIfNotExistsOptions = {},\n  ): Promise<PageBlobCreateIfNotExistsResponse> {\n    return tracingClient.withSpan(\n      \"PageBlobClient-createIfNotExists\",\n      options,\n      async (updatedOptions) => {\n        try {\n          const conditions = { ifNoneMatch: ETagAny };\n          const res = assertResponse(\n            await this.create(size, {\n              ...options,\n              conditions,\n              tracingOptions: updatedOptions.tracingOptions,\n            }),\n          );\n          return {\n            succeeded: true,\n            ...res,\n            _response: res._response, // _response is made non-enumerable\n          };\n        } catch (e: any) {\n          if (e.details?.errorCode === \"BlobAlreadyExists\") {\n            return {\n              succeeded: false,\n              ...e.response?.parsedHeaders,\n              _response: e.response,\n            };\n          }\n\n          throw e;\n        }\n      },\n    );\n  }\n\n  /**\n   * Writes 1 or more pages to the page blob. The start and end offsets must be a multiple of 512.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n   *\n   * @param body - Data to upload\n   * @param offset - Offset of destination page blob\n   * @param count - Content length of the body, also number of bytes to be uploaded\n   * @param options - Options to the Page Blob Upload Pages operation.\n   * @returns Response data for the Page Blob Upload Pages operation.\n   */\n  public async uploadPages(\n    body: HttpRequestBody,\n    offset: number,\n    count: number,\n    options: PageBlobUploadPagesOptions = {},\n  ): Promise<PageBlobUploadPagesResponse> {\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\"PageBlobClient-uploadPages\", options, async (updatedOptions) => {\n      return assertResponse<PageBlobUploadPagesHeaders, PageBlobUploadPagesHeaders>(\n        await this.pageBlobContext.uploadPages(count, body, {\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          requestOptions: {\n            onUploadProgress: options.onProgress,\n          },\n          range: rangeToString({ offset, count }),\n          sequenceNumberAccessConditions: options.conditions,\n          transactionalContentMD5: options.transactionalContentMD5,\n          transactionalContentCrc64: options.transactionalContentCrc64,\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob where the\n   * contents are read from a URL.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-page-from-url\n   *\n   * @param sourceURL - Specify a URL to the copy source, Shared Access Signature(SAS) maybe needed for authentication\n   * @param sourceOffset - The source offset to copy from. Pass 0 to copy from the beginning of source page blob\n   * @param destOffset - Offset of destination page blob\n   * @param count - Number of bytes to be uploaded from source page blob\n   * @param options -\n   */\n  public async uploadPagesFromURL(\n    sourceURL: string,\n    sourceOffset: number,\n    destOffset: number,\n    count: number,\n    options: PageBlobUploadPagesFromURLOptions = {},\n  ): Promise<PageBlobUploadPagesFromURLResponse> {\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n    return tracingClient.withSpan(\n      \"PageBlobClient-uploadPagesFromURL\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<PageBlobUploadPagesFromURLHeaders, PageBlobUploadPagesFromURLHeaders>(\n          await this.pageBlobContext.uploadPagesFromURL(\n            sourceURL,\n            rangeToString({ offset: sourceOffset, count }),\n            0,\n            rangeToString({ offset: destOffset, count }),\n            {\n              abortSignal: options.abortSignal,\n              sourceContentMD5: options.sourceContentMD5,\n              sourceContentCrc64: options.sourceContentCrc64,\n              leaseAccessConditions: options.conditions,\n              sequenceNumberAccessConditions: options.conditions,\n              modifiedAccessConditions: {\n                ...options.conditions,\n                ifTags: options.conditions?.tagConditions,\n              },\n              sourceModifiedAccessConditions: {\n                sourceIfMatch: options.sourceConditions?.ifMatch,\n                sourceIfModifiedSince: options.sourceConditions?.ifModifiedSince,\n                sourceIfNoneMatch: options.sourceConditions?.ifNoneMatch,\n                sourceIfUnmodifiedSince: options.sourceConditions?.ifUnmodifiedSince,\n              },\n              cpkInfo: options.customerProvidedKey,\n              encryptionScope: options.encryptionScope,\n              copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n              tracingOptions: updatedOptions.tracingOptions,\n            },\n          ),\n        );\n      },\n    );\n  }\n\n  /**\n   * Frees the specified pages from the page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n   *\n   * @param offset - Starting byte position of the pages to clear.\n   * @param count - Number of bytes to clear.\n   * @param options - Options to the Page Blob Clear Pages operation.\n   * @returns Response data for the Page Blob Clear Pages operation.\n   */\n  public async clearPages(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobClearPagesOptions = {},\n  ): Promise<PageBlobClearPagesResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\"PageBlobClient-clearPages\", options, async (updatedOptions) => {\n      return assertResponse<PageBlobClearPagesHeaders, PageBlobClearPagesHeaders>(\n        await this.pageBlobContext.clearPages(0, {\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          range: rangeToString({ offset, count }),\n          sequenceNumberAccessConditions: options.conditions,\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Returns the list of valid page ranges for a page blob or snapshot of a page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param options - Options to the Page Blob Get Ranges operation.\n   * @returns Response data for the Page Blob Get Ranges operation.\n   */\n  public async getPageRanges(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobGetPageRangesOptions = {},\n  ): Promise<PageBlobGetPageRangesResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\n      \"PageBlobClient-getPageRanges\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          PageBlobGetPageRangesResponseInternal,\n          PageBlobGetPageRangesHeaders,\n          PageListInternal\n        >(\n          await this.pageBlobContext.getPageRanges({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            range: rangeToString({ offset, count }),\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n        return rangeResponseFromModel(response);\n      },\n    );\n  }\n\n  /**\n   * getPageRangesSegment returns a single segment of page ranges starting from the\n   * specified Marker. Use an empty Marker to start enumeration from the beginning.\n   * After getting a segment, process it, and then call getPageRangesSegment again\n   * (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param options - Options to PageBlob Get Page Ranges Segment operation.\n   */\n  private async listPageRangesSegment(\n    offset: number = 0,\n    count?: number,\n    marker?: string,\n    options: PageBlobListPageRangesSegmentOptions = {},\n  ): Promise<PageBlobGetPageRangesResponseModel> {\n    return tracingClient.withSpan(\n      \"PageBlobClient-getPageRangesSegment\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          PageBlobGetPageRangesResponseInternal,\n          PageBlobGetPageRangesHeaders,\n          PageListInternal\n        >(\n          await this.pageBlobContext.getPageRanges({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            range: rangeToString({ offset, count }),\n            marker: marker,\n            maxPageSize: options.maxPageSize,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n  /**\n   * Returns an AsyncIterableIterator for {@link PageBlobGetPageRangesResponseModel}\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param marker - A string value that identifies the portion of\n   *                          the get of page ranges to be returned with the next getting operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          getting operation did not return all page ranges remaining within the current page.\n   *                          The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of get\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to List Page Ranges operation.\n   */\n  private async *listPageRangeItemSegments(\n    offset: number = 0,\n    count?: number,\n    marker?: string,\n    options: PageBlobListPageRangesSegmentOptions = {},\n  ): AsyncIterableIterator<PageBlobGetPageRangesResponseModel> {\n    let getPageRangeItemSegmentsResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        getPageRangeItemSegmentsResponse = await this.listPageRangesSegment(\n          offset,\n          count,\n          marker,\n          options,\n        );\n        marker = getPageRangeItemSegmentsResponse.continuationToken;\n        yield await getPageRangeItemSegmentsResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator of {@link PageRangeInfo} objects\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param options - Options to List Page Ranges operation.\n   */\n  private async *listPageRangeItems(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobListPageRangesSegmentOptions = {},\n  ): AsyncIterableIterator<PageRangeInfo> {\n    let marker: string | undefined;\n    for await (const getPageRangesSegment of this.listPageRangeItemSegments(\n      offset,\n      count,\n      marker,\n      options,\n    )) {\n      yield* ExtractPageRangeInfoItems(getPageRangesSegment);\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list of page ranges for a page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   *  .byPage() returns an async iterable iterator to list of page ranges for a page blob.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * // Get the pageBlobClient before you run these snippets,\n   * // Can be obtained from `blobServiceClient.getContainerClient(\"<your-container-name>\").getPageBlobClient(\"<your-blob-name>\");`\n   * let i = 1;\n   * for await (const pageRange of pageBlobClient.listPageRanges()) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = pageBlobClient.listPageRanges();\n   * let pageRangeItem = await iter.next();\n   * while (!pageRangeItem.done) {\n   *   console.log(`Page range ${i++}: ${pageRangeItem.value.start} - ${pageRangeItem.value.end}, IsClear: ${pageRangeItem.value.isClear}`);\n   *   pageRangeItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of pageBlobClient.listPageRanges().byPage({ maxPageSize: 20 })) {\n   *   for (const pageRange of response) {\n   *     console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = pageBlobClient.listPageRanges().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 page ranges\n   * for (const pageRange of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   *\n   * iterator = pageBlobClient.listPageRanges().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 page ranges\n   * for (const blob of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param options - Options to the Page Blob Get Ranges operation.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listPageRanges(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobListPageRangesOptions = {},\n  ): PagedAsyncIterableIterator<PageRangeInfo, PageBlobGetPageRangesResponseModel> {\n    options.conditions = options.conditions || {};\n    // AsyncIterableIterator to iterate over blobs\n    const iter = this.listPageRangeItems(offset, count, options);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listPageRangeItemSegments(offset, count, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...options,\n        });\n      },\n    };\n  }\n\n  /**\n   * Gets the collection of page ranges that differ between a specified snapshot and this page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page blob\n   * @param count - Number of bytes to get ranges diff.\n   * @param prevSnapshot - Timestamp of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   * @returns Response data for the Page Blob Get Page Range Diff operation.\n   */\n  public async getPageRangesDiff(\n    offset: number,\n    count: number,\n    prevSnapshot: string,\n    options: PageBlobGetPageRangesDiffOptions = {},\n  ): Promise<PageBlobGetPageRangesDiffResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\n      \"PageBlobClient-getPageRangesDiff\",\n      options,\n      async (updatedOptions) => {\n        const result = assertResponse<\n          PageBlobGetPageRangesDiffResponseInternal,\n          PageBlobGetPageRangesDiffHeaders,\n          PageListInternal\n        >(\n          await this.pageBlobContext.getPageRangesDiff({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            prevsnapshot: prevSnapshot,\n            range: rangeToString({ offset, count }),\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n        return rangeResponseFromModel(result);\n      },\n    );\n  }\n\n  /**\n   * getPageRangesDiffSegment returns a single segment of page ranges starting from the\n   * specified Marker for difference between previous snapshot and the target page blob.\n   * Use an empty Marker to start enumeration from the beginning.\n   * After getting a segment, process it, and then call getPageRangesDiffSegment again\n   * (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshotOrUrl - Timestamp of snapshot to retrieve the difference or URL of snapshot to retrieve the difference.\n   * @param marker - A string value that identifies the portion of the get to be returned with the next get operation.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   */\n  private async listPageRangesDiffSegment(\n    offset: number,\n    count: number,\n    prevSnapshotOrUrl: string,\n    marker?: string,\n    options: PageBlobListPageRangesDiffSegmentOptions = {},\n  ): Promise<PageBlobGetPageRangesResponseModel> {\n    return tracingClient.withSpan(\n      \"PageBlobClient-getPageRangesDiffSegment\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          PageBlobGetPageRangesResponseInternal,\n          PageBlobGetPageRangesHeaders,\n          PageListInternal\n        >(\n          await this.pageBlobContext.getPageRangesDiff({\n            abortSignal: options?.abortSignal,\n            leaseAccessConditions: options?.conditions,\n            modifiedAccessConditions: {\n              ...options?.conditions,\n              ifTags: options?.conditions?.tagConditions,\n            },\n            prevsnapshot: prevSnapshotOrUrl,\n            range: rangeToString({\n              offset: offset,\n              count: count,\n            }),\n            marker: marker,\n            maxPageSize: options?.maxPageSize,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n  /**\n   * Returns an AsyncIterableIterator for {@link PageBlobGetPageRangesDiffResponseModel}\n   *\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshotOrUrl - Timestamp of snapshot to retrieve the difference or URL of snapshot to retrieve the difference.\n   * @param marker - A string value that identifies the portion of\n   *                          the get of page ranges to be returned with the next getting operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          getting operation did not return all page ranges remaining within the current page.\n   *                          The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of get\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   */\n  private async *listPageRangeDiffItemSegments(\n    offset: number,\n    count: number,\n    prevSnapshotOrUrl: string,\n    marker?: string,\n    options?: PageBlobListPageRangesDiffSegmentOptions,\n  ): AsyncIterableIterator<PageBlobGetPageRangesDiffResponseModel> {\n    let getPageRangeItemSegmentsResponse: PageBlobGetPageRangesResponseModel;\n    if (!!marker || marker === undefined) {\n      do {\n        getPageRangeItemSegmentsResponse = await this.listPageRangesDiffSegment(\n          offset,\n          count,\n          prevSnapshotOrUrl,\n          marker,\n          options,\n        );\n        marker = getPageRangeItemSegmentsResponse.continuationToken;\n        yield await getPageRangeItemSegmentsResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator of {@link PageRangeInfo} objects\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshotOrUrl - Timestamp of snapshot to retrieve the difference or URL of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   */\n  private async *listPageRangeDiffItems(\n    offset: number,\n    count: number,\n    prevSnapshotOrUrl: string,\n    options?: PageBlobListPageRangesDiffSegmentOptions,\n  ): AsyncIterableIterator<PageRangeInfo> {\n    let marker: string | undefined;\n    for await (const getPageRangesSegment of this.listPageRangeDiffItemSegments(\n      offset,\n      count,\n      prevSnapshotOrUrl,\n      marker,\n      options,\n    )) {\n      yield* ExtractPageRangeInfoItems(getPageRangesSegment);\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list of page ranges that differ between a specified snapshot and this page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   *  .byPage() returns an async iterable iterator to list of page ranges that differ between a specified snapshot and this page blob.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * // Get the pageBlobClient before you run these snippets,\n   * // Can be obtained from `blobServiceClient.getContainerClient(\"<your-container-name>\").getPageBlobClient(\"<your-blob-name>\");`\n   * let i = 1;\n   * for await (const pageRange of pageBlobClient.listPageRangesDiff()) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = pageBlobClient.listPageRangesDiff();\n   * let pageRangeItem = await iter.next();\n   * while (!pageRangeItem.done) {\n   *   console.log(`Page range ${i++}: ${pageRangeItem.value.start} - ${pageRangeItem.value.end}, IsClear: ${pageRangeItem.value.isClear}`);\n   *   pageRangeItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of pageBlobClient.listPageRangesDiff().byPage({ maxPageSize: 20 })) {\n   *   for (const pageRange of response) {\n   *     console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = pageBlobClient.listPageRangesDiff().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 page ranges\n   * for (const pageRange of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   *\n   * iterator = pageBlobClient.listPageRangesDiff().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 page ranges\n   * for (const blob of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshot - Timestamp of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Ranges operation.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listPageRangesDiff(\n    offset: number,\n    count: number,\n    prevSnapshot: string,\n    options: PageBlobListPageRangesDiffOptions = {},\n  ): PagedAsyncIterableIterator<PageRangeInfo, PageBlobGetPageRangesDiffResponseModel> {\n    options.conditions = options.conditions || {};\n\n    // AsyncIterableIterator to iterate over blobs\n    const iter = this.listPageRangeDiffItems(offset, count, prevSnapshot, {\n      ...options,\n    });\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listPageRangeDiffItemSegments(\n          offset,\n          count,\n          prevSnapshot,\n          settings.continuationToken,\n          {\n            maxPageSize: settings.maxPageSize,\n            ...options,\n          },\n        );\n      },\n    };\n  }\n\n  /**\n   * Gets the collection of page ranges that differ between a specified snapshot and this page blob for managed disks.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page blob\n   * @param count - Number of bytes to get ranges diff.\n   * @param prevSnapshotUrl - URL of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   * @returns Response data for the Page Blob Get Page Range Diff operation.\n   */\n  public async getPageRangesDiffForManagedDisks(\n    offset: number,\n    count: number,\n    prevSnapshotUrl: string,\n    options: PageBlobGetPageRangesDiffOptions = {},\n  ): Promise<PageBlobGetPageRangesDiffResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\n      \"PageBlobClient-GetPageRangesDiffForManagedDisks\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          PageBlobGetPageRangesDiffResponseInternal,\n          PageBlobGetPageRangesDiffHeaders,\n          PageListInternal\n        >(\n          await this.pageBlobContext.getPageRangesDiff({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            prevSnapshotUrl,\n            range: rangeToString({ offset, count }),\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n        return rangeResponseFromModel(response);\n      },\n    );\n  }\n\n  /**\n   * Resizes the page blob to the specified size (which must be a multiple of 512).\n   * @see https://docs.microsoft.com/rest/api/storageservices/set-blob-properties\n   *\n   * @param size - Target size\n   * @param options - Options to the Page Blob Resize operation.\n   * @returns Response data for the Page Blob Resize operation.\n   */\n  public async resize(\n    size: number,\n    options: PageBlobResizeOptions = {},\n  ): Promise<PageBlobResizeResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\"PageBlobClient-resize\", options, async (updatedOptions) => {\n      return assertResponse<PageBlobResizeHeaders, PageBlobResizeHeaders>(\n        await this.pageBlobContext.resize(size, {\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          encryptionScope: options.encryptionScope,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Sets a page blob's sequence number.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n   *\n   * @param sequenceNumberAction - Indicates how the service should modify the blob's sequence number.\n   * @param sequenceNumber - Required if sequenceNumberAction is max or update\n   * @param options - Options to the Page Blob Update Sequence Number operation.\n   * @returns Response data for the Page Blob Update Sequence Number operation.\n   */\n  public async updateSequenceNumber(\n    sequenceNumberAction: SequenceNumberActionType,\n    sequenceNumber?: number,\n    options: PageBlobUpdateSequenceNumberOptions = {},\n  ): Promise<PageBlobUpdateSequenceNumberResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\n      \"PageBlobClient-updateSequenceNumber\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          PageBlobUpdateSequenceNumberHeaders,\n          PageBlobUpdateSequenceNumberHeaders\n        >(\n          await this.pageBlobContext.updateSequenceNumber(sequenceNumberAction, {\n            abortSignal: options.abortSignal,\n            blobSequenceNumber: sequenceNumber,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Begins an operation to start an incremental copy from one page blob's snapshot to this page blob.\n   * The snapshot is copied such that only the differential changes between the previously\n   * copied snapshot are transferred to the destination.\n   * The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual.\n   * @see https://docs.microsoft.com/rest/api/storageservices/incremental-copy-blob\n   * @see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots\n   *\n   * @param copySource - Specifies the name of the source page blob snapshot. For example,\n   *                            https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param options - Options to the Page Blob Copy Incremental operation.\n   * @returns Response data for the Page Blob Copy Incremental operation.\n   */\n  public async startCopyIncremental(\n    copySource: string,\n    options: PageBlobStartCopyIncrementalOptions = {},\n  ): Promise<PageBlobCopyIncrementalResponse> {\n    return tracingClient.withSpan(\n      \"PageBlobClient-startCopyIncremental\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<PageBlobCopyIncrementalHeaders, PageBlobCopyIncrementalHeaders>(\n          await this.pageBlobContext.copyIncremental(copySource, {\n            abortSignal: options.abortSignal,\n            modifiedAccessConditions: {\n              ...options.conditions,\n              ifTags: options.conditions?.tagConditions,\n            },\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// This file is used as a shim of \"BlobDownloadResponse\" for some browser bundlers\n// when trying to bundle \"BlobDownloadResponse\"\n// \"BlobDownloadResponse\" class is only available in Node.js runtime\nexport const BlobDownloadResponse = 1;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { ServiceSubmitBatchResponseModel } from \"./generatedModels\";\nimport { blobToString } from \"./utils/utils.browser\";\n\nexport async function getBodyAsText(\n  batchResponse: ServiceSubmitBatchResponseModel,\n): Promise<string> {\n  const blob = (await batchResponse.blobBody) as Blob;\n  return blobToString(blob);\n}\n\nexport function utf8ByteLength(str: string): number {\n  return new Blob([str]).size;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * Convert a Browser Blob object into ArrayBuffer.\n *\n * @param blob -\n */\nexport async function blobToArrayBuffer(blob: Blob): Promise<ArrayBuffer> {\n  const fileReader = new FileReader();\n  return new Promise<ArrayBuffer>((resolve, reject) => {\n    fileReader.onloadend = (ev: any) => {\n      resolve(ev.target!.result);\n    };\n    fileReader.onerror = reject;\n    fileReader.readAsArrayBuffer(blob);\n  });\n}\n\n/**\n * Convert a Browser Blob object into string.\n *\n * @param blob -\n */\nexport async function blobToString(blob: Blob): Promise<string> {\n  const fileReader = new FileReader();\n  return new Promise<string>((resolve, reject) => {\n    fileReader.onloadend = (ev: any) => {\n      resolve(ev.target!.result);\n    };\n    fileReader.onerror = reject;\n    fileReader.readAsText(blob);\n  });\n}\n\nexport function streamToBuffer(): void {\n  /* empty */\n}\n\nexport function streamToBuffer2(): void {\n  /* empty */\n}\n\nexport function readStreamToLocalFile(): void {\n  /* empty */\n}\n\nexport const fsStat = function stat(): void {\n  /* empty */\n};\n\nexport const fsCreateReadStream = function createReadStream(): void {\n  /* empty */\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createHttpHeaders } from \"@azure/core-rest-pipeline\";\nimport { toHttpHeadersLike } from \"@azure/core-http-compat\";\n\nimport type { ServiceSubmitBatchResponseModel } from \"./generatedModels\";\nimport {\n  HTTP_VERSION_1_1,\n  HTTP_LINE_ENDING,\n  HeaderConstants,\n  HTTPURLConnection,\n} from \"./utils/constants\";\nimport { getBodyAsText } from \"./BatchUtils\";\nimport type { BatchSubRequest } from \"./BlobBatch\";\nimport type { BatchSubResponse, ParsedBatchResponse } from \"./BatchResponse\";\nimport { logger } from \"./log\";\n\nconst HTTP_HEADER_DELIMITER = \": \";\nconst SPACE_DELIMITER = \" \";\nconst NOT_FOUND = -1;\n\n/**\n * Util class for parsing batch response.\n */\nexport class BatchResponseParser {\n  private readonly batchResponse: ServiceSubmitBatchResponseModel;\n  private readonly responseBatchBoundary: string;\n  private readonly perResponsePrefix: string;\n  private readonly batchResponseEnding: string;\n  private readonly subRequests: Map<number, BatchSubRequest>;\n\n  constructor(\n    batchResponse: ServiceSubmitBatchResponseModel,\n    subRequests: Map<number, BatchSubRequest>,\n  ) {\n    if (!batchResponse || !batchResponse.contentType) {\n      // In special case(reported), server may return invalid content-type which could not be parsed.\n      throw new RangeError(\"batchResponse is malformed or doesn't contain valid content-type.\");\n    }\n\n    if (!subRequests || subRequests.size === 0) {\n      // This should be prevent during coding.\n      throw new RangeError(\"Invalid state: subRequests is not provided or size is 0.\");\n    }\n\n    this.batchResponse = batchResponse;\n    this.subRequests = subRequests;\n    this.responseBatchBoundary = this.batchResponse.contentType!.split(\"=\")[1];\n    this.perResponsePrefix = `--${this.responseBatchBoundary}${HTTP_LINE_ENDING}`;\n    this.batchResponseEnding = `--${this.responseBatchBoundary}--`;\n  }\n\n  // For example of response, please refer to https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#response\n  public async parseBatchResponse(): Promise<ParsedBatchResponse> {\n    // When logic reach here, suppose batch request has already succeeded with 202, so we can further parse\n    // sub request's response.\n    if (this.batchResponse._response.status !== HTTPURLConnection.HTTP_ACCEPTED) {\n      throw new Error(\n        `Invalid state: batch request failed with status: '${this.batchResponse._response.status}'.`,\n      );\n    }\n\n    const responseBodyAsText = await getBodyAsText(this.batchResponse);\n\n    const subResponses = responseBodyAsText\n      .split(this.batchResponseEnding)[0] // string after ending is useless\n      .split(this.perResponsePrefix)\n      .slice(1); // string before first response boundary is useless\n    const subResponseCount = subResponses.length;\n\n    // Defensive coding in case of potential error parsing.\n    // Note: subResponseCount == 1 is special case where sub request is invalid.\n    // We try to prevent such cases through early validation, e.g. validate sub request count >= 1.\n    // While in unexpected sub request invalid case, we allow sub response to be parsed and return to user.\n    if (subResponseCount !== this.subRequests.size && subResponseCount !== 1) {\n      throw new Error(\"Invalid state: sub responses' count is not equal to sub requests' count.\");\n    }\n\n    const deserializedSubResponses: Array<BatchSubResponse> = new Array(subResponseCount);\n    let subResponsesSucceededCount: number = 0;\n    let subResponsesFailedCount: number = 0;\n\n    // Parse sub subResponses.\n    for (let index = 0; index < subResponseCount; index++) {\n      const subResponse = subResponses[index];\n      const deserializedSubResponse = {} as BatchSubResponse;\n      deserializedSubResponse.headers = toHttpHeadersLike(createHttpHeaders());\n\n      const responseLines = subResponse.split(`${HTTP_LINE_ENDING}`);\n      let subRespHeaderStartFound = false;\n      let subRespHeaderEndFound = false;\n      let subRespFailed = false;\n      let contentId = NOT_FOUND;\n\n      for (const responseLine of responseLines) {\n        if (!subRespHeaderStartFound) {\n          // Convention line to indicate content ID\n          if (responseLine.startsWith(HeaderConstants.CONTENT_ID)) {\n            contentId = parseInt(responseLine.split(HTTP_HEADER_DELIMITER)[1]);\n          }\n\n          // Http version line with status code indicates the start of sub request's response.\n          // Example: HTTP/1.1 202 Accepted\n          if (responseLine.startsWith(HTTP_VERSION_1_1)) {\n            subRespHeaderStartFound = true;\n\n            const tokens = responseLine.split(SPACE_DELIMITER);\n            deserializedSubResponse.status = parseInt(tokens[1]);\n            deserializedSubResponse.statusMessage = tokens.slice(2).join(SPACE_DELIMITER);\n          }\n\n          continue; // Skip convention headers not specifically for sub request i.e. Content-Type: application/http and Content-ID: *\n        }\n\n        if (responseLine.trim() === \"\") {\n          // Sub response's header start line already found, and the first empty line indicates header end line found.\n          if (!subRespHeaderEndFound) {\n            subRespHeaderEndFound = true;\n          }\n\n          continue; // Skip empty line\n        }\n\n        // Note: when code reach here, it indicates subRespHeaderStartFound == true\n        if (!subRespHeaderEndFound) {\n          if (responseLine.indexOf(HTTP_HEADER_DELIMITER) === -1) {\n            // Defensive coding to prevent from missing valuable lines.\n            throw new Error(\n              `Invalid state: find non-empty line '${responseLine}' without HTTP header delimiter '${HTTP_HEADER_DELIMITER}'.`,\n            );\n          }\n\n          // Parse headers of sub response.\n          const tokens = responseLine.split(HTTP_HEADER_DELIMITER);\n          deserializedSubResponse.headers.set(tokens[0], tokens[1]);\n          if (tokens[0] === HeaderConstants.X_MS_ERROR_CODE) {\n            deserializedSubResponse.errorCode = tokens[1];\n            subRespFailed = true;\n          }\n        } else {\n          // Assemble body of sub response.\n          if (!deserializedSubResponse.bodyAsText) {\n            deserializedSubResponse.bodyAsText = \"\";\n          }\n\n          deserializedSubResponse.bodyAsText += responseLine;\n        }\n      } // Inner for end\n\n      // The response will contain the Content-ID header for each corresponding subrequest response to use for tracking.\n      // The Content-IDs are set to a valid index in the subrequests we sent. In the status code 202 path, we could expect it\n      // to be 1-1 mapping from the [0, subRequests.size) to the Content-IDs returned. If not, we simply don't return that\n      // unexpected subResponse in the parsed reponse and we can always look it up in the raw response for debugging purpose.\n      if (\n        contentId !== NOT_FOUND &&\n        Number.isInteger(contentId) &&\n        contentId >= 0 &&\n        contentId < this.subRequests.size &&\n        deserializedSubResponses[contentId] === undefined\n      ) {\n        deserializedSubResponse._request = this.subRequests.get(contentId)!;\n        deserializedSubResponses[contentId] = deserializedSubResponse;\n      } else {\n        logger.error(\n          `subResponses[${index}] is dropped as the Content-ID is not found or invalid, Content-ID: ${contentId}`,\n        );\n      }\n\n      if (subRespFailed) {\n        subResponsesFailedCount++;\n      } else {\n        subResponsesSucceededCount++;\n      }\n    }\n\n    return {\n      subResponses: deserializedSubResponses,\n      subResponsesSucceededCount: subResponsesSucceededCount,\n      subResponsesFailedCount: subResponsesFailedCount,\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nenum MutexLockStatus {\n  LOCKED,\n  UNLOCKED,\n}\n\ntype Callback = (...args: any[]) => any;\n\n/**\n * An async mutex lock.\n */\nexport class Mutex {\n  /**\n   * Lock for a specific key. If the lock has been acquired by another customer, then\n   * will wait until getting the lock.\n   *\n   * @param key - lock key\n   */\n  public static async lock(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      if (this.keys[key] === undefined || this.keys[key] === MutexLockStatus.UNLOCKED) {\n        this.keys[key] = MutexLockStatus.LOCKED;\n        resolve();\n      } else {\n        this.onUnlockEvent(key, () => {\n          this.keys[key] = MutexLockStatus.LOCKED;\n          resolve();\n        });\n      }\n    });\n  }\n\n  /**\n   * Unlock a key.\n   *\n   * @param key -\n   */\n  public static async unlock(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      if (this.keys[key] === MutexLockStatus.LOCKED) {\n        this.emitUnlockEvent(key);\n      }\n      delete this.keys[key];\n      resolve();\n    });\n  }\n\n  private static keys: { [key: string]: MutexLockStatus } = {};\n  private static listeners: { [key: string]: Callback[] } = {};\n\n  private static onUnlockEvent(key: string, handler: Callback) {\n    if (this.listeners[key] === undefined) {\n      this.listeners[key] = [handler];\n    } else {\n      this.listeners[key].push(handler);\n    }\n  }\n\n  private static emitUnlockEvent(key: string) {\n    if (this.listeners[key] !== undefined && this.listeners[key].length > 0) {\n      const handler = this.listeners[key].shift();\n      setImmediate(() => {\n        handler!.call(this);\n      });\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { randomUUID } from \"@azure/core-util\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport type {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\nimport {\n  bearerTokenAuthenticationPolicy,\n  createEmptyPipeline,\n  createHttpHeaders,\n} from \"@azure/core-rest-pipeline\";\nimport { isNode } from \"@azure/core-util\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport type { BlobDeleteOptions, BlobSetTierOptions } from \"./Clients\";\nimport { BlobClient } from \"./Clients\";\nimport type { AccessTier } from \"./generatedModels\";\nimport { Mutex } from \"./utils/Mutex\";\nimport { Pipeline } from \"./Pipeline\";\nimport { getURLPath, getURLPathAndQuery, iEqual } from \"./utils/utils.common\";\nimport { stringifyXML } from \"@azure/core-xml\";\nimport {\n  HeaderConstants,\n  BATCH_MAX_REQUEST,\n  HTTP_VERSION_1_1,\n  HTTP_LINE_ENDING,\n  StorageOAuthScopes,\n} from \"./utils/constants\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { tracingClient } from \"./utils/tracing\";\nimport { authorizeRequestOnTenantChallenge, serializationPolicy } from \"@azure/core-client\";\nimport { storageSharedKeyCredentialPolicy } from \"./policies/StorageSharedKeyCredentialPolicyV2\";\n\n/**\n * A request associated with a batch operation.\n */\nexport interface BatchSubRequest {\n  /**\n   * The URL of the resource to request operation.\n   */\n  url: string;\n\n  /**\n   * The credential used for sub request.\n   * Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service.\n   * You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   */\n  credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n}\n\n/**\n * A BlobBatch represents an aggregated set of operations on blobs.\n * Currently, only `delete` and `setAccessTier` are supported.\n */\nexport class BlobBatch {\n  private batchRequest: InnerBatchRequest;\n  private readonly batch: string = \"batch\";\n  private batchType: \"delete\" | \"setAccessTier\" | undefined;\n\n  constructor() {\n    this.batchRequest = new InnerBatchRequest();\n  }\n\n  /**\n   * Get the value of Content-Type for a batch request.\n   * The value must be multipart/mixed with a batch boundary.\n   * Example: multipart/mixed; boundary=batch_a81786c8-e301-4e42-a729-a32ca24ae252\n   */\n  public getMultiPartContentType(): string {\n    return this.batchRequest.getMultipartContentType();\n  }\n\n  /**\n   * Get assembled HTTP request body for sub requests.\n   */\n  public getHttpRequestBody(): string {\n    return this.batchRequest.getHttpRequestBody();\n  }\n\n  /**\n   * Get sub requests that are added into the batch request.\n   */\n  public getSubRequests(): Map<number, BatchSubRequest> {\n    return this.batchRequest.getSubRequests();\n  }\n\n  private async addSubRequestInternal(\n    subRequest: BatchSubRequest,\n    assembleSubRequestFunc: () => Promise<void>,\n  ): Promise<void> {\n    await Mutex.lock(this.batch);\n\n    try {\n      this.batchRequest.preAddSubRequest(subRequest);\n      await assembleSubRequestFunc();\n      this.batchRequest.postAddSubRequest(subRequest);\n    } finally {\n      await Mutex.unlock(this.batch);\n    }\n  }\n\n  private setBatchType(batchType: \"delete\" | \"setAccessTier\"): void {\n    if (!this.batchType) {\n      this.batchType = batchType;\n    }\n    if (this.batchType !== batchType) {\n      throw new RangeError(\n        `BlobBatch only supports one operation type per batch and it already is being used for ${this.batchType} operations.`,\n      );\n    }\n  }\n\n  /**\n   * The deleteBlob operation marks the specified blob or snapshot for deletion.\n   * The blob is later deleted during garbage collection.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operation will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param url - The url of the blob resource to delete.\n   * @param credential - Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options -\n   */\n  public async deleteBlob(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: BlobDeleteOptions,\n  ): Promise<void>;\n\n  /**\n   * The deleteBlob operation marks the specified blob or snapshot for deletion.\n   * The blob is later deleted during garbage collection.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operation will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClient - The BlobClient.\n   * @param options -\n   */\n  public async deleteBlob(blobClient: BlobClient, options?: BlobDeleteOptions): Promise<void>;\n\n  public async deleteBlob(\n    urlOrBlobClient: string | BlobClient,\n    credentialOrOptions:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | BlobDeleteOptions\n      | undefined,\n    options?: BlobDeleteOptions,\n  ): Promise<void> {\n    let url: string;\n    let credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n\n    if (\n      typeof urlOrBlobClient === \"string\" &&\n      ((isNode && credentialOrOptions instanceof StorageSharedKeyCredential) ||\n        credentialOrOptions instanceof AnonymousCredential ||\n        isTokenCredential(credentialOrOptions))\n    ) {\n      // First overload\n      url = urlOrBlobClient;\n      credential = credentialOrOptions;\n    } else if (urlOrBlobClient instanceof BlobClient) {\n      // Second overload\n      url = urlOrBlobClient.url;\n      credential = urlOrBlobClient.credential;\n      options = credentialOrOptions as BlobDeleteOptions;\n    } else {\n      throw new RangeError(\n        \"Invalid arguments. Either url and credential, or BlobClient need be provided.\",\n      );\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    return tracingClient.withSpan(\n      \"BatchDeleteRequest-addSubRequest\",\n      options,\n      async (updatedOptions) => {\n        this.setBatchType(\"delete\");\n        await this.addSubRequestInternal(\n          {\n            url: url,\n            credential: credential,\n          },\n          async () => {\n            await new BlobClient(url, this.batchRequest.createPipeline(credential)).delete(\n              updatedOptions,\n            );\n          },\n        );\n      },\n    );\n  }\n\n  /**\n   * The setBlobAccessTier operation sets the tier on a blob.\n   * The operation is allowed on block blobs in a blob storage or general purpose v2 account.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * A block blob's tier determines Hot/Cool/Archive storage type.\n   * This operation does not update the blob's ETag.\n   * For detailed information about block blob level tiering\n   * see [hot, cool, and archive access tiers](https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers).\n   * The operation will be authenticated and authorized\n   * with specified credential. See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param url - The url of the blob resource to delete.\n   * @param credential - Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobAccessTier(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    tier: AccessTier,\n    options?: BlobSetTierOptions,\n  ): Promise<void>;\n\n  /**\n   * The setBlobAccessTier operation sets the tier on a blob.\n   * The operation is allowed on block blobs in a blob storage or general purpose v2 account.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * A block blob's tier determines Hot/Cool/Archive storage type.\n   * This operation does not update the blob's ETag.\n   * For detailed information about block blob level tiering\n   * see [hot, cool, and archive access tiers](https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers).\n   * The operation will be authenticated and authorized\n   * with specified credential. See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClient - The BlobClient.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobAccessTier(\n    blobClient: BlobClient,\n    tier: AccessTier,\n    options?: BlobSetTierOptions,\n  ): Promise<void>;\n\n  public async setBlobAccessTier(\n    urlOrBlobClient: string | BlobClient,\n    credentialOrTier:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | AccessTier,\n    tierOrOptions?: AccessTier | BlobSetTierOptions,\n    options?: BlobSetTierOptions,\n  ): Promise<void> {\n    let url: string;\n    let credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n    let tier: AccessTier;\n\n    if (\n      typeof urlOrBlobClient === \"string\" &&\n      ((isNode && credentialOrTier instanceof StorageSharedKeyCredential) ||\n        credentialOrTier instanceof AnonymousCredential ||\n        isTokenCredential(credentialOrTier))\n    ) {\n      // First overload\n      url = urlOrBlobClient;\n      credential = credentialOrTier as\n        | StorageSharedKeyCredential\n        | AnonymousCredential\n        | TokenCredential;\n      tier = tierOrOptions as AccessTier;\n    } else if (urlOrBlobClient instanceof BlobClient) {\n      // Second overload\n      url = urlOrBlobClient.url;\n      credential = urlOrBlobClient.credential;\n      tier = credentialOrTier as AccessTier;\n      options = tierOrOptions as BlobSetTierOptions;\n    } else {\n      throw new RangeError(\n        \"Invalid arguments. Either url and credential, or BlobClient need be provided.\",\n      );\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    return tracingClient.withSpan(\n      \"BatchSetTierRequest-addSubRequest\",\n      options,\n      async (updatedOptions) => {\n        this.setBatchType(\"setAccessTier\");\n        await this.addSubRequestInternal(\n          {\n            url: url,\n            credential: credential,\n          },\n          async () => {\n            await new BlobClient(url, this.batchRequest.createPipeline(credential)).setAccessTier(\n              tier,\n              updatedOptions,\n            );\n          },\n        );\n      },\n    );\n  }\n}\n\n/**\n * Inner batch request class which is responsible for assembling and serializing sub requests.\n * See https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#request-body for how requests are assembled.\n */\nclass InnerBatchRequest {\n  private operationCount: number;\n  private body: string;\n  private subRequests: Map<number, BatchSubRequest>;\n  private readonly boundary: string;\n  private readonly subRequestPrefix: string;\n  private readonly multipartContentType: string;\n  private readonly batchRequestEnding: string;\n\n  constructor() {\n    this.operationCount = 0;\n    this.body = \"\";\n\n    const tempGuid = randomUUID();\n\n    // batch_{batchid}\n    this.boundary = `batch_${tempGuid}`;\n    // --batch_{batchid}\n    // Content-Type: application/http\n    // Content-Transfer-Encoding: binary\n    this.subRequestPrefix = `--${this.boundary}${HTTP_LINE_ENDING}${HeaderConstants.CONTENT_TYPE}: application/http${HTTP_LINE_ENDING}${HeaderConstants.CONTENT_TRANSFER_ENCODING}: binary`;\n    // multipart/mixed; boundary=batch_{batchid}\n    this.multipartContentType = `multipart/mixed; boundary=${this.boundary}`;\n    // --batch_{batchid}--\n    this.batchRequestEnding = `--${this.boundary}--`;\n\n    this.subRequests = new Map();\n  }\n\n  /**\n   * Create pipeline to assemble sub requests. The idea here is to use existing\n   * credential and serialization/deserialization components, with additional policies to\n   * filter unnecessary headers, assemble sub requests into request's body\n   * and intercept request from going to wire.\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   */\n  public createPipeline(\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n  ): Pipeline {\n    const corePipeline = createEmptyPipeline();\n    corePipeline.addPolicy(\n      serializationPolicy({\n        stringifyXML,\n        serializerOptions: {\n          xml: {\n            xmlCharKey: \"#\",\n          },\n        },\n      }),\n      { phase: \"Serialize\" },\n    );\n    // Use batch header filter policy to exclude unnecessary headers\n    corePipeline.addPolicy(batchHeaderFilterPolicy());\n    // Use batch assemble policy to assemble request and intercept request from going to wire\n    corePipeline.addPolicy(batchRequestAssemblePolicy(this), { afterPhase: \"Sign\" });\n    if (isTokenCredential(credential)) {\n      corePipeline.addPolicy(\n        bearerTokenAuthenticationPolicy({\n          credential,\n          scopes: StorageOAuthScopes,\n          challengeCallbacks: { authorizeRequestOnChallenge: authorizeRequestOnTenantChallenge },\n        }),\n        { phase: \"Sign\" },\n      );\n    } else if (credential instanceof StorageSharedKeyCredential) {\n      corePipeline.addPolicy(\n        storageSharedKeyCredentialPolicy({\n          accountName: credential.accountName,\n          accountKey: (credential as any).accountKey,\n        }),\n        { phase: \"Sign\" },\n      );\n    }\n    const pipeline = new Pipeline([]);\n    // attach the v2 pipeline to this one\n    (pipeline as any)._credential = credential;\n    (pipeline as any)._corePipeline = corePipeline;\n\n    return pipeline;\n  }\n\n  public appendSubRequestToBody(request: PipelineRequest) {\n    // Start to assemble sub request\n    this.body += [\n      this.subRequestPrefix, // sub request constant prefix\n      `${HeaderConstants.CONTENT_ID}: ${this.operationCount}`, // sub request's content ID\n      \"\", // empty line after sub request's content ID\n      `${request.method.toString()} ${getURLPathAndQuery(\n        request.url,\n      )} ${HTTP_VERSION_1_1}${HTTP_LINE_ENDING}`, // sub request start line with method\n    ].join(HTTP_LINE_ENDING);\n\n    for (const [name, value] of request.headers) {\n      this.body += `${name}: ${value}${HTTP_LINE_ENDING}`;\n    }\n\n    this.body += HTTP_LINE_ENDING; // sub request's headers need be ending with an empty line\n    // No body to assemble for current batch request support\n    // End to assemble sub request\n  }\n\n  public preAddSubRequest(subRequest: BatchSubRequest) {\n    if (this.operationCount >= BATCH_MAX_REQUEST) {\n      throw new RangeError(`Cannot exceed ${BATCH_MAX_REQUEST} sub requests in a single batch`);\n    }\n\n    // Fast fail if url for sub request is invalid\n    const path = getURLPath(subRequest.url);\n    if (!path || path === \"\") {\n      throw new RangeError(`Invalid url for sub request: '${subRequest.url}'`);\n    }\n  }\n\n  public postAddSubRequest(subRequest: BatchSubRequest) {\n    this.subRequests.set(this.operationCount, subRequest);\n    this.operationCount++;\n  }\n\n  // Return the http request body with assembling the ending line to the sub request body.\n  public getHttpRequestBody(): string {\n    return `${this.body}${this.batchRequestEnding}${HTTP_LINE_ENDING}`;\n  }\n\n  public getMultipartContentType(): string {\n    return this.multipartContentType;\n  }\n\n  public getSubRequests(): Map<number, BatchSubRequest> {\n    return this.subRequests;\n  }\n}\n\nfunction batchRequestAssemblePolicy(batchRequest: InnerBatchRequest): PipelinePolicy {\n  return {\n    name: \"batchRequestAssemblePolicy\",\n    async sendRequest(request: PipelineRequest): Promise<PipelineResponse> {\n      batchRequest.appendSubRequestToBody(request);\n\n      return {\n        request,\n        status: 200,\n        headers: createHttpHeaders(),\n      };\n    },\n  };\n}\n\nfunction batchHeaderFilterPolicy(): PipelinePolicy {\n  return {\n    name: \"batchHeaderFilterPolicy\",\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      let xMsHeaderName = \"\";\n\n      for (const [name] of request.headers) {\n        if (iEqual(name, HeaderConstants.X_MS_VERSION)) {\n          xMsHeaderName = name;\n        }\n      }\n\n      if (xMsHeaderName !== \"\") {\n        request.headers.delete(xMsHeaderName); // The subrequests should not have the x-ms-version header.\n      }\n\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  AccessTier,\n  ServiceSubmitBatchHeaders,\n  ServiceSubmitBatchOptionalParamsModel,\n  ServiceSubmitBatchResponseModel,\n} from \"./generatedModels\";\nimport type { ParsedBatchResponse } from \"./BatchResponse\";\nimport { BatchResponseParser } from \"./BatchResponseParser\";\nimport { utf8ByteLength } from \"./BatchUtils\";\nimport { BlobBatch } from \"./BlobBatch\";\nimport { tracingClient } from \"./utils/tracing\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport type { Service, Container } from \"./generated/src/operationsInterfaces\";\nimport type { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport type { BlobDeleteOptions, BlobClient, BlobSetTierOptions } from \"./Clients\";\nimport { StorageContextClient } from \"./StorageContextClient\";\nimport type { PipelineLike, StoragePipelineOptions } from \"./Pipeline\";\nimport { newPipeline, isPipelineLike, getCoreClientOptions } from \"./Pipeline\";\nimport type { WithResponse } from \"./utils/utils.common\";\nimport { assertResponse, getURLPath } from \"./utils/utils.common\";\n\n/**\n * Options to configure the Service - Submit Batch Optional Params.\n */\nexport interface BlobBatchSubmitBatchOptionalParams extends ServiceSubmitBatchOptionalParamsModel {}\n\n/**\n * Contains response data for blob batch operations.\n */\nexport declare type BlobBatchSubmitBatchResponse = WithResponse<\n  ParsedBatchResponse & ServiceSubmitBatchHeaders,\n  ServiceSubmitBatchHeaders\n>;\n\n/**\n * Contains response data for the {@link deleteBlobs} operation.\n */\nexport declare type BlobBatchDeleteBlobsResponse = BlobBatchSubmitBatchResponse;\n\n/**\n * Contains response data for the {@link setBlobsAccessTier} operation.\n */\nexport declare type BlobBatchSetBlobsAccessTierResponse = BlobBatchSubmitBatchResponse;\n\n/**\n * A BlobBatchClient allows you to make batched requests to the Azure Storage Blob service.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n */\nexport class BlobBatchClient {\n  private serviceOrContainerContext: Service | Container;\n\n  /**\n   * Creates an instance of BlobBatchClient.\n   *\n   * @param url - A url pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n\n  /**\n   * Creates an instance of BlobBatchClient.\n   *\n   * @param url - A url pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    url: string,\n    credentialOrPipeline?:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    let pipeline: PipelineLike;\n    if (isPipelineLike(credentialOrPipeline)) {\n      pipeline = credentialOrPipeline;\n    } else if (!credentialOrPipeline) {\n      // no credential provided\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    }\n\n    const storageClientContext = new StorageContextClient(url, getCoreClientOptions(pipeline));\n\n    const path = getURLPath(url);\n    if (path && path !== \"/\") {\n      // Container scoped.\n      this.serviceOrContainerContext = storageClientContext.container;\n    } else {\n      this.serviceOrContainerContext = storageClientContext.service;\n    }\n  }\n\n  /**\n   * Creates a {@link BlobBatch}.\n   * A BlobBatch represents an aggregated set of operations on blobs.\n   */\n  public createBatch(): BlobBatch {\n    return new BlobBatch();\n  }\n\n  /**\n   * Create multiple delete operations to mark the specified blobs or snapshots for deletion.\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operations will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param urls - The urls of the blob resources to delete.\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options -\n   */\n  public async deleteBlobs(\n    urls: string[],\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobDeleteOptions,\n  ): Promise<BlobBatchDeleteBlobsResponse>;\n\n  /**\n   * Create multiple delete operations to mark the specified blobs or snapshots for deletion.\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operation(subrequest) will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClients - The BlobClients for the blobs to delete.\n   * @param options -\n   */\n  public async deleteBlobs(\n    blobClients: BlobClient[],\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobDeleteOptions,\n  ): Promise<BlobBatchDeleteBlobsResponse>;\n\n  public async deleteBlobs(\n    urlsOrBlobClients: string[] | BlobClient[],\n    credentialOrOptions:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | BlobDeleteOptions\n      | undefined,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobDeleteOptions,\n  ): Promise<BlobBatchDeleteBlobsResponse> {\n    const batch = new BlobBatch();\n    for (const urlOrBlobClient of urlsOrBlobClients) {\n      if (typeof urlOrBlobClient === \"string\") {\n        await batch.deleteBlob(urlOrBlobClient, credentialOrOptions as TokenCredential, options);\n      } else {\n        await batch.deleteBlob(urlOrBlobClient, credentialOrOptions as BlobDeleteOptions);\n      }\n    }\n    return this.submitBatch(batch);\n  }\n\n  /**\n   * Create multiple set tier operations to set the tier on a blob.\n   * The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * See [set blob tier details](https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier).\n   * The operation(subrequest) will be authenticated and authorized\n   * with specified credential.See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param urls - The urls of the blob resource to delete.\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobsAccessTier(\n    urls: string[],\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    tier: AccessTier,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobSetTierOptions,\n  ): Promise<BlobBatchSetBlobsAccessTierResponse>;\n\n  /**\n   * Create multiple set tier operations to set the tier on a blob.\n   * The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * See [set blob tier details](https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier).\n   * The operation(subrequest) will be authenticated and authorized\n   * with specified credential.See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClients - The BlobClients for the blobs which should have a new tier set.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobsAccessTier(\n    blobClients: BlobClient[],\n    tier: AccessTier,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobSetTierOptions,\n  ): Promise<BlobBatchSetBlobsAccessTierResponse>;\n\n  public async setBlobsAccessTier(\n    urlsOrBlobClients: string[] | BlobClient[],\n    credentialOrTier:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | AccessTier,\n    tierOrOptions?: AccessTier | BlobSetTierOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobSetTierOptions,\n  ): Promise<BlobBatchSetBlobsAccessTierResponse> {\n    const batch = new BlobBatch();\n    for (const urlOrBlobClient of urlsOrBlobClients) {\n      if (typeof urlOrBlobClient === \"string\") {\n        await batch.setBlobAccessTier(\n          urlOrBlobClient,\n          credentialOrTier as TokenCredential,\n          tierOrOptions as AccessTier,\n          options,\n        );\n      } else {\n        await batch.setBlobAccessTier(\n          urlOrBlobClient,\n          credentialOrTier as AccessTier,\n          tierOrOptions as BlobSetTierOptions,\n        );\n      }\n    }\n    return this.submitBatch(batch);\n  }\n\n  /**\n   * Submit batch request which consists of multiple subrequests.\n   *\n   * Get `blobBatchClient` and other details before running the snippets.\n   * `blobServiceClient.getBlobBatchClient()` gives the `blobBatchClient`\n   *\n   * Example usage:\n   *\n   * ```js\n   * let batchRequest = new BlobBatch();\n   * await batchRequest.deleteBlob(urlInString0, credential0);\n   * await batchRequest.deleteBlob(urlInString1, credential1, {\n   *  deleteSnapshots: \"include\"\n   * });\n   * const batchResp = await blobBatchClient.submitBatch(batchRequest);\n   * console.log(batchResp.subResponsesSucceededCount);\n   * ```\n   *\n   * Example using a lease:\n   *\n   * ```js\n   * let batchRequest = new BlobBatch();\n   * await batchRequest.setBlobAccessTier(blockBlobClient0, \"Cool\");\n   * await batchRequest.setBlobAccessTier(blockBlobClient1, \"Cool\", {\n   *  conditions: { leaseId: leaseId }\n   * });\n   * const batchResp = await blobBatchClient.submitBatch(batchRequest);\n   * console.log(batchResp.subResponsesSucceededCount);\n   * ```\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n   *\n   * @param batchRequest - A set of Delete or SetTier operations.\n   * @param options -\n   */\n  public async submitBatch(\n    batchRequest: BlobBatch,\n    options: BlobBatchSubmitBatchOptionalParams = {},\n  ): Promise<BlobBatchSubmitBatchResponse> {\n    if (!batchRequest || batchRequest.getSubRequests().size === 0) {\n      throw new RangeError(\"Batch request should contain one or more sub requests.\");\n    }\n\n    return tracingClient.withSpan(\n      \"BlobBatchClient-submitBatch\",\n      options,\n      async (updatedOptions) => {\n        const batchRequestBody = batchRequest.getHttpRequestBody();\n\n        // ServiceSubmitBatchResponseModel and ContainerSubmitBatchResponse are compatible for now.\n        const rawBatchResponse: ServiceSubmitBatchResponseModel = assertResponse(\n          await this.serviceOrContainerContext.submitBatch(\n            utf8ByteLength(batchRequestBody),\n            batchRequest.getMultiPartContentType(),\n            batchRequestBody,\n            {\n              ...updatedOptions,\n            },\n          ),\n        );\n\n        // Parse the sub responses result, if logic reaches here(i.e. the batch request succeeded with status code 202).\n        const batchResponseParser = new BatchResponseParser(\n          rawBatchResponse,\n          batchRequest.getSubRequests(),\n        );\n        const responseSummary = await batchResponseParser.parseBatchResponse();\n\n        const res: BlobBatchSubmitBatchResponse = {\n          _response: rawBatchResponse._response,\n          contentType: rawBatchResponse.contentType,\n          errorCode: rawBatchResponse.errorCode,\n          requestId: rawBatchResponse.requestId,\n          clientRequestId: rawBatchResponse.clientRequestId,\n          version: rawBatchResponse.version,\n          subResponses: responseSummary.subResponses,\n          subResponsesSucceededCount: responseSummary.subResponsesSucceededCount,\n          subResponsesFailedCount: responseSummary.subResponsesFailedCount,\n        };\n\n        return res;\n      },\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type { RequestBodyType as HttpRequestBody } from \"@azure/core-rest-pipeline\";\nimport { getDefaultProxySettings } from \"@azure/core-rest-pipeline\";\nimport { isNode } from \"@azure/core-util\";\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport type { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport type { Container } from \"./generated/src/operationsInterfaces\";\nimport type {\n  BlobDeleteResponse,\n  BlobPrefix,\n  BlobProperties,\n  BlockBlobUploadResponse,\n  ContainerCreateResponse,\n  ContainerDeleteResponse,\n  ContainerEncryptionScope,\n  ContainerFilterBlobsHeaders,\n  ContainerFilterBlobsResponse,\n  ContainerGetAccessPolicyHeaders,\n  ContainerGetAccessPolicyResponseModel,\n  ContainerGetAccountInfoResponse,\n  ContainerGetPropertiesResponse,\n  ContainerListBlobFlatSegmentHeaders,\n  ContainerListBlobHierarchySegmentHeaders,\n  ContainerSetAccessPolicyResponse,\n  ContainerSetMetadataResponse,\n  FilterBlobItem,\n  FilterBlobSegment,\n  FilterBlobSegmentModel,\n  LeaseAccessConditions,\n  ListBlobsFlatSegmentResponseModel,\n  ListBlobsHierarchySegmentResponseModel,\n  PublicAccessType,\n  SignedIdentifierModel,\n} from \"./generatedModels\";\nimport type {\n  Metadata,\n  ObjectReplicationPolicy,\n  Tags,\n  ContainerRequestConditions,\n  ModifiedAccessConditions,\n} from \"./models\";\nimport type { PipelineLike, StoragePipelineOptions } from \"./Pipeline\";\nimport { newPipeline, isPipelineLike } from \"./Pipeline\";\nimport type { CommonOptions } from \"./StorageClient\";\nimport { StorageClient } from \"./StorageClient\";\nimport { tracingClient } from \"./utils/tracing\";\nimport type { WithResponse } from \"./utils/utils.common\";\nimport {\n  appendToURLPath,\n  appendToURLQuery,\n  assertResponse,\n  BlobNameToString,\n  ConvertInternalResponseOfListBlobFlat,\n  ConvertInternalResponseOfListBlobHierarchy,\n  EscapePath,\n  extractConnectionStringParts,\n  isIpEndpointStyle,\n  parseObjectReplicationRecord,\n  toTags,\n  truncatedISO8061Date,\n} from \"./utils/utils.common\";\nimport type { ContainerSASPermissions } from \"./sas/ContainerSASPermissions\";\nimport {\n  generateBlobSASQueryParameters,\n  generateBlobSASQueryParametersInternal,\n} from \"./sas/BlobSASSignatureValues\";\nimport { BlobLeaseClient } from \"./BlobLeaseClient\";\nimport type {\n  BlobDeleteOptions,\n  BlockBlobUploadOptions,\n  CommonGenerateSasUrlOptions,\n} from \"./Clients\";\nimport { AppendBlobClient, BlobClient, BlockBlobClient, PageBlobClient } from \"./Clients\";\nimport { BlobBatchClient } from \"./BlobBatchClient\";\nimport type {\n  ContainerCreateHeaders,\n  ListBlobsIncludeItem,\n  ContainerGetPropertiesHeaders,\n  ContainerDeleteHeaders,\n  ContainerSetMetadataHeaders,\n  ContainerSetAccessPolicyHeaders,\n  ListBlobsFlatSegmentResponse as ListBlobsFlatSegmentResponseInternal,\n  ListBlobsHierarchySegmentResponse as ListBlobsHierarchySegmentResponseInternal,\n  ContainerListBlobHierarchySegmentResponse as ContainerListBlobHierarchySegmentResponseModel,\n  ContainerGetAccountInfoHeaders,\n} from \"./generated/src\";\nimport type { UserDelegationKey } from \"./BlobServiceClient\";\n\n/**\n * Options to configure {@link ContainerClient.create} operation.\n */\nexport interface ContainerCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the container.\n   */\n  metadata?: Metadata;\n  /**\n   * Specifies whether data in the container may be accessed publicly and the level of access. Possible values include:\n   * - `container`: Specifies full public read access for container and blob data. Clients can enumerate blobs within the container via anonymous request, but cannot enumerate containers within the storage account.\n   * - `blob`: Specifies public read access for blobs. Blob data within this container can be read via anonymous request, but container data is not available. Clients cannot enumerate blobs within the container via anonymous request.\n   */\n  access?: PublicAccessType;\n  /**\n   * Container encryption scope info.\n   */\n  containerEncryptionScope?: ContainerEncryptionScope;\n}\n\n/**\n * Options to configure {@link ContainerClient.getProperties} operation.\n */\nexport interface ContainerGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure {@link ContainerClient.delete} operation.\n */\nexport interface ContainerDeleteMethodOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when deleting the container.\n   */\n  conditions?: ContainerRequestConditions;\n}\n\n/**\n * Options to configure {@link ContainerClient.exists} operation.\n */\nexport interface ContainerExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure {@link ContainerClient.setMetadata} operation.\n */\nexport interface ContainerSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: ContainerRequestConditions;\n}\n\n/**\n * Options to configure {@link ContainerClient.getAccessPolicy} operation.\n */\nexport interface ContainerGetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Signed identifier.\n */\nexport interface SignedIdentifier {\n  /**\n   * a unique id\n   */\n  id: string;\n  /**\n   * Access Policy\n   */\n  accessPolicy: {\n    /**\n     * Optional. The date-time the policy is active\n     */\n    startsOn?: Date;\n    /**\n     * Optional. The date-time the policy expires\n     */\n    expiresOn?: Date;\n    /**\n     * The permissions for the acl policy\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n     */\n    permissions?: string;\n  };\n}\n\n/**\n * Contains response data for the {@link ContainerClient.getAccessPolicy} operation.\n */\nexport declare type ContainerGetAccessPolicyResponse = WithResponse<\n  {\n    signedIdentifiers: SignedIdentifier[];\n  } & ContainerGetAccessPolicyHeaders,\n  ContainerGetAccessPolicyHeaders,\n  SignedIdentifierModel\n>;\n\n/**\n * Options to configure {@link ContainerClient.setAccessPolicy} operation.\n */\nexport interface ContainerSetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when setting the access policy.\n   */\n  conditions?: ContainerRequestConditions;\n}\n\n/**\n * Options to configure Container - Acquire Lease operation.\n */\nexport interface ContainerAcquireLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when acquiring the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Release Lease operation.\n */\nexport interface ContainerReleaseLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when releasing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Renew Lease operation.\n */\nexport interface ContainerRenewLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when renewing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Break Lease operation.\n */\nexport interface ContainerBreakLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when breaking the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Change Lease operation.\n */\nexport interface ContainerChangeLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when changing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure the {@link ContainerClient.deleteBlob} operation.\n */\nexport interface ContainerDeleteBlobOptions extends BlobDeleteOptions {\n  /**\n   * An opaque DateTime value that, when present, specifies the version\n   * of the blob to delete. It's for service version 2019-10-10 and newer.\n   */\n  versionId?: string;\n}\n\n/**\n * Options to configure Container - List Segment operations.\n *\n * See:\n * - {@link ContainerClient.listSegments}\n * - {@link ContainerClient.listBlobFlatSegment}\n * - {@link ContainerClient.listBlobHierarchySegment}\n * - {@link ContainerClient.listHierarchySegments}\n * - {@link ContainerClient.listItemsByHierarchy}\n */\ninterface ContainerListBlobsSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n  /**\n   * Include this parameter to\n   * specify one or more datasets to include in the response.\n   */\n  include?: ListBlobsIncludeItem[];\n}\n\n/**\n * An interface representing BlobHierarchyListSegment.\n */\nexport interface BlobHierarchyListSegment {\n  blobPrefixes?: BlobPrefix[];\n  blobItems: BlobItem[];\n}\n\n/**\n * An enumeration of blobs\n */\nexport interface ListBlobsHierarchySegmentResponse {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxPageSize?: number;\n  delimiter?: string;\n  segment: BlobHierarchyListSegment;\n  continuationToken?: string;\n}\n\n/**\n * Contains response data for the listBlobHierarchySegment operation.\n */\nexport type ContainerListBlobHierarchySegmentResponse = WithResponse<\n  ListBlobsHierarchySegmentResponse & ContainerListBlobHierarchySegmentHeaders,\n  ContainerListBlobHierarchySegmentHeaders,\n  ListBlobsHierarchySegmentResponseModel\n>;\n\n/**\n * An Azure Storage blob\n */\nexport interface BlobItem {\n  name: string;\n  deleted: boolean;\n  snapshot: string;\n  versionId?: string;\n  isCurrentVersion?: boolean;\n  properties: BlobProperties;\n  metadata?: { [propertyName: string]: string };\n  tags?: Tags;\n  objectReplicationSourceProperties?: ObjectReplicationPolicy[];\n  hasVersionsOnly?: boolean;\n}\n\n/**\n * An interface representing BlobFlatListSegment.\n */\nexport interface BlobFlatListSegment {\n  blobItems: BlobItem[];\n}\n\n/**\n * An enumeration of blobs\n */\nexport interface ListBlobsFlatSegmentResponse {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxPageSize?: number;\n  segment: BlobFlatListSegment;\n  continuationToken?: string;\n}\n\n/**\n * Contains response data for the listBlobFlatSegment operation.\n */\nexport type ContainerListBlobFlatSegmentResponse = WithResponse<\n  ListBlobsFlatSegmentResponse & ContainerListBlobFlatSegmentHeaders,\n  ContainerListBlobFlatSegmentHeaders,\n  ListBlobsFlatSegmentResponseModel\n>;\n\n/**\n * Options to configure Container - List Blobs operations.\n *\n * See:\n * - {@link ContainerClient.listBlobsFlat}\n * - {@link ContainerClient.listBlobsByHierarchy}\n */\nexport interface ContainerListBlobsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n\n  /**\n   * Specifies whether metadata related to any current or previous Copy Blob operation should be included in the response.\n   */\n  includeCopy?: boolean;\n  /**\n   * Specifies whether soft deleted blobs should be included in the response.\n   */\n  includeDeleted?: boolean;\n  /**\n   * Specifies whether blob metadata be returned in the response.\n   */\n  includeMetadata?: boolean;\n  /**\n   * Specifies whether snapshots should be included in the enumeration. Snapshots are listed from oldest to newest in the response.\n   */\n  includeSnapshots?: boolean;\n  /**\n   * Specifies whether versions should be included in the enumeration. Versions are listed from oldest to newest in the response.\n   */\n  includeVersions?: boolean;\n  /**\n   * Specifies whether blobs for which blocks have been uploaded, but which have not been committed using Put Block List, be included in the response.\n   */\n  includeUncommitedBlobs?: boolean;\n  /**\n   * Specifies whether blob tags be returned in the response.\n   */\n  includeTags?: boolean;\n  /**\n   * Specifies whether deleted blob with versions be returned in the response.\n   */\n  includeDeletedWithVersions?: boolean;\n  /**\n   * Specifies whether blob immutability policy be returned in the response.\n   */\n  includeImmutabilityPolicy?: boolean;\n  /**\n   * Specifies whether blob legal hold be returned in the response.\n   */\n  includeLegalHold?: boolean;\n}\n\n/**\n * Contains response data for the {@link ContainerClient.createIfNotExists} operation.\n */\nexport interface ContainerCreateIfNotExistsResponse extends ContainerCreateResponse {\n  /**\n   * Indicate whether the container is successfully created. Is false when the container is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Contains response data for the {@link ContainerClient.deleteIfExists} operation.\n */\nexport interface ContainerDeleteIfExistsResponse extends ContainerDeleteResponse {\n  /**\n   * Indicate whether the container is successfully deleted. Is false if the container does not exist in the first place.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Options to configure {@link ContainerClient.generateSasUrl} operation.\n */\nexport interface ContainerGenerateSasUrlOptions extends CommonGenerateSasUrlOptions {\n  /**\n   * Optional only when identifier is provided. Specifies the list of permissions to be associated with the SAS.\n   */\n  permissions?: ContainerSASPermissions;\n}\n\n/**\n * Options to configure the {@link ContainerClient.findBlobsByTagsSegment} operation.\n */\ninterface ContainerFindBlobsByTagsSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the maximum number of blobs\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport interface ContainerFindBlobByTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * The response of {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport type ContainerFindBlobsByTagsSegmentResponse = WithResponse<\n  FilterBlobSegment & ContainerFilterBlobsHeaders,\n  ContainerFilterBlobsHeaders,\n  FilterBlobSegmentModel\n>;\n\n/**\n * Options to configure the {@link ContainerClient.getAccountInfo} operation.\n */\nexport interface ContainerGetAccountInfoOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * A ContainerClient represents a URL to the Azure Storage container allowing you to manipulate its blobs.\n */\nexport class ContainerClient extends StorageClient {\n  /**\n   * containerContext provided by protocol layer.\n   */\n  private containerContext: Container;\n\n  private _containerName: string;\n\n  /**\n   * The name of the container.\n   */\n  public get containerName(): string {\n    return this._containerName;\n  }\n  /**\n   *\n   * Creates an instance of ContainerClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n  constructor(connectionString: string, containerName: string, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ContainerClient.\n   * This method accepts an URL pointing to a container.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage container, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of ContainerClient.\n   * This method accepts an URL pointing to a container.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage container, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey,\n          );\n          url = appendToURLPath(extractedCreds.url, encodeURIComponent(containerName));\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\",\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName parameter\");\n    }\n    super(url, pipeline);\n    this._containerName = this.getContainerNameFromUrl();\n    this.containerContext = this.storageClientContext.container;\n  }\n\n  /**\n   * Creates a new container under the specified account. If the container with\n   * the same name already exists, the operation fails.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n   * Naming rules: @see https://learn.microsoft.com/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n   *\n   * @param options - Options to Container Create operation.\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const containerClient = blobServiceClient.getContainerClient(\"<container name>\");\n   * const createContainerResponse = await containerClient.create();\n   * console.log(\"Container was created successfully\", createContainerResponse.requestId);\n   * ```\n   */\n  public async create(options: ContainerCreateOptions = {}): Promise<ContainerCreateResponse> {\n    return tracingClient.withSpan(\"ContainerClient-create\", options, async (updatedOptions) => {\n      return assertResponse<ContainerCreateHeaders, ContainerCreateHeaders>(\n        await this.containerContext.create(updatedOptions),\n      );\n    });\n  }\n\n  /**\n   * Creates a new container under the specified account. If the container with\n   * the same name already exists, it is not changed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n   * Naming rules: @see https://learn.microsoft.com/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n   *\n   * @param options -\n   */\n  public async createIfNotExists(\n    options: ContainerCreateOptions = {},\n  ): Promise<ContainerCreateIfNotExistsResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-createIfNotExists\",\n      options,\n      async (updatedOptions) => {\n        try {\n          const res = await this.create(updatedOptions);\n          return {\n            succeeded: true,\n            ...res,\n            _response: res._response, // _response is made non-enumerable\n          };\n        } catch (e: any) {\n          if (e.details?.errorCode === \"ContainerAlreadyExists\") {\n            return {\n              succeeded: false,\n              ...e.response?.parsedHeaders,\n              _response: e.response,\n            };\n          } else {\n            throw e;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Returns true if the Azure container resource represented by this client exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing container might be deleted by other clients or\n   * applications. Vice versa new containers with the same name might be added by other clients or\n   * applications after this function completes.\n   *\n   * @param options -\n   */\n  public async exists(options: ContainerExistsOptions = {}): Promise<boolean> {\n    return tracingClient.withSpan(\"ContainerClient-exists\", options, async (updatedOptions) => {\n      try {\n        await this.getProperties({\n          abortSignal: options.abortSignal,\n          tracingOptions: updatedOptions.tracingOptions,\n        });\n        return true;\n      } catch (e: any) {\n        if (e.statusCode === 404) {\n          return false;\n        }\n        throw e;\n      }\n    });\n  }\n\n  /**\n   * Creates a {@link BlobClient}\n   *\n   * @param blobName - A blob name\n   * @returns A new BlobClient object for the given blob name.\n   */\n  public getBlobClient(blobName: string): BlobClient {\n    return new BlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Creates an {@link AppendBlobClient}\n   *\n   * @param blobName - An append blob name\n   */\n  public getAppendBlobClient(blobName: string): AppendBlobClient {\n    return new AppendBlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Creates a {@link BlockBlobClient}\n   *\n   * @param blobName - A block blob name\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   *\n   * const blockBlobClient = containerClient.getBlockBlobClient(\"<blob name>\");\n   * const uploadBlobResponse = await blockBlobClient.upload(content, content.length);\n   * ```\n   */\n  public getBlockBlobClient(blobName: string): BlockBlobClient {\n    return new BlockBlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Creates a {@link PageBlobClient}\n   *\n   * @param blobName - A page blob name\n   */\n  public getPageBlobClient(blobName: string): PageBlobClient {\n    return new PageBlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Returns all user-defined metadata and system properties for the specified\n   * container. The data returned does not include the container's list of blobs.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-properties\n   *\n   * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n   * they originally contained uppercase characters. This differs from the metadata keys returned by\n   * the `listContainers` method of {@link BlobServiceClient} using the `includeMetadata` option, which\n   * will retain their original casing.\n   *\n   * @param options - Options to Container Get Properties operation.\n   */\n  public async getProperties(\n    options: ContainerGetPropertiesOptions = {},\n  ): Promise<ContainerGetPropertiesResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\n      \"ContainerClient-getProperties\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ContainerGetPropertiesHeaders, ContainerGetPropertiesHeaders>(\n          await this.containerContext.getProperties({\n            abortSignal: options.abortSignal,\n            ...options.conditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Marks the specified container for deletion. The container and any blobs\n   * contained within it are later deleted during garbage collection.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container\n   *\n   * @param options - Options to Container Delete operation.\n   */\n  public async delete(\n    options: ContainerDeleteMethodOptions = {},\n  ): Promise<ContainerDeleteResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\"ContainerClient-delete\", options, async (updatedOptions) => {\n      return assertResponse<ContainerDeleteHeaders, ContainerDeleteHeaders>(\n        await this.containerContext.delete({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: options.conditions,\n          tracingOptions: updatedOptions.tracingOptions,\n        }),\n      );\n    });\n  }\n\n  /**\n   * Marks the specified container for deletion if it exists. The container and any blobs\n   * contained within it are later deleted during garbage collection.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container\n   *\n   * @param options - Options to Container Delete operation.\n   */\n  public async deleteIfExists(\n    options: ContainerDeleteMethodOptions = {},\n  ): Promise<ContainerDeleteIfExistsResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-deleteIfExists\",\n      options,\n      async (updatedOptions) => {\n        try {\n          const res = await this.delete(updatedOptions);\n          return {\n            succeeded: true,\n            ...res,\n            _response: res._response,\n          };\n        } catch (e: any) {\n          if (e.details?.errorCode === \"ContainerNotFound\") {\n            return {\n              succeeded: false,\n              ...e.response?.parsedHeaders,\n              _response: e.response,\n            };\n          }\n          throw e;\n        }\n      },\n    );\n  }\n\n  /**\n   * Sets one or more user-defined name-value pairs for the specified container.\n   *\n   * If no option provided, or no metadata defined in the parameter, the container\n   * metadata will be removed.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-metadata\n   *\n   * @param metadata - Replace existing metadata with this value.\n   *                            If no value provided the existing metadata will be removed.\n   * @param options - Options to Container Set Metadata operation.\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: ContainerSetMetadataOptions = {},\n  ): Promise<ContainerSetMetadataResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    if (options.conditions.ifUnmodifiedSince) {\n      throw new RangeError(\n        \"the IfUnmodifiedSince must have their default values because they are ignored by the blob service\",\n      );\n    }\n\n    return tracingClient.withSpan(\n      \"ContainerClient-setMetadata\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ContainerSetMetadataHeaders, ContainerSetMetadataHeaders>(\n          await this.containerContext.setMetadata({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            metadata,\n            modifiedAccessConditions: options.conditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Gets the permissions for the specified container. The permissions indicate\n   * whether container data may be accessed publicly.\n   *\n   * WARNING: JavaScript Date will potentially lose precision when parsing startsOn and expiresOn strings.\n   * For example, new Date(\"2018-12-31T03:44:23.8827891Z\").toISOString() will get \"2018-12-31T03:44:23.882Z\".\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-acl\n   *\n   * @param options - Options to Container Get Access Policy operation.\n   */\n  public async getAccessPolicy(\n    options: ContainerGetAccessPolicyOptions = {},\n  ): Promise<ContainerGetAccessPolicyResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    return tracingClient.withSpan(\n      \"ContainerClient-getAccessPolicy\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ContainerGetAccessPolicyResponseModel,\n          ContainerGetAccessPolicyHeaders,\n          SignedIdentifierModel\n        >(\n          await this.containerContext.getAccessPolicy({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.conditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        const res: ContainerGetAccessPolicyResponse = {\n          _response: response._response,\n          blobPublicAccess: response.blobPublicAccess,\n          date: response.date,\n          etag: response.etag,\n          errorCode: response.errorCode,\n          lastModified: response.lastModified,\n          requestId: response.requestId,\n          clientRequestId: response.clientRequestId,\n          signedIdentifiers: [],\n          version: response.version,\n        };\n\n        for (const identifier of response) {\n          let accessPolicy: any = undefined;\n          if (identifier.accessPolicy) {\n            accessPolicy = {\n              permissions: identifier.accessPolicy.permissions,\n            };\n\n            if (identifier.accessPolicy.expiresOn) {\n              accessPolicy.expiresOn = new Date(identifier.accessPolicy.expiresOn);\n            }\n\n            if (identifier.accessPolicy.startsOn) {\n              accessPolicy.startsOn = new Date(identifier.accessPolicy.startsOn);\n            }\n          }\n\n          res.signedIdentifiers.push({\n            accessPolicy,\n            id: identifier.id,\n          });\n        }\n\n        return res;\n      },\n    );\n  }\n\n  /**\n   * Sets the permissions for the specified container. The permissions indicate\n   * whether blobs in a container may be accessed publicly.\n   *\n   * When you set permissions for a container, the existing permissions are replaced.\n   * If no access or containerAcl provided, the existing container ACL will be\n   * removed.\n   *\n   * When you establish a stored access policy on a container, it may take up to 30 seconds to take effect.\n   * During this interval, a shared access signature that is associated with the stored access policy will\n   * fail with status code 403 (Forbidden), until the access policy becomes active.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n   *\n   * @param access - The level of public access to data in the container.\n   * @param containerAcl - Array of elements each having a unique Id and details of the access policy.\n   * @param options - Options to Container Set Access Policy operation.\n   */\n  public async setAccessPolicy(\n    access?: PublicAccessType,\n    containerAcl?: SignedIdentifier[],\n    options: ContainerSetAccessPolicyOptions = {},\n  ): Promise<ContainerSetAccessPolicyResponse> {\n    options.conditions = options.conditions || {};\n    return tracingClient.withSpan(\n      \"ContainerClient-setAccessPolicy\",\n      options,\n      async (updatedOptions) => {\n        const acl: SignedIdentifierModel[] = [];\n        for (const identifier of containerAcl || []) {\n          acl.push({\n            accessPolicy: {\n              expiresOn: identifier.accessPolicy.expiresOn\n                ? truncatedISO8061Date(identifier.accessPolicy.expiresOn)\n                : \"\",\n              permissions: identifier.accessPolicy.permissions,\n              startsOn: identifier.accessPolicy.startsOn\n                ? truncatedISO8061Date(identifier.accessPolicy.startsOn)\n                : \"\",\n            },\n            id: identifier.id,\n          });\n        }\n\n        return assertResponse<ContainerSetAccessPolicyHeaders, ContainerSetAccessPolicyHeaders>(\n          await this.containerContext.setAccessPolicy({\n            abortSignal: options.abortSignal,\n            access,\n            containerAcl: acl,\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: options.conditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Get a {@link BlobLeaseClient} that manages leases on the container.\n   *\n   * @param proposeLeaseId - Initial proposed lease Id.\n   * @returns A new BlobLeaseClient object for managing leases on the container.\n   */\n  public getBlobLeaseClient(proposeLeaseId?: string): BlobLeaseClient {\n    return new BlobLeaseClient(this, proposeLeaseId);\n  }\n\n  /**\n   * Creates a new block blob, or updates the content of an existing block blob.\n   *\n   * Updating an existing block blob overwrites any existing metadata on the blob.\n   * Partial updates are not supported; the content of the existing blob is\n   * overwritten with the new content. To perform a partial update of a block blob's,\n   * use {@link BlockBlobClient.stageBlock} and {@link BlockBlobClient.commitBlockList}.\n   *\n   * This is a non-parallel uploading method, please use {@link BlockBlobClient.uploadFile},\n   * {@link BlockBlobClient.uploadStream} or {@link BlockBlobClient.uploadBrowserData} for better\n   * performance with concurrency uploading.\n   *\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param blobName - Name of the block blob to create or update.\n   * @param body - Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param contentLength - Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param options - Options to configure the Block Blob Upload operation.\n   * @returns Block Blob upload response data and the corresponding BlockBlobClient instance.\n   */\n  public async uploadBlockBlob(\n    blobName: string,\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobUploadOptions = {},\n  ): Promise<{ blockBlobClient: BlockBlobClient; response: BlockBlobUploadResponse }> {\n    return tracingClient.withSpan(\n      \"ContainerClient-uploadBlockBlob\",\n      options,\n      async (updatedOptions) => {\n        const blockBlobClient = this.getBlockBlobClient(blobName);\n        const response = await blockBlobClient.upload(body, contentLength, updatedOptions);\n        return {\n          blockBlobClient,\n          response,\n        };\n      },\n    );\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param blobName -\n   * @param options - Options to Blob Delete operation.\n   * @returns Block blob deletion response data.\n   */\n  public async deleteBlob(\n    blobName: string,\n    options: ContainerDeleteBlobOptions = {},\n  ): Promise<BlobDeleteResponse> {\n    return tracingClient.withSpan(\"ContainerClient-deleteBlob\", options, async (updatedOptions) => {\n      let blobClient = this.getBlobClient(blobName);\n      if (options.versionId) {\n        blobClient = blobClient.withVersion(options.versionId);\n      }\n      return blobClient.delete(updatedOptions);\n    });\n  }\n\n  /**\n   * listBlobFlatSegment returns a single segment of blobs starting from the\n   * specified Marker. Use an empty Marker to start enumeration from the beginning.\n   * After getting a segment, process it, and then call listBlobsFlatSegment again\n   * (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n   *\n   * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param options - Options to Container List Blob Flat Segment operation.\n   */\n  private async listBlobFlatSegment(\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {},\n  ): Promise<ContainerListBlobFlatSegmentResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-listBlobFlatSegment\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ListBlobsFlatSegmentResponseInternal,\n          ContainerListBlobFlatSegmentHeaders,\n          ListBlobsFlatSegmentResponseInternal\n        >(\n          await this.containerContext.listBlobFlatSegment({\n            marker,\n            ...options,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        const wrappedResponse: ContainerListBlobFlatSegmentResponse = {\n          ...response,\n          _response: {\n            ...response._response,\n            parsedBody: ConvertInternalResponseOfListBlobFlat(response._response.parsedBody),\n          }, // _response is made non-enumerable\n          segment: {\n            ...response.segment,\n            blobItems: response.segment.blobItems.map((blobItemInternal) => {\n              const blobItem: BlobItem = {\n                ...blobItemInternal,\n                name: BlobNameToString(blobItemInternal.name),\n                tags: toTags(blobItemInternal.blobTags),\n                objectReplicationSourceProperties: parseObjectReplicationRecord(\n                  blobItemInternal.objectReplicationMetadata,\n                ),\n              };\n              return blobItem;\n            }),\n          },\n        };\n        return wrappedResponse;\n      },\n    );\n  }\n\n  /**\n   * listBlobHierarchySegment returns a single segment of blobs starting from\n   * the specified Marker. Use an empty Marker to start enumeration from the\n   * beginning. After getting a segment, process it, and then call listBlobsHierarchicalSegment\n   * again (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param options - Options to Container List Blob Hierarchy Segment operation.\n   */\n  private async listBlobHierarchySegment(\n    delimiter: string,\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {},\n  ): Promise<ContainerListBlobHierarchySegmentResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-listBlobHierarchySegment\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ContainerListBlobHierarchySegmentResponseModel,\n          ContainerListBlobHierarchySegmentHeaders,\n          ListBlobsHierarchySegmentResponseInternal\n        >(\n          await this.containerContext.listBlobHierarchySegment(delimiter, {\n            marker,\n            ...options,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        const wrappedResponse: ContainerListBlobHierarchySegmentResponse = {\n          ...response,\n          _response: {\n            ...response._response,\n            parsedBody: ConvertInternalResponseOfListBlobHierarchy(response._response.parsedBody),\n          }, // _response is made non-enumerable\n          segment: {\n            ...response.segment,\n            blobItems: response.segment.blobItems.map((blobItemInternal) => {\n              const blobItem: BlobItem = {\n                ...blobItemInternal,\n                name: BlobNameToString(blobItemInternal.name),\n                tags: toTags(blobItemInternal.blobTags),\n                objectReplicationSourceProperties: parseObjectReplicationRecord(\n                  blobItemInternal.objectReplicationMetadata,\n                ),\n              };\n              return blobItem;\n            }),\n            blobPrefixes: response.segment.blobPrefixes?.map((blobPrefixInternal) => {\n              const blobPrefix: BlobPrefix = {\n                ...blobPrefixInternal,\n                name: BlobNameToString(blobPrefixInternal.name),\n              };\n              return blobPrefix;\n            }),\n          },\n        };\n        return wrappedResponse;\n      },\n    );\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerListBlobFlatSegmentResponse\n   *\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to list blobs operation.\n   */\n  private async *listSegments(\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {},\n  ): AsyncIterableIterator<ContainerListBlobFlatSegmentResponse> {\n    let listBlobsFlatSegmentResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listBlobsFlatSegmentResponse = await this.listBlobFlatSegment(marker, options);\n        marker = listBlobsFlatSegmentResponse.continuationToken;\n        yield await listBlobsFlatSegmentResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator of {@link BlobItem} objects\n   *\n   * @param options - Options to list blobs operation.\n   */\n  private async *listItems(\n    options: ContainerListBlobsSegmentOptions = {},\n  ): AsyncIterableIterator<BlobItem> {\n    let marker: string | undefined;\n    for await (const listBlobsFlatSegmentResponse of this.listSegments(marker, options)) {\n      yield* listBlobsFlatSegmentResponse.segment.blobItems;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the blobs\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * // Get the containerClient before you run these snippets,\n   * // Can be obtained from `blobServiceClient.getContainerClient(\"<your-container-name>\");`\n   * let i = 1;\n   * for await (const blob of containerClient.listBlobsFlat()) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = containerClient.listBlobsFlat();\n   * let blobItem = await iter.next();\n   * while (!blobItem.done) {\n   *   console.log(`Blob ${i++}: ${blobItem.value.name}`);\n   *   blobItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of containerClient.listBlobsFlat().byPage({ maxPageSize: 20 })) {\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = containerClient.listBlobsFlat().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 blob names\n   * for (const blob of response.segment.blobItems) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   *\n   * iterator = containerClient.listBlobsFlat().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 blob names\n   * for (const blob of response.segment.blobItems) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   * ```\n   *\n   * @param options - Options to list blobs.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listBlobsFlat(\n    options: ContainerListBlobsOptions = {},\n  ): PagedAsyncIterableIterator<BlobItem, ContainerListBlobFlatSegmentResponse> {\n    const include: ListBlobsIncludeItem[] = [];\n    if (options.includeCopy) {\n      include.push(\"copy\");\n    }\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSnapshots) {\n      include.push(\"snapshots\");\n    }\n    if (options.includeVersions) {\n      include.push(\"versions\");\n    }\n    if (options.includeUncommitedBlobs) {\n      include.push(\"uncommittedblobs\");\n    }\n    if (options.includeTags) {\n      include.push(\"tags\");\n    }\n    if (options.includeDeletedWithVersions) {\n      include.push(\"deletedwithversions\");\n    }\n    if (options.includeImmutabilityPolicy) {\n      include.push(\"immutabilitypolicy\");\n    }\n    if (options.includeLegalHold) {\n      include.push(\"legalhold\");\n    }\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const updatedOptions: ContainerListBlobsSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include: include } : {}),\n    };\n\n    // AsyncIterableIterator to iterate over blobs\n    const iter = this.listItems(updatedOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...updatedOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerListBlobHierarchySegmentResponse\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to list blobs operation.\n   */\n  private async *listHierarchySegments(\n    delimiter: string,\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {},\n  ): AsyncIterableIterator<ContainerListBlobHierarchySegmentResponse> {\n    let listBlobsHierarchySegmentResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listBlobsHierarchySegmentResponse = await this.listBlobHierarchySegment(\n          delimiter,\n          marker,\n          options,\n        );\n        marker = listBlobsHierarchySegmentResponse.continuationToken;\n        yield await listBlobsHierarchySegmentResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for {@link BlobPrefix} and {@link BlobItem} objects.\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param options - Options to list blobs operation.\n   */\n  private async *listItemsByHierarchy(\n    delimiter: string,\n    options: ContainerListBlobsSegmentOptions = {},\n  ): AsyncIterableIterator<({ kind: \"prefix\" } & BlobPrefix) | ({ kind: \"blob\" } & BlobItem)> {\n    let marker: string | undefined;\n    for await (const listBlobsHierarchySegmentResponse of this.listHierarchySegments(\n      delimiter,\n      marker,\n      options,\n    )) {\n      const segment = listBlobsHierarchySegmentResponse.segment;\n      if (segment.blobPrefixes) {\n        for (const prefix of segment.blobPrefixes) {\n          yield {\n            kind: \"prefix\",\n            ...prefix,\n          };\n        }\n      }\n      for (const blob of segment.blobItems) {\n        yield { kind: \"blob\", ...blob };\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the blobs by hierarchy.\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs by hierarchy in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * for await (const item of containerClient.listBlobsByHierarchy(\"/\")) {\n   *   if (item.kind === \"prefix\") {\n   *     console.log(`\\tBlobPrefix: ${item.name}`);\n   *   } else {\n   *     console.log(`\\tBlobItem: name - ${item.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let iter = containerClient.listBlobsByHierarchy(\"/\", { prefix: \"prefix1/\" });\n   * let entity = await iter.next();\n   * while (!entity.done) {\n   *   let item = entity.value;\n   *   if (item.kind === \"prefix\") {\n   *     console.log(`\\tBlobPrefix: ${item.name}`);\n   *   } else {\n   *     console.log(`\\tBlobItem: name - ${item.name}`);\n   *   }\n   *   entity = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * console.log(\"Listing blobs by hierarchy by page\");\n   * for await (const response of containerClient.listBlobsByHierarchy(\"/\").byPage()) {\n   *   const segment = response.segment;\n   *   if (segment.blobPrefixes) {\n   *     for (const prefix of segment.blobPrefixes) {\n   *       console.log(`\\tBlobPrefix: ${prefix.name}`);\n   *     }\n   *   }\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`\\tBlobItem: name - ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a max page size:\n   *\n   * ```js\n   * console.log(\"Listing blobs by hierarchy by page, specifying a prefix and a max page size\");\n   *\n   * let i = 1;\n   * for await (const response of containerClient\n   *   .listBlobsByHierarchy(\"/\", { prefix: \"prefix2/sub1/\" })\n   *   .byPage({ maxPageSize: 2 })) {\n   *   console.log(`Page ${i++}`);\n   *   const segment = response.segment;\n   *\n   *   if (segment.blobPrefixes) {\n   *     for (const prefix of segment.blobPrefixes) {\n   *       console.log(`\\tBlobPrefix: ${prefix.name}`);\n   *     }\n   *   }\n   *\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`\\tBlobItem: name - ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param options - Options to list blobs operation.\n   */\n  public listBlobsByHierarchy(\n    delimiter: string,\n    options: ContainerListBlobsOptions = {},\n  ): PagedAsyncIterableIterator<\n    ({ kind: \"prefix\" } & BlobPrefix) | ({ kind: \"blob\" } & BlobItem),\n    ContainerListBlobHierarchySegmentResponse\n  > {\n    if (delimiter === \"\") {\n      throw new RangeError(\"delimiter should contain one or more characters\");\n    }\n\n    const include: ListBlobsIncludeItem[] = [];\n    if (options.includeCopy) {\n      include.push(\"copy\");\n    }\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSnapshots) {\n      include.push(\"snapshots\");\n    }\n    if (options.includeVersions) {\n      include.push(\"versions\");\n    }\n    if (options.includeUncommitedBlobs) {\n      include.push(\"uncommittedblobs\");\n    }\n    if (options.includeTags) {\n      include.push(\"tags\");\n    }\n    if (options.includeDeletedWithVersions) {\n      include.push(\"deletedwithversions\");\n    }\n    if (options.includeImmutabilityPolicy) {\n      include.push(\"immutabilitypolicy\");\n    }\n    if (options.includeLegalHold) {\n      include.push(\"legalhold\");\n    }\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const updatedOptions: ContainerListBlobsSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include: include } : {}),\n    };\n    // AsyncIterableIterator to iterate over blob prefixes and blobs\n    const iter = this.listItemsByHierarchy(delimiter, updatedOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      async next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listHierarchySegments(delimiter, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...updatedOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs in the container whose tags\n   * match a given search expression.\n   *\n   * @param tagFilterSqlExpression - The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                        The given expression must evaluate to true for a blob to be returned in the results.\n   *                                        The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                        however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async findBlobsByTagsSegment(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ContainerFindBlobsByTagsSegmentOptions = {},\n  ): Promise<ContainerFindBlobsByTagsSegmentResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-findBlobsByTagsSegment\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ContainerFilterBlobsResponse,\n          ContainerFilterBlobsHeaders,\n          FilterBlobSegmentModel\n        >(\n          await this.containerContext.filterBlobs({\n            abortSignal: options.abortSignal,\n            where: tagFilterSqlExpression,\n            marker,\n            maxPageSize: options.maxPageSize,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        const wrappedResponse: ContainerFindBlobsByTagsSegmentResponse = {\n          ...response,\n          _response: response._response, // _response is made non-enumerable\n          blobs: response.blobs.map((blob) => {\n            let tagValue = \"\";\n            if (blob.tags?.blobTagSet.length === 1) {\n              tagValue = blob.tags.blobTagSet[0].value;\n            }\n            return { ...blob, tags: toTags(blob.tags), tagValue };\n          }),\n        };\n        return wrappedResponse;\n      },\n    );\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerFindBlobsByTagsSegmentResponse.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async *findBlobsByTagsSegments(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ContainerFindBlobsByTagsSegmentOptions = {},\n  ): AsyncIterableIterator<ContainerFindBlobsByTagsSegmentResponse> {\n    let response;\n    if (!!marker || marker === undefined) {\n      do {\n        response = await this.findBlobsByTagsSegment(tagFilterSqlExpression, marker, options);\n        response.blobs = response.blobs || [];\n        marker = response.continuationToken;\n        yield response;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for blobs.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to findBlobsByTagsItems.\n   */\n  private async *findBlobsByTagsItems(\n    tagFilterSqlExpression: string,\n    options: ContainerFindBlobsByTagsSegmentOptions = {},\n  ): AsyncIterableIterator<FilterBlobItem> {\n    let marker: string | undefined;\n    for await (const segment of this.findBlobsByTagsSegments(\n      tagFilterSqlExpression,\n      marker,\n      options,\n    )) {\n      yield* segment.blobs;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to find all blobs with specified tag\n   * under the specified container.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const blob of containerClient.findBlobsByTags(\"tagkey='tagvalue'\")) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * const iter = containerClient.findBlobsByTags(\"tagkey='tagvalue'\");\n   * let blobItem = await iter.next();\n   * while (!blobItem.done) {\n   *   console.log(`Blob ${i++}: ${blobItem.value.name}`);\n   *   blobItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of containerClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 20 })) {\n   *   if (response.blobs) {\n   *     for (const blob of response.blobs) {\n   *       console.log(`Blob ${i++}: ${blob.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = containerClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   * // Passing next marker as continuationToken\n   * iterator = containerClient\n   *   .findBlobsByTags(\"tagkey='tagvalue'\")\n   *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *      console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to find blobs by tags.\n   */\n  public findBlobsByTags(\n    tagFilterSqlExpression: string,\n    options: ContainerFindBlobByTagsOptions = {},\n  ): PagedAsyncIterableIterator<FilterBlobItem, ContainerFindBlobsByTagsSegmentResponse> {\n    // AsyncIterableIterator to iterate over blobs\n    const listSegmentOptions: ContainerFindBlobsByTagsSegmentOptions = {\n      ...options,\n    };\n\n    const iter = this.findBlobsByTagsItems(tagFilterSqlExpression, listSegmentOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.findBlobsByTagsSegments(tagFilterSqlExpression, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...listSegmentOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * The Get Account Information operation returns the sku name and account kind\n   * for the specified account.\n   * The Get Account Information operation is available on service versions beginning\n   * with version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\n   *\n   * @param options - Options to the Service Get Account Info operation.\n   * @returns Response data for the Service Get Account Info operation.\n   */\n  public async getAccountInfo(\n    options: ContainerGetAccountInfoOptions = {},\n  ): Promise<ContainerGetAccountInfoResponse> {\n    return tracingClient.withSpan(\n      \"ContainerClient-getAccountInfo\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ContainerGetAccountInfoHeaders, ContainerGetAccountInfoHeaders>(\n          await this.containerContext.getAccountInfo({\n            abortSignal: options.abortSignal,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  private getContainerNameFromUrl(): string {\n    let containerName;\n    try {\n      //  URL may look like the following\n      // \"https://myaccount.blob.core.windows.net/mycontainer?sasString\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer\";\n      // IPv4/IPv6 address hosts, Endpoints - `http://127.0.0.1:10000/devstoreaccount1/containername`\n      // http://localhost:10001/devstoreaccount1/containername\n\n      const parsedUrl = new URL(this.url);\n\n      if (parsedUrl.hostname.split(\".\")[1] === \"blob\") {\n        // \"https://myaccount.blob.core.windows.net/containername\".\n        // \"https://customdomain.com/containername\".\n        // .getPath() -> /containername\n        containerName = parsedUrl.pathname.split(\"/\")[1];\n      } else if (isIpEndpointStyle(parsedUrl)) {\n        // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/containername\n        // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/containername\n        // .getPath() -> /devstoreaccount1/containername\n        containerName = parsedUrl.pathname.split(\"/\")[2];\n      } else {\n        // \"https://customdomain.com/containername\".\n        // .getPath() -> /containername\n        containerName = parsedUrl.pathname.split(\"/\")[1];\n      }\n\n      // decode the encoded containerName - to get all the special characters that might be present in it\n      containerName = decodeURIComponent(containerName);\n\n      if (!containerName) {\n        throw new Error(\"Provided containerName is invalid.\");\n      }\n\n      return containerName;\n    } catch (error: any) {\n      throw new Error(\"Unable to extract containerName with provided information.\");\n    }\n  }\n\n  /**\n   * Only available for ContainerClient constructed with a shared key credential.\n   *\n   * Generates a Blob Container Service Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateSasUrl(options: ContainerGenerateSasUrlOptions): Promise<string> {\n    return new Promise((resolve) => {\n      if (!(this.credential instanceof StorageSharedKeyCredential)) {\n        throw new RangeError(\n          \"Can only generate the SAS when the client is initialized with a shared key credential\",\n        );\n      }\n\n      const sas = generateBlobSASQueryParameters(\n        {\n          containerName: this._containerName,\n          ...options,\n        },\n        this.credential,\n      ).toString();\n\n      resolve(appendToURLQuery(this.url, sas));\n    });\n  }\n\n  /**\n   * Only available for ContainerClient constructed with a shared key credential.\n   *\n   * Generates string to sign for a Blob Container Service Shared Access Signature (SAS) URI\n   * based on the client properties and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n  public generateSasStringToSign(options: ContainerGenerateSasUrlOptions): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw new RangeError(\n        \"Can only generate the SAS when the client is initialized with a shared key credential\",\n      );\n    }\n\n    return generateBlobSASQueryParametersInternal(\n      {\n        containerName: this._containerName,\n        ...options,\n      },\n      this.credential,\n    ).stringToSign;\n  }\n\n  /**\n   * Generates a Blob Container Service Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the input user delegation key.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @param userDelegationKey -  Return value of `blobServiceClient.getUserDelegationKey()`\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateUserDelegationSasUrl(\n    options: ContainerGenerateSasUrlOptions,\n    userDelegationKey: UserDelegationKey,\n  ): Promise<string> {\n    return new Promise((resolve) => {\n      const sas = generateBlobSASQueryParameters(\n        {\n          containerName: this._containerName,\n          ...options,\n        },\n        userDelegationKey,\n        this.accountName,\n      ).toString();\n\n      resolve(appendToURLQuery(this.url, sas));\n    });\n  }\n\n  /**\n   * Generates string to sign for a Blob Container Service Shared Access Signature (SAS) URI\n   * based on the client properties and parameters passed in. The SAS is signed by the input user delegation key.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @param userDelegationKey -  Return value of `blobServiceClient.getUserDelegationKey()`\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n\n  public generateUserDelegationSasStringToSign(\n    options: ContainerGenerateSasUrlOptions,\n    userDelegationKey: UserDelegationKey,\n  ): string {\n    return generateBlobSASQueryParametersInternal(\n      {\n        containerName: this._containerName,\n        ...options,\n      },\n      userDelegationKey,\n      this.accountName,\n    ).stringToSign;\n  }\n\n  /**\n   * Creates a BlobBatchClient object to conduct batch operations.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n   *\n   * @returns A new BlobBatchClient object for this container.\n   */\n  public getBlobBatchClient(): BlobBatchClient {\n    return new BlobBatchClient(this.url, this.pipeline);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the\n * values are set, this should be serialized with toString and set as the permissions field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class AccountSASPermissions {\n  /**\n   * Parse initializes the AccountSASPermissions fields from a string.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n\n    for (const c of permissions) {\n      switch (c) {\n        case \"r\":\n          accountSASPermissions.read = true;\n          break;\n        case \"w\":\n          accountSASPermissions.write = true;\n          break;\n        case \"d\":\n          accountSASPermissions.delete = true;\n          break;\n        case \"x\":\n          accountSASPermissions.deleteVersion = true;\n          break;\n        case \"l\":\n          accountSASPermissions.list = true;\n          break;\n        case \"a\":\n          accountSASPermissions.add = true;\n          break;\n        case \"c\":\n          accountSASPermissions.create = true;\n          break;\n        case \"u\":\n          accountSASPermissions.update = true;\n          break;\n        case \"p\":\n          accountSASPermissions.process = true;\n          break;\n        case \"t\":\n          accountSASPermissions.tag = true;\n          break;\n        case \"f\":\n          accountSASPermissions.filter = true;\n          break;\n        case \"i\":\n          accountSASPermissions.setImmutabilityPolicy = true;\n          break;\n        case \"y\":\n          accountSASPermissions.permanentDelete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission character: ${c}`);\n      }\n    }\n\n    return accountSASPermissions;\n  }\n\n  /**\n   * Creates a {@link AccountSASPermissions} from a raw object which contains same keys as it\n   * and boolean values for them.\n   *\n   * @param permissionLike -\n   */\n  public static from(permissionLike: AccountSASPermissionsLike): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n    if (permissionLike.read) {\n      accountSASPermissions.read = true;\n    }\n    if (permissionLike.write) {\n      accountSASPermissions.write = true;\n    }\n    if (permissionLike.delete) {\n      accountSASPermissions.delete = true;\n    }\n    if (permissionLike.deleteVersion) {\n      accountSASPermissions.deleteVersion = true;\n    }\n    if (permissionLike.filter) {\n      accountSASPermissions.filter = true;\n    }\n    if (permissionLike.tag) {\n      accountSASPermissions.tag = true;\n    }\n    if (permissionLike.list) {\n      accountSASPermissions.list = true;\n    }\n    if (permissionLike.add) {\n      accountSASPermissions.add = true;\n    }\n    if (permissionLike.create) {\n      accountSASPermissions.create = true;\n    }\n    if (permissionLike.update) {\n      accountSASPermissions.update = true;\n    }\n    if (permissionLike.process) {\n      accountSASPermissions.process = true;\n    }\n    if (permissionLike.setImmutabilityPolicy) {\n      accountSASPermissions.setImmutabilityPolicy = true;\n    }\n    if (permissionLike.permanentDelete) {\n      accountSASPermissions.permanentDelete = true;\n    }\n    return accountSASPermissions;\n  }\n\n  /**\n   * Permission to read resources and list queues and tables granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Permission to write resources granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Permission to delete blobs and files granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Permission to delete versions granted.\n   */\n  public deleteVersion: boolean = false;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   */\n  public list: boolean = false;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   */\n  public update: boolean = false;\n\n  /**\n   * Permission to get and delete messages granted.\n   */\n  public process: boolean = false;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  public tag: boolean = false;\n\n  /**\n   * Permission to filter blobs.\n   */\n  public filter: boolean = false;\n\n  /**\n   * Permission to set immutability policy.\n   */\n  public setImmutabilityPolicy: boolean = false;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  public permanentDelete: boolean = false;\n\n  /**\n   * Produces the SAS permissions string for an Azure Storage account.\n   * Call this method to set AccountSASSignatureValues Permissions field.\n   *\n   * Using this method will guarantee the resource types are in\n   * an order accepted by the service.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   */\n  public toString(): string {\n    // The order of the characters should be as specified here to ensure correctness:\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n    // Use a string array instead of string concatenating += operator for performance\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.deleteVersion) {\n      permissions.push(\"x\");\n    }\n    if (this.filter) {\n      permissions.push(\"f\");\n    }\n    if (this.tag) {\n      permissions.push(\"t\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.update) {\n      permissions.push(\"u\");\n    }\n    if (this.process) {\n      permissions.push(\"p\");\n    }\n    if (this.setImmutabilityPolicy) {\n      permissions.push(\"i\");\n    }\n    if (this.permanentDelete) {\n      permissions.push(\"y\");\n    }\n    return permissions.join(\"\");\n  }\n}\n\n/**\n * A type that looks like an account SAS permission.\n * Used in {@link AccountSASPermissions} to parse SAS permissions from raw objects.\n */\nexport interface AccountSASPermissionsLike {\n  /**\n   * Permission to read resources and list queues and tables granted.\n   */\n  read?: boolean;\n\n  /**\n   * Permission to write resources granted.\n   */\n  write?: boolean;\n\n  /**\n   * Permission to delete blobs and files granted.\n   */\n  delete?: boolean;\n\n  /**\n   * Permission to delete versions granted.\n   */\n  deleteVersion?: boolean;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   */\n  list?: boolean;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   */\n  add?: boolean;\n\n  /**\n   * Permission to create blobs and files granted.\n   */\n  create?: boolean;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   */\n  update?: boolean;\n\n  /**\n   * Permission to get and delete messages granted.\n   */\n  process?: boolean;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  tag?: boolean;\n\n  /**\n   * Permission to filter blobs.\n   */\n  filter?: boolean;\n\n  /**\n   * Permission to set immutability policy.\n   */\n  setImmutabilityPolicy?: boolean;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  permanentDelete?: boolean;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the\n * values are set, this should be serialized with toString and set as the resources field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the resources string without this class, but\n * the order of the resources is particular and this class guarantees correctness.\n */\nexport class AccountSASResourceTypes {\n  /**\n   * Creates an {@link AccountSASResourceTypes} from the specified resource types string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid resource type.\n   *\n   * @param resourceTypes -\n   */\n  public static parse(resourceTypes: string): AccountSASResourceTypes {\n    const accountSASResourceTypes = new AccountSASResourceTypes();\n\n    for (const c of resourceTypes) {\n      switch (c) {\n        case \"s\":\n          accountSASResourceTypes.service = true;\n          break;\n        case \"c\":\n          accountSASResourceTypes.container = true;\n          break;\n        case \"o\":\n          accountSASResourceTypes.object = true;\n          break;\n        default:\n          throw new RangeError(`Invalid resource type: ${c}`);\n      }\n    }\n\n    return accountSASResourceTypes;\n  }\n\n  /**\n   * Permission to access service level APIs granted.\n   */\n  public service: boolean = false;\n\n  /**\n   * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares) granted.\n   */\n  public container: boolean = false;\n\n  /**\n   * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files) granted.\n   */\n  public object: boolean = false;\n\n  /**\n   * Converts the given resource types to a string.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   */\n  public toString(): string {\n    const resourceTypes: string[] = [];\n    if (this.service) {\n      resourceTypes.push(\"s\");\n    }\n    if (this.container) {\n      resourceTypes.push(\"c\");\n    }\n    if (this.object) {\n      resourceTypes.push(\"o\");\n    }\n    return resourceTypes.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that service. Once all the\n * values are set, this should be serialized with toString and set as the services field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the services string without this class, but\n * the order of the services is particular and this class guarantees correctness.\n */\nexport class AccountSASServices {\n  /**\n   * Creates an {@link AccountSASServices} from the specified services string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid service.\n   *\n   * @param services -\n   */\n  public static parse(services: string): AccountSASServices {\n    const accountSASServices = new AccountSASServices();\n\n    for (const c of services) {\n      switch (c) {\n        case \"b\":\n          accountSASServices.blob = true;\n          break;\n        case \"f\":\n          accountSASServices.file = true;\n          break;\n        case \"q\":\n          accountSASServices.queue = true;\n          break;\n        case \"t\":\n          accountSASServices.table = true;\n          break;\n        default:\n          throw new RangeError(`Invalid service character: ${c}`);\n      }\n    }\n\n    return accountSASServices;\n  }\n\n  /**\n   * Permission to access blob resources granted.\n   */\n  public blob: boolean = false;\n\n  /**\n   * Permission to access file resources granted.\n   */\n  public file: boolean = false;\n\n  /**\n   * Permission to access queue resources granted.\n   */\n  public queue: boolean = false;\n\n  /**\n   * Permission to access table resources granted.\n   */\n  public table: boolean = false;\n\n  /**\n   * Converts the given services to a string.\n   *\n   */\n  public toString(): string {\n    const services: string[] = [];\n    if (this.blob) {\n      services.push(\"b\");\n    }\n    if (this.table) {\n      services.push(\"t\");\n    }\n    if (this.queue) {\n      services.push(\"q\");\n    }\n    if (this.file) {\n      services.push(\"f\");\n    }\n    return services.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { AccountSASPermissions } from \"./AccountSASPermissions\";\nimport { AccountSASResourceTypes } from \"./AccountSASResourceTypes\";\nimport { AccountSASServices } from \"./AccountSASServices\";\nimport type { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport type { SasIPRange } from \"./SasIPRange\";\nimport { ipRangeToString } from \"./SasIPRange\";\nimport type { SASProtocol } from \"./SASQueryParameters\";\nimport { SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"../utils/constants\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * AccountSASSignatureValues is used to generate a Shared Access Signature (SAS) for an Azure Storage account. Once\n * all the values here are set appropriately, call {@link generateAccountSASQueryParameters} to obtain a representation\n * of the SAS which can actually be applied to blob urls. Note: that both this class and {@link SASQueryParameters}\n * exist because the former is mutable and a logical representation while the latter is immutable and used to generate\n * actual REST requests.\n *\n * @see https://docs.microsoft.com/en-us/azure/storage/common/storage-dotnet-shared-access-signature-part-1\n * for more conceptual information on SAS\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n * for descriptions of the parameters, including which are required\n */\nexport interface AccountSASSignatureValues {\n  /**\n   * If not provided, this defaults to the service version targeted by this version of the library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * The time after which the SAS will no longer work.\n   */\n  expiresOn: Date;\n\n  /**\n   * Specifies which operations the SAS user may perform. Please refer to {@link AccountSASPermissions} for help\n   * constructing the permissions string.\n   */\n  permissions: AccountSASPermissions;\n\n  /**\n   * Optional. IP range allowed.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The values that indicate the services accessible with this SAS. Please refer to {@link AccountSASServices} to\n   * construct this value.\n   */\n  services: string;\n\n  /**\n   * The values that indicate the resource types accessible with this SAS. Please refer\n   * to {@link AccountSASResourceTypes} to construct this value.\n   */\n  resourceTypes: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Generates a {@link SASQueryParameters} object which contains all SAS query parameters needed to make an actual\n * REST request.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n *\n * @param accountSASSignatureValues -\n * @param sharedKeyCredential -\n */\nexport function generateAccountSASQueryParameters(\n  accountSASSignatureValues: AccountSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): SASQueryParameters {\n  return generateAccountSASQueryParametersInternal(accountSASSignatureValues, sharedKeyCredential)\n    .sasQueryParameters;\n}\n\nexport function generateAccountSASQueryParametersInternal(\n  accountSASSignatureValues: AccountSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential,\n): { sasQueryParameters: SASQueryParameters; stringToSign: string } {\n  const version = accountSASSignatureValues.version\n    ? accountSASSignatureValues.version\n    : SERVICE_VERSION;\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.setImmutabilityPolicy &&\n    version < \"2020-08-04\"\n  ) {\n    throw RangeError(\"'version' must be >= '2020-08-04' when provided 'i' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.deleteVersion &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when provided 'x' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.permanentDelete &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when provided 'y' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.tag &&\n    version < \"2019-12-12\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-12-12' when provided 't' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.filter &&\n    version < \"2019-12-12\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-12-12' when provided 'f' permission.\");\n  }\n\n  if (accountSASSignatureValues.encryptionScope && version < \"2020-12-06\") {\n    throw RangeError(\"'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.\");\n  }\n\n  const parsedPermissions = AccountSASPermissions.parse(\n    accountSASSignatureValues.permissions.toString(),\n  );\n  const parsedServices = AccountSASServices.parse(accountSASSignatureValues.services).toString();\n  const parsedResourceTypes = AccountSASResourceTypes.parse(\n    accountSASSignatureValues.resourceTypes,\n  ).toString();\n\n  let stringToSign: string;\n\n  if (version >= \"2020-12-06\") {\n    stringToSign = [\n      sharedKeyCredential.accountName,\n      parsedPermissions,\n      parsedServices,\n      parsedResourceTypes,\n      accountSASSignatureValues.startsOn\n        ? truncatedISO8061Date(accountSASSignatureValues.startsOn, false)\n        : \"\",\n      truncatedISO8061Date(accountSASSignatureValues.expiresOn, false),\n      accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n      accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n      version,\n      accountSASSignatureValues.encryptionScope ? accountSASSignatureValues.encryptionScope : \"\",\n      \"\", // Account SAS requires an additional newline character\n    ].join(\"\\n\");\n  } else {\n    stringToSign = [\n      sharedKeyCredential.accountName,\n      parsedPermissions,\n      parsedServices,\n      parsedResourceTypes,\n      accountSASSignatureValues.startsOn\n        ? truncatedISO8061Date(accountSASSignatureValues.startsOn, false)\n        : \"\",\n      truncatedISO8061Date(accountSASSignatureValues.expiresOn, false),\n      accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n      accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n      version,\n      \"\", // Account SAS requires an additional newline character\n    ].join(\"\\n\");\n  }\n\n  const signature: string = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return {\n    sasQueryParameters: new SASQueryParameters(\n      version,\n      signature,\n      parsedPermissions.toString(),\n      parsedServices,\n      parsedResourceTypes,\n      accountSASSignatureValues.protocol,\n      accountSASSignatureValues.startsOn,\n      accountSASSignatureValues.expiresOn,\n      accountSASSignatureValues.ipRange,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      accountSASSignatureValues.encryptionScope,\n    ),\n    stringToSign: stringToSign,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport { getDefaultProxySettings } from \"@azure/core-rest-pipeline\";\nimport { isNode } from \"@azure/core-util\";\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\nimport type {\n  ServiceGetUserDelegationKeyHeaders,\n  ContainerCreateResponse,\n  ContainerDeleteResponse,\n  ServiceGetPropertiesResponse,\n  BlobServiceProperties,\n  ServiceSetPropertiesResponse,\n  ServiceGetStatisticsResponse,\n  ServiceGetAccountInfoResponse,\n  ServiceListContainersSegmentResponse,\n  ContainerItem,\n  UserDelegationKeyModel,\n  ContainerUndeleteResponse,\n  FilterBlobSegmentModel,\n  ServiceFilterBlobsHeaders,\n  ContainerRenameResponse,\n  LeaseAccessConditions,\n  FilterBlobSegment,\n  FilterBlobItem,\n  ServiceGetPropertiesResponseInternal,\n  ServiceGetStatisticsResponseInternal,\n  ServiceListContainersSegmentResponseInternal,\n} from \"./generatedModels\";\nimport type { Service } from \"./generated/src/operationsInterfaces\";\nimport type { StoragePipelineOptions, PipelineLike } from \"./Pipeline\";\nimport { newPipeline, isPipelineLike } from \"./Pipeline\";\nimport type { ContainerCreateOptions, ContainerDeleteMethodOptions } from \"./ContainerClient\";\nimport { ContainerClient } from \"./ContainerClient\";\nimport type { WithResponse } from \"./utils/utils.common\";\nimport {\n  appendToURLPath,\n  appendToURLQuery,\n  extractConnectionStringParts,\n  toTags,\n} from \"./utils/utils.common\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport type { PageSettings, PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { truncatedISO8061Date, assertResponse } from \"./utils/utils.common\";\nimport { tracingClient } from \"./utils/tracing\";\nimport { BlobBatchClient } from \"./BlobBatchClient\";\nimport type { CommonOptions } from \"./StorageClient\";\nimport { StorageClient } from \"./StorageClient\";\nimport { AccountSASPermissions } from \"./sas/AccountSASPermissions\";\nimport type { SASProtocol } from \"./sas/SASQueryParameters\";\nimport type { SasIPRange } from \"./sas/SasIPRange\";\nimport {\n  generateAccountSASQueryParameters,\n  generateAccountSASQueryParametersInternal,\n} from \"./sas/AccountSASSignatureValues\";\nimport { AccountSASServices } from \"./sas/AccountSASServices\";\nimport type {\n  ContainerRenameHeaders,\n  ContainerRestoreHeaders,\n  ListContainersIncludeType,\n  ServiceFilterBlobsResponse,\n  ServiceGetAccountInfoHeaders,\n  ServiceGetPropertiesHeaders,\n  ServiceGetStatisticsHeaders,\n  ServiceGetUserDelegationKeyResponse as ServiceGetUserDelegationKeyResponseModel,\n  ServiceListContainersSegmentHeaders,\n  ServiceSetPropertiesHeaders,\n} from \"./generated/src\";\n\n/**\n * Options to configure the {@link BlobServiceClient.getProperties} operation.\n */\nexport interface ServiceGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.setProperties} operation.\n */\nexport interface ServiceSetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.getAccountInfo} operation.\n */\nexport interface ServiceGetAccountInfoOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.getStatistics} operation.\n */\nexport interface ServiceGetStatisticsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the Service - Get User Delegation Key.\n */\nexport interface ServiceGetUserDelegationKeyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.listContainerSegment} operation.\n */\ninterface ServiceListContainersSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n  /**\n   * Include this parameter to\n   * specify that the container's metadata be returned as part of the response\n   * body. Possible values include: 'metadata'\n   */\n  include?: ListContainersIncludeType | ListContainersIncludeType[];\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.listContainers} operation.\n */\nexport interface ServiceListContainersOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies whether the container's metadata\n   *                                   should be returned as part of the response body.\n   */\n  includeMetadata?: boolean;\n\n  /**\n   * Specifies whether soft deleted containers should be included in the response.\n   */\n  includeDeleted?: boolean;\n  /**\n   * Specifies whether system containers should be included in the response.\n   */\n  includeSystem?: boolean;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.findBlobsByTagsSegment} operation.\n */\ninterface ServiceFindBlobsByTagsSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the maximum number of blobs\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport interface ServiceFindBlobByTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * The response of {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport type ServiceFindBlobsByTagsSegmentResponse = WithResponse<\n  FilterBlobSegment & ServiceFilterBlobsHeaders,\n  ServiceFilterBlobsHeaders,\n  FilterBlobSegmentModel\n>;\n\n/**\n * A user delegation key.\n */\nexport interface UserDelegationKey {\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   */\n  signedObjectId: string;\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   */\n  signedTenantId: string;\n  /**\n   * The date-time the key is active.\n   */\n  signedStartsOn: Date;\n  /**\n   * The date-time the key expires.\n   */\n  signedExpiresOn: Date;\n  /**\n   * Abbreviation of the Azure Storage service that accepts the key.\n   */\n  signedService: string;\n  /**\n   * The service version that created the key.\n   */\n  signedVersion: string;\n  /**\n   * The key as a base64 string.\n   */\n  value: string;\n}\n\n/**\n * Contains response data for the {@link getUserDelegationKey} operation.\n */\nexport declare type ServiceGetUserDelegationKeyResponse = WithResponse<\n  UserDelegationKey & ServiceGetUserDelegationKeyHeaders,\n  ServiceGetUserDelegationKeyHeaders,\n  UserDelegationKeyModel\n>;\n\n/**\n * Options to configure {@link BlobServiceClient.undeleteContainer} operation.\n */\nexport interface ServiceUndeleteContainerOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Optional. Specifies the new name of the restored container.\n   * Will use its original name if this is not specified.\n   * @deprecated Restore container to a different name is not supported by service anymore.\n   */\n  destinationContainerName?: string;\n}\n\n/**\n * Options to configure {@link BlobServiceClient.renameContainer} operation.\n */\nexport interface ServiceRenameContainerOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Condition to meet for the source container.\n   */\n  sourceCondition?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure {@link BlobServiceClient.generateAccountSasUrl} operation.\n */\nexport interface ServiceGenerateAccountSasUrlOptions {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n  /**\n   * Optional. IP range allowed.\n   */\n  ipRange?: SasIPRange;\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * A BlobServiceClient represents a Client to the Azure Storage Blob service allowing you\n * to manipulate blob containers.\n */\nexport class BlobServiceClient extends StorageClient {\n  /**\n   * serviceContext provided by protocol layer.\n   */\n  private serviceContext: Service;\n\n  /**\n   *\n   * Creates an instance of BlobServiceClient from connection string.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  public static fromConnectionString(\n    connectionString: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ): BlobServiceClient {\n    options = options || {};\n    const extractedCreds = extractConnectionStringParts(connectionString);\n    if (extractedCreds.kind === \"AccountConnString\") {\n      if (isNode) {\n        const sharedKeyCredential = new StorageSharedKeyCredential(\n          extractedCreds.accountName!,\n          extractedCreds.accountKey,\n        );\n\n        if (!options.proxyOptions) {\n          options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n        }\n\n        const pipeline = newPipeline(sharedKeyCredential, options);\n        return new BlobServiceClient(extractedCreds.url, pipeline);\n      } else {\n        throw new Error(\"Account connection string is only supported in Node.js environment\");\n      }\n    } else if (extractedCreds.kind === \"SASConnString\") {\n      const pipeline = newPipeline(new AnonymousCredential(), options);\n      return new BlobServiceClient(extractedCreds.url + \"?\" + extractedCreds.accountSas, pipeline);\n    } else {\n      throw new Error(\n        \"Connection string must be either an Account connection string or a SAS connection string\",\n      );\n    }\n  }\n\n  /**\n   * Creates an instance of BlobServiceClient.\n   *\n   * @param url - A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   *\n   * Example using DefaultAzureCredential from `@azure/identity`:\n   *\n   * ```js\n   * const account = \"<storage account name>\";\n   *\n   * const defaultAzureCredential = new DefaultAzureCredential();\n   *\n   * const blobServiceClient = new BlobServiceClient(\n   *   `https://${account}.blob.core.windows.net`,\n   *   defaultAzureCredential\n   * );\n   * ```\n   *\n   * Example using an account name/key:\n   *\n   * ```js\n   * const account = \"<storage account name>\"\n   * const sharedKeyCredential = new StorageSharedKeyCredential(account, \"<account key>\");\n   *\n   * const blobServiceClient = new BlobServiceClient(\n   *   `https://${account}.blob.core.windows.net`,\n   *   sharedKeyCredential\n   * );\n   * ```\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  );\n  /**\n   * Creates an instance of BlobServiceClient.\n   *\n   * @param url - A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    url: string,\n    credentialOrPipeline?:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions,\n  ) {\n    let pipeline: PipelineLike;\n    if (isPipelineLike(credentialOrPipeline)) {\n      pipeline = credentialOrPipeline;\n    } else if (\n      (isNode && credentialOrPipeline instanceof StorageSharedKeyCredential) ||\n      credentialOrPipeline instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipeline)\n    ) {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    } else {\n      // The second parameter is undefined. Use anonymous credential\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    }\n    super(url, pipeline);\n    this.serviceContext = this.storageClientContext.service;\n  }\n\n  /**\n   * Creates a {@link ContainerClient} object\n   *\n   * @param containerName - A container name\n   * @returns A new ContainerClient object for the given container name.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const containerClient = blobServiceClient.getContainerClient(\"<container name>\");\n   * ```\n   */\n  public getContainerClient(containerName: string): ContainerClient {\n    return new ContainerClient(\n      appendToURLPath(this.url, encodeURIComponent(containerName)),\n      this.pipeline,\n    );\n  }\n\n  /**\n   * Create a Blob container. @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n   *\n   * @param containerName - Name of the container to create.\n   * @param options - Options to configure Container Create operation.\n   * @returns Container creation response and the corresponding container client.\n   */\n  public async createContainer(\n    containerName: string,\n    options: ContainerCreateOptions = {},\n  ): Promise<{\n    containerClient: ContainerClient;\n    containerCreateResponse: ContainerCreateResponse;\n  }> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-createContainer\",\n      options,\n      async (updatedOptions) => {\n        const containerClient = this.getContainerClient(containerName);\n        const containerCreateResponse = await containerClient.create(updatedOptions);\n        return {\n          containerClient,\n          containerCreateResponse,\n        };\n      },\n    );\n  }\n\n  /**\n   * Deletes a Blob container.\n   *\n   * @param containerName - Name of the container to delete.\n   * @param options - Options to configure Container Delete operation.\n   * @returns Container deletion response.\n   */\n  public async deleteContainer(\n    containerName: string,\n    options: ContainerDeleteMethodOptions = {},\n  ): Promise<ContainerDeleteResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-deleteContainer\",\n      options,\n      async (updatedOptions) => {\n        const containerClient = this.getContainerClient(containerName);\n        return containerClient.delete(updatedOptions);\n      },\n    );\n  }\n\n  /**\n   * Restore a previously deleted Blob container.\n   * This API is only functional if Container Soft Delete is enabled for the storage account associated with the container.\n   *\n   * @param deletedContainerName - Name of the previously deleted container.\n   * @param deletedContainerVersion - Version of the previously deleted container, used to uniquely identify the deleted container.\n   * @param options - Options to configure Container Restore operation.\n   * @returns Container deletion response.\n   */\n  public async undeleteContainer(\n    deletedContainerName: string,\n    deletedContainerVersion: string,\n    options: ServiceUndeleteContainerOptions = {},\n  ): Promise<{\n    containerClient: ContainerClient;\n    containerUndeleteResponse: ContainerUndeleteResponse;\n  }> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-undeleteContainer\",\n      options,\n      async (updatedOptions) => {\n        const containerClient = this.getContainerClient(\n          options.destinationContainerName || deletedContainerName,\n        );\n        // Hack to access a protected member.\n        const containerContext = containerClient[\"storageClientContext\"].container;\n        const containerUndeleteResponse = assertResponse<\n          ContainerRestoreHeaders,\n          ContainerRestoreHeaders\n        >(\n          await containerContext.restore({\n            deletedContainerName,\n            deletedContainerVersion,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n        return { containerClient, containerUndeleteResponse };\n      },\n    );\n  }\n\n  /**\n   * Rename an existing Blob Container.\n   *\n   * @param sourceContainerName - The name of the source container.\n   * @param destinationContainerName - The new name of the container.\n   * @param options - Options to configure Container Rename operation.\n   */\n  /* eslint-disable-next-line @typescript-eslint/ban-ts-comment */\n  // @ts-ignore Need to hide this interface for now. Make it public and turn on the live tests for it when the service is ready.\n  private async renameContainer(\n    sourceContainerName: string,\n    destinationContainerName: string,\n    options: ServiceRenameContainerOptions = {},\n  ): Promise<{\n    containerClient: ContainerClient;\n    containerRenameResponse: ContainerRenameResponse;\n  }> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-renameContainer\",\n      options,\n      async (updatedOptions) => {\n        const containerClient = this.getContainerClient(destinationContainerName);\n        // Hack to access a protected member.\n        const containerContext = containerClient[\"storageClientContext\"].container;\n        const containerRenameResponse = assertResponse<\n          ContainerRenameHeaders,\n          ContainerRenameHeaders\n        >(\n          await containerContext.rename(sourceContainerName, {\n            ...updatedOptions,\n            sourceLeaseId: options.sourceCondition?.leaseId,\n          }),\n        );\n        return { containerClient, containerRenameResponse };\n      },\n    );\n  }\n\n  /**\n   * Gets the properties of a storage account’s Blob service, including properties\n   * for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties\n   *\n   * @param options - Options to the Service Get Properties operation.\n   * @returns Response data for the Service Get Properties operation.\n   */\n  public async getProperties(\n    options: ServiceGetPropertiesOptions = {},\n  ): Promise<ServiceGetPropertiesResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-getProperties\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ServiceGetPropertiesResponseInternal, ServiceGetPropertiesHeaders>(\n          await this.serviceContext.getProperties({\n            abortSignal: options.abortSignal,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Sets properties for a storage account’s Blob service endpoint, including properties\n   * for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties\n   *\n   * @param properties -\n   * @param options - Options to the Service Set Properties operation.\n   * @returns Response data for the Service Set Properties operation.\n   */\n  public async setProperties(\n    properties: BlobServiceProperties,\n    options: ServiceSetPropertiesOptions = {},\n  ): Promise<ServiceSetPropertiesResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-setProperties\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ServiceSetPropertiesHeaders, ServiceSetPropertiesHeaders>(\n          await this.serviceContext.setProperties(properties, {\n            abortSignal: options.abortSignal,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Retrieves statistics related to replication for the Blob service. It is only\n   * available on the secondary location endpoint when read-access geo-redundant\n   * replication is enabled for the storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats\n   *\n   * @param options - Options to the Service Get Statistics operation.\n   * @returns Response data for the Service Get Statistics operation.\n   */\n  public async getStatistics(\n    options: ServiceGetStatisticsOptions = {},\n  ): Promise<ServiceGetStatisticsResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-getStatistics\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ServiceGetStatisticsResponseInternal, ServiceGetStatisticsHeaders>(\n          await this.serviceContext.getStatistics({\n            abortSignal: options.abortSignal,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * The Get Account Information operation returns the sku name and account kind\n   * for the specified account.\n   * The Get Account Information operation is available on service versions beginning\n   * with version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\n   *\n   * @param options - Options to the Service Get Account Info operation.\n   * @returns Response data for the Service Get Account Info operation.\n   */\n  public async getAccountInfo(\n    options: ServiceGetAccountInfoOptions = {},\n  ): Promise<ServiceGetAccountInfoResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-getAccountInfo\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<ServiceGetAccountInfoHeaders, ServiceGetAccountInfoHeaders>(\n          await this.serviceContext.getAccountInfo({\n            abortSignal: options.abortSignal,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * Returns a list of the containers under the specified account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-containers2\n   *\n   * @param marker - A string value that identifies the portion of\n   *                        the list of containers to be returned with the next listing operation. The\n   *                        operation returns the continuationToken value within the response body if the\n   *                        listing operation did not return all containers remaining to be listed\n   *                        with the current page. The continuationToken value can be used as the value for\n   *                        the marker parameter in a subsequent call to request the next page of list\n   *                        items. The marker value is opaque to the client.\n   * @param options - Options to the Service List Container Segment operation.\n   * @returns Response data for the Service List Container Segment operation.\n   */\n  private async listContainersSegment(\n    marker?: string,\n    options: ServiceListContainersSegmentOptions = {},\n  ): Promise<ServiceListContainersSegmentResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-listContainersSegment\",\n      options,\n      async (updatedOptions) => {\n        return assertResponse<\n          ServiceListContainersSegmentResponseInternal,\n          ServiceListContainersSegmentHeaders\n        >(\n          await this.serviceContext.listContainersSegment({\n            abortSignal: options.abortSignal,\n            marker,\n            ...options,\n            include: typeof options.include === \"string\" ? [options.include] : options.include,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n      },\n    );\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs across all containers whose tags\n   * match a given search expression. Filter blobs searches across all containers within a\n   * storage account but can be scoped within the expression to a single container.\n   *\n   * @param tagFilterSqlExpression - The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                        The given expression must evaluate to true for a blob to be returned in the results.\n   *                                        The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                        however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async findBlobsByTagsSegment(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ServiceFindBlobsByTagsSegmentOptions = {},\n  ): Promise<ServiceFindBlobsByTagsSegmentResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-findBlobsByTagsSegment\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ServiceFilterBlobsResponse,\n          ServiceFilterBlobsHeaders,\n          FilterBlobSegmentModel\n        >(\n          await this.serviceContext.filterBlobs({\n            abortSignal: options.abortSignal,\n            where: tagFilterSqlExpression,\n            marker,\n            maxPageSize: options.maxPageSize,\n            tracingOptions: updatedOptions.tracingOptions,\n          }),\n        );\n\n        const wrappedResponse: ServiceFindBlobsByTagsSegmentResponse = {\n          ...response,\n          _response: response._response, // _response is made non-enumerable\n          blobs: response.blobs.map((blob) => {\n            let tagValue = \"\";\n            if (blob.tags?.blobTagSet.length === 1) {\n              tagValue = blob.tags.blobTagSet[0].value;\n            }\n            return { ...blob, tags: toTags(blob.tags), tagValue };\n          }),\n        };\n        return wrappedResponse;\n      },\n    );\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ServiceFindBlobsByTagsSegmentResponse.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async *findBlobsByTagsSegments(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ServiceFindBlobsByTagsSegmentOptions = {},\n  ): AsyncIterableIterator<ServiceFindBlobsByTagsSegmentResponse> {\n    let response;\n    if (!!marker || marker === undefined) {\n      do {\n        response = await this.findBlobsByTagsSegment(tagFilterSqlExpression, marker, options);\n        response.blobs = response.blobs || [];\n        marker = response.continuationToken;\n        yield response;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for blobs.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to findBlobsByTagsItems.\n   */\n  private async *findBlobsByTagsItems(\n    tagFilterSqlExpression: string,\n    options: ServiceFindBlobsByTagsSegmentOptions = {},\n  ): AsyncIterableIterator<FilterBlobItem> {\n    let marker: string | undefined;\n    for await (const segment of this.findBlobsByTagsSegments(\n      tagFilterSqlExpression,\n      marker,\n      options,\n    )) {\n      yield* segment.blobs;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to find all blobs with specified tag\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs in pages.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const blob of blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\")) {\n   *   console.log(`Blob ${i++}: ${container.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * const iter = blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\");\n   * let blobItem = await iter.next();\n   * while (!blobItem.done) {\n   *   console.log(`Blob ${i++}: ${blobItem.value.name}`);\n   *   blobItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 20 })) {\n   *   if (response.blobs) {\n   *     for (const blob of response.blobs) {\n   *       console.log(`Blob ${i++}: ${blob.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   * // Passing next marker as continuationToken\n   * iterator = blobServiceClient\n   *   .findBlobsByTags(\"tagkey='tagvalue'\")\n   *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *      console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to find blobs by tags.\n   */\n  public findBlobsByTags(\n    tagFilterSqlExpression: string,\n    options: ServiceFindBlobByTagsOptions = {},\n  ): PagedAsyncIterableIterator<FilterBlobItem, ServiceFindBlobsByTagsSegmentResponse> {\n    // AsyncIterableIterator to iterate over blobs\n    const listSegmentOptions: ServiceFindBlobsByTagsSegmentOptions = {\n      ...options,\n    };\n\n    const iter = this.findBlobsByTagsItems(tagFilterSqlExpression, listSegmentOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.findBlobsByTagsSegments(tagFilterSqlExpression, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...listSegmentOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ServiceListContainersSegmentResponses\n   *\n   * @param marker - A string value that identifies the portion of\n   *                        the list of containers to be returned with the next listing operation. The\n   *                        operation returns the continuationToken value within the response body if the\n   *                        listing operation did not return all containers remaining to be listed\n   *                        with the current page. The continuationToken value can be used as the value for\n   *                        the marker parameter in a subsequent call to request the next page of list\n   *                        items. The marker value is opaque to the client.\n   * @param options - Options to list containers operation.\n   */\n  private async *listSegments(\n    marker?: string,\n    options: ServiceListContainersSegmentOptions = {},\n  ): AsyncIterableIterator<ServiceListContainersSegmentResponse> {\n    let listContainersSegmentResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listContainersSegmentResponse = await this.listContainersSegment(marker, options);\n        listContainersSegmentResponse.containerItems =\n          listContainersSegmentResponse.containerItems || [];\n        marker = listContainersSegmentResponse.continuationToken;\n        yield await listContainersSegmentResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for Container Items\n   *\n   * @param options - Options to list containers operation.\n   */\n  private async *listItems(\n    options: ServiceListContainersSegmentOptions = {},\n  ): AsyncIterableIterator<ContainerItem> {\n    let marker: string | undefined;\n    for await (const segment of this.listSegments(marker, options)) {\n      yield* segment.containerItems;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the containers\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the containers in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const container of blobServiceClient.listContainers()) {\n   *   console.log(`Container ${i++}: ${container.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * const iter = blobServiceClient.listContainers();\n   * let containerItem = await iter.next();\n   * while (!containerItem.done) {\n   *   console.log(`Container ${i++}: ${containerItem.value.name}`);\n   *   containerItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of blobServiceClient.listContainers().byPage({ maxPageSize: 20 })) {\n   *   if (response.containerItems) {\n   *     for (const container of response.containerItems) {\n   *       console.log(`Container ${i++}: ${container.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = blobServiceClient.listContainers().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 container names\n   * if (response.containerItems) {\n   *   for (const container of response.containerItems) {\n   *     console.log(`Container ${i++}: ${container.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   * // Passing next marker as continuationToken\n   * iterator = blobServiceClient\n   *   .listContainers()\n   *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 container names\n   * if (response.containerItems) {\n   *   for (const container of response.containerItems) {\n   *      console.log(`Container ${i++}: ${container.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param options - Options to list containers.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listContainers(\n    options: ServiceListContainersOptions = {},\n  ): PagedAsyncIterableIterator<ContainerItem, ServiceListContainersSegmentResponse> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const include: ListContainersIncludeType[] = [];\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSystem) {\n      include.push(\"system\");\n    }\n\n    // AsyncIterableIterator to iterate over containers\n    const listSegmentOptions: ServiceListContainersSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include } : {}),\n    };\n\n    const iter = this.listItems(listSegmentOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...listSegmentOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * ONLY AVAILABLE WHEN USING BEARER TOKEN AUTHENTICATION (TokenCredential).\n   *\n   * Retrieves a user delegation key for the Blob service. This is only a valid operation when using\n   * bearer token authentication.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-user-delegation-key\n   *\n   * @param startsOn -      The start time for the user delegation SAS. Must be within 7 days of the current time\n   * @param expiresOn -     The end time for the user delegation SAS. Must be within 7 days of the current time\n   */\n  public async getUserDelegationKey(\n    startsOn: Date,\n    expiresOn: Date,\n    options: ServiceGetUserDelegationKeyOptions = {},\n  ): Promise<ServiceGetUserDelegationKeyResponse> {\n    return tracingClient.withSpan(\n      \"BlobServiceClient-getUserDelegationKey\",\n      options,\n      async (updatedOptions) => {\n        const response = assertResponse<\n          ServiceGetUserDelegationKeyResponseModel,\n          ServiceGetUserDelegationKeyHeaders,\n          UserDelegationKeyModel\n        >(\n          await this.serviceContext.getUserDelegationKey(\n            {\n              startsOn: truncatedISO8061Date(startsOn, false),\n              expiresOn: truncatedISO8061Date(expiresOn, false),\n            },\n            {\n              abortSignal: options.abortSignal,\n              tracingOptions: updatedOptions.tracingOptions,\n            },\n          ),\n        );\n\n        const userDelegationKey = {\n          signedObjectId: response.signedObjectId,\n          signedTenantId: response.signedTenantId,\n          signedStartsOn: new Date(response.signedStartsOn),\n          signedExpiresOn: new Date(response.signedExpiresOn),\n          signedService: response.signedService,\n          signedVersion: response.signedVersion,\n          value: response.value,\n        };\n\n        const res: ServiceGetUserDelegationKeyResponse = {\n          _response: response._response,\n          requestId: response.requestId,\n          clientRequestId: response.clientRequestId,\n          version: response.version,\n          date: response.date,\n          errorCode: response.errorCode,\n          ...userDelegationKey,\n        };\n\n        return res;\n      },\n    );\n  }\n\n  /**\n   * Creates a BlobBatchClient object to conduct batch operations.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n   *\n   * @returns A new BlobBatchClient object for this service.\n   */\n  public getBlobBatchClient(): BlobBatchClient {\n    return new BlobBatchClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Only available for BlobServiceClient constructed with a shared key credential.\n   *\n   * Generates a Blob account Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas\n   *\n   * @param expiresOn - Optional. The time at which the shared access signature becomes invalid. Default to an hour later if not provided.\n   * @param permissions - Specifies the list of permissions to be associated with the SAS.\n   * @param resourceTypes - Specifies the resource types associated with the shared access signature.\n   * @param options - Optional parameters.\n   * @returns An account SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateAccountSasUrl(\n    expiresOn?: Date,\n    permissions: AccountSASPermissions = AccountSASPermissions.parse(\"r\"),\n    resourceTypes: string = \"sco\",\n    options: ServiceGenerateAccountSasUrlOptions = {},\n  ): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw RangeError(\n        \"Can only generate the account SAS when the client is initialized with a shared key credential\",\n      );\n    }\n\n    if (expiresOn === undefined) {\n      const now = new Date();\n      expiresOn = new Date(now.getTime() + 3600 * 1000);\n    }\n\n    const sas = generateAccountSASQueryParameters(\n      {\n        permissions,\n        expiresOn,\n        resourceTypes,\n        services: AccountSASServices.parse(\"b\").toString(),\n        ...options,\n      },\n      this.credential,\n    ).toString();\n\n    return appendToURLQuery(this.url, sas);\n  }\n\n  /**\n   * Only available for BlobServiceClient constructed with a shared key credential.\n   *\n   * Generates string to sign for a Blob account Shared Access Signature (SAS) URI based on\n   * the client properties and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas\n   *\n   * @param expiresOn - Optional. The time at which the shared access signature becomes invalid. Default to an hour later if not provided.\n   * @param permissions - Specifies the list of permissions to be associated with the SAS.\n   * @param resourceTypes - Specifies the resource types associated with the shared access signature.\n   * @param options - Optional parameters.\n   * @returns An account SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateSasStringToSign(\n    expiresOn?: Date,\n    permissions: AccountSASPermissions = AccountSASPermissions.parse(\"r\"),\n    resourceTypes: string = \"sco\",\n    options: ServiceGenerateAccountSasUrlOptions = {},\n  ): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw RangeError(\n        \"Can only generate the account SAS when the client is initialized with a shared key credential\",\n      );\n    }\n\n    if (expiresOn === undefined) {\n      const now = new Date();\n      expiresOn = new Date(now.getTime() + 3600 * 1000);\n    }\n\n    return generateAccountSASQueryParametersInternal(\n      {\n        permissions,\n        expiresOn,\n        resourceTypes,\n        services: AccountSASServices.parse(\"b\").toString(),\n        ...options,\n      },\n      this.credential,\n    ).stringToSign;\n  }\n}\n","// services/storage/azureBlobService.js\r\n\r\nimport { BlobServiceClient } from \"@azure/storage-blob\";\r\nimport { validateFile } from \"../validation/validationService\";\r\n\r\nexport class AzureBlobService {\r\n  constructor(accountName, sasToken, containerName = 'uploads') {\r\n    // Validar configurações com mensagens detalhadas\r\n    if (!accountName) {\r\n      throw new Error('Nome da conta de armazenamento Azure não foi fornecido');\r\n    }\r\n\r\n    if (!sasToken) {\r\n      throw new Error('Token SAS para Azure Blob Storage não foi fornecido');\r\n    }\r\n\r\n    // URL do serviço de blob\r\n    const blobServiceUri = `https://${accountName}.blob.core.windows.net`;\r\n\r\n    // Cliente do serviço de Blob\r\n    this.blobServiceClient = new BlobServiceClient(\r\n      `${blobServiceUri}?${sasToken}`\r\n    );\r\n\r\n    // Cliente do container\r\n    this.containerClient = this.blobServiceClient.getContainerClient(containerName);\r\n  }\r\n\r\n  // Método de upload com tratativa de erros detalhada\r\n  async uploadFile(file) {\r\n    try {\r\n      // Validar arquivo\r\n      validateFile(file);\r\n\r\n      // Nome único para o arquivo\r\n      const blobName = `${Date.now()}-${file.name.replace(/\\s+/g, '-')}`;\r\n      \r\n      // Cliente do blob específico\r\n      const blockBlobClient = this.containerClient.getBlockBlobClient(blobName);\r\n\r\n      // Opções de upload\r\n      const uploadOptions = {\r\n        blobHTTPHeaders: {\r\n          blobContentType: file.type, // Mantém o tipo MIME original\r\n        }\r\n      };\r\n\r\n      try {\r\n        // Realizar upload\r\n        await blockBlobClient.uploadData(file, uploadOptions);\r\n\r\n        // Retornar informações do arquivo\r\n        return {\r\n          url: blockBlobClient.url,\r\n          type: file.type.startsWith('image/') ? 'image' : 'video',\r\n          name: blobName\r\n        };\r\n      } catch (uploadError) {\r\n        // Tratativa específica para erros de upload\r\n        console.error('Detalhes do erro de upload:', uploadError);\r\n\r\n        // Verificar erros de CORS\r\n        if (uploadError.message.includes('CORS')) {\r\n          throw new Error('Erro de CORS. Verifique as configurações do Azure Blob Storage.');\r\n        }\r\n\r\n        // Verificar erros de conexão\r\n        if (uploadError.message.includes('fetch')) {\r\n          throw new Error('Falha na conexão com o Azure Blob Storage. Verifique sua conexão de internet.');\r\n        }\r\n\r\n        // Verificar erros de autenticação\r\n        if (uploadError.statusCode === 403 || uploadError.statusCode === 401) {\r\n          throw new Error('Falha na autenticação. Verifique seu token SAS.');\r\n        }\r\n\r\n        // Erro genérico de upload\r\n        throw new Error(`Falha no upload do arquivo: ${uploadError.message}`);\r\n      }\r\n    } catch (validationError) {\r\n      // Tratativa de erros de validação\r\n      console.error('Erro de validação:', validationError);\r\n      throw validationError;\r\n    }\r\n  }\r\n}\r\n\r\n// Função de criação do serviço com log de erros\r\nexport const createAzureBlobService = () => {\r\n  try {\r\n    const accountName = process.env.REACT_APP_AZURE_STORAGE_ACCOUNT_NAME;\r\n    const sasToken = process.env.REACT_APP_AZURE_SAS_TOKEN;\r\n    const containerName = process.env.REACT_APP_AZURE_CONTAINER_NAME || 'uploads';\r\n\r\n    // Log de configurações (cuidado para não logar tokens sensíveis)\r\n    // console.log('Configurações do Azure Blob Storage:', {\r\n    //   accountName,\r\n    //   containerName,\r\n    //   sasTokenPresent: !!sasToken\r\n    // });\r\n\r\n    return new AzureBlobService(accountName, sasToken, containerName);\r\n  } catch (error) {\r\n    console.error('Erro ao criar serviço de Blob Storage:', error);\r\n    throw error;\r\n  }\r\n};","/**\n * @license React\n * scheduler.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  a: for (; 0 < index; ) {\n    var parentIndex = (index - 1) >>> 1,\n      parent = heap[parentIndex];\n    if (0 < compare(parent, node))\n      (heap[parentIndex] = node), (heap[index] = parent), (index = parentIndex);\n    else break a;\n  }\n}\nfunction peek(heap) {\n  return 0 === heap.length ? null : heap[0];\n}\nfunction pop(heap) {\n  if (0 === heap.length) return null;\n  var first = heap[0],\n    last = heap.pop();\n  if (last !== first) {\n    heap[0] = last;\n    a: for (\n      var index = 0, length = heap.length, halfLength = length >>> 1;\n      index < halfLength;\n\n    ) {\n      var leftIndex = 2 * (index + 1) - 1,\n        left = heap[leftIndex],\n        rightIndex = leftIndex + 1,\n        right = heap[rightIndex];\n      if (0 > compare(left, last))\n        rightIndex < length && 0 > compare(right, left)\n          ? ((heap[index] = right),\n            (heap[rightIndex] = last),\n            (index = rightIndex))\n          : ((heap[index] = left),\n            (heap[leftIndex] = last),\n            (index = leftIndex));\n      else if (rightIndex < length && 0 > compare(right, last))\n        (heap[index] = right), (heap[rightIndex] = last), (index = rightIndex);\n      else break a;\n    }\n  }\n  return first;\n}\nfunction compare(a, b) {\n  var diff = a.sortIndex - b.sortIndex;\n  return 0 !== diff ? diff : a.id - b.id;\n}\nexports.unstable_now = void 0;\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var localPerformance = performance;\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date,\n    initialTime = localDate.now();\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n}\nvar taskQueue = [],\n  timerQueue = [],\n  taskIdCounter = 1,\n  currentTask = null,\n  currentPriorityLevel = 3,\n  isPerformingWork = !1,\n  isHostCallbackScheduled = !1,\n  isHostTimeoutScheduled = !1,\n  localSetTimeout = \"function\" === typeof setTimeout ? setTimeout : null,\n  localClearTimeout = \"function\" === typeof clearTimeout ? clearTimeout : null,\n  localSetImmediate = \"undefined\" !== typeof setImmediate ? setImmediate : null;\nfunction advanceTimers(currentTime) {\n  for (var timer = peek(timerQueue); null !== timer; ) {\n    if (null === timer.callback) pop(timerQueue);\n    else if (timer.startTime <= currentTime)\n      pop(timerQueue),\n        (timer.sortIndex = timer.expirationTime),\n        push(taskQueue, timer);\n    else break;\n    timer = peek(timerQueue);\n  }\n}\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = !1;\n  advanceTimers(currentTime);\n  if (!isHostCallbackScheduled)\n    if (null !== peek(taskQueue))\n      (isHostCallbackScheduled = !0), requestHostCallback();\n    else {\n      var firstTimer = peek(timerQueue);\n      null !== firstTimer &&\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n}\nvar isMessageLoopRunning = !1,\n  taskTimeoutID = -1,\n  frameInterval = 5,\n  startTime = -1;\nfunction shouldYieldToHost() {\n  return exports.unstable_now() - startTime < frameInterval ? !1 : !0;\n}\nfunction performWorkUntilDeadline() {\n  if (isMessageLoopRunning) {\n    var currentTime = exports.unstable_now();\n    startTime = currentTime;\n    var hasMoreWork = !0;\n    try {\n      a: {\n        isHostCallbackScheduled = !1;\n        isHostTimeoutScheduled &&\n          ((isHostTimeoutScheduled = !1),\n          localClearTimeout(taskTimeoutID),\n          (taskTimeoutID = -1));\n        isPerformingWork = !0;\n        var previousPriorityLevel = currentPriorityLevel;\n        try {\n          b: {\n            advanceTimers(currentTime);\n            for (\n              currentTask = peek(taskQueue);\n              null !== currentTask &&\n              !(\n                currentTask.expirationTime > currentTime && shouldYieldToHost()\n              );\n\n            ) {\n              var callback = currentTask.callback;\n              if (\"function\" === typeof callback) {\n                currentTask.callback = null;\n                currentPriorityLevel = currentTask.priorityLevel;\n                var continuationCallback = callback(\n                  currentTask.expirationTime <= currentTime\n                );\n                currentTime = exports.unstable_now();\n                if (\"function\" === typeof continuationCallback) {\n                  currentTask.callback = continuationCallback;\n                  advanceTimers(currentTime);\n                  hasMoreWork = !0;\n                  break b;\n                }\n                currentTask === peek(taskQueue) && pop(taskQueue);\n                advanceTimers(currentTime);\n              } else pop(taskQueue);\n              currentTask = peek(taskQueue);\n            }\n            if (null !== currentTask) hasMoreWork = !0;\n            else {\n              var firstTimer = peek(timerQueue);\n              null !== firstTimer &&\n                requestHostTimeout(\n                  handleTimeout,\n                  firstTimer.startTime - currentTime\n                );\n              hasMoreWork = !1;\n            }\n          }\n          break a;\n        } finally {\n          (currentTask = null),\n            (currentPriorityLevel = previousPriorityLevel),\n            (isPerformingWork = !1);\n        }\n        hasMoreWork = void 0;\n      }\n    } finally {\n      hasMoreWork\n        ? schedulePerformWorkUntilDeadline()\n        : (isMessageLoopRunning = !1);\n    }\n  }\n}\nvar schedulePerformWorkUntilDeadline;\nif (\"function\" === typeof localSetImmediate)\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\nelse if (\"undefined\" !== typeof MessageChannel) {\n  var channel = new MessageChannel(),\n    port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\nfunction requestHostCallback() {\n  isMessageLoopRunning ||\n    ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline());\n}\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\nexports.unstable_IdlePriority = 5;\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_LowPriority = 4;\nexports.unstable_NormalPriority = 3;\nexports.unstable_Profiling = null;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_cancelCallback = function (task) {\n  task.callback = null;\n};\nexports.unstable_continueExecution = function () {\n  isHostCallbackScheduled ||\n    isPerformingWork ||\n    ((isHostCallbackScheduled = !0), requestHostCallback());\n};\nexports.unstable_forceFrameRate = function (fps) {\n  0 > fps || 125 < fps\n    ? console.error(\n        \"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"\n      )\n    : (frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5);\n};\nexports.unstable_getCurrentPriorityLevel = function () {\n  return currentPriorityLevel;\n};\nexports.unstable_getFirstCallbackNode = function () {\n  return peek(taskQueue);\n};\nexports.unstable_next = function (eventHandler) {\n  switch (currentPriorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n      var priorityLevel = 3;\n      break;\n    default:\n      priorityLevel = currentPriorityLevel;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_pauseExecution = function () {};\nexports.unstable_requestPaint = function () {};\nexports.unstable_runWithPriority = function (priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n    default:\n      priorityLevel = 3;\n  }\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n};\nexports.unstable_scheduleCallback = function (\n  priorityLevel,\n  callback,\n  options\n) {\n  var currentTime = exports.unstable_now();\n  \"object\" === typeof options && null !== options\n    ? ((options = options.delay),\n      (options =\n        \"number\" === typeof options && 0 < options\n          ? currentTime + options\n          : currentTime))\n    : (options = currentTime);\n  switch (priorityLevel) {\n    case 1:\n      var timeout = -1;\n      break;\n    case 2:\n      timeout = 250;\n      break;\n    case 5:\n      timeout = 1073741823;\n      break;\n    case 4:\n      timeout = 1e4;\n      break;\n    default:\n      timeout = 5e3;\n  }\n  timeout = options + timeout;\n  priorityLevel = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: options,\n    expirationTime: timeout,\n    sortIndex: -1\n  };\n  options > currentTime\n    ? ((priorityLevel.sortIndex = options),\n      push(timerQueue, priorityLevel),\n      null === peek(taskQueue) &&\n        priorityLevel === peek(timerQueue) &&\n        (isHostTimeoutScheduled\n          ? (localClearTimeout(taskTimeoutID), (taskTimeoutID = -1))\n          : (isHostTimeoutScheduled = !0),\n        requestHostTimeout(handleTimeout, options - currentTime)))\n    : ((priorityLevel.sortIndex = timeout),\n      push(taskQueue, priorityLevel),\n      isHostCallbackScheduled ||\n        isPerformingWork ||\n        ((isHostCallbackScheduled = !0), requestHostCallback()));\n  return priorityLevel;\n};\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = function (callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n};\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"422\":\"fcc4778f\",\"726\":\"7c7c4404\",\"761\":\"a0d1aa45\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/css/\" + chunkId + \".\" + \"6384ea47\" + \".chunk.css\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"whatsapp-carousel-creator:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = (chunkId, fullhref, oldTag, resolve, reject) => {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tif (__webpack_require__.nc) {\n\t\tlinkTag.nonce = __webpack_require__.nc;\n\t}\n\tvar onLinkComplete = (event) => {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && event.type;\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + errorType + \": \" + realHref + \")\");\n\t\t\terr.name = \"ChunkLoadError\";\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = (href, fullhref) => {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = (chunkId) => {\n\treturn new Promise((resolve, reject) => {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.miniCss = (chunkId, promises) => {\n\tvar cssChunks = {\"422\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(() => {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, (e) => {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr\n\n// no prefetching\n\n// no preloaded","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwhatsapp_carousel_creator\"] = self[\"webpackChunkwhatsapp_carousel_creator\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ErrorBoundary_container__hI+GG\",\"iconContainer\":\"ErrorBoundary_iconContainer__0NG3y\",\"icon\":\"ErrorBoundary_icon__j-6jX\",\"title\":\"ErrorBoundary_title__DL4IS\",\"message\":\"ErrorBoundary_message__scAK9\",\"details\":\"ErrorBoundary_details__wUbwA\",\"summary\":\"ErrorBoundary_summary__l4g5M\",\"errorContent\":\"ErrorBoundary_errorContent__FQziN\",\"errorMessage\":\"ErrorBoundary_errorMessage__mmxkJ\",\"stackTrace\":\"ErrorBoundary_stackTrace__inCoR\",\"actions\":\"ErrorBoundary_actions__7C2ET\"};","// components/common/ErrorBoundary.js\r\nimport React, { Component } from 'react';\r\nimport { FiAlertTriangle, FiRefreshCw, FiArrowLeft } from 'react-icons/fi';\r\nimport Button from '../ui/Button/Button';\r\nimport styles from './ErrorBoundary.module.css';\r\n\r\n/**\r\n * Error boundary component that catches errors in child components\r\n * and displays a fallback UI instead of crashing the app\r\n */\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      hasError: false,\r\n      error: null,\r\n      errorInfo: null\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update state to show fallback UI in the next render\r\n   * @param {Error} error - The error that was thrown\r\n   */\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  /**\r\n   * Called when an error is caught\r\n   * Useful for logging the error\r\n   * @param {Error} error - The error that was thrown\r\n   * @param {Object} errorInfo - Information about the error\r\n   */\r\n  componentDidCatch(error, errorInfo) {\r\n    // Log the error to console\r\n    console.error('Error caught by boundary:', error, errorInfo);\r\n    this.setState({ errorInfo });\r\n    \r\n    // You can send the error to a service like Sentry here\r\n  }\r\n\r\n  /**\r\n   * Reset the error boundary state\r\n   */\r\n  handleReset = () => {\r\n    this.setState({\r\n      hasError: false,\r\n      error: null,\r\n      errorInfo: null\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { showDetails, fallbackAction, fallbackActionText, children } = this.props;\r\n    const { hasError, error, errorInfo } = this.state;\r\n\r\n    if (hasError) {\r\n      // Render fallback UI\r\n      return (\r\n        <div className={styles.container}>\r\n          <div className={styles.iconContainer}>\r\n            <FiAlertTriangle className={styles.icon} />\r\n          </div>\r\n          \r\n          <h2 className={styles.title}>\r\n            Oops! Something went wrong.\r\n          </h2>\r\n          \r\n          <p className={styles.message}>\r\n            An error occurred while rendering this component.\r\n          </p>\r\n          \r\n          {showDetails && error && (\r\n            <details className={styles.details}>\r\n              <summary className={styles.summary}>\r\n                Error details\r\n              </summary>\r\n              <div className={styles.errorContent}>\r\n                <div className={styles.errorMessage}>\r\n                  {error.toString()}\r\n                </div>\r\n                {errorInfo && (\r\n                  <pre className={styles.stackTrace}>\r\n                    {errorInfo.componentStack}\r\n                  </pre>\r\n                )}\r\n              </div>\r\n            </details>\r\n          )}\r\n          \r\n          <div className={styles.actions}>\r\n            <Button \r\n              variant=\"solid\"\r\n              color=\"primary\"\r\n              onClick={this.handleReset}\r\n              iconLeft={<FiRefreshCw />}\r\n            >\r\n              Try Again\r\n            </Button>\r\n            \r\n            {fallbackAction && (\r\n              <Button\r\n                variant=\"outline\"\r\n                color=\"content\"\r\n                onClick={fallbackAction}\r\n                iconLeft={<FiArrowLeft />}\r\n              >\r\n                {fallbackActionText || 'Back'}\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Render children normally if there is no error\r\n    return children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Loading_container__W22jo\",\"fadeIn\":\"Loading_fadeIn__RR0iJ\",\"statusCard\":\"Loading_statusCard__bcZGj\",\"statusIconWrapper\":\"Loading_statusIconWrapper__tkCMV\",\"inProgress\":\"Loading_inProgress__bzO5E\",\"success\":\"Loading_success__4Ww8J\",\"partialSuccess\":\"Loading_partialSuccess__z23LE\",\"error\":\"Loading_error__cVeEv\",\"statusIcon\":\"Loading_statusIcon__0uH5G\",\"statusContent\":\"Loading_statusContent__5fh4s\",\"statusTitle\":\"Loading_statusTitle__uzk9Z\",\"statusMessage\":\"Loading_statusMessage__cUeVP\",\"progressBar\":\"Loading_progressBar__wSi2S\",\"progressIndeterminate\":\"Loading_progressIndeterminate__sgDq9\",\"indeterminateProgress\":\"Loading_indeterminateProgress__vrtH+\",\"formatContainer\":\"Loading_formatContainer__HEOmY\",\"formatBadge\":\"Loading_formatBadge__Bax8H\",\"formatComplete\":\"Loading_formatComplete__OSnq+\",\"spin\":\"Loading_spin__3Utm-\"};","// components/common/Loading.js\r\nimport React from 'react';\r\nimport styles from './Loading.module.css';\r\n\r\n/**\r\n * Componente de carregamento que segue o design system Blip\r\n * @param {Object} props - Propriedades do componente\r\n * @param {string} props.size - Tamanho do spinner: 'small', 'medium' (default), 'large'\r\n * @param {string} props.color - Cor do spinner: 'primary' (default), 'light', 'dark'\r\n * @param {string} props.message - Mensagem opcional de carregamento\r\n * @param {boolean} props.fullScreen - Se deve cobrir toda a tela\r\n * @returns {JSX.Element} Componente de carregamento\r\n */\r\nconst Loading = ({ \r\n  size = 'medium', \r\n  color = 'primary', \r\n  message,\r\n  fullScreen = false\r\n}) => {\r\n  const containerClasses = `${styles.container} ${fullScreen ? styles.fullScreen : ''}`;\r\n  const spinnerClasses = `${styles.spinner} ${styles[`size-${size}`]} ${styles[`color-${color}`]}`;\r\n  \r\n  return (\r\n    <div className={containerClasses}>\r\n      <div className={styles.content}>\r\n        <div className={spinnerClasses}>\r\n          <div className={styles.circle}></div>\r\n        </div>\r\n        \r\n        {message && (\r\n          <div className={styles.message}>{message}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;","// App.js\r\nimport React, { useEffect, Suspense, lazy } from 'react';\r\nimport { WhatsAppTemplateProvider } from './contexts/WhatsAppTemplateContext';\r\n// import { TextContentProvider } from './contexts/TextContentContext';\r\n// import { ToastProvider } from './components/ui/Feedback/Feedback';\r\nimport { AlertProvider } from './components/ui/AlertMessage/AlertContext';\r\nimport ErrorBoundary from './components/common/ErrorBoundary';\r\nimport Loading from './components/ui/Loading/Loading';\r\nimport { createAzureBlobService } from './services/storage/azureBlobService';\r\nimport './styles/design-system.css';\r\n\r\n// Lazy load the main component to improve initial load performance\r\nconst WhatsAppCarouselCreator = lazy(() => import('./components/WhatsAppCarouselCreator'));\r\n\r\n/**\r\n * Componente raiz da aplicação\r\n * Inicializa serviços e provê contextos globais\r\n */\r\nfunction App() {\r\n  // Inicializar serviços ao carregar a aplicação\r\n  useEffect(() => {\r\n    // Inicializar o Azure Blob Service (se necessário)\r\n    try {\r\n      const blobService = createAzureBlobService();\r\n      // console.log('Azure Blob Service inicializado com sucesso');\r\n    } catch (error) {\r\n      console.error('Erro ao inicializar Azure Blob Service:', error);\r\n    }\r\n    \r\n    // Verificar modo de ambiente\r\n    console.log(`Aplicação rodando em modo: ${process.env.NODE_ENV}`);\r\n    \r\n    // Verificar se temos as variáveis de ambiente necessárias\r\n    if (!process.env.REACT_APP_AZURE_STORAGE_ACCOUNT_NAME || \r\n        !process.env.REACT_APP_AZURE_SAS_TOKEN) {\r\n      console.warn('Aviso: Algumas variáveis de ambiente não estão configuradas');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n      <ErrorBoundary showDetails={process.env.NODE_ENV === 'development'}>\r\n        {/* O AlertProvider DEVE vir antes do WhatsAppTemplateProvider \r\n            para que o useAlert esteja disponível */}\r\n        <AlertProvider>\r\n          {/* <TextContentProvider> */}\r\n            <WhatsAppTemplateProvider>\r\n              <div className=\"app-container\">\r\n                <main className=\"app-content\">\r\n                  <Suspense fallback={\r\n                    <div className=\"loading-container\">\r\n                      <Loading \r\n                        size=\"large\" \r\n                        color=\"primary\" \r\n                        message=\"Carregando aplicação...\" \r\n                      />\r\n                    </div>\r\n                  }>\r\n                    <ErrorBoundary \r\n                      showDetails={process.env.NODE_ENV === 'development'}\r\n                      fallbackAction={() => window.location.reload()}\r\n                      fallbackActionText=\"Recarregar Página\"\r\n                    >\r\n                      <WhatsAppCarouselCreator />\r\n                    </ErrorBoundary>\r\n                  </Suspense>\r\n                </main>\r\n              </div>\r\n            </WhatsAppTemplateProvider>\r\n          {/* </TextContentProvider> */}\r\n        </AlertProvider>\r\n      </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './styles/design-system.css';\r\n// import './styles/design-system.css';\r\nimport App from './App'; // Importar o App em vez de WhatsAppCarouselCreator\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"names":["Scheduler","require","React","ReactDOM","formatProdErrorMessage","code","url","arguments","length","encodeURIComponent","i","isValidContainer","node","nodeType","REACT_LEGACY_ELEMENT_TYPE","Symbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","REACT_MEMO_CACHE_SENTINEL","MAYBE_ITERATOR_SYMBOL","iterator","getIteratorFn","maybeIterable","REACT_CLIENT_REFERENCE","getComponentNameFromType","type","$$typeof","displayName","name","_context","innerType","render","_payload","_init","x","prefix","suffix","ReactSharedInternals","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","assign","Object","describeBuiltInComponentFrame","Error","match","stack","trim","indexOf","reentry","describeNativeComponentFrame","fn","construct","previousPrepareStackTrace","prepareStackTrace","RunInRootFrame","DetermineComponentFrameRoot","Fake","defineProperty","prototype","set","Reflect","control","call","x$0","x$1","catch","sample","namePropDescriptor","getOwnPropertyDescriptor","configurable","value","_RunInRootFrame$Deter","sampleStack","controlStack","sampleLines","split","controlLines","includes","frame","replace","describeFiber","fiber","tag","getStackByFiberInDevAndProd","workInProgress","info","return","message","getNearestMountedFiber","nearestMounted","alternate","flags","getSuspenseInstanceFromFiber","suspenseState","memoizedState","dehydrated","assertIsMounted","findCurrentHostFiberImpl","child","sibling","isArrayImpl","Array","isArray","ReactDOMSharedInternals","__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","sharedNotPendingObject","pending","data","method","action","valueStack","index","createCursor","defaultValue","current","pop","cursor","push","contextStackCursor","contextFiberStackCursor","rootInstanceStackCursor","hostTransitionProviderCursor","pushHostContainer","nextRootInstance","documentElement","namespaceURI","getOwnHostContext","parentNode","tagName","getChildHostContextProd","popHostContainer","pushHostContext","context","JSCompiler_inline_result","popHostContext","HostTransitionContext","_currentValue","hasOwnProperty","scheduleCallback$3","unstable_scheduleCallback","cancelCallback$1","unstable_cancelCallback","shouldYield","unstable_shouldYield","requestPaint","unstable_requestPaint","now","unstable_now","getCurrentPriorityLevel","unstable_getCurrentPriorityLevel","ImmediatePriority","unstable_ImmediatePriority","UserBlockingPriority","unstable_UserBlockingPriority","NormalPriority$1","unstable_NormalPriority","LowPriority","unstable_LowPriority","IdlePriority","unstable_IdlePriority","log$1","log","unstable_setDisableYieldValue","rendererID","injectedHook","setIsStrictModeForDevtools","newIsStrictMode","setStrictMode","err","clz32","Math","LN2","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","lanes","pendingSyncLanes","getNextLanes","root","wipLanes","pendingLanes","nextLanes","suspendedLanes","pingedLanes","warmLanes","finishedLanes","nonIdlePendingLanes","checkIfRootIsPrerendering","renderLanes","computeExpirationTime","lane","currentTime","claimNextTransitionLane","claimNextRetryLane","createLaneMap","initial","laneMap","markRootUpdated$1","updateLane","markSpawnedDeferredLane","spawnedLane","entangledLanes","spawnedLaneIndex","entanglements","markRootEntangled","rootEntangledLanes","index$8","lanesToEventPriority","resolveUpdatePriority","updatePriority","p","window","event","getEventPriority","randomKey","random","toString","slice","internalInstanceKey","internalPropsKey","internalContainerInstanceKey","internalEventHandlersKey","internalEventHandlerListenersKey","internalEventHandlesSetKey","internalRootNodeResourcesKey","internalHoistableMarker","detachDeletedInstance","getClosestInstanceFromNode","targetNode","targetInst","getParentSuspenseInstance","getInstanceFromNode","getNodeFromInstance","inst","stateNode","getResourcesFromRoot","resources","hoistableStyles","Map","hoistableScripts","markNodeAsHoistable","allNativeEvents","Set","registrationNameDependencies","registerTwoPhaseEvent","registrationName","dependencies","registerDirectEvent","add","canUseDOM","document","createElement","VALID_ATTRIBUTE_NAME_REGEX","RegExp","illegalAttributeNameCache","validatedAttributeNameCache","setValueForAttribute","attributeName","test","removeAttribute","prefix$10","toLowerCase","setAttribute","setValueForKnownAttribute","setValueForNamespacedAttribute","namespace","setAttributeNS","getToStringValue","isCheckable","elem","nodeName","track","_valueTracker","valueField","descriptor","constructor","currentValue","get","this","enumerable","getValue","setValue","stopTracking","trackValueOnNode","updateValueIfChanged","tracker","lastValue","checked","getActiveElement","doc","activeElement","body","e","escapeSelectorAttributeValueInsideDoubleQuotesRegex","escapeSelectorAttributeValueInsideDoubleQuotes","ch","charCodeAt","updateInput","element","lastDefaultValue","defaultChecked","setDefaultValue","initInput","isHydrating","ownerDocument","updateOptions","multiple","propValue","setDefaultSelected","options","selected","defaultSelected","disabled","updateTextarea","initTextarea","children","textContent","setTextContent","text","firstChild","lastChild","nodeValue","unitlessNumbers","setValueForStyle","style","styleName","isCustomProperty","setProperty","cssFloat","has","setValueForStyles","styles","prevStyles","styleName$16","styleName$17","isCustomElement","aliases","isJavaScriptProtocol","sanitizeURL","currentReplayingEvent","getEventTarget","nativeEvent","target","srcElement","correspondingUseElement","restoreTarget","restoreQueue","restoreStateOfTarget","internalInstance","props","a","querySelectorAll","otherNode","form","otherProps","isInsideEventHandler","batchedUpdates$1","b","flushSyncWork$1","getListener","passiveBrowserEventsSupported","addEventListener","removeEventListener","startText","fallbackText","getData","start","end","startValue","startLength","endValue","endLength","minEnd","getEventCharCode","keyCode","charCode","functionThatReturnsTrue","functionThatReturnsFalse","createSyntheticEvent","Interface","SyntheticBaseEvent","reactName","reactEventType","nativeEventTarget","propName","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","lastMovementX","lastMovementY","lastMouseEvent","EventInterface","eventPhase","bubbles","cancelable","timeStamp","Date","isTrusted","SyntheticEvent","UIEventInterface","view","detail","SyntheticUIEvent","MouseEventInterface","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","getEventModifierState","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","SyntheticMouseEvent","SyntheticDragEvent","dataTransfer","SyntheticFocusEvent","SyntheticAnimationEvent","animationName","elapsedTime","pseudoElement","SyntheticClipboardEvent","clipboardData","SyntheticCompositionEvent","normalizeKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","translateToKey","modifierKeyToProp","Alt","Control","Meta","Shift","modifierStateGetter","keyArg","SyntheticKeyboardEvent","key","String","fromCharCode","location","repeat","locale","which","SyntheticPointerEvent","pointerId","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","SyntheticTouchEvent","touches","targetTouches","changedTouches","SyntheticTransitionEvent","propertyName","SyntheticWheelEvent","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","SyntheticToggleEvent","newState","oldState","END_KEYCODES","canUseCompositionEvent","documentMode","canUseTextInputEvent","useFallbackCompositionData","SPACEBAR_CHAR","hasSpaceKeypress","isFallbackCompositionEnd","domEventName","getDataFromCustomEvent","isComposing","supportedInputTypes","color","date","datetime","email","month","number","password","range","search","tel","time","week","isTextInputElement","createAndAccumulateChangeEvent","dispatchQueue","accumulateTwoPhaseListeners","listeners","activeElement$1","activeElementInst$1","runEventInBatch","processDispatchQueue","getInstIfValueChanged","getTargetInstForChangeEvent","isInputEventSupported","JSCompiler_inline_result$jscomp$283","isSupported$jscomp$inline_418","element$jscomp$inline_419","oninput","stopWatchingForValueChange","detachEvent","handlePropertyChange","handleEventsForInputEventPolyfill","attachEvent","getTargetInstForInputEventPolyfill","getTargetInstForClickEvent","getTargetInstForInputOrChangeEvent","objectIs","is","y","shallowEqual","objA","objB","keysA","keys","keysB","currentKey","getLeafNode","getNodeForCharacterOffset","offset","nodeEnd","nextSibling","containsNode","outerNode","innerNode","contains","compareDocumentPosition","getActiveElementDeep","containerInfo","defaultView","HTMLIFrameElement","contentWindow","href","hasSelectionCapabilities","contentEditable","restoreSelection","priorSelectionInformation","curFocusedElem","focusedElem","priorSelectionRange","selectionRange","selectionStart","selectionEnd","min","getSelection","extend","endMarker","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","skipSelectionChangeEvent","activeElementInst","lastSelection","mouseDown","constructSelectEvent","makePrefixMap","styleProp","eventName","prefixes","vendorPrefixes","animationend","animationiteration","animationstart","transitionrun","transitionstart","transitioncancel","transitionend","prefixedEventNames","getVendorPrefixedEventName","prefixMap","animation","transition","ANIMATION_END","ANIMATION_ITERATION","ANIMATION_START","TRANSITION_RUN","TRANSITION_START","TRANSITION_CANCEL","TRANSITION_END","topLevelEventsToReactNames","simpleEventPluginEvents","registerSimpleEvent","concurrentQueues","concurrentQueuesIndex","concurrentlyUpdatedLanes","finishQueueingConcurrentUpdates","endIndex","queue","update","next","markUpdateLaneFromFiberToRoot","enqueueUpdate$1","enqueueConcurrentHookUpdate","getRootForUpdatedFiber","enqueueConcurrentRenderForLane","sourceFiber","isHidden","parent","childLanes","_visibility","hiddenUpdates","nestedUpdateCount","rootWithNestedUpdates","emptyContextObject","CapturedStacks","WeakMap","createCapturedValueAtFiber","source","existing","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","pushTreeFork","totalChildren","pushTreeId","baseIdWithLeadingBit","baseLength","numberOfOverflowBits","pushMaterializedTreeId","popTreeContext","hydrationParentFiber","nextHydratableInstance","hydrationErrors","rootOrSingletonContext","HydrationMismatchException","throwOnHydrationMismatch","queueHydrationError","prepareToHydrateHostInstance","instance","memoizedProps","listenToNonDelegatedEvent","mediaEventTypes","suppressHydrationWarning","checkForUnmatchedText","popover","onScroll","onScrollEnd","onClick","onclick","noop$1","popToNextHostParent","popHydrationState","JSCompiler_temp","shouldClear","shouldSetTextContent","getNextHydratable","resetHydrationState","error","SuspenseException","SuspenseyCommitException","noopSuspenseyCommitThenable","then","isThenableResolved","thenable","status","noop$3","trackUsedThenable","thenableState","reason","workInProgressRoot","shellSuspendCounter","fulfilledValue","fulfilledThenable","rejectedThenable","suspendedThenable","getSuspendedThenable","thenableState$1","thenableIndexCounter$1","unwrapThenable","coerceRef","ref","throwOnInvalidObjectType","returnFiber","newChild","join","resolveLazy","lazyType","init","createChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deletions","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","useFiber","pendingProps","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","placeSingleChild","updateTextNode","createFiberFromText","mode","updateElement","elementType","updateFragment","createFiberFromTypeAndProps","updatePortal","portal","implementation","createFiberFromPortal","fragment","createFiberFromFragment","createChild","readContextDuringReconciliation","updateSlot","oldFiber","updateFromMap","newIdx","reconcileChildFibersImpl","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","delete","forEach","reconcileChildrenArray","step","done","reconcileChildrenIterator","firstChildFiber","createFiberImplClass","reconcileChildFibers","mountChildFibers","currentTreeHiddenStackCursor","prevEntangledRenderLanesCursor","pushHiddenContext","entangledRenderLanes","baseLanes","reuseHiddenContextOnStack","popHiddenContext","suspenseHandlerStackCursor","shellBoundary","pushPrimaryTreeSuspenseHandler","handler","suspenseStackCursor","pushOffscreenSuspenseHandler","reuseSuspenseHandlerOnStack","popSuspenseHandler","findFirstSuspended","row","state","revealOrder","AbortControllerLocal","AbortController","signal","aborted","listener","abort","scheduleCallback$2","NormalPriority","CacheContext","Consumer","Provider","_currentValue2","_threadCount","createCache","controller","refCount","releaseCache","cache","currentEntangledListeners","currentEntangledPendingCount","currentEntangledLane","currentEntangledActionThenable","pingEngtangledActionScope","prevOnStartTransitionFinish","S","entangledListeners","requestTransitionLane","resolve","entangleAsyncAction","resumedCache","peekCacheFromPool","cacheResumedFromPreviousRender","pooledCache","pushTransition","offscreenWorkInProgress","prevCachePool","pool","getSuspendedCache","cacheFromPool","currentlyRenderingFiber$1","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","shouldDoubleInvokeUserFnsInHooksDEV","localIdCounter","thenableIndexCounter","globalClientIdCounter","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","Component","secondArg","nextRenderLanes","updateQueue","H","HooksDispatcherOnMount","HooksDispatcherOnUpdate","renderWithHooksAgain","finishRenderingHooks","ContextOnlyDispatcher","didRenderTooFewHooks","didReceiveUpdate","checkIfContextChanged","numberOfReRenders","lastEffect","events","stores","memoCache","HooksDispatcherOnRerender","TransitionAwareHostComponent","dispatcher","maybeThenable","useState","useThenable","checkDidRenderIdHook","didRenderIdHook","bailoutHooks","resetHooksOnUnwind","mountWorkInProgressHook","hook","baseState","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","use","usable","readContext","useMemoCache","size","map","array","basicStateReducer","updateReducer","reducer","updateReducerImpl","lastRenderedReducer","pendingQueue","baseFirst","newBaseQueueFirst","newBaseQueueLast","didReadFromEntangledAsyncAction$54","workInProgressRootRenderLanes","revertLane","hasEagerState","eagerState","workInProgressRootSkippedLanes","lastRenderedState","dispatch","rerenderReducer","lastRenderPhaseUpdate","updateSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","isHydrating$jscomp$0","snapshotChanged","updateEffect","subscribeToStore","bind","pushEffect","updateStoreInstance","destroy","pushStoreConsistencyCheck","renderedSnapshot","nextSnapshot","checkIfSnapshotChanged","forceStoreRerender","latestGetSnapshot","nextValue","scheduleUpdateOnFiber","mountStateImpl","initialState","initialStateInitializer","updateOptimisticImpl","passthrough","dispatchActionState","actionQueue","setPendingState","setState","payload","isRenderPhaseUpdate","actionNode","isTransition","T","runActionStateAction","prevState","prevTransition","currentTransition","onStartTransitionFinish","handleActionReturnValue","onActionError","error$60","nextState","onActionSuccess","notifyActionListeners","last","actionStateReducer","mountActionState","initialStateProp","ssrFormState","formState","JSCompiler_inline_result$jscomp$0","inRootOrSingleton","dispatchSetState","dispatchOptimisticSetState","updateActionState","updateActionStateImpl","stateHook","currentStateHook","actionQueueHook","actionStateActionEffect","rerenderActionState","create","deps","updateRef","mountEffectImpl","fiberFlags","hookFlags","updateEffectImpl","mountEffect","updateInsertionEffect","updateLayoutEffect","imperativeHandleEffect","refCleanup","updateImperativeHandle","concat","mountDebugValue","updateCallback","callback","updateMemo","nextCreate","mountDeferredValueImpl","initialValue","requestDeferredLane","updateDeferredValueImpl","prevValue","startTransition","pendingState","finishedState","previousPriority","dispatchSetStateInternal","result","thenableWithOverride","chainThenableValue","requestUpdateLane","noop$2","startHostTransition","formFiber","formData","ensureFormComponentIsStateful","requestFormReset$1","existingStateHook","initialResetState","useHostTransitionStatus","updateId","updateRefresh","refreshCache","provider","root$63","enqueueUpdate","createUpdate","entangleTransitions","dispatchReducerAction","enqueueRenderPhaseUpdate","entangleTransitionUpdate","currentState","throwIfDuringRender","queueLanes","useCallback","useContext","useEffect","useImperativeHandle","useLayoutEffect","useInsertionEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useSyncExternalStore","useId","useCacheRefresh","useFormState","useActionState","useOptimistic","initialArg","identifierPrefix","booleanOrThenable","applyDerivedStateFromProps","ctor","getDerivedStateFromProps","nextProps","classComponentUpdater","isMounted","component","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldProps","newProps","nextContext","shouldComponentUpdate","isPureReactComponent","callComponentWillReceiveProps","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","resolveClassComponentProps","baseProps","defaultProps","propName$67","reportGlobalError","reportError","ErrorEvent","dispatchEvent","process","emit","console","defaultOnUncaughtError","defaultOnCaughtError","defaultOnRecoverableError","logUncaughtError","errorInfo","onUncaughtError","componentStack","e$68","setTimeout","logCaughtError","boundary","onCaughtError","errorBoundary","e$69","createRootErrorUpdate","createClassErrorUpdate","initializeClassErrorUpdate","getDerivedStateFromError","componentDidCatch","legacyErrorBoundariesThatAlreadyFailed","SelectiveHydrationException","reconcileChildren","nextChildren","updateForwardRef","propsWithoutRef","prepareToReadContext","bailoutOnAlreadyFinishedWork","updateMemoComponent","shouldConstruct","compare","updateSimpleMemoComponent","checkScheduledUpdateOrContext","prevProps","updateFunctionComponent","updateOffscreenComponent","nextIsDetached","_pendingVisibility","markRef","deferHiddenOffscreenComponent","cachePool","nextBaseLanes","propagateParentContextChanges","replayFunctionComponent","updateClassComponent","contextType","updater","refs","initializeUpdateQueue","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","processUpdateQueue","suspendIfUpdateReadFromEntangledAsyncAction","componentDidMount","unresolvedOldProps","oldContext","contextType$jscomp$0","hasForceUpdate","cloneUpdateQueue","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","mountHostRootWithoutHydrating","SUSPENDED_MARKER","treeContext","retryLane","mountSuspenseOffscreenState","getRemainingWorkInPrimaryTree","primaryTreeDidDefer","workInProgressDeferredLane","updateSuspenseComponent","showFallback","didSuspend","JSCompiler_temp$jscomp$0","nextInstance","c","id","overflow","fallback","mountWorkInProgressOffscreenFiber","mountSuspensePrimaryChildren","retrySuspenseComponentWithoutHydrating","dataset","digest","dgst","renderDidSuspendDelayIfPossible","retryDehydratedSuspenseBoundary","_reactRetry","subtreeFlags","primaryChildren","offscreenProps","createFiberFromOffscreen","scheduleSuspenseWorkOnFiber","propagationRoot","scheduleContextWorkOnParentPath","initSuspenseListRenderState","isBackwards","tail","lastContentRow","tailMode","renderState","rendering","renderingStartTime","updateSuspenseListComponent","beginWork","pushProvider","didSuspendBefore","attemptEarlyBailoutIfNoScheduledUpdate","lazyComponent","propagateContextChanges","isDehydrated","getResource","getOwnerDocumentFromRootContainer","setInitialProperties","resolveSingletonInstance","anyProps","hasAttribute","getAttribute","rel","crossOrigin","title","src","canHydrateInstance","canHydrateTextInstance","pooledCacheLanes","valueCursor","currentlyRenderingFiber","lastContextDependency","providerFiber","popProvider","contexts","forcePropagateEntireTree","list","nextFiber","firstContext","dependency","isInsidePropagationBailout","currentParent","currentDependencies","memoizedValue","readContextForConsumer","consumer","firstBaseUpdate","lastBaseUpdate","shared","hiddenCallbacks","callbacks","executionContext","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","clone","didReadFromEntangledAsyncAction","workInProgress$jscomp$0","instance$jscomp$0","lastPendingUpdate","firstPendingUpdate","isHiddenUpdate","callCallback","commitCallbacks","commitHookEffectListMount","finishedWork","firstEffect","captureCommitPhaseError","commitHookEffectListUnmount","nearestMountedAncestor$jscomp$0","nearestMountedAncestor","commitClassCallbacks","safelyCallComponentWillUnmount","componentWillUnmount","safelyAttachRef","instanceToUse","safelyDetachRef","error$112","commitHostMount","autoFocus","srcSet","srcset","commitHostUpdate","domElement","lastProps","propKey","lastProp","setProp","propKey$203","propKey$219","propKey$224","propKey$229","setPropOnCustomElement","propKey$234","updateProperties","isHostParent","getHostSibling","insertOrAppendPlacementNodeIntoContainer","before","insertBefore","appendChild","_reactRootContainer","insertOrAppendPlacementNode","offscreenSubtreeIsHidden","offscreenSubtreeWasHidden","needsFormReset","PossiblyWeakSet","WeakSet","nextEffect","shouldFireAfterActiveInstanceBlur","commitLayoutEffectOnFiber","finishedRoot","recursivelyTraverseLayoutEffects","__reactInternalSnapshotBeforeUpdate","error$111","commitSuspenseHydrationCallbacks","prevOffscreenSubtreeIsHidden","prevOffscreenSubtreeWasHidden","recursivelyTraverseReappearLayoutEffects","detachFiberAfterEffects","hostParent","hostParentIsContainer","recursivelyTraverseDeletionEffects","commitDeletionEffectsOnFiber","deletedFiber","onCommitFiberUnmount","count","removeChild","prevHostParent","prevHostParentIsContainer","attributes","removeAttributeNode","prevHostParentIsContainer$119","clearSuspenseBoundary","retryIfBlockedOn","attachSuspenseRetryListeners","wakeables","retryCache","_retryCache","getRetryCache","wakeable","retry","resolveRetryWakeable","recursivelyTraverseMutationEffects","root$jscomp$0","parentFiber","commitMutationEffectsOnFiber","currentHoistableRoot","commitReconciliationEffects","hoistableRoot","currentResource","getElementsByTagName","head","querySelector","maybeNodes","getHydratableHoistableCache","splice","content","property","httpEquiv","charSet","mountHoistable","acquireResource","nextNode","tagCaches","getHoistableRoot","recursivelyResetForms","globalMostRecentFallbackTime","_current","recursivelyTraverseDisappearLayoutEffects","display","retryQueue","parent$jscomp$0","parent$113","parent$115","reset","finishedRoot$jscomp$0","includeWorkInProgressEffects","commitOffscreenPassiveMountEffects","previousCache","commitCachePassiveMountEffect","recursivelyTraversePassiveMountEffects","committedLanes","committedTransitions","commitPassiveMountOnFiber","_finishedWork$memoize2","onPostCommit","passiveEffectDuration","recursivelyTraverseAtomicPassiveEffects","recursivelyTraverseReconnectPassiveEffects","committedLanes$jscomp$0","committedTransitions$jscomp$0","suspenseyCommitFlag","recursivelyAccumulateSuspenseyCommit","accumulateSuspenseyCommitOnFiber","resource","suspendedState","media","matchMedia","matches","loading","getStyleKey","getStylesheetSelectorFromKey","_p","onUnsuspend","stylesheetPropsFromRawProps","preloadPropsMap","adoptPreloadPropsForStylesheet","linkInstance","Promise","reject","onload","onerror","stylesheets","preload","suspendResource","previousHoistableRoot","detachAlternateSiblings","previousFiber","recursivelyTraversePassiveUnmountEffects","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","commitPassiveUnmountOnFiber","recursivelyTraverseDisconnectPassiveEffects","deletedSubtreeRoot","FiberNode","isReactComponent","resetWorkInProgress","owner","fiberTag","hostContext","itemProp","precedence","onLoad","onError","async","isHostHoistableType","elements","primaryChildInstance","_pendingMarkers","_transitions","detach","attach","pendingChildren","markUpdate","preloadResourceAndSuspendIfNeeded","preloadResource","scheduleRetryEffect","workInProgressSuspendedRetryLanes","cutOffTailIfNeeded","hasRenderedATailFallback","lastTailNode","lastTailNode$131","bubbleProperties","completedWork","didBailout","newChildLanes","child$132","completeWork","pendingContext","queueRecoverableErrors","createElementNS","innerHTML","createTextNode","cache$144","listenToAllSupportedEvents","workInProgressRootExitStatus","workInProgressRootRenderTargetTime","unwindWork","unwindInterruptedWork","interruptedWork","DefaultAsyncDispatcher","getCacheForType","resourceType","cacheForType","PossiblyWeakMap","workInProgressSuspendedReason","workInProgressThrownValue","workInProgressRootDidSkipSuspendedSiblings","workInProgressRootIsPrerendering","workInProgressRootDidAttachPingListener","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootConcurrentErrors","workInProgressRootRecoverableErrors","workInProgressRootDidIncludeRecursiveRenderUpdate","Infinity","workInProgressTransitions","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsLanes","pendingPassiveEffectsRemainingLanes","pendingPassiveTransitions","suspenseHandler","cancelPendingCommit","prepareFreshStack","markRootSuspended","ensureRootIsScheduled","performWorkOnRoot","forceSync","shouldTimeSlice","expiredLanes","exitStatus","prevExecutionContext","prevDispatcher","pushDispatcher","prevAsyncDispatcher","pushAsyncDispatcher","thrownValue","throwAndUnwindWorkLoop","replaySuspendedUnitOfWork","hostFiber","completeUnitOfWork","resetWorkInProgressStack","workLoopConcurrent","thrownValue$166","handleThrow","A","renderRootConcurrent","renderRootSync","renderWasConcurrent","isRenderConsistentWithExternalStores","errorRecoveryDisabledLanes","wasRootDehydrated","timeoutHandle","scheduleTimeout","commitRootWhenReady","errors","apply","recoverableErrors","transitions","didIncludeRenderPhaseUpdate","updatedLanes","suspendedRetryLanes","didSkipSuspendedSiblings","suspendedCommitReason","completedRenderStartTime","completedRenderEndTime","unsuspend","noop","insertSuspendedStylesheets","commit","stylesheetTimer","clearTimeout","waitForCommitToBeReady","commitRoot","check","didAttemptEntireTree","expirationTimes","index$6","flushSyncWorkAcrossRoots_impl","cancelTimeout","allEntangledLanes","index$4","shouldYieldForPrerendering","unitOfWork","workLoopSync","thrownValue$164","performUnitOfWork","suspendedReason","rootRenderLanes","attachPingListener","markerInstances","cause","wrapperError","throwException","unwindUnitOfWork","skipSiblings","previousUpdateLanePriority","renderPriorityLevel","flushPassiveEffects","callbackNode","callbackPriority","remainingLanes","previouslyPendingLanes","index$7","hiddenUpdatesForLane","markRootFinished","priorityLevel","scheduleCallback$1","eventsEnabled","_enabled","selection","e$20","indexWithinAnchor","indexWithinFocus","selectionInformation","resolvedPrevProps","clearContainerSparingly","commitBeforeMutationEffects","releaseRootPooledCache","onCommitFiberRoot","onCommitRoot","onRecoverableError","commitRootImpl","root$170","renderPriority","onPostCommitFiberRoot","captureCommitPhaseErrorOnRoot","rootFiber","pingCache","threadIDs","pingSuspendedRoot","retryTimedOutBoundary","boundaryFiber","firstScheduledRoot","lastScheduledRoot","didScheduleMicrotask","mightHavePendingSyncWork","isFlushingWork","currentEventTransitionLane","cb","processRootScheduleInMicrotask","scheduleMicrotask","syncTransitionLanes","onlyLegacy","didPerformSomeWork","root$172","performSyncWorkOnRoot","currentPopstateTransitionEvent","shouldAttemptEagerTransition","prev","scheduleTaskForRootDuringMicrotask","index$5","expirationTime","performWorkOnRootViaSchedulerTask","didTimeout","originalCallbackNode","workInProgressRootRenderLanes$jscomp$0","coerceFormActionProp","actionProp","createFormDataWithSubmitter","submitter","temp","FormData","i$jscomp$inline_1439","eventName$jscomp$inline_1440","toUpperCase","nonDelegatedEvents","eventSystemFlags","_dispatchQueue$i","previousInstance","i$jscomp$0","_dispatchListeners$i","targetElement","listenerSetKey","addTrappedEventListener","listenToNativeEvent","isCapturePhaseListener","listeningMarker","rootContainerElement","targetContainer","listenerWrapper","dispatchDiscreteEvent","dispatchContinuousEvent","capture","passive","dispatchEventForPluginEventSystem","targetInst$jscomp$0","ancestorInst","nodeTag","container","grandTag","SyntheticEventCtor","inCapturePhase","accumulateTargetOnly","reactEventName","lastHostComponent","_instance","createDispatchListener","parentWindow","getParent","accumulateEnterLeaveListenersForEvent","getTargetInstFunc","handleEventFunc","fallbackData","eventType","getNativeBeforeInputChars","char","getFallbackBeforeInputChars","maybeTargetInst","formAction","extractEvents$1","targetFiber","captureName","_instance2","unshift","common","_instance3","NORMALIZE_NEWLINES_REGEX","NORMALIZE_NULL_AND_REPLACEMENT_REGEX","normalizeMarkupForTextOrAttribute","markup","serverText","clientText","formEncType","formMethod","formTarget","encType","__html","muted","isNaN","endsWith","hasSrc","hasSrcSet","propValue$186","parentNamespace","dangerouslySetInnerHTML","localPromise","queueMicrotask","handleErrorInNextTick","parentInstance","suspenseInstance","depth","targetInstance","previousSibling","rootContainerInstance","preconnectsSet","getRootNode","previousDispatcher","d","f","previousWasRendering","wasRendering","r","formInst","D","preconnectAs","C","L","as","globalDocument","preloadSelector","imageSrcSet","imageSizes","getScriptKey","getScriptSelectorFromKey","m","X","scripts","adoptPreloadPropsForScript","link","insertStylesheet","M","limitedEscapedHref","currentProps","styles$242","resource$243","integrity","hrefLang","referrerPolicy","preloadProps","preloadStylesheet","rawProps","styleProps","instance$248","nodes","prior","stylesheetProps","scriptProps","keyAttribute","caches","nodeKey","precedencesByRoot","insertStylesheetIntoRoot","precedences","FiberRootNode","hydrate","incompleteTransitions","createFiberRoot","initialChildren","hydrationCallbacks","isStrictMode","transitionCallbacks","getContextForSubtree","parentComponent","updateContainerImpl","markRetryLaneImpl","markRetryLaneIfNotHydrated","attemptContinuousHydration","blockedOn","findInstanceBlockingEvent","return_targetInst","clearIfContinuousEvent","queuedFocus","accumulateOrCreateContinuousQueuedReplayableEvent","queuedDrag","queuedMouse","queuedPointers","queuedPointerCaptures","queueIfContinuousEvent","discreteReplayableEvents","findInstanceBlockingTarget","hasScheduledReplayAttempt","queuedExplicitHydrationTargets","existingQueuedEvent","targetContainers","attemptExplicitHydrationTarget","queuedTarget","priority","runWithPriority","attemptReplayContinuousQueuedEvent","queuedEvent","nextBlockedOn","nativeEventClone","shift","attemptReplayContinuousQueuedEventInMap","replayUnblockedEvents","scheduleCallbackIfUnblocked","unblocked","lastScheduledReplayQueue","scheduleReplayQueueIfNeeded","formReplayingQueue","submitterOrAction","unblock","$$reactFormReplay","formProps","ReactDOMRoot","internalRoot","_internalRoot","ReactDOMHydrationRoot","unmount","unstable_scheduleHydration","isomorphicReactPackageVersion$jscomp$inline_1686","version","findDOMNode","componentOrElement","parentA","parentB","didFindChild","child$2","findCurrentFiberUsingSlowPath","internals$jscomp$inline_2165","bundleType","rendererPackageName","currentDispatcherRef","findFiberByHostInstance","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","hook$jscomp$inline_2166","isDisabled","supportsFiber","inject","exports","createRoot","unstable_strictMode","unstable_transitionCallbacks","hydrateRoot","globalAlertCache","messages","timeout","lastAlertTime","MIN_ALERT_INTERVAL","useAlertSafe","AlertContext","initialRenderRef","alertCountRef","enableAlerts","setEnableAlerts","timer","guardAlert","undefined","msgKey","timestamp","entries","_options$autoClose","_options$autoCloseTim","autoClose","autoCloseTime","onClose","max","success","warning","remove","removeAlert","_isInitialRender","_areAlertsEnabled","_resetCache","clear","getHeaders","authKey","uploadFiles","cards","validateFileUrls","results","card","uploadRequestBody","floor","to","uri","fileUrl","_responseData$resourc","response","fetch","headers","JSON","stringify","ok","statusText","responseData","json","_responseData$reason","_responseData$reason2","errorCode","errorDescription","description","uploadError","originalResponse","fullResponse","fileHandle","errorDetails","cardIndex","isExpiredHandle","TemplateCreationValidation","ERROR_CODES","FILE_HANDLE_EXPIRED","TEMPLATE_ALREADY_EXISTS","translateErrorMessage","errorMessages","default","validateTemplateCreation","templateId","translatedMessage","detailedError","originalDescription","warn","isFileHandleExpiredError","isTemplateAlreadyExistsError","createTemplate","templateName","language","bodyText","templateJson","category","components","format","fileType","example","header_handle","phone_number","phoneNumber","sendTemplateJson","template","policy","card_index","parameters","btnIndex","sub_type","builderTemplateJson","fullError","sendTemplateMessage","sendTemplate","sendJson","errorText","loadDraft","_draft$cards","draftString","localStorage","getItem","draft","parse","MAX_DRAFT_AGE","createdAt","removeItem","processedCards","hasValidFileHandle","fileUploadSkippable","cleanDraft","lastSavedTime","lastUpdated","toISOString","clearOldDrafts","ERROR_CATALOG","FILE_UPLOAD","FAILED","level","recoverable","INVALID_TYPE","SIZE_LIMIT","API","UNAUTHORIZED","RATE_LIMIT","TEMPLATE","CREATION_LIMIT","WhatsAppTemplateError","super","details","handleApiError","request","useWhatsAppTemplate","alert","draftLoadedRef","setStep","setLoading","setError","setSuccess","validationErrors","setValidationErrors","unsavedChanges","setUnsavedChanges","setLastSavedTime","setAuthKey","setTemplateName","setLanguage","setBodyText","setPhoneNumber","hasTriedToAdvance","setHasTriedToAdvance","hasInteracted","setHasInteracted","numCards","setNumCards","setCards","uploadResults","setUploadResults","finalJson","setFinalJson","loadSavedData","savedDraft","filter","savedTime","position","saveCurrentState","saveSuccess","_state$cards","cardsWithFileHandles","draftWithTimestamp","toLocaleString","setItem","storageError","DOMException","jsonError","simplifiedDraft","btn","simplifiedString","fallbackError","saveDraft","some","showValidationErrors","validateStepOne","triggerAlerts","validateStepTwo","validateStepThree","validatePhoneNumber","isStepValid","currentStep","checkButtonConsistency","activeCards","isConsistent","referenceButtons","referenceCount","referenceTypes","allSameCount","allSameTypes","inconsistentCards","issue","buttonIndex","maxButtonCount","templateCard","find","standardizeButtons","templateButtons","standardizedCards","newButtons","templateButton","existingButton","applyButtonStandardization","syncButtonType","newType","newCards","cardButtons","syncAddButton","buttonType","newButton","syncRemoveButton","_","idx","handleAddCard","handleRemoveCard","updateCard","field","newErrors","updateButtonField","addButton","_cards$","_cards$$buttons$","defaultButtonType","removeButton","handleUploadFiles","failedUploads","failedUpload","savedCards","currentCards","cardsWithValidHandles","cardsToUpload","savedCard","updatedCard","finalResults","newResults","originalCard","originalIndex","sort","skippedCount","successMessage","errorMessage","handleNextStep","handleCreateTemplate","cardsToUse","validateTemplate","builderTemplate","phoneNumberToSend","errorMsg","formattedPhone","successMsg","copyToClipboard","jsonType","navigator","clipboard","writeText","resetForm","confirm","fill","clearDraft","goToPreviousStep","clearMessages","handleInputChange","handleSaveBeforeUpload","WhatsAppTemplateContext","createContext","WhatsAppTemplateProvider","_ref","templateState","_jsx","useWhatsAppTemplateContext","module","Tooltip","_ref2","_jsxs","className","tooltipWrapper","tooltipText","variant","fullWidth","rounded","showLabel","iconOnly","iconLeft","iconRight","tooltipProps","restProps","isIconOnly","LoadingSpinner","loadingIcon","viewBox","xmlns","loadingCircle","cx","cy","stroke","strokeWidth","componentProps","Boolean","buttonContent","_Fragment","renderButton","BasicButton","FiAlertCircle","GenIcon","FiAlertTriangle","FiAlignLeft","FiArrowDown","FiArrowLeft","FiArrowRight","FiArrowUp","FiBold","FiCheckCircle","FiCheckSquare","FiCheck","FiChevronDown","FiChevronLeft","FiChevronRight","FiChevronUp","FiClock","FiCode","FiCopy","FiDownload","FiEdit3","FiEdit","FiExternalLink","FiEyeOff","FiEye","FiFileText","FiFilm","FiHelpCircle","FiImage","FiInfo","FiItalic","FiKey","FiLink","FiList","FiLoader","FiLock","FiMaximize2","FiMaximize","FiMessageCircle","FiMessageSquare","FiMinimize2","FiMinimize","FiMinus","FiPhone","FiPlayCircle","FiPlay","FiPlus","FiRefreshCw","FiSave","FiSend","FiShield","FiSquare","FiTarget","FiTrash2","FiTrendingUp","FiUploadCloud","FiUpload","FiVideo","FiX","ReflectOwnKeys","R","ReflectApply","receiver","args","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","Number","EventEmitter","once","emitter","errorListener","removeListener","resolver","eventTargetAgnosticAddListener","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","TypeError","_getMaxListeners","that","_addListener","prepend","newListener","warned","w","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","n","copy","wrapListener","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","len","addListener","prependListener","prependOnceListener","originalListener","spliceOne","off","removeAllListeners","rawListeners","eventNames","ReactNoopUpdateQueue","emptyObject","ComponentDummy","PureComponent","partialState","forceUpdate","pureComponentPrototype","ReactElement","self","isValidElement","object","userProvidedKeyEscapeRegex","getElementKey","escaperLookup","escape","mapIntoArray","escapedPrefix","nameSoFar","oldElement","newKey","invokeCallback","nextNamePrefix","resolveThenable","mapChildren","func","lazyInitializer","_status","_result","moduleObject","Children","forEachFunc","forEachContext","toArray","only","Fragment","Profiler","StrictMode","Suspense","act","cloneElement","config","childArray","childrenLength","createRef","forwardRef","lazy","memo","scope","unstable_useCacheRefresh","permalink","Context","j","cleaned","countryCode","substring","validateFile","file","toFixed","URL","isValidUrl","closable","floating","visible","setVisible","handleClose","containerClasses","alertContainer","role","alertContent","getIcon","icon","closeButton","progressBar","progress","animationDuration","defaultConfig","AlertProvider","alerts","setAlerts","enabled","alertMessageCache","alertCount","currentAlerts","clearAll","addAlert","substr","alertConfig","newAlert","cacheKey","oldThreshold","contextValue","_len","_key","_len2","_key2","_len3","_key3","_len4","_key4","disable","enable","getAlertCount","AlertMessage","useAlert","checkDCE","DefaultContext","attr","IconContext","_excluded","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","_extends","t","o","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","toPrimitive","_toPrimitive","_toPropertyKey","writable","Tree2Element","tree","IconBase","conf","svgProps","computedSize","Internals","getCrossOriginStringAs","input","createPortal","createPortal$1","flushSync","previousTransition","previousUpdatePriority","preconnect","prefetchDNS","preinit","fetchPriority","nonce","preinitModule","preloadModule","requestFormReset","unstable_batchedUpdates","useFormStatus","jsxProd","maybeKey","jsx","jsxs","__rest","s","__values","__await","v","__asyncGenerator","thisArg","_arguments","generator","asyncIterator","g","q","AsyncIterator","verb","resume","fulfill","settle","__asyncDelegator","__asyncValues","SuppressedError","AbortError","delay","timeInMs","token","abortSignal","abortErrorMsg","buildPromise","cleanupBeforeAbort","rejectOnAbort","removeListeners","onAbort","createAbortablePromise","calculateRetryDelay","retryAttempt","exponentialDelay","retryDelayInMs","pow","clampedDelay","maxRetryDelayInMs","retryAfterInMs","ceil","isObject","isError","hasName","hasMessage","getErrorMessage","stringified","stringToUint8Array","TextEncoder","encode","utf8StringToUint8Array","base64ToUint8Array","base64String","base64UrlToUint8Array","bytes","Uint8Array","highNibble","lowNibble","hexDigits","parseInt","hexStringToUint8Array","atob","generateUUID","uuid","randomNumber","uuidFunction","_a","globalThis","crypto","randomUUID","importScripts","_b","_c","Deno","deno","Bun","isNodeLike","_d","versions","isNode","product","isTokenCredential","credential","castCredential","getToken","signRequest","ValidPhaseNames","HttpPipeline","policies","_policies","_orderedPolicies","addPolicy","phase","afterPhase","removePolicy","removedPolicies","policyDescriptor","sendRequest","httpClient","getOrderedPolicies","reduceRight","req","pipeline","orderPolicies","policyMap","createPhase","hasRun","hasAfterPolicies","serializePhase","noPhase","deserializePhase","retryPhase","signPhase","orderedPhases","getPhase","policyName","dependsOn","dependants","afterPolicies","afterPolicyName","afterNode","beforePolicies","beforePolicyName","beforeNode","walkPhase","dependant","walkPhases","iteration","initialResultLength","createEmptyPipeline","debugEnvVariable","DEBUG","enabledString","enabledNamespaces","skippedNamespaces","debuggers","debugObj","createDebugger","firstArg","debug","namespaces","wildcard","namespaceList","ns","startsWith","skipped","enabledNamespace","newDebugger","registeredLoggers","logLevelFromEnv","AZURE_LOG_LEVEL","azureLogLevel","AzureLogger","AZURE_LOG_LEVELS","isAzureLogLevel","logger","shouldEnable","setLogLevel","levelMap","verbose","createClientLogger","clientRootLogger","patchLogMethod","createLogger","logLevel","RedactedString","defaultAllowedHeaderNames","defaultAllowedQueryParameters","Sanitizer","additionalAllowedHeaderNames","allowedHeaderNames","additionalAllowedQueryParameters","allowedQueryParameters","sanitize","seen","sanitizeHeaders","sanitizeUrl","sanitizeQuery","searchParams","sanitized","k","redirectPolicyName","allowedRedirect","redirectPolicy","maxRetries","handleRedirect","currentRetries","locationHeader","res","SDK_VERSION","getUserAgentValue","runtimeInfo","localNavigator","osPlatform","userAgentData","entropyValues","getHighEntropyValues","architecture","platform","platformVersion","brand","brands","brandOrder","foundBrand","getBrandVersionString","userAgent","browserRegexes","regex","browser","getBrowserInfo","EdgeRuntime","setPlatformSpecificData","defaultAgent","telemetryInfo","parts","getUserAgentString","UserAgentHeaderName","rawContent","getRawContent","blob","stream","isNodeReadableStream","isWebReadableStream","getReader","tee","toBlobPart","Blob","Response","encodeHeaders","getLength","byteLength","buildRequestBody","sources","flatMap","part","contentLength","total","partLength","getTotalLength","multipartPolicyName","validBoundaryCharacters","multipartPolicy","multipartBody","contentTypeHeader","parsedHeader","contentType","parsedBoundary","from","assertValidBoundary","delayInMs","onAborted","parseHeaderValueAsNumber","headerName","valueAsNum","RetryAfterHeader","AllRetryAfterHeaders","getRetryAfterInMs","header","retryAfterValue","retryAfterHeader","diff","isFinite","exponentialRetryStrategy","retryInterval","maxRetryInterval","retryCount","responseError","matchedSystemError","isSystemError","ignoreSystemErrors","isExponential","isExponentialRetryResponse","ignoreExponentialResponse","ignoreHttpStatusCodes","unknownResponse","isThrottlingRetryResponse","skipStrategy","errorToThrow","retryPolicyLogger","retryPolicy","strategies","retryRequest","requestId","strategiesLoop","strategy","strategyLogger","modifiers","redirectTo","normalizeName","HttpHeadersImpl","rawHeaders","_headersMap","toJSON","preserveCase","entry","values","normalizedName","headerIterator","createHttpHeaders","formDataPolicy","formDataMap","formDataToFormDataMap","urlSearchParams","URLSearchParams","subValue","append","wwwFormUrlEncode","fieldName","fileName","prepareFormData","getDefaultProxySettings","knownContextKeys","span","createTracingContext","TracingContextImpl","parentContext","initialContext","_contextMap","newContext","deleteValue","instrumenterImplementation","getInstrumenter","createRequestHeaders","parseTraceparentHeader","startSpan","_name","spanOptions","isRecording","recordException","setStatus","addEvent","tracingContext","withContext","callbackArgs","createTracingClient","packageName","packageVersion","operationOptions","startSpanResult","tracingOptions","updatedOptions","withSpan","traceparentHeader","custom","errorSanitizer","RestError","statusCode","setPrototypeOf","isRestError","REQUEST_SEND_ERROR","PARSE_ERROR","tracingPolicy","userAgentPromise","userAgentPrefix","sanitizer","tracingClient","tryCreateTracingClient","spanAttributes","spanKind","tryCreateSpan","serviceRequestId","tryProcessResponse","tryProcessError","createPipelineFromOptions","tlsSettings","agent","tlsOptions","proxyPolicy","proxyOptions","decompressResponsePolicy","userAgentValue","userAgentPolicy","userAgentOptions","requestIdHeaderName","setClientRequestIdPolicy","telemetryOptions","clientRequestIdHeaderName","defaultRetryPolicy","retryOptions","loggingOptions","redirectOptions","coreLogger","logPolicy","FetchHttpClient","protocol","allowInsecureConnection","proxySettings","abortController","abortControllerCleanup","abortListener","setupAbortSignal","pipelineHeaders","Headers","buildFetchHeaders","streaming","requestBody","buildBodyStream","onProgress","onUploadProgress","requestInit","Request","credentials","withCredentials","duplex","isBlob","loadedBytes","httpResponse","responseHeaders","buildPipelineHeaders","bodyStream","onDownloadProgress","onEnd","streamResponseStatusCodes","POSITIVE_INFINITY","enableBrowserStreams","browserStreamBody","responseStream","blobBody","bodyAsText","buildPipelineResponse","makeRequest","getError","readableStream","pipeThrough","TransformStream","isTransformStreamSupported","transform","chunk","enqueue","terminate","flush","reader","ReadableStream","pull","read","close","releaseLock","cancel","createDefaultHttpClient","PipelineRequestImpl","disableKeepAlive","_e","_f","_g","createPipelineRequest","DEFAULT_CYCLER_OPTIONS","forcedRefreshWindowInMs","retryIntervalInMs","refreshWindowInMs","createTokenCycler","tokenCyclerOptions","tenantId","refreshWorker","cycler","isRefreshing","shouldRefresh","refreshAfterTimestamp","expiresOnTimestamp","mustRefresh","refresh","scopes","getTokenOptions","getAccessToken","refreshTimeout","tryGetAccessToken","finalToken","beginRefresh","_token","tokenOptions","hasClaimChallenge","claims","tenantIdChanged","trySendRequest","defaultAuthorizeRequest","enableCae","accessToken","isChallengeResponse","authorizeRequestOnCaeChallenge","onChallengeOptions","caeClaims","tokenType","bearerTokenAuthenticationPolicy","challengeCallbacks","authorizeRequest","authorizeRequestOnChallenge","shouldSendRequest","getCaeChallengeClaims","parsedClaim","challenges","parsedChallenges","challengeRegex","paramRegex","exec","scheme","paramsString","params","paramMatch","parseChallenges","disableKeepAlivePolicyName","encodeByteArray","str","btoa","decodeString","byteString","XML_ATTRKEY","XML_CHARKEY","validateISODuration","validUuidRegex","flattenResponse","responseSpec","parsedHeaders","parsedBody","bodyMapper","isNullable","nullable","expectedBodyTypeName","readableStreamBody","modelProperties","isPageableResponse","serializedName","arrayResponse","responseObject","combinedHeadersAndBody","hasNullableType","shouldWrapBody","handleNullableResponseAndWrappableBody","mapperTypeName","SerializerImpl","modelMappers","isXML","validateConstraints","mapper","objectName","failValidation","constraintName","constraintValue","constraints","ExclusiveMaximum","ExclusiveMinimum","InclusiveMaximum","InclusiveMinimum","MaxItems","MaxLength","MinItems","MinLength","MultipleOf","Pattern","UniqueItems","pattern","item","ar","serialize","xml","rootName","includeRoot","xmlCharKey","mapperType","isConstant","required","typeName","valueOf","objectType","pipe","ArrayBuffer","isView","serializeBasicTypes","allowedValues","serializeEnumType","toUTCString","getTime","dateToUnixTime","isDuration","serializeDateTypes","base64","serializeByteArrayType","buffer","trimEnd","bufferToBase64Url","serializeBase64UrlType","serializer","isXml","tempArray","serializedValue","xmlNamespace","xmlnsKey","xmlNamespacePrefix","serializeSequenceType","valueType","tempDictionary","getXmlObjectValue","serializeDictionaryType","getPolymorphicDiscriminatorRecursively","getPolymorphicMapper","modelProps","resolveModelProperties","propertyMapper","readOnly","parentObject","xmlIsWrapped","xmlName","xmlElementName","paths","splitSerializeName","pathName","childObject","propertyObjectName","toSerialize","polymorphicDiscriminator","clientName","xmlIsAttribute","additionalPropertiesMapper","additionalProperties","modelMapper","resolveReferencedMapper","resolveAdditionalProperties","propNames","clientPropName","every","pn","serializeCompositeType","deserialize","responseBody","ignoreUnknownProperties","handledPropertyNames","headerCollectionPrefix","dictionary","headerKey","xmlIsMsText","elementList","propertyInstance","steps","arrayInstance","isAdditionalProperty","responsePropName","isSpecialXmlProperty","deserializeCompositeType","parseFloat","unixTimeToDate","base64UrlToByteArray","deserializeSequenceType","deserializeDictionaryType","createSerializer","prop","classes","partialclass","subwords","charAt","polymorphicPropertyName","discriminatorName","discriminatorValue","uberParent","polymorphicMapper","discriminators","typeNamesToCheck","currentName","indexDiscriminator","getIndexDiscriminator","getPolymorphicDiscriminatorSafely","MapperTypeNames","operationRequestMap","getOperationArgumentValueFromParameter","operationArguments","parameter","fallbackObject","parameterPath","parameterMapper","propertySearchResult","getPropertyFromParameterPath","propertyFound","useDefaultValue","propertyValue","parameterPathPart","originalRequestSymbol","getOperationRequestInfo","hasOriginalRequest","defaultJsonContentTypes","defaultXmlContentTypes","deserializationPolicy","jsonContentTypes","expectedContentTypes","xmlContentTypes","parseXML","serializerOptions","parsedResponse","operationResponse","opts","contentComponents","msg","errCode","operationInfo","shouldDeserialize","shouldDeserializeResponse","operationSpec","responses","operationResponseGetter","getOperationResponseMap","shouldReturnResponse","isSuccessByStatus","isExpectedStatusCode","expectedStatusCodes","isOperationSpecEmpty","errorResponseSpec","initialErrorMessage","defaultBodyMapper","defaultHeadersMapper","headersMapper","deserializedError","valueToDeserialize","elementName","internalError","defaultError","handleErrorResponse","deserializeError","httpMethod","deserializeResponseBody","getPathStringFromParameter","serializationPolicy","stringifyXML","headerParameters","headerParameter","headerValue","customHeaders","requestOptions","customHeaderName","serializeHeaders","requestBodyParameterPathString","isStream","getXmlValueWithNamespace","xmlNamespaceKey","prepareXMLRootList","mediaType","formDataParameters","formDataParameter","formDataParameterValue","formDataParameterPropertyName","serializeRequestBody","createClientPipeline","credentialOptions","credentialScopes","serializationOptions","deserializationOptions","cachedHttpClient","CollectionFormatToDelimiterMap","CSV","SSV","Multi","TSV","Pipes","getRequestUrl","baseUri","urlReplacements","urlParameters","urlParameter","urlParameterValue","parameterPathString","skipEncoding","calculateUrlReplacements","isAbsolutePath","requestUrl","replaceAll","path","isAbsoluteUrl","pathToAppend","parsedUrl","newPath","pathname","searchStart","appendPath","queryParams","sequenceParams","queryParameters","queryParameter","queryParameterValue","delimiter","collectionFormat","calculateQueryParameters","noOverwrite","combinedParams","queryString","pairs","pair","existingValue","simpleParseQueryParams","valueSet","searchPieces","appendQueryParams","replacements","searchValue","replaceValue","ServiceClient","_requestContentType","requestContentType","_endpoint","endpoint","_allowInsecureConnection","_httpClient","getCredentialScopes","createDefaultPipeline","additionalPolicies","sendOperationRequest","baseUrl","getStreamingResponseStatusCodes","rawResponse","flatResponse","onResponse","Constants","AUTHORIZATION","authorizeRequestOnTenantChallenge","challengeOptions","challenge","getChallenge","challengeInfo","bearerChallenge","challengeParts","keyValue","reduce","parseChallenge","challengeScopes","resource_id","buildScopes","parsedAuthUri","authorization_uri","extractTenantId","originalClientRequestSymbol","toPipelineRequest","webResource","toJson","newRequest","keepAlive","originalRequest","toWebResourceLike","toHttpHeadersLike","prepare","validateRequestProperties","createProxy","Proxy","HttpHeaders","getHeaderKey","headersArray","headerNames","headerValues","resultPreservingCasing","toCompatResponse","toPipelineResponse","compatResponse","ExtendedServiceClient","keepAliveOptions","handleRedirects","userProvidedCallBack","lastResponse","HttpPipelineLogLevel","mockRequestPolicyOptions","_logLevel","_message","shouldLog","createRequestPolicyFactoryPolicy","factories","orderedFactories","reverse","httpPipeline","httpRequest","factory","webResourceLike","DOMParser","Node","XMLSerializer","ttPolicy","trustedTypes","createPolicy","createHTML","createDocument","parser","cdataPropName","stopNodes","dom","parseFromString","parserErrors","errorNS","invalidXML","ignored","getErrorNamespace","throwIfError","domToObject","childNodes","childNodeCount","firstChildNode","onlyChildTextValue","TEXT_NODE","elementWithAttributes","isElement","hasAttributes","asElementWithAttributes","CDATA_SECTION_NODE","buildNode","serializeToString","buildAttributes","attrs","createAttribute","arrayElem","setNamedItem","cdataElement","createCDATASection","BaseRequestPolicy","_nextPolicy","_options","SERVICE_VERSION","BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES","BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES","BLOCK_BLOB_MAX_BLOCKS","DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES","StorageOAuthScopes","URLConstants","FORCE_BROWSER_NO_CACHE","SIGNATURE","SNAPSHOT","VERSIONID","TIMEOUT","HTTPURLConnection","HeaderConstants","ETagNone","HTTP_LINE_ENDING","HTTP_VERSION_1_1","StorageBlobLoggingAllowedHeaderNames","StorageBlobLoggingAllowedQueryParameters","PathStylePorts","escapeURLPath","urlParsed","getValueInConnString","connectionString","argument","extractConnectionStringParts","proxyUri","matchCredentials","getProxyUriFromDevConnString","blobEndpoint","defaultEndpointsProtocol","accountName","accountKey","Buffer","endpointSuffix","kind","accountSas","getAccountNameFromUrl","appendToURLPath","setURLParameter","encodedName","encodedValue","searchString","getURLParameter","setURLHost","host","hostname","getURLPath","getURLPathAndQuery","pathString","appendToURLQuery","queryParts","query","truncatedISO8061Date","withMilliseconds","dateString","generateBlockID","blockIDPrefix","blockIndex","maxSourceStringLength","currentString","targetLength","padString","padStart","aborter","abortError","abortHandler","resolveHandler","iEqual","str1","str2","toLocaleLowerCase","isIpEndpointStyle","port","toBlobTagsString","tags","tagPairs","toBlobTags","blobTagSet","toTags","blobTag","toQuerySerialization","textConfiguration","delimitedTextConfiguration","columnSeparator","fieldQuote","recordSeparator","escapeChar","escapeCharacter","headersPresent","hasHeaders","jsonTextConfiguration","arrowConfiguration","schema","parseObjectReplicationRecord","objectReplicationRecord","orProperties","ids","policyPrefix","rule","ruleId","replicationStatus","policyIndex","findIndex","policyId","rules","httpAuthorizationToString","httpAuthorization","BlobNameToString","encoded","decodeURIComponent","ConvertInternalResponseOfListBlobHierarchy","internalResponse","segment","blobPrefixes","blobPrefixInternal","blobItems","blobItemInteral","ExtractPageRangeInfoItems","getPageRangesSegment","pageRange","clearRange","pageRangeIndex","clearRangeIndex","isClear","EscapePath","blobName","assertResponse","StorageRetryPolicyType","DEFAULT_RETRY_OPTIONS","maxTries","retryPolicyType","EXPONENTIAL","secondaryHost","tryTimeoutInMs","RETRY_ABORT_ERROR","StorageRetryPolicy","nextPolicy","attemptSendRequest","secondaryHas404","attempt","isPrimaryRetry","shouldRetry","retriableErrors","retriableError","delayTimeInMs","FIXED","StorageRetryPolicyFactory","StorageSharedKeyCredential","CredentialPolicy","AnonymousCredentialPolicy","Credential","AnonymousCredential","_defaultHttpClient","StorageBrowserPolicy","StorageBrowserPolicyFactory","isPipelineLike","castPipeline","toServiceClientOptions","Pipeline","requestPolicyFactories","newPipeline","pipelineOptions","_credential","getCoreClientOptions","v1Client","restOptions","_coreHttpClient","requestPolicyClient","corePipeline","_corePipeline","packageDetails","calculateDelay","primaryUrl","secondaryUrl","retryAgain","storageRetryPolicy","downlevelResults","knownFactoryFunctions","isAnonymousCredential","isStorageSharedKeyCredential","isCoreHttpBearerTokenFactory","isStorageBrowserPolicyFactory","isStorageRetryPolicyFactory","isStorageTelemetryPolicyFactory","isCoreHttpPolicyFactory","novelFactories","knownFactory","hasInjector","isInjectorPolicyFactory","wrappedPolicies","afterRetry","processDownlevelPipeline","getCredentialFromPipeline","audience","knownPolicyName","BlobServiceProperties","blobAnalyticsLogging","hourMetrics","minuteMetrics","cors","defaultServiceVersion","deleteRetentionPolicy","staticWebsite","Logging","deleteProperty","write","retentionPolicy","RetentionPolicy","days","Metrics","includeAPIs","CorsRule","allowedOrigins","allowedMethods","allowedHeaders","exposedHeaders","maxAgeInSeconds","StaticWebsite","indexDocument","errorDocument404Path","defaultIndexDocumentPath","StorageError","authenticationErrorDetail","BlobServiceStatistics","geoReplication","GeoReplication","lastSyncOn","ListContainersSegmentResponse","serviceEndpoint","marker","maxPageSize","containerItems","continuationToken","ContainerItem","deleted","properties","metadata","ContainerProperties","lastModified","etag","leaseStatus","leaseState","leaseDuration","publicAccess","hasImmutabilityPolicy","hasLegalHold","defaultEncryptionScope","preventEncryptionScopeOverride","deletedOn","remainingRetentionDays","isImmutableStorageWithVersioningEnabled","KeyInfo","startsOn","expiresOn","UserDelegationKey","signedObjectId","signedTenantId","signedStartsOn","signedExpiresOn","signedService","signedVersion","FilterBlobSegment","where","blobs","FilterBlobItem","containerName","BlobTags","BlobTag","SignedIdentifier","accessPolicy","AccessPolicy","permissions","ListBlobsFlatSegmentResponse","BlobFlatListSegment","BlobItemInternal","snapshot","versionId","isCurrentVersion","blobTags","objectReplicationMetadata","hasVersionsOnly","BlobName","BlobPropertiesInternal","createdOn","contentEncoding","contentLanguage","contentMD5","contentDisposition","cacheControl","blobSequenceNumber","blobType","copyId","copyStatus","copySource","copyProgress","copyCompletedOn","copyStatusDescription","serverEncrypted","incrementalCopy","destinationSnapshot","accessTier","accessTierInferred","archiveStatus","customerProvidedKeySha256","encryptionScope","accessTierChangedOn","tagCount","isSealed","rehydratePriority","lastAccessedOn","immutabilityPolicyExpiresOn","immutabilityPolicyMode","legalHold","ListBlobsHierarchySegmentResponse","BlobHierarchyListSegment","BlobPrefix","BlockLookupList","committed","uncommitted","latest","BlockList","committedBlocks","uncommittedBlocks","Block","PageList","PageRange","ClearRange","QueryRequest","queryType","expression","inputSerialization","outputSerialization","QuerySerialization","QueryFormat","parquetTextConfiguration","DelimitedTextConfiguration","JsonTextConfiguration","ArrowConfiguration","ArrowField","precision","scale","ServiceSetPropertiesHeaders","clientRequestId","ServiceSetPropertiesExceptionHeaders","ServiceGetPropertiesHeaders","ServiceGetPropertiesExceptionHeaders","ServiceGetStatisticsHeaders","ServiceGetStatisticsExceptionHeaders","ServiceListContainersSegmentHeaders","ServiceListContainersSegmentExceptionHeaders","ServiceGetUserDelegationKeyHeaders","ServiceGetUserDelegationKeyExceptionHeaders","ServiceGetAccountInfoHeaders","skuName","accountKind","isHierarchicalNamespaceEnabled","ServiceGetAccountInfoExceptionHeaders","ServiceSubmitBatchHeaders","ServiceSubmitBatchExceptionHeaders","ServiceFilterBlobsHeaders","ServiceFilterBlobsExceptionHeaders","ContainerCreateHeaders","ContainerCreateExceptionHeaders","ContainerGetPropertiesHeaders","blobPublicAccess","denyEncryptionScopeOverride","ContainerGetPropertiesExceptionHeaders","ContainerDeleteHeaders","ContainerDeleteExceptionHeaders","ContainerSetMetadataHeaders","ContainerSetMetadataExceptionHeaders","ContainerGetAccessPolicyHeaders","ContainerGetAccessPolicyExceptionHeaders","ContainerSetAccessPolicyHeaders","ContainerSetAccessPolicyExceptionHeaders","ContainerRestoreHeaders","ContainerRestoreExceptionHeaders","ContainerRenameHeaders","ContainerRenameExceptionHeaders","ContainerSubmitBatchHeaders","ContainerSubmitBatchExceptionHeaders","ContainerFilterBlobsHeaders","ContainerFilterBlobsExceptionHeaders","ContainerAcquireLeaseHeaders","leaseId","ContainerAcquireLeaseExceptionHeaders","ContainerReleaseLeaseHeaders","ContainerReleaseLeaseExceptionHeaders","ContainerRenewLeaseHeaders","ContainerRenewLeaseExceptionHeaders","ContainerBreakLeaseHeaders","leaseTime","ContainerBreakLeaseExceptionHeaders","ContainerChangeLeaseHeaders","ContainerChangeLeaseExceptionHeaders","ContainerListBlobFlatSegmentHeaders","ContainerListBlobFlatSegmentExceptionHeaders","ContainerListBlobHierarchySegmentHeaders","ContainerListBlobHierarchySegmentExceptionHeaders","ContainerGetAccountInfoHeaders","ContainerGetAccountInfoExceptionHeaders","BlobDownloadHeaders","objectReplicationPolicyId","objectReplicationRules","contentRange","acceptRanges","blobCommittedBlockCount","isServerEncrypted","encryptionKeySha256","blobContentMD5","lastAccessed","contentCrc64","BlobDownloadExceptionHeaders","BlobGetPropertiesHeaders","isIncrementalCopy","BlobGetPropertiesExceptionHeaders","BlobDeleteHeaders","BlobDeleteExceptionHeaders","BlobUndeleteHeaders","BlobUndeleteExceptionHeaders","BlobSetExpiryHeaders","BlobSetExpiryExceptionHeaders","BlobSetHttpHeadersHeaders","BlobSetHttpHeadersExceptionHeaders","BlobSetImmutabilityPolicyHeaders","immutabilityPolicyExpiry","BlobSetImmutabilityPolicyExceptionHeaders","BlobDeleteImmutabilityPolicyHeaders","BlobDeleteImmutabilityPolicyExceptionHeaders","BlobSetLegalHoldHeaders","BlobSetLegalHoldExceptionHeaders","BlobSetMetadataHeaders","BlobSetMetadataExceptionHeaders","BlobAcquireLeaseHeaders","BlobAcquireLeaseExceptionHeaders","BlobReleaseLeaseHeaders","BlobReleaseLeaseExceptionHeaders","BlobRenewLeaseHeaders","BlobRenewLeaseExceptionHeaders","BlobChangeLeaseHeaders","BlobChangeLeaseExceptionHeaders","BlobBreakLeaseHeaders","BlobBreakLeaseExceptionHeaders","BlobCreateSnapshotHeaders","BlobCreateSnapshotExceptionHeaders","BlobStartCopyFromURLHeaders","BlobStartCopyFromURLExceptionHeaders","BlobCopyFromURLHeaders","xMsContentCrc64","BlobCopyFromURLExceptionHeaders","BlobAbortCopyFromURLHeaders","BlobAbortCopyFromURLExceptionHeaders","BlobSetTierHeaders","BlobSetTierExceptionHeaders","BlobGetAccountInfoHeaders","BlobGetAccountInfoExceptionHeaders","BlobQueryHeaders","copyCompletionTime","BlobQueryExceptionHeaders","BlobGetTagsHeaders","BlobGetTagsExceptionHeaders","BlobSetTagsHeaders","BlobSetTagsExceptionHeaders","PageBlobCreateHeaders","PageBlobCreateExceptionHeaders","PageBlobUploadPagesHeaders","PageBlobUploadPagesExceptionHeaders","PageBlobClearPagesHeaders","PageBlobClearPagesExceptionHeaders","PageBlobUploadPagesFromURLHeaders","PageBlobUploadPagesFromURLExceptionHeaders","PageBlobGetPageRangesHeaders","blobContentLength","PageBlobGetPageRangesExceptionHeaders","PageBlobGetPageRangesDiffHeaders","PageBlobGetPageRangesDiffExceptionHeaders","PageBlobResizeHeaders","PageBlobResizeExceptionHeaders","PageBlobUpdateSequenceNumberHeaders","PageBlobUpdateSequenceNumberExceptionHeaders","PageBlobCopyIncrementalHeaders","PageBlobCopyIncrementalExceptionHeaders","AppendBlobCreateHeaders","AppendBlobCreateExceptionHeaders","AppendBlobAppendBlockHeaders","blobAppendOffset","AppendBlobAppendBlockExceptionHeaders","AppendBlobAppendBlockFromUrlHeaders","AppendBlobAppendBlockFromUrlExceptionHeaders","AppendBlobSealHeaders","AppendBlobSealExceptionHeaders","BlockBlobUploadHeaders","BlockBlobUploadExceptionHeaders","BlockBlobPutBlobFromUrlHeaders","BlockBlobPutBlobFromUrlExceptionHeaders","BlockBlobStageBlockHeaders","BlockBlobStageBlockExceptionHeaders","BlockBlobStageBlockFromURLHeaders","BlockBlobStageBlockFromURLExceptionHeaders","BlockBlobCommitBlockListHeaders","BlockBlobCommitBlockListExceptionHeaders","BlockBlobGetBlockListHeaders","BlockBlobGetBlockListExceptionHeaders","blobServiceProperties","BlobServicePropertiesMapper","accept","restype","comp","timeoutInSeconds","accept1","comp2","keyInfo","KeyInfoMapper","restype1","comp4","multipartContentType","comp5","restype2","access","ifModifiedSince","ifUnmodifiedSince","comp6","comp7","comp8","comp10","duration","proposedLeaseId","action1","leaseId1","action2","action3","breakPeriod","action4","proposedLeaseId1","include1","encryptionKey","encryptionAlgorithm","ifMatch","ifNoneMatch","ifTags","blobCacheControl","blobContentType","blobContentEncoding","blobContentLanguage","blobContentDisposition","comp12","tier","sourceIfModifiedSince","sourceIfUnmodifiedSince","sourceIfMatch","sourceIfNoneMatch","sourceIfTags","blobTagsString","legalHold1","sourceContentMD5","copySourceAuthorization","copySourceTags","queryRequest","QueryRequestMapper","comp18","BlobTagsMapper","transactionalContentMD5","transactionalContentCrc64","contentType1","body1","accept2","comp19","pageWrite","ifSequenceNumberLessThanOrEqualTo","ifSequenceNumberLessThan","ifSequenceNumberEqualTo","sourceUrl","sourceContentCrc64","comp20","comp22","maxSize","appendPosition","sourceRange1","blobType2","comp24","blockId","blocks","BlockLookupListMapper","comp25","ServiceImpl","client","setProperties","setPropertiesOperationSpec","getProperties","getPropertiesOperationSpec","getStatistics","getStatisticsOperationSpec","listContainersSegment","listContainersSegmentOperationSpec","getUserDelegationKey","getUserDelegationKeyOperationSpec","getAccountInfo","getAccountInfoOperationSpec","submitBatch","submitBatchOperationSpec","filterBlobs","filterBlobsOperationSpec","xmlSerializer","coreClient","Mappers","Parameters","ContainerImpl","createOperationSpec","deleteOperationSpec","setMetadata","setMetadataOperationSpec","getAccessPolicy","getAccessPolicyOperationSpec","setAccessPolicy","setAccessPolicyOperationSpec","restore","restoreOperationSpec","rename","sourceContainerName","renameOperationSpec","acquireLease","acquireLeaseOperationSpec","releaseLease","releaseLeaseOperationSpec","renewLease","renewLeaseOperationSpec","breakLease","breakLeaseOperationSpec","changeLease","changeLeaseOperationSpec","listBlobFlatSegment","listBlobFlatSegmentOperationSpec","listBlobHierarchySegment","listBlobHierarchySegmentOperationSpec","BlobImpl","download","downloadOperationSpec","undelete","undeleteOperationSpec","setExpiry","expiryOptions","setExpiryOperationSpec","setHttpHeaders","setHttpHeadersOperationSpec","setImmutabilityPolicy","setImmutabilityPolicyOperationSpec","deleteImmutabilityPolicy","deleteImmutabilityPolicyOperationSpec","setLegalHold","setLegalHoldOperationSpec","createSnapshot","createSnapshotOperationSpec","startCopyFromURL","startCopyFromURLOperationSpec","copyFromURL","copyFromURLOperationSpec","abortCopyFromURL","abortCopyFromURLOperationSpec","setTier","setTierOperationSpec","queryOperationSpec","getTags","getTagsOperationSpec","setTags","setTagsOperationSpec","PageBlobImpl","uploadPages","uploadPagesOperationSpec","clearPages","clearPagesOperationSpec","uploadPagesFromURL","sourceRange","uploadPagesFromURLOperationSpec","getPageRanges","getPageRangesOperationSpec","getPageRangesDiff","getPageRangesDiffOperationSpec","resize","resizeOperationSpec","updateSequenceNumber","sequenceNumberAction","updateSequenceNumberOperationSpec","copyIncremental","copyIncrementalOperationSpec","AppendBlobImpl","appendBlock","appendBlockOperationSpec","appendBlockFromUrl","appendBlockFromUrlOperationSpec","seal","sealOperationSpec","BlockBlobImpl","upload","uploadOperationSpec","putBlobFromUrl","putBlobFromUrlOperationSpec","stageBlock","stageBlockOperationSpec","stageBlockFromURL","stageBlockFromURLOperationSpec","commitBlockList","commitBlockListOperationSpec","getBlockList","listType","getBlockListOperationSpec","StorageClient","coreHttpCompat","service","pageBlob","appendBlob","blockBlob","StorageContextClient","operationSpecToSend","storageClientContext","isHttps","getURLScheme","BlobSASPermissions","deleteVersion","move","execute","permanentDelete","blobSASPermissions","permissionLike","ContainerSASPermissions","filterByTags","containerSASPermissions","UserDelegationKeyCredential","ipRangeToString","ipRange","SASProtocol","SASQueryParameters","ipRangeInner","signature","permissionsOrOptions","services","resourceTypes","identifier","userDelegationKey","preauthorizedAgentObjectId","correlationId","signedOid","queries","param","tryAppendQueryParameter","generateBlobSASQueryParameters","blobSASSignatureValues","sharedKeyCredentialOrUserDelegationKey","generateBlobSASQueryParametersInternal","sasQueryParameters","sharedKeyCredential","userDelegationKeyCredential","SASSignatureValuesSanityCheckAndAutofill","verifiedPermissions","snapshotTime","stringToSign","getCanonicalName","computeHMACSHA256","generateBlobSASQueryParameters20201206","generateBlobSASQueryParametersUDK20201206","generateBlobSASQueryParameters20181109","generateBlobSASQueryParametersUDK20200210","generateBlobSASQueryParametersUDK20181109","generateBlobSASQueryParameters20150405","BlobLeaseClient","_leaseId","_url","clientContext","_isContainer","_containerOrBlobOperation","conditions","tagConditions","modifiedAccessConditions","BlobQueryResponse","_response","BlockBlobTier","PremiumPageBlobTier","StorageBlobAudience","toAccessTier","ensureCpkIfSpecified","cpk","rangeResponseFromModel","PollerStoppedError","PollerCancelledError","Poller","operation","resolveOnUnsuccessful","stopped","pollProgressCallbacks","promise","startPolling","pollOptions","isStopped","isDone","poll","pollOnce","fireProgress","processUpdatedState","cancelOnce","pollOncePromise","clearPollOncePromise","isCancelled","getResult","pollUntilDone","isCompleted","stopPolling","cancelOperation","cancelPromise","getOperationState","BlobBeginCopyFromUrlPoller","blobClient","intervalInMs","resumeFrom","startCopyFromURLOptions","makeBlobBeginCopyFromURLPollOperation","isStarted","prevCopyProgress","rangeToString","iRange","BatchStates","Batch","concurrency","actives","completed","operations","Good","addOperation","parallelExecute","do","nextOperation","BufferScheduler","BlobClient","_containerName","urlOrConnectionString","credentialOrPipelineOrContainerName","blobNameOrOptions","extractedCreds","getBlobAndContainerNamesFromUrl","blobContext","_snapshot","_versionId","withSnapshot","withVersion","getAppendBlobClient","AppendBlobClient","getBlockBlobClient","BlockBlobClient","getPageBlobClient","PageBlobClient","customerProvidedKey","leaseAccessConditions","rangeGetContentMD5","rangeGetContentCRC64","rangeGetContentCrc64","cpkInfo","wrappedRes","objectReplicationDestinationPolicyId","objectReplicationSourceProperties","maxRetryRequests","updatedDownloadOptions","exists","deleteSnapshots","deleteIfExists","succeeded","setHTTPHeaders","blobHTTPHeaders","blobHttpHeaders","getBlobLeaseClient","proposeLeaseId","beginCopyFromURL","_this","poller","syncCopyFromURL","sourceConditions","sourceModifiedAccessConditions","sourceAuthorization","immutabilityPolicy","expiriesOn","policyMode","setAccessTier","downloadToBuffer","param1","param2","param3","blockSize","alloc","transferProgress","batch","chunkEnd","maxRetryRequestsPerBlock","streamToBuffer","downloadToFile","filePath","blobDownloadStream","pathComponents","sealBlob","generateSasUrl","sas","generateSasStringToSign","generateUserDelegationSasUrl","generateUserDelegationSasStringToSign","legalHoldEnabled","appendBlobContext","createIfNotExists","appendPositionAccessConditions","appendBlockFromURL","sourceURL","sourceOffset","blockBlobContext","_blobContext","inputTextConfiguration","outputTextConfiguration","syncUploadFromURL","uploadData","byteOffset","uploadSeekableInternal","browserBlob","uploadBrowserData","browserData","bodyFactory","maxSingleShotSize","numBlocks","blockList","blockID","uploadFile","fsStat","uploadStream","bufferSize","maxConcurrency","blockNum","scheduler","pageBlobContext","sequenceNumberAccessConditions","destOffset","listPageRangesSegment","listPageRangeItemSegments","getPageRangeItemSegmentsResponse","_this2","listPageRangeItems","_this3","listPageRanges","_this4","iter","byPage","settings","prevSnapshot","prevsnapshot","listPageRangesDiffSegment","prevSnapshotOrUrl","listPageRangeDiffItemSegments","listPageRangeDiffItems","listPageRangesDiff","_this5","getPageRangesDiffForManagedDisks","prevSnapshotUrl","sequenceNumber","startCopyIncremental","getBodyAsText","batchResponse","fileReader","FileReader","onloadend","ev","readAsText","blobToString","HTTP_HEADER_DELIMITER","BatchResponseParser","subRequests","responseBatchBoundary","perResponsePrefix","batchResponseEnding","parseBatchResponse","subResponses","subResponseCount","deserializedSubResponses","subResponsesSucceededCount","subResponsesFailedCount","subResponse","deserializedSubResponse","responseLines","subRespHeaderStartFound","subRespHeaderEndFound","subRespFailed","contentId","responseLine","tokens","statusMessage","isInteger","_request","MutexLockStatus","Mutex","lock","UNLOCKED","LOCKED","onUnlockEvent","unlock","emitUnlockEvent","setImmediate","BlobBatch","batchRequest","InnerBatchRequest","getMultiPartContentType","getMultipartContentType","getHttpRequestBody","getSubRequests","addSubRequestInternal","subRequest","assembleSubRequestFunc","preAddSubRequest","postAddSubRequest","setBatchType","batchType","deleteBlob","urlOrBlobClient","credentialOrOptions","createPipeline","setBlobAccessTier","credentialOrTier","tierOrOptions","operationCount","tempGuid","subRequestPrefix","batchRequestEnding","xMsHeaderName","appendSubRequestToBody","BlobBatchClient","credentialOrPipeline","serviceOrContainerContext","createBatch","deleteBlobs","urlsOrBlobClients","setBlobsAccessTier","batchRequestBody","rawBatchResponse","batchResponseParser","responseSummary","ContainerClient","getContainerNameFromUrl","containerContext","getBlobClient","signedIdentifiers","containerAcl","acl","uploadBlockBlob","blockBlobClient","blobItemInternal","listSegments","marker_1","listBlobsFlatSegmentResponse","listItems","listBlobsFlat","include","includeCopy","includeDeleted","includeMetadata","includeSnapshots","includeVersions","includeUncommitedBlobs","includeTags","includeDeletedWithVersions","includeImmutabilityPolicy","includeLegalHold","listHierarchySegments","delimiter_1","listBlobsHierarchySegmentResponse","listItemsByHierarchy","listBlobsByHierarchy","_this6","findBlobsByTagsSegment","tagFilterSqlExpression","wrappedResponse","tagValue","findBlobsByTagsSegments","tagFilterSqlExpression_1","_this7","findBlobsByTagsItems","_this8","findBlobsByTags","_this9","listSegmentOptions","getBlobBatchClient","AccountSASPermissions","accountSASPermissions","AccountSASResourceTypes","accountSASResourceTypes","AccountSASServices","table","accountSASServices","generateAccountSASQueryParametersInternal","accountSASSignatureValues","parsedPermissions","parsedServices","parsedResourceTypes","BlobServiceClient","fromConnectionString","serviceContext","getContainerClient","createContainer","containerClient","containerCreateResponse","deleteContainer","undeleteContainer","deletedContainerName","deletedContainerVersion","destinationContainerName","containerUndeleteResponse","renameContainer","containerRenameResponse","sourceLeaseId","sourceCondition","listContainersSegmentResponse","listContainers","includeSystem","generateAccountSasUrl","AzureBlobService","sasToken","blobServiceUri","blobServiceClient","uploadOptions","validationError","createAzureBlobService","heap","parentIndex","peek","first","halfLength","leftIndex","rightIndex","right","sortIndex","performance","localPerformance","localDate","initialTime","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","localSetTimeout","localClearTimeout","localSetImmediate","advanceTimers","startTime","handleTimeout","requestHostCallback","firstTimer","requestHostTimeout","schedulePerformWorkUntilDeadline","isMessageLoopRunning","taskTimeoutID","frameInterval","shouldYieldToHost","performWorkUntilDeadline","hasMoreWork","previousPriorityLevel","continuationCallback","MessageChannel","channel","port2","port1","onmessage","postMessage","ms","unstable_Profiling","task","unstable_continueExecution","unstable_forceFrameRate","fps","unstable_getFirstCallbackNode","unstable_next","eventHandler","unstable_pauseExecution","unstable_runWithPriority","unstable_wrapCallback","parentPriorityLevel","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","chunkId","all","promises","u","miniCssF","inProgress","dataWebpackPrefix","l","script","needAttach","charset","nc","onScriptComplete","doneFns","toStringTag","loadStylesheet","fullhref","existingLinkTags","dataHref","existingStyleTags","findStylesheet","oldTag","linkTag","errorType","realHref","createStylesheet","installedCssChunks","miniCss","baseURI","installedChunks","installedChunkData","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","chunkLoadingGlobal","ErrorBoundary","handleReset","hasError","showDetails","fallbackAction","fallbackActionText","Button","fullScreen","spinnerClasses","spinner","circle","WhatsAppCarouselCreator","Loading","reload","getElementById","App"],"sourceRoot":""}