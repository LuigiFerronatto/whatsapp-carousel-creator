@import '../../styles/design-system.css';

/* Variáveis fundamentais */
:root {
  --animation-bounce: cubic-bezier(0.34, 1.56, 0.64, 1);
  --animation-normal: cubic-bezier(0.16, 1, 0.3, 1);
  --animation-smooth: cubic-bezier(0.33, 1, 0.68, 1);
  --gradient-primary: linear-gradient(135deg, var(--color-primary), var(--blip-blue-brand));
  --gradient-positive: linear-gradient(135deg, var(--color-positive), var(--color-positive-dark));
  --gradient-warning: linear-gradient(135deg, var(--color-warning), var(--color-warning-dark));
  --loading-gradient: linear-gradient(to right, var(--color-surface-1) 0%, var(--color-hover) 50%, var(--color-surface-1) 100%);
  --shadow-hover: 0 8px 16px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0, 0, 0, 0.05);
  --shadow-active: 0 2px 4px rgba(0, 0, 0, 0.1);
  --shadow-card: 0 2px 8px rgba(0, 0, 0, 0.05), 0 1px 2px rgba(0, 0, 0, 0.05);
  --transition-bounce: all 0.4s var(--animation-bounce);
}

/* Container do card */
.cardContainer {
  border-radius: var(--radius-lg);
  overflow: hidden;
  box-shadow: var(--shadow-card);
  background-color: var(--color-surface-0);
  transition: transform 0.3s var(--animation-normal), box-shadow 0.3s var(--animation-normal);
  height: 100%;
  display: flex;
  flex-direction: column;
  border: 1px solid var(--color-border-2);
  position: relative;
  will-change: transform, box-shadow;
}

.cardContainer:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-hover);
}

.cardContainer:active {
  transform: translateY(-2px);
  box-shadow: var(--shadow-active);
}

/* Estilos de borda do card */
.evenCard, .oddCard {
  border-top: 4px solid var(--color-primary);
}

.evenCard::before, .oddCard::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: var(--gradient-primary);
  opacity: 0;
  transition: opacity 0.3s ease;
}

/* Container com conteúdo */
.hasContent {
  box-shadow: var(--shadow-1);
}

/* Cabeçalho do card */
.cardHeader {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  padding: var(--spacing-3) var(--spacing-4);
  background-color: var(--color-surface-1);
  border-bottom: 1px solid var(--color-border-2);
  gap: var(--spacing-3);
}

.cardNumberWrapper {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-1);
}

.cardNumber {
  font-weight: var(--fw-bold);
  color: var(--blip-blue-brand);
  font-size: var(--fs-p1);
  display: flex;
  align-items: center;
  gap: var(--spacing-2);
  flex-shrink: 0;
}

.fileNameDisplay {
  font-size: var(--fs-p3);
  color: var(--color-primary);
  background-color: rgba(197, 217, 251, 0.2);
  padding: 2px 8px;
  border-radius: var(--radius-sm);
  max-width: 200px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Indicador de progresso */
.progressIndicator {
  width: 100%;
  height: 3px;
  background-color: var(--color-surface-1);
  overflow: hidden;
  visibility: hidden;
  transition: visibility 0.2s ease;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10;
}

.progressIndicator.active {
  visibility: visible;
}

.progressBar {
  height: 100%;
  background: var(--gradient-primary);
  width: 0;
  transition: width 0.3s linear;
  position: relative;
  overflow: hidden;
}

.progressBar::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.4),
    transparent
  );
  animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* Seletor de tipo de arquivo */
.fileTypeSelect {
  display: flex;
  align-items: center;
  position: relative;
}

.select {
  appearance: none;
  padding: var(--spacing-1) var(--spacing-6) var(--spacing-1) var(--spacing-7);
  border: 1px solid var(--color-border-2);
  border-radius: var(--radius-md);
  background-color: var(--color-surface-0);
  font-size: var(--fs-p2);
  cursor: pointer;
  transition: all 0.25s var(--animation-normal);
  color: var(--color-content-default);
}

.select:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px rgba(30, 107, 241, 0.15);
}

.select:hover:not(:disabled) {
  border-color: var(--color-primary-light);
  background-color: var(--color-hover);
}

.fileTypeIconWrapper {
  position: absolute;
  left: var(--spacing-2);
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  color: var(--blip-blue-brand);
  display: flex;
  align-items: center;
  justify-content: center;
}

.fileTypeInfo {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  height: 20px;
  color: var(--dove-gray-2);
  margin-left: var(--spacing-2);
  cursor: help;
  transition: color 0.2s ease;
}

.fileTypeInfo:hover {
  color: var(--color-primary);
}

.typeIcon {
  flex-shrink: 0;
}

/* Corpo do card */
.cardBody {
  padding: var(--spacing-4);
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-4);
}

/* Métodos de upload */
.uploadMethods {
  display: flex;
  border-radius: var(--radius-md);
  margin-bottom: var(--spacing-4);
  background-color: var(--color-surface-1);
  padding: var(--spacing-1);
  overflow: hidden;
  position: relative;
  z-index: 1;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.methodButton {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-2);
  padding: var(--spacing-2);
  border: none;
  background: none;
  border-radius: var(--radius-md);
  font-size: var(--fs-p2);
  cursor: pointer;
  transition: all 0.25s var(--animation-normal);
  color: var(--color-content-default);
  z-index: 2;
  position: relative;
}

.methodButton:hover:not(:disabled) {
  background-color: var(--color-hover);
  color: var(--color-primary);
}

.methodButton:focus {
  outline: none;
  box-shadow: 0 0 0 2px var(--color-primary-light);
}

.activeMethod {
  background-color: var(--color-surface-0);
  color: var(--color-primary);
  font-weight: var(--fw-bold);
  box-shadow: var(--shadow-1);
}

.activeMethod:hover {
  background-color: var(--color-surface-0) !important;
}

/* Grupo de formulário */
.formGroup {
  margin-bottom: var(--spacing-3);
}

.uploadHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-2);
}

.label {
  display: block;
  font-size: var(--fs-p2);
  font-weight: var(--fw-bold);
  margin-bottom: var(--spacing-2);
  color: var(--color-content-default);
}

/* Ações da URL */
.urlActions {
  display: flex;
  margin-top: var(--spacing-2);
  justify-content: flex-end;
}

.testUrlButton {
  font-size: var(--fs-p3);
  padding: var(--spacing-1) var(--spacing-2);
}

/* Área de drop */
.dropArea {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-6) var(--spacing-4);
  border: 2px dashed var(--color-border-2);
  border-radius: var(--radius-md);
  background-color: var(--color-surface-1);
  cursor: pointer;
  transition: all 0.3s var(--animation-normal);
  position: relative;
  overflow: hidden;
}

.dropArea:hover {
  background-color: var(--color-hover);
  border-color: var(--blip-light);
  transform: translateY(-2px);
}

.dropArea:active {
  transform: translateY(0);
}

/* Arrastar sobre a área */
.dragging {
  background-color: rgba(197, 217, 251, 0.3);
  border-color: var(--color-primary);
  transform: scale(1.02);
}

.activeDrop {
  background-color: rgba(197, 217, 251, 0.3);
  border-color: var(--color-primary);
  animation: pulseArea 1.5s infinite;
}

@keyframes pulseArea {
  0%, 100% { box-shadow: 0 0 0 0 rgba(30, 107, 241, 0.4); }
  50% { box-shadow: 0 0 0 8px rgba(30, 107, 241, 0); }
}

/* Estado de upload */
.uploading {
  border-color: var(--color-primary);
  background-color: rgba(197, 217, 251, 0.1);
}

.uploadingSpinner {
  width: 40px;
  height: 40px;
  border: 3px solid rgba(30, 107, 241, 0.3);
  border-radius: 50%;
  border-top-color: var(--color-primary);
  animation: spin 1s linear infinite;
  margin-bottom: var(--spacing-3);
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Estados de upload */
.uploadSuccess {
  border-color: var(--color-positive);
  animation: successPulse 0.6s;
}

@keyframes successPulse {
  0% { 
    background-color: rgba(197, 217, 251, 0.1);
    box-shadow: 0 0 0 0 rgba(52, 199, 89, 0.7);
  }
  50% { 
    background-color: rgba(52, 199, 89, 0.1);
    box-shadow: 0 0 0 10px rgba(52, 199, 89, 0);
  }
  100% { 
    background-color: var(--color-surface-1);
  }
}

.uploadError {
  border-color: var(--color-negative);
  animation: errorPulse 0.6s;
}

@keyframes errorPulse {
  0% { 
    background-color: rgba(249, 159, 159, 0.1);
    box-shadow: 0 0 0 0 rgba(249, 159, 159, 0.7);
  }
  50% { 
    background-color: rgba(249, 159, 159, 0.2);
    box-shadow: 0 0 0 10px rgba(249, 159, 159, 0);
  }
  100% { 
    background-color: var(--color-surface-1);
  }
}

/* Ícones e texto na área de drop */
.uploadIcon {
  color: var(--blip-blue-brand);
  margin-bottom: var(--spacing-3);
  transition: transform 0.3s var(--animation-bounce);
}

.dropArea:hover .uploadIcon {
  transform: translateY(-5px);
}

.dropText {
  font-size: var(--fs-p1);
  font-weight: var(--fw-bold);
  margin-bottom: var(--spacing-2);
  color: var(--color-content-default);
}

.dropHint {
  font-size: var(--fs-p3);
  color: var(--dove-gray-2);
  text-align: center;
}

.dropHintEnhanced {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-1);
}

.formatBadges {
  display: flex;
  flex-wrap: wrap;
  gap: 4px;
  justify-content: center;
  margin-bottom: 4px;
}

.formatBadge {
  font-size: 10px;
  background-color: rgba(30, 107, 241, 0.1);
  color: var(--color-primary);
  padding: 2px 6px;
  border-radius: 12px;
}

.sizeLimit {
  font-size: var(--fs-p3);
  color: var(--dove-gray-2);
}

/* Mensagens de erro */
.errorMessageContainer {
  margin-top: var(--spacing-3);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-2);
}

.errorMessage {
  display: flex;
  align-items: center;
  gap: var(--spacing-2);
  color: var(--color-negative);
  padding: var(--spacing-3);
  background-color: rgba(249, 159, 159, 0.1);
  border-radius: var(--radius-md);
  font-size: var(--fs-p2);
  border-left: 3px solid var(--color-negative);
  animation: slideIn 0.3s var(--animation-normal);
}

@keyframes slideIn {
  from { transform: translateY(-10px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

/* Seção de pré-visualização - removido em favor de usar formGroup */
/* .previewSection {
  padding: var(--spacing-4);
  background-color: var(--color-surface-1);
  border-top: 1px solid var(--color-border-2);
  animation: fadeIn 0.5s;
} */

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Container de pré-visualização */
.previewContent {
  /* Herde estilos do dropArea mas sobrescreva alguns específicos */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: var(--color-surface-1);
  border: 2px dashed var(--color-border-2);
  border-radius: var(--radius-md);
  overflow: hidden;
  position: relative;
  height: 250px; /* Altura fixa em vez de usar aspect-ratio */ 
  transition: all 0.3s ease;
  cursor: default; /* Remove o cursor pointer da área de preview */
}

.previewContent.loading {
  background-color: var(--color-surface-2);
}

.previewContent.error {
  background-color: rgba(249, 159, 159, 0.05);
  border-color: rgba(249, 159, 159, 0.3);
}

/* Estados de pré-visualização */
.previewLoader {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: rgba(255, 255, 255, 0.7);
  z-index: 5;
}

.spinner {
  width: 30px;
  height: 30px;
  border: 3px solid rgba(30, 107, 241, 0.2);
  border-radius: 50%;
  border-top-color: var(--color-primary);
  animation: spin 1s linear infinite;
  margin-bottom: var(--spacing-2);
}

.previewErrorMessage {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-2);
  color: var(--color-negative);
  z-index: 5;
}

.hidden {
  display: none !important; /* Garantir que elementos hidden não apareçam */
}

/* Botão de remover estilizado */
.removeMediaButton {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 32px;
  height: 32px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.9);
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 10;
  color: var(--color-negative);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  opacity: 0;
  transform: scale(0.8);
  transition: opacity 0.2s ease, transform 0.2s var(--animation-bounce);
}

.previewContent:hover .removeMediaButton {
  opacity: 1;
  transform: scale(1);
}

.removeMediaButton:hover {
  background-color: var(--color-negative);
  color: white;
  transform: scale(1.1);
}

.removeMediaButton:active {
  transform: scale(0.95);
}

/* Imagem e vídeo de pré-visualização */
.previewImage, .previewVideo {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: contain;
  z-index: 1;
  transition: transform 0.3s ease;
  background-color: var(--color-surface-0);
}

.previewImage:hover {
  transform: scale(1.02);
}

/* Vídeo e overlay */
.videoWrapper {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.videoOverlay {
  position: absolute;
  top: 0;
  right: 0;
  padding: var(--spacing-1) var(--spacing-2);
  background-color: rgba(0, 0, 0, 0.5);
  border-bottom-left-radius: var(--radius-md);
  z-index: 2;
}

.videoFormatInfo {
  font-size: 10px;
  color: white;
}

/* Ações da pré-visualização */
.previewActions {
  display: flex;
  justify-content: space-between;
  gap: var(--spacing-3);
  margin-top: var(--spacing-3);
  flex-wrap: wrap;
  padding: 0 var(--spacing-4) var(--spacing-4);
}

.previewActionGroup {
  display: flex;
  gap: var(--spacing-2);
  align-items: center;
}

/* Animação para limpar */
.clearingAnimation {
  animation: clearAway 0.3s;
}

@keyframes clearAway {
  0% { opacity: 1; transform: scale(1); }
  100% { opacity: 0; transform: scale(0.95); }
}

/* Rodapé com detalhes da mídia */
.mediaDetailsFooter {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: var(--fs-p3);
  color: var(--dove-gray-2);
}

.uploadDetails {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.uploadTimestamp {
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Responsividade */
@media (max-width: 768px) {
  .cardContainer {
    max-width: 100%;
  }
  
  .cardHeader {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .fileTypeSelect {
    width: 100%;
    margin-top: var(--spacing-3);
  }
  
  .dropArea {
    padding: var(--spacing-5) var(--spacing-3);
  }
  
  .previewActions {
    flex-direction: column;
    align-items: stretch;
  }

  .previewActionGroup {
    flex-direction: row;
    justify-content: center;
  }
  
  .formatBadges {
    flex-wrap: wrap;
  }
}

@media (max-width: 480px) {
  .cardHeader {
    padding: var(--spacing-3);
  }
  
  .select {
    width: 100%;
  }
  
  .urlActions button span {
    display: none;
  }
  
  .previewHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-2);
  }
  
  .previewControls {
    align-self: flex-end;
  }
}

/* Suporte à acessibilidade */
:focus-visible {
  outline: 2px solid var(--color-primary) !important;
  outline-offset: 2px !important;
}

/* Suporte para preferências de movimento reduzido */
@media (prefers-reduced-motion: reduce) {
  *, ::before, ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

.loadSuccess {
  animation: pulseSuccess 0.5s ease;
}

@keyframes pulseSuccess {
  0% {
    filter: brightness(1.3) contrast(1.1);
  }
  100% {
    filter: brightness(1) contrast(1);
  }
}

.previewImage, .previewVideo {
  max-width: 100%;
  max-height: 100%;
  width: 100%;
  height: 100%;
  object-fit: contain;
  display: block;
  transition: all 0.3s ease;
  background-color: var(--color-surface-0);
}


/* Estilo para corrigir problemas de loading e melhorar a UX */

/* Ajustar o loader para não bloquear interação com o vídeo */
.previewLoader {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: rgba(var(--color-surface-1-rgb), 0.7); /* Use rgba para transparência */
  z-index: 5;
  pointer-events: none; /* Importante: permite clicar no vídeo mesmo com o loader visível */
}

/* Melhorar o indicator de carregamento */
.spinner {
  width: 40px;
  height: 40px;
  border: 3px solid rgba(197, 217, 251, 0.3);
  border-radius: 50%;
  border-top-color: var(--color-primary);
  animation: spin 1s ease-in-out infinite;
  margin-bottom: var(--spacing-3);
}

/* Posicionamento adequado do conteúdo de vídeo */
.videoWrapper {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Melhorias visuais para o estado de loading */
.loading::after {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(to bottom right, 
    rgba(var(--color-surface-1-rgb), 0.1),
    rgba(var(--color-surface-1-rgb), 0.1)
  );
  z-index: 2;
}

/* Para um efeito de pulso suave durante carregamento */
@keyframes pulse {
  0% { opacity: 0.6; }
  50% { opacity: 0.8; }
  100% { opacity: 0.6; }
}

.loading.previewContent {
  animation: pulse 2s infinite ease-in-out;
}

/* Animação de sucesso refinada */
.loadSuccess {
  animation: successFade 0.6s ease-out;
}

@keyframes successFade {
  0% {
    filter: brightness(1.5) saturate(1.2);
  }
  100% {
    filter: brightness(1) saturate(1);
  }
}

/* Melhorias visuais para as ações de preview */
.previewActions {
  margin-top: var(--spacing-3);
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  gap: var(--spacing-2);
}

.previewActionGroup {
  display: flex;
  gap: var(--spacing-2);
  flex-wrap: wrap;
}

/* Estilo para o botão de remover */
.removeMediaButton {
  position: absolute;
  top: 8px;
  right: 8px;
  width: 28px;
  height: 28px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(var(--color-surface-1-rgb), 0.8);
  color: var(--color-negative);
  border: none;
  border-radius: 50%;
  cursor: pointer;
  z-index: 10;
  transition: all 0.2s ease;
}

.removeMediaButton:hover {
  background-color: var(--color-negative);
  color: white;
  transform: scale(1.1);
}

/* Garantir que o estado de erro não tenha problemas */
.error .previewLoader {
  display: none;
}

/* Comportamento de hover refinado para o conteúdo do preview */
.previewContent:hover .removeMediaButton {
  opacity: 1;
}

.removeMediaButton {
  opacity: 0.7;
}

/* Melhorar o estado visual de erro */
.error.previewContent {
  border: 1px solid var(--color-negative);
}

/* Estilo para mensagem de erro */
.previewErrorMessage {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-3);
  text-align: center;
  color: var(--color-negative);
  padding: var(--spacing-4);
  z-index: 5;
}

/* Estilos para vídeo e imagem */
.previewVideo, .previewImage {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  display: block;
  transition: all 0.3s ease;
  background-color: var(--color-surface-0);
  position: relative;
  z-index: 3; /* Garantir que o vídeo fique acima do loader */
}

/* Melhoria para área de arrastar e soltar */
.dropArea {
  border: 2px dashed var(--color-border-2);
  border-radius: var(--radius-md);
  padding: var(--spacing-4);
  text-align: center;
  transition: all 0.2s ease;
  background-color: var(--color-surface-0);
  min-height: 160px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative; /* Para posicionamento absoluto do preview */
  overflow: hidden; /* Para conter o conteúdo de preview */
}

/* Adicionar uma variável CSS para a cor de surface-1 em formato RGB para uso com transparência */
:root {
  --color-surface-1-rgb: 245, 245, 245; /* Valores RGB para cor clara */
}

[data-theme="dark"] {
  --color-surface-1-rgb: 45, 45, 45; /* Valores RGB para cor escura */
}