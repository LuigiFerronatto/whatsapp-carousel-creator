/* CardUploadInput.module.css - Versão melhorada */
@import '../../styles/design-system.css';

.cardContainer {
  border-radius: var(--radius-lg);
  overflow: hidden;
  box-shadow: var(--shadow-1);
  background-color: var(--color-surface-0);
  transition: transform var(--transition-normal), box-shadow var(--transition-normal);
  height: 100%;
  display: flex;
  flex-direction: column;
  border: 1px solid var(--color-border-2);
}

.cardContainer:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-2);
}

.evenCard {
  border-top: 4px solid var(--color-primary);
}

.oddCard {
  border-top: 4px solid var(--color-positive);
}

.cardHeader {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  padding: var(--spacing-3) var(--spacing-4);
  background-color: var(--color-surface-1);
  border-bottom: 1px solid var(--color-border-2);
  gap: var(--spacing-2);
}

.cardNumber {
  font-weight: var(--fw-bold);
  color: var(--blip-blue-brand);
  font-size: var(--fs-p1);
  display: flex;
  align-items: center;
  gap: var(--spacing-2);
  flex-shrink: 0;
}

.fileTypeSelect {
  display: flex;
  align-items: center;
  position: relative;
}

.select {
  appearance: none;
  padding: var(--spacing-1) var(--spacing-6) var(--spacing-1) var(--spacing-7);
  border: 1px solid var(--color-border-2);
  border-radius: var(--radius-md);
  background-color: var(--color-surface-0);
  font-size: var(--fs-p2);
  cursor: pointer;
  transition: border-color var(--transition-fast);
}

.select:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px rgba(30, 107, 241, 0.1);
}

.fileTypeIconWrapper {
  position: absolute;
  left: var(--spacing-2);
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  color: var(--blip-blue-brand);
  display: flex;
  align-items: center;
  justify-content: center;
}

.typeIcon {
  flex-shrink: 0;
}

.cardBody {
  padding: var(--spacing-4);
  flex-grow: 1;
}

.uploadMethods {
  display: flex;
  border-radius: var(--radius-md);
  margin-bottom: var(--spacing-4);
  background-color: var(--color-surface-1);
  padding: var(--spacing-1);
}

.methodButton {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-2);
  padding: var(--spacing-2);
  border: none;
  background: none;
  border-radius: var(--radius-md);
  font-size: var(--fs-p2);
  cursor: pointer;
  transition: all var(--transition-fast);
  color: var(--color-content-default);
}

.methodButton:hover {
  background-color: var(--color-hover);
}

.activeMethod {
  background-color: var(--color-surface-0);
  color: var(--color-primary);
  font-weight: var(--fw-bold);
  box-shadow: var(--shadow-1);
}

.formGroup {
  margin-bottom: var(--spacing-4);
}

.label {
  display: block;
  font-size: var(--fs-p2);
  font-weight: var(--fw-bold);
  margin-bottom: var(--spacing-2);
  color: var(--color-content-default);
}

.inputGroup {
  display: flex;
  position: relative;
}

.input {
  flex: 1;
  padding: var(--spacing-3);
  padding-right: var(--spacing-8);
  border: 1px solid var(--color-border-2);
  border-radius: var(--radius-md);
  font-size: var(--fs-p2);
  transition: all var(--transition-fast);
  background-color: var(--color-surface-0);
}

.input:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px rgba(30, 107, 241, 0.1);
}

.inputError {
  border-color: var(--color-negative);
  background-color: rgba(249, 159, 159, 0.05);
}

/* Botões de ação para URL */
.urlActions {
  display: flex;
  gap: var(--spacing-2);
}

.clearButton, .testButton {
  background-color: transparent;
  color: var(--dove-gray-2);
  border: none;
  border-radius: var(--radius-md);
  padding: var(--spacing-1) var(--spacing-2);
  cursor: pointer;
  font-size: var(--fs-p3);
  transition: all var(--transition-fast);
  white-space: nowrap;
  display: flex;
  align-items: center;
  gap: var(--spacing-1);
}

.clearButton {
  color: var(--color-negative);
}

.clearButton:hover {
  background-color: rgba(249, 159, 159, 0.1);
  color: var(--color-negative);
}

.testButton {
  color: var(--color-primary);
}

.testButton:hover {
  background-color: rgba(197, 217, 251, 0.2);
  color: var(--blip-dark);
}

.helpText, .errorText {
  font-size: var(--fs-p3);
  margin-top: var(--spacing-2);
}

.helpText {
  color: var(--dove-gray-2);
}

.errorText {
  color: var(--color-negative);
  display: flex;
  align-items: center;
  gap: var(--spacing-1);
}

/* FileHandle display */
.fileHandleDisplay {
  margin-top: var(--spacing-3);
  padding: var(--spacing-3);
  background-color: var(--color-surface-0);
  border: 1px solid var(--color-border-2);
  border-radius: var(--radius-md);
}

.fileHandleLabel {
  display: block;
  font-size: var(--fs-p3);
  color: var(--dove-gray-2);
  margin-bottom: var(--spacing-1);
}

.fileHandleValue {
  display: flex;
  align-items: center;
  gap: var(--spacing-2);
}

.fileHandleInput {
  flex: 1;
  padding: var(--spacing-2);
  background-color: var(--color-surface-1);
  border: 1px solid var(--color-border-3);
  border-radius: var(--radius-sm);
  font-family: monospace;
  font-size: var(--fs-p3);
  color: var(--color-primary);
}

.copyButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  background-color: var(--color-surface-1);
  border: 1px solid var(--color-border-2);
  border-radius: var(--radius-circle);
  color: var(--color-primary);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.copyButton:hover {
  background-color: var(--color-hover);
  color: var(--blip-dark);
  transform: translateY(-2px);
}

.dropArea {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-6) var(--spacing-4);
  border: 2px dashed var(--color-border-2);
  border-radius: var(--radius-md);
  background-color: var(--color-surface-1);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.dropArea:hover {
  background-color: var(--color-hover);
  border-color: var(--blip-light);
}

.dragging {
  background-color: rgba(197, 217, 251, 0.2);
  border-color: var(--color-primary);
}

.uploadIcon {
  color: var(--blip-blue-brand);
  margin-bottom: var(--spacing-3);
}

.dropText {
  font-size: var(--fs-p1);
  font-weight: var(--fw-bold);
  margin-bottom: var(--spacing-2);
  color: var(--color-content-default);
}

.dropHint {
  font-size: var(--fs-p3);
  color: var(--dove-gray-2);
}

.errorMessage {
  display: flex;
  align-items: center;
  gap: var(--spacing-2);
  color: var(--color-negative);
  padding: var(--spacing-3);
  background-color: rgba(249, 159, 159, 0.1);
  border-radius: var(--radius-md);
  font-size: var(--fs-p2);
  margin-top: var(--spacing-2);
}

.previewSection {
  padding: var(--spacing-4);
  background-color: var(--color-surface-1);
  border-top: 1px solid var(--color-border-2);
}

.previewHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-3);
}

.previewTitle {
  font-size: var(--fs-p2);
  font-weight: var(--fw-bold);
  color: var(--blip-blue-brand);
}

.checkIcon {
  color: var(--color-positive);
}

.previewContent {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--color-surface-0);
  border-radius: var(--radius-md);
  overflow: hidden;
  position: relative;
  padding-top: 56.25%; /* 16:9 aspect ratio */
}

.previewImage, .previewVideo {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.previewActions {
  display: flex;
  justify-content: center;
  gap: var(--spacing-3);
  margin-top: var(--spacing-3);
}

.viewOriginalLink {
  display: flex;
  align-items: center;
  gap: var(--spacing-1);
  color: var(--color-primary);
  font-size: var(--fs-p3);
  text-decoration: none;
  padding: var(--spacing-1) var(--spacing-2);
  border-radius: var(--radius-md);
  transition: all var(--transition-fast);
}

.viewOriginalLink:hover {
  background-color: var(--color-hover);
  text-decoration: underline;
}

.videoError {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.05);
  color: var(--color-negative);
  font-size: var(--fs-p1);
  text-align: center;
}

/* FileHandle indicator */
.fileHandleIndicator {
  display: flex;
  align-items: center;
  gap: 6px;
  font-size: 12px;
  padding: 4px 8px;
  background-color: rgba(197, 217, 251, 0.2);
  color: var(--color-primary);
  border-radius: var(--radius-sm);
  margin: 0 var(--spacing-4) var(--spacing-2);
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.fileHandleIcon {
  color: var(--color-positive);
  flex-shrink: 0;
}

/* Responsiveness */
@media (max-width: 768px) {
  .cardContainer {
    max-width: 100%;
  }
  
  .cardHeader {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .fileTypeSelect {
    width: 100%;
    margin-top: var(--spacing-3);
  }
  
  .fileHandleIndicator {
    margin: var(--spacing-2) 0;
    width: 100%;
  }
  
  .dropArea {
    padding: var(--spacing-5) var(--spacing-4);
  }
  
  .previewActions {
    flex-direction: column;
    gap: var(--spacing-2);
  }
}

@media (max-width: 480px) {
  .cardHeader {
    padding: var(--spacing-3);
  }
  
  .select {
    width: 100%;
  }
  
  .testButton span {
    display: none;
  }
  
  .urlActions button span {
    display: none;
  }
}

/* CardUploadInput.module.css - Adicionando estilos para bloqueio */

/* Estilos para cards bloqueados */
.lockedCard {
  position: relative;
  border-left-color: var(--color-warning) !important;
}

.lockedCard::before {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 24px;
  height: 24px;
  background-color: var(--color-warning);
  border-radius: 0 var(--radius-lg) 0 var(--radius-md);
  z-index: 1;
}

.cardLockIcon {
  margin-left: 6px;
  color: var(--color-warning);
}

/* Indicador de bloqueio */
.lockIndicator {
  position: absolute;
  bottom: -4px;
  right: -4px;
  width: 18px;
  height: 18px;
  background-color: var(--color-surface-1);
  border-radius: var(--radius-circle);
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--color-warning);
  border: 1px solid var(--color-warning);
  z-index: 1;
}

/* Área de upload bloqueada */
.lockedDropArea {
  background-color: var(--color-surface-2);
  cursor: not-allowed;
  opacity: 0.7;
  border-color: var(--color-border-2);
}

.lockedDropArea:hover {
  background-color: var(--color-surface-2);
  border-color: var(--color-border-2);
  transform: none;
}

/* Ícone de bloqueio */
.lockIcon {
  color: var(--color-warning);
  margin-bottom: var(--spacing-2);
}

/* Botões e inputs desabilitados */
.uploadMethods button:disabled,
.previewActions button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.uploadMethods button:disabled:hover {
  background-color: transparent;
  transform: none;
}

/* Estilos específicos para o indicador de fileHandle */
.fileHandleIndicator {
  display: flex;
  align-items: center;
  gap: 6px;
  font-size: 12px;
  padding: 4px 8px;
  background-color: rgba(197, 217, 251, 0.2);
  color: var(--color-primary);
  border-radius: var(--radius-sm);
  margin: 0 var(--spacing-4) var(--spacing-2);
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  flex-wrap: wrap;
}

.fileHandleIcon {
  color: var(--color-positive);
  flex-shrink: 0;
}

/* Animações para feedback visual */
@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

.lockIcon, .unlockIcon {
  animation: pulse 0.3s ease;
}

/* Estilização aprimorada de botões */
.copyButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  background-color: var(--color-surface-1);
  border: 1px solid var(--color-border-2);
  border-radius: var(--radius-circle);
  color: var(--color-primary);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.copyButton:hover {
  background-color: var(--color-hover);
  color: var(--blip-dark);
  transform: translateY(-2px);
}

.card:has(.locked) {
  pointer-events: none;
  opacity: 0.8;
}

/* Animação para salvar rascunho */
@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

.savedIndicator {
  animation: pulse 0.3s ease;
}

/* Melhor visualização de fileHandles */
.fileHandleDisplay {
  font-family: monospace;
  background-color: var(--color-surface-1);
  padding: 8px;
  border-radius: 4px;
  overflow: auto;
  max-width: 100%;
  word-break: break-all;
}